
exercise15.elf:     file format elf32-littlenios2
exercise15.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x010001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x01000000 paddr 0x01000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x01000020 paddr 0x01000020 align 2**12
         filesz 0x00019988 memsz 0x00019988 flags r-x
    LOAD off    0x0001a9a8 vaddr 0x010199a8 paddr 0x0101b51c align 2**12
         filesz 0x00001b74 memsz 0x00001b74 flags rw-
    LOAD off    0x0001d090 vaddr 0x0101d090 paddr 0x0101d090 align 2**12
         filesz 0x00000000 memsz 0x000004b4 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  01000000  01000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  01000020  01000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001905c  010001c0  010001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000078c  0101921c  0101921c  0001a21c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001b74  010199a8  0101b51c  0001a9a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000004b4  0101d090  0101d090  0001d090  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  0001c51c  2**0
                  CONTENTS
  7 .new_sdram_controller_0 00000000  0101d544  0101d544  0001c51c  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  0001c51c  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00001118  00000000  00000000  0001c540  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0002f1bc  00000000  00000000  0001d658  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000bf3b  00000000  00000000  0004c814  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000f99f  00000000  00000000  0005874f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002d88  00000000  00000000  000680f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000043e8  00000000  00000000  0006ae78  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00023554  00000000  00000000  0006f260  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  000927b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001ba0  00000000  00000000  00092818  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00098894  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00098897  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  000988a3  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  000988a4  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   0000000b  00000000  00000000  000988a5  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    0000000b  00000000  00000000  000988b0  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   0000000b  00000000  00000000  000988bb  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 0000000b  00000000  00000000  000988c6  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000038  00000000  00000000  000988d1  2**0
                  CONTENTS, READONLY
 27 .jdi          00005d84  00000000  00000000  00098909  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     00085ed0  00000000  00000000  0009e68d  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
01000000 l    d  .entry	00000000 .entry
01000020 l    d  .exceptions	00000000 .exceptions
010001c0 l    d  .text	00000000 .text
0101921c l    d  .rodata	00000000 .rodata
010199a8 l    d  .rwdata	00000000 .rwdata
0101d090 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
0101d544 l    d  .new_sdram_controller_0	00000000 .new_sdram_controller_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../exercise15_bsp//obj/HAL/src/crt0.o
01000208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
01000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
0101d164 l     O .bss	00000064 buff.3945
0101d1c8 l     O .bss	00000064 buff.3951
00000000 l    df *ABS*	00000000 w_fmod.c
00000000 l    df *ABS*	00000000 e_fmod.c
01019358 l     O .rodata	00000010 Zero
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 addsf3.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatsisf.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
01004ad8 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 atof.c
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 atol.c
00000000 l    df *ABS*	00000000 ctype_.c
01019569 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
010199a8 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strncpy.c
00000000 l    df *ABS*	00000000 strstr.c
0100512c l     F .text	000000fc critical_factorization
01005228 l     F .text	00000374 two_way_long_needle
00000000 l    df *ABS*	00000000 strtod.c
01019de0 l     O .rwdata	00000014 fpi.2638
01019704 l     O .rodata	00000028 tinytens
01019dcc l     O .rwdata	00000014 fpinan.2674
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 vfprintf.c
0101976e l     O .rodata	00000010 zeroes.4166
0101977e l     O .rodata	00000010 blanks.4165
00000000 l    df *ABS*	00000000 vfprintf.c
0101978e l     O .rodata	00000010 zeroes.4181
0101979e l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0100b2d8 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0100ce58 l     F .text	00000008 __fp_lock
0100ce60 l     F .text	00000008 __fp_unlock
0100ce74 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
0100dc20 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 locale.c
01019e14 l     O .rwdata	00000020 lc_ctype_charset
01019df4 l     O .rwdata	00000020 lc_message_charset
01019e34 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
010197e8 l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0101990c l     O .rodata	00000010 zeroes.4110
0101991c l     O .rodata	00000010 blanks.4109
00000000 l    df *ABS*	00000000 vfprintf.c
01012200 l     F .text	000000fc __sprint_r.part.0
0101993c l     O .rodata	00000010 blanks.4125
0101992c l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
01016214 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
01016334 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
01016360 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
01016460 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
01016554 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
01016638 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
01016814 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0101b50c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
01016aa0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
01016be8 l     F .text	00000038 alt_dev_reg
0101a41c l     O .rwdata	00001060 jtag_uart_0
0101b47c l     O .rwdata	0000002c character_lcd_0
0101b4a8 l     O .rwdata	0000002c rs232_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
01016eec l     F .text	00000208 altera_avalon_jtag_uart_irq
010170f4 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
01017714 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_character_lcd.c
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0101831c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
01018588 l     F .text	000000c0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
01018870 l     F .text	00000050 alt_get_errno
010188c0 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0101d094 g     O .bss	00000004 geoidheight
010105c4 g     F .text	00000074 _mprec_log10
010106b0 g     F .text	0000008c __any_on
01013b50 g     F .text	00000054 _isatty_r
010197f4 g     O .rodata	00000028 __mprec_tinytens
0101675c g     F .text	00000078 alt_main
0101d098 g     O .bss	00000004 paused
01004cb4 g     F .text	000000b8 _puts_r
0101d444 g     O .bss	00000100 alt_irq
01013ba4 g     F .text	0000005c _lseek_r
01001a0c g     F .text	00000070 FloatToLongitudeConversion
0101b51c g       *ABS*	00000000 __flash_rwdata_start
0101d09c g     O .bss	00000004 LOCUS_distance
01017880 g     F .text	0000003c alt_up_character_lcd_send_cmd
01003f9c g     F .text	00000084 .hidden __eqdf2
0101d544 g       *ABS*	00000000 __alt_heap_start
01004c78 g     F .text	0000003c printf
0101d0a0 g     O .bss	00000004 lastline
01013dcc g     F .text	0000009c _wcrtomb_r
01010e08 g     F .text	0000005c __sseek
0100d1a8 g     F .text	00000010 __sinit
01013c5c g     F .text	00000154 __swbuf_r
0100e854 g     F .text	0000007c _setlocale_r
0100d014 g     F .text	00000064 __sfmoreglue
010167f4 g     F .text	00000020 __malloc_unlock
01017f0c g     F .text	00000090 alt_up_rs232_read_fd
01005914 g     F .text	00001540 _strtod_r
010027b4 g     F .text	00000450 .hidden __divsf3
01004c30 g     F .text	0000000c _atol_r
0100f530 g     F .text	0000015c memmove
0100d190 g     F .text	00000018 _cleanup
0100f7b0 g     F .text	000000a8 _Balloc
01003524 g     F .text	00000078 .hidden __fixsfsi
01015610 g     F .text	000000e0 .hidden __gtdf2
01004c24 g     F .text	0000000c atol
01004c3c g     F .text	00000010 __errno
0101780c g     F .text	00000074 get_DDRAM_addr
01000000 g     F .entry	0000001c __reset
01000020 g       *ABS*	00000000 __flash_exceptions_start
01013af8 g     F .text	00000058 _fstat_r
01001f28 g     F .text	00000330 __ieee754_fmod
0101d148 g     O .bss	00000004 errno
01010d84 g     F .text	00000008 __seofread
0101d0a4 g     O .bss	00000004 fixquality
01011198 g     F .text	00001068 ___svfiprintf_internal_r
0101d150 g     O .bss	00000004 alt_argv
010234d4 g       *ABS*	00000000 _gp
01016a70 g     F .text	00000030 usleep
01003028 g     F .text	000004fc .hidden __subsf3
0101d0a8 g     O .bss	00000004 inStandbyMode
0101a29c g     O .rwdata	00000180 alt_fd_list
0101d0ac g     O .bss	00000004 LOCUS_serial
010184c8 g     F .text	00000090 alt_find_dev
0100f3f8 g     F .text	00000138 memcpy
0100e5c0 g     F .text	00000294 __hexnan
0100020c g     F .text	00000110 Init_GPSCHIP
01017a1c g     F .text	00000050 alt_up_character_lcd_write_fd
0100ce68 g     F .text	0000000c _cleanup_r
010160a0 g     F .text	000000d0 .hidden __floatsidf
01018648 g     F .text	00000078 alt_io_redirect
010156f0 g     F .text	000000e0 .hidden __ltdf2
0101921c g       *ABS*	00000000 __DTOR_END__
01017e98 g     F .text	00000074 alt_up_rs232_read_data
01004d6c g     F .text	00000014 puts
01002258 g     F .text	00000074 __fpclassifyd
01010520 g     F .text	000000a4 __ratio
01013670 g     F .text	00000024 __vfiprintf_internal
010172f0 g     F .text	0000020c altera_avalon_jtag_uart_read
00000000  w      *UND*	00000000 malloc
01004c4c g     F .text	0000002c _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
01004bf4 g     F .text	00000008 .hidden __udivsi3
010164b0 g     F .text	000000a4 isatty
01019844 g     O .rodata	000000c8 __mprec_tens
0100e8d0 g     F .text	0000000c __locale_charset
01014cbc g     F .text	000000b8 .hidden __lesf2
01013fcc g     F .text	00000074 .hidden __fixunsdfsi
01018e68 g     F .text	0000008c alt_icache_flush
0101d144 g     O .bss	00000004 __malloc_top_pad
0101b4e4 g     O .rwdata	00000004 __mb_cur_max
0100e900 g     F .text	0000000c _localeconv_r
0101d0b0 g     O .bss	00000004 magvariation
0100fbb0 g     F .text	0000003c __i2b
0100d60c g     F .text	000004a4 __sfvwrite_r
010018fc g     F .text	00000050 standby
0101d0b4 g     O .bss	00000004 month
01010cdc g     F .text	00000054 _sbrk_r
01013c00 g     F .text	0000005c _read_r
0101b504 g     O .rwdata	00000004 alt_max_fd
01017e14 g     F .text	00000044 alt_up_rs232_check_parity
01013808 g     F .text	00000100 _fclose_r
0100ce28 g     F .text	00000030 fflush
0101d140 g     O .bss	00000004 __malloc_max_sbrked_mem
010186c0 g     F .text	000001b0 alt_irq_register
010047cc g     F .text	00000110 .hidden __extendsfdf2
01014d74 g     F .text	0000089c .hidden __adddf3
01014b90 g     F .text	00000074 .hidden __nesf2
010102c8 g     F .text	0000011c __b2d
01014600 g     F .text	00000590 .hidden __umoddi3
01016688 g     F .text	000000d4 lseek
0101b4d4 g     O .rwdata	00000004 __fdlib_version
0101b4dc g     O .rwdata	00000004 _global_impure_ptr
0101073c g     F .text	000005a0 _realloc_r
0101d544 g       *ABS*	00000000 __bss_end
0101d090 g     O .bss	00000004 lineidx
01018b7c g     F .text	00000104 alt_tick
0101d344 g     O .bss	00000100 __hexdig
01014040 g     F .text	000005c0 .hidden __udivdi3
0101391c g     F .text	00000184 _fputwc_r
0101981c g     O .rodata	00000028 __mprec_bigtens
0100f994 g     F .text	00000104 __s2b
01016170 g     F .text	000000a4 .hidden __floatunsidf
01010070 g     F .text	00000060 __mcmp
0100d1c8 g     F .text	00000018 __fp_lock_all
01001ad0 g     F .text	00000084 sendCommand
0101d0b8 g     O .bss	00000004 LOCUS_config
01018ae4 g     F .text	00000098 alt_alarm_stop
01001410 g     F .text	0000009c parseHex
010071d4 g     F .text	00000024 strtol
0101d158 g     O .bss	00000004 alt_irq_active
01001c48 g     F .text	00000030 GPSCHIPTestForReceivedData
0100194c g     F .text	00000050 wakeup
010000ec g     F .exceptions	000000d4 alt_irq_handler
0101a274 g     O .rwdata	00000028 alt_dev_null
0100199c g     F .text	00000070 FloatToLatitudeConversion
01017cb0 g     F .text	00000034 alt_up_character_lcd_cursor_blink_on
0101d0bc g     O .bss	00000004 minute
010182d8 g     F .text	00000044 alt_dcache_flush_all
0100fa98 g     F .text	00000068 __hi0bits
01004744 g     F .text	00000088 .hidden __fixdfsi
01006e54 g     F .text	0000001c strtod
0101b51c g       *ABS*	00000000 __ram_rwdata_end
0101b4fc g     O .rwdata	00000008 alt_dev_list
01016af0 g     F .text	000000f8 write
01004c04 g     F .text	00000008 atof
01014c04 g     F .text	000000b8 .hidden __gtsf2
010199a8 g       *ABS*	00000000 __ram_rodata_end
010163b0 g     F .text	000000b0 fstat
01017f9c g     F .text	00000094 alt_up_rs232_write_fd
010156f0 g     F .text	000000e0 .hidden __ledf2
0101d0c0 g     O .bss	00000004 LOCUS_mode
0100fde8 g     F .text	00000140 __pow5mult
01012314 g     F .text	0000135c ___vfiprintf_internal_r
0101d138 g     O .bss	00000004 __nlocale_changed
01004bfc g     F .text	00000008 .hidden __umodsi3
0101d544 g       *ABS*	00000000 end
01004c18 g     F .text	0000000c _atoi_r
01016e34 g     F .text	000000b8 altera_avalon_jtag_uart_init
0101921c g       *ABS*	00000000 __CTOR_LIST__
01800000 g       *ABS*	00000000 __alt_stack_pointer
0101778c g     F .text	00000080 alt_avalon_timer_sc_init
01004a74 g     F .text	00000064 .hidden __clzsi2
01001dd0 g     F .text	00000158 fmod
010174fc g     F .text	00000218 altera_avalon_jtag_uart_write
0100d1b8 g     F .text	00000004 __sfp_lock_acquire
0100f294 g     F .text	000000e8 memchr
01017930 g     F .text	00000078 alt_up_character_lcd_write
01009188 g     F .text	00001ffc ___vfprintf_internal_r
01004d80 g     F .text	00000058 _sprintf_r
0100d31c g     F .text	000002f0 _free_r
0100e8dc g     F .text	00000010 __locale_mb_cur_max
01019054 g     F .text	00000194 __call_exitprocs
0101d134 g     O .bss	00000004 __mlocale_changed
0101b4e8 g     O .rwdata	00000004 __malloc_sbrk_base
010001c0 g     F .text	0000004c _start
0101d15c g     O .bss	00000004 _alt_tick_rate
0100559c g     F .text	00000378 strstr
0100ff28 g     F .text	00000148 __lshift
0101d160 g     O .bss	00000004 _alt_nticks
0100031c g     F .text	000010f4 parseData
01016864 g     F .text	000000fc read
01001540 g     F .text	00000020 newNMEAreceived
01016c54 g     F .text	0000007c alt_sys_init
01017b68 g     F .text	00000088 alt_up_character_lcd_shift_display
0100359c g     F .text	00000134 .hidden __floatsisf
01010fd0 g     F .text	000001c8 __ssprint_r
0101d0c4 g     O .bss	00000004 latitude_fixed
01018f40 g     F .text	00000114 __register_exitproc
0101d0c8 g     O .bss	00000004 milliseconds
01010f10 g     F .text	000000c0 strncmp
01017dd8 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
0100fbec g     F .text	000001fc __multiply
01017bf0 g     F .text	0000008c alt_up_character_lcd_erase_pos
0101719c g     F .text	00000068 altera_avalon_jtag_uart_close
010199a8 g       *ABS*	00000000 __ram_rwdata_start
0101921c g       *ABS*	00000000 __ram_rodata_start
01005040 g     F .text	000000ec strncpy
0101d0cc g     O .bss	00000004 receivedFlag
0101d22c g     O .bss	00000028 __malloc_current_mallinfo
01014b90 g     F .text	00000074 .hidden __eqsf2
010103e4 g     F .text	0000013c __d2b
0101d0d0 g     O .bss	00000004 hour
01016cd0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
01018db4 g     F .text	000000b4 alt_get_fd
01001584 g     F .text	00000040 LOCUS_StartLogger
010181b0 g     F .text	00000128 alt_busy_sleep
010136f0 g     F .text	00000054 _close_r
0101d0d4 g     O .bss	00000004 angle
0100f37c g     F .text	0000007c memcmp
01016d90 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0101d544 g       *ABS*	00000000 __alt_stack_base
01016de0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
010014ac g     F .text	00000094 waitForSentence
0100b1a8 g     F .text	00000130 __swsetup_r
010036d0 g     F .text	000008cc .hidden __divdf3
0100d078 g     F .text	00000118 __sfp
01010638 g     F .text	00000078 __copybits
01019e6c g     O .rwdata	00000408 __malloc_av_
0100d1c4 g     F .text	00000004 __sinit_lock_release
01004020 g     F .text	00000724 .hidden __muldf3
01010d30 g     F .text	00000054 __sread
01017d3c g     F .text	0000005c alt_up_rs232_disable_read_interrupt
01018ca0 g     F .text	00000114 alt_find_file
0101836c g     F .text	000000a4 alt_dev_llist_insert
010167d4 g     F .text	00000020 __malloc_lock
010169c0 g     F .text	000000b0 sbrk
010071f8 g     F .text	00001f90 ___svfprintf_internal_r
0100cc00 g     F .text	00000228 _fflush_r
01013744 g     F .text	000000c4 _calloc_r
0101d0d8 g     O .bss	00000001 lon
0101d254 g     O .bss	00000078 line1
0101d090 g       *ABS*	00000000 __bss_start
0100f68c g     F .text	00000124 memset
0101d0dc g     O .bss	00000004 longitude
01001ca8 g     F .text	00000128 main
0101d154 g     O .bss	00000004 alt_envp
0101d13c g     O .bss	00000004 __malloc_max_total_mem
01016d30 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
01013db0 g     F .text	0000001c __swbuf
010015c4 g     F .text	00000040 LOCUS_StopLogger
0101d0e0 g     O .bss	00000004 satellites
0101d0e4 g     O .bss	00000004 altitude
01014cbc g     F .text	000000b8 .hidden __ltsf2
01001b54 g     F .text	000000f4 getcharGPSCHIP
01017ae0 g     F .text	00000088 alt_up_character_lcd_shift_cursor
01010e64 g     F .text	00000008 __sclose
010022cc g     F .text	00000008 matherr
01800000 g       *ABS*	00000000 __alt_heap_limit
01013908 g     F .text	00000014 fclose
01006f74 g     F .text	00000260 _strtol_r
010048dc g     F .text	00000198 .hidden __truncdfsf2
0100b4d8 g     F .text	00001728 _dtoa_r
0100eaec g     F .text	000007a8 _malloc_r
01013f40 g     F .text	00000030 __ascii_wctomb
0101d0e8 g     O .bss	00000004 longitude_fixed
0101b508 g     O .rwdata	00000004 alt_errno
0101d0ec g     O .bss	00000004 LOCUS_percent
0101d0f0 g     O .bss	00000004 seconds
0100dab0 g     F .text	000000b8 _fwalk
0101d0f4 g     O .bss	00000004 LOCUS_type
0101d0f8 g     O .bss	00000004 fix
01004b44 g     F .text	00000054 .hidden __divsi3
010178f0 g     F .text	00000040 alt_up_character_lcd_open_dev
0100d1f8 g     F .text	00000124 _malloc_trim_r
0101921c g       *ABS*	00000000 __CTOR_END__
01002c04 g     F .text	00000424 .hidden __mulsf3
010178bc g     F .text	00000034 alt_up_character_lcd_init
01010e6c g     F .text	000000a4 strcmp
01001a7c g     F .text	00000054 putcharGPSCHIP
0101921c g       *ABS*	00000000 __flash_rodata_start
0101921c g       *ABS*	00000000 __DTOR_LIST__
0101d0fc g     O .bss	00000004 longitudeDegrees
01018030 g     F .text	00000040 alt_up_rs232_open_dev
01001c78 g     F .text	00000030 GPSCHIPTestForTransmitData
01003f9c g     F .text	00000084 .hidden __nedf2
0101d100 g     O .bss	00000004 LOCUS_status
01016c20 g     F .text	00000034 alt_irq_init
01016960 g     F .text	00000060 alt_release_fd
01004dd8 g     F .text	0000006c sprintf
01017c7c g     F .text	00000034 alt_up_character_lcd_cursor_off
01019368 g     O .rodata	00000100 .hidden __clz_tab
0101d130 g     O .bss	00000004 _PathLocale
0101d104 g     O .bss	00000004 latitudeDegrees
01006e70 g     F .text	00000104 strtof
0101d108 g     O .bss	00000004 year
01018ef4 g     F .text	00000014 atexit
01014c04 g     F .text	000000b8 .hidden __gesf2
01013694 g     F .text	0000005c _write_r
0101d10c g     O .bss	00000004 LOCUS_speed
0100e90c g     F .text	0000001c setlocale
0101b4e0 g     O .rwdata	00000004 _impure_ptr
0101d14c g     O .bss	00000004 alt_argc
0101846c g     F .text	0000005c _do_dtors
0100e8f8 g     F .text	00000008 __locale_cjk_lang
0101d110 g     O .bss	00000004 latitude
0101d114 g     O .bss	00000004 day
0101d118 g     O .bss	00000004 LOCUS_records
0101d2cc g     O .bss	00000078 line2
01000020 g       .exceptions	00000000 alt_irq_entry
0101d11c g     O .bss	00000004 speed
01010268 g     F .text	00000060 __ulp
0100d1e0 g     F .text	00000018 __fp_unlock_all
0101b4f4 g     O .rwdata	00000008 alt_fs_list
01017ce4 g     F .text	00000058 alt_up_rs232_enable_read_interrupt
01017e58 g     F .text	00000040 alt_up_rs232_write_data
01000020 g       *ABS*	00000000 __ram_exceptions_start
0100e928 g     F .text	0000000c localeconv
01000000 g       *ABS*	00000000 __alt_mem_new_sdram_controller_0
0100dd20 g     F .text	00000084 __hexdig_init
0101b51c g       *ABS*	00000000 _edata
0101d544 g       *ABS*	00000000 _end
010001c0 g       *ABS*	00000000 __ram_exceptions_end
01017204 g     F .text	000000ec altera_avalon_jtag_uart_ioctl
01010d8c g     F .text	0000007c __swrite
01001604 g     F .text	000002f8 LOCUS_ReadStatus
0101b4ec g     O .rwdata	00000004 __malloc_trim_threshold
01018c80 g     F .text	00000020 altera_nios2_qsys_irq_init
0100e8ec g     F .text	0000000c __locale_msgcharset
01018f08 g     F .text	00000038 exit
0100db68 g     F .text	000000b8 _fwalk_reent
010100d0 g     F .text	00000198 __mdiff
01004b98 g     F .text	0000005c .hidden __modsi3
0101b4d8 g     O .rwdata	00000004 __ctype_ptr__
01800000 g       *ABS*	00000000 __alt_data_end
01000020 g     F .exceptions	00000000 alt_exception
0100d1bc g     F .text	00000004 __sfp_lock_release
010179a8 g     F .text	00000074 alt_up_character_lcd_string
01004c0c g     F .text	0000000c atoi
0101d120 g     O .bss	00000004 currentline
01019468 g     O .rodata	00000101 _ctype_
010191e8 g     F .text	00000034 _exit
01018070 g     F .text	00000140 alt_alarm_start
0100e934 g     F .text	000001b8 __smakebuf_r
01004fa8 g     F .text	00000098 strlen
0101898c g     F .text	00000158 open
01015610 g     F .text	000000e0 .hidden __gedf2
0100dda4 g     F .text	0000081c __gethex
0101d124 g     O .bss	00000004 HDOP
0101d128 g     O .bss	00000001 lat
0101b4f0 g     O .rwdata	00000004 __wctomb
010122fc g     F .text	00000018 __sprint_r
01018558 g     F .text	00000030 alt_icache_flush_all
01004e44 g     F .text	00000164 strchr
01017a6c g     F .text	00000074 alt_up_character_lcd_set_cursor_pos
0101b510 g     O .rwdata	00000004 alt_priority_mask
0100b184 g     F .text	00000024 __vfprintf_internal
01013f70 g     F .text	0000005c _wctomb_r
0101d129 g     O .bss	00000001 mag
0101d12c g     O .bss	00000004 LOCUS_interval
010157d0 g     F .text	000008d0 .hidden __subdf3
0100fb00 g     F .text	000000b0 __lo0bits
0101b514 g     O .rwdata	00000008 alt_alarm_list
01018410 g     F .text	0000005c _do_ctors
01017d98 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
01013e68 g     F .text	000000d8 wcrtomb
01016264 g     F .text	000000d0 close
010022d4 g     F .text	000004e0 .hidden __addsf3
01001560 g     F .text	00000024 lastNMEA
010165b8 g     F .text	00000080 alt_load
01013aa0 g     F .text	00000058 fputwc
00000000  w      *UND*	00000000 free
0100d1c0 g     F .text	00000004 __sinit_lock_acquire
0100f880 g     F .text	00000114 __multadd
0100f858 g     F .text	00000028 _Bfree



Disassembly of section .entry:

01000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 1000000:	00900014 	movui	r2,16384
#endif

0:
    initi r2
 1000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 1000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 100000c:	00bffd16 	blt	zero,r2,1000004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 1000010:	00404034 	movhi	at,256
    ori r1, r1, %lo(_start)
 1000014:	08407014 	ori	at,at,448
    jmp r1
 1000018:	0800683a 	jmp	at
 100001c:	00000000 	call	0 <__alt_mem_onchip_memory2_0>

Disassembly of section .exceptions:

01000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 1000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 1000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 1000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 100002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 1000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 1000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 1000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 100003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 1000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 1000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 1000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 100004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 1000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 1000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 1000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 100005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 1000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 1000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 1000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 100006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 1000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 1000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 1000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 100007c:	10000326 	beq	r2,zero,100008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 1000080:	20000226 	beq	r4,zero,100008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 1000084:	10000ec0 	call	10000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 1000088:	00000306 	br	1000098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
 100008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
 1000090:	e8bfff17 	ldw	r2,-4(ea)

01000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 1000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 1000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 100009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 10000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 10000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 10000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 10000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 10000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 10000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 10000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 10000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 10000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 10000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 10000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 10000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 10000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 10000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 10000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 10000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 10000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 10000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 10000e8:	ef80083a 	eret

010000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 10000ec:	defff904 	addi	sp,sp,-28
 10000f0:	dfc00615 	stw	ra,24(sp)
 10000f4:	df000515 	stw	fp,20(sp)
 10000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 1000100:	0005313a 	rdctl	r2,ipending
 1000104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 1000108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 100010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 1000110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 1000114:	00800044 	movi	r2,1
 1000118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 100011c:	e0fffb17 	ldw	r3,-20(fp)
 1000120:	e0bffc17 	ldw	r2,-16(fp)
 1000124:	1884703a 	and	r2,r3,r2
 1000128:	10001526 	beq	r2,zero,1000180 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 100012c:	008040b4 	movhi	r2,258
 1000130:	10b51104 	addi	r2,r2,-11196
 1000134:	e0fffd17 	ldw	r3,-12(fp)
 1000138:	180690fa 	slli	r3,r3,3
 100013c:	10c5883a 	add	r2,r2,r3
 1000140:	10c00017 	ldw	r3,0(r2)
 1000144:	008040b4 	movhi	r2,258
 1000148:	10b51104 	addi	r2,r2,-11196
 100014c:	e13ffd17 	ldw	r4,-12(fp)
 1000150:	200890fa 	slli	r4,r4,3
 1000154:	1105883a 	add	r2,r2,r4
 1000158:	10800104 	addi	r2,r2,4
 100015c:	10800017 	ldw	r2,0(r2)
 1000160:	1009883a 	mov	r4,r2
 1000164:	e17ffd17 	ldw	r5,-12(fp)
 1000168:	183ee83a 	callr	r3
#endif
        break;
 100016c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 1000170:	0005313a 	rdctl	r2,ipending
 1000174:	e0bfff15 	stw	r2,-4(fp)

  return active;
 1000178:	e0bfff17 	ldw	r2,-4(fp)
 100017c:	00000706 	br	100019c <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 1000180:	e0bffc17 	ldw	r2,-16(fp)
 1000184:	1085883a 	add	r2,r2,r2
 1000188:	e0bffc15 	stw	r2,-16(fp)
      i++;
 100018c:	e0bffd17 	ldw	r2,-12(fp)
 1000190:	10800044 	addi	r2,r2,1
 1000194:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1000198:	003fe006 	br	100011c <__alt_data_end+0xff80011c>

    active = alt_irq_pending ();
 100019c:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 10001a0:	e0bffb17 	ldw	r2,-20(fp)
 10001a4:	103fda1e 	bne	r2,zero,1000110 <__alt_data_end+0xff800110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 10001a8:	0001883a 	nop
}
 10001ac:	e037883a 	mov	sp,fp
 10001b0:	dfc00117 	ldw	ra,4(sp)
 10001b4:	df000017 	ldw	fp,0(sp)
 10001b8:	dec00204 	addi	sp,sp,8
 10001bc:	f800283a 	ret

Disassembly of section .text:

010001c0 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 10001c0:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 10001c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 10001c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 10001cc:	00bffd16 	blt	zero,r2,10001c4 <__alt_data_end+0xff8001c4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 10001d0:	06c06034 	movhi	sp,384
    ori sp, sp, %lo(__alt_stack_pointer)
 10001d4:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 10001d8:	068040b4 	movhi	gp,258
    ori gp, gp, %lo(_gp)
 10001dc:	d68d3514 	ori	gp,gp,13524
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 10001e0:	00804074 	movhi	r2,257
    ori r2, r2, %lo(__bss_start)
 10001e4:	10b42414 	ori	r2,r2,53392

    movhi r3, %hi(__bss_end)
 10001e8:	00c04074 	movhi	r3,257
    ori r3, r3, %lo(__bss_end)
 10001ec:	18f55114 	ori	r3,r3,54596

    beq r2, r3, 1f
 10001f0:	10c00326 	beq	r2,r3,1000200 <_start+0x40>

0:
    stw zero, (r2)
 10001f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 10001f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 10001fc:	10fffd36 	bltu	r2,r3,10001f4 <__alt_data_end+0xff8001f4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 1000200:	10165b80 	call	10165b8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 1000204:	101675c0 	call	101675c <alt_main>

01000208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 1000208:	003fff06 	br	1000208 <__alt_data_end+0xff800208>

0100020c <Init_GPSCHIP>:




void Init_GPSCHIP(void)
{
 100020c:	defffe04 	addi	sp,sp,-8
 1000210:	dfc00115 	stw	ra,4(sp)
 1000214:	df000015 	stw	fp,0(sp)
 1000218:	d839883a 	mov	fp,sp
 // program baud rate generator to use 115k baud

	//The 6850 Control Register write only
	// RS232_Control(7 DOWNTO 0) = |X|1|0|1|0|1|0|1| = 0b01010101 = 0x55 rts high & interrupt disable
	// RS232_Control(7 DOWNTO 0) = |X|0|0|1|0|1|0|1| = 0b00010101 = 0x15
	GPSCHIP_Control = 0x15;
 100021c:	00a10034 	movhi	r2,33792
 1000220:	10808404 	addi	r2,r2,528
 1000224:	00c00544 	movi	r3,21
 1000228:	10c00005 	stb	r3,0(r2)
	GPSCHIP_Baud = 0x05; // program for 9600 baud
 100022c:	00a10034 	movhi	r2,33792
 1000230:	10808504 	addi	r2,r2,532
 1000234:	00c00144 	movi	r3,5
 1000238:	10c00005 	stb	r3,0(r2)
	printf("Initializing GPS CHIP");
 100023c:	010040b4 	movhi	r4,258
 1000240:	21248704 	addi	r4,r4,-28132
 1000244:	1004c780 	call	1004c78 <printf>
	receivedFlag = 0;
 1000248:	d026fe15 	stw	zero,-25608(gp)
	paused = 0;
 100024c:	d026f115 	stw	zero,-25660(gp)
	lineidx = 0;
 1000250:	d026ef15 	stw	zero,-25668(gp)
	currentline = line1;
 1000254:	008040b4 	movhi	r2,258
 1000258:	10b49504 	addi	r2,r2,-11692
 100025c:	d0a71315 	stw	r2,-25524(gp)
	lastline = line2;
 1000260:	008040b4 	movhi	r2,258
 1000264:	10b4b304 	addi	r2,r2,-11572
 1000268:	d0a6f315 	stw	r2,-25652(gp)

	hour = minute = seconds = year = month = day =
	fixquality = satellites = 0; // int
 100026c:	d0270315 	stw	zero,-25588(gp)
 1000270:	d0a70317 	ldw	r2,-25588(gp)
 1000274:	d0a6f415 	stw	r2,-25648(gp)
 1000278:	d0a6f417 	ldw	r2,-25648(gp)
	paused = 0;
	lineidx = 0;
	currentline = line1;
	lastline = line2;

	hour = minute = seconds = year = month = day =
 100027c:	d0a71015 	stw	r2,-25536(gp)
 1000280:	d0a71017 	ldw	r2,-25536(gp)
 1000284:	d0a6f815 	stw	r2,-25632(gp)
 1000288:	d0a6f817 	ldw	r2,-25632(gp)
 100028c:	d0a70d15 	stw	r2,-25548(gp)
 1000290:	d0a70d17 	ldw	r2,-25548(gp)
 1000294:	d0a70715 	stw	r2,-25572(gp)
 1000298:	d0a70717 	ldw	r2,-25572(gp)
 100029c:	d0a6fa15 	stw	r2,-25624(gp)
 10002a0:	d0a6fa17 	ldw	r2,-25624(gp)
 10002a4:	d0a6ff15 	stw	r2,-25604(gp)
	fixquality = satellites = 0; // int
	lat = lon = mag = 0; // char
 10002a8:	d0271545 	stb	zero,-25515(gp)
 10002ac:	d0a71543 	ldbu	r2,-25515(gp)
 10002b0:	d0a70105 	stb	r2,-25596(gp)
 10002b4:	d0a70103 	ldbu	r2,-25596(gp)
 10002b8:	d0a71505 	stb	r2,-25516(gp)
	fix = 0; // boolean
 10002bc:	d0270915 	stw	zero,-25564(gp)
	milliseconds = 0; // int
 10002c0:	d026fd15 	stw	zero,-25612(gp)
	latitude = longitude = geoidheight = altitude =
	speed = angle = magvariation = HDOP = 0.0; // float
 10002c4:	d0271415 	stw	zero,-25520(gp)
 10002c8:	d0a71417 	ldw	r2,-25520(gp)
 10002cc:	d0a6f715 	stw	r2,-25636(gp)
 10002d0:	d0a6f717 	ldw	r2,-25636(gp)
 10002d4:	d0a70015 	stw	r2,-25600(gp)
 10002d8:	d0a70017 	ldw	r2,-25600(gp)
 10002dc:	d0a71215 	stw	r2,-25528(gp)
 10002e0:	d0a71217 	ldw	r2,-25528(gp)
	hour = minute = seconds = year = month = day =
	fixquality = satellites = 0; // int
	lat = lon = mag = 0; // char
	fix = 0; // boolean
	milliseconds = 0; // int
	latitude = longitude = geoidheight = altitude =
 10002e4:	d0a70415 	stw	r2,-25584(gp)
 10002e8:	d0a70417 	ldw	r2,-25584(gp)
 10002ec:	d0a6f015 	stw	r2,-25664(gp)
 10002f0:	d0a6f017 	ldw	r2,-25664(gp)
 10002f4:	d0a70215 	stw	r2,-25592(gp)
 10002f8:	d0a70217 	ldw	r2,-25592(gp)
 10002fc:	d0a70f15 	stw	r2,-25540(gp)
	speed = angle = magvariation = HDOP = 0.0; // float
	usleep(10000);
 1000300:	0109c404 	movi	r4,10000
 1000304:	1016a700 	call	1016a70 <usleep>
}
 1000308:	e037883a 	mov	sp,fp
 100030c:	dfc00117 	ldw	ra,4(sp)
 1000310:	df000017 	ldw	fp,0(sp)
 1000314:	dec00204 	addi	sp,sp,8
 1000318:	f800283a 	ret

0100031c <parseData>:


int parseData(char *data) {
 100031c:	deffeb04 	addi	sp,sp,-84
 1000320:	dfc01415 	stw	ra,80(sp)
 1000324:	df001315 	stw	fp,76(sp)
 1000328:	dc001215 	stw	r16,72(sp)
 100032c:	df001304 	addi	fp,sp,76
 1000330:	e13ffe15 	stw	r4,-8(fp)

	if(data[strlen(data) - 4] == '*'){
 1000334:	e13ffe17 	ldw	r4,-8(fp)
 1000338:	1004fa80 	call	1004fa8 <strlen>
 100033c:	10bfff04 	addi	r2,r2,-4
 1000340:	e0fffe17 	ldw	r3,-8(fp)
 1000344:	1885883a 	add	r2,r3,r2
 1000348:	10800003 	ldbu	r2,0(r2)
 100034c:	10803fcc 	andi	r2,r2,255
 1000350:	1080201c 	xori	r2,r2,128
 1000354:	10bfe004 	addi	r2,r2,-128
 1000358:	10800a98 	cmpnei	r2,r2,42
 100035c:	1000371e 	bne	r2,zero,100043c <parseData+0x120>
		int sum = parseHex(data[strlen(data) -3])*16;
 1000360:	e13ffe17 	ldw	r4,-8(fp)
 1000364:	1004fa80 	call	1004fa8 <strlen>
 1000368:	10bfff44 	addi	r2,r2,-3
 100036c:	e0fffe17 	ldw	r3,-8(fp)
 1000370:	1885883a 	add	r2,r3,r2
 1000374:	10800003 	ldbu	r2,0(r2)
 1000378:	10803fcc 	andi	r2,r2,255
 100037c:	1080201c 	xori	r2,r2,128
 1000380:	10bfe004 	addi	r2,r2,-128
 1000384:	1009883a 	mov	r4,r2
 1000388:	10014100 	call	1001410 <parseHex>
 100038c:	1004913a 	slli	r2,r2,4
 1000390:	e0bfed15 	stw	r2,-76(fp)
		sum += parseHex(data[strlen(data) - 2]);
 1000394:	e13ffe17 	ldw	r4,-8(fp)
 1000398:	1004fa80 	call	1004fa8 <strlen>
 100039c:	10bfff84 	addi	r2,r2,-2
 10003a0:	e0fffe17 	ldw	r3,-8(fp)
 10003a4:	1885883a 	add	r2,r3,r2
 10003a8:	10800003 	ldbu	r2,0(r2)
 10003ac:	10803fcc 	andi	r2,r2,255
 10003b0:	1080201c 	xori	r2,r2,128
 10003b4:	10bfe004 	addi	r2,r2,-128
 10003b8:	1009883a 	mov	r4,r2
 10003bc:	10014100 	call	1001410 <parseHex>
 10003c0:	1007883a 	mov	r3,r2
 10003c4:	e0bfed17 	ldw	r2,-76(fp)
 10003c8:	10c5883a 	add	r2,r2,r3
 10003cc:	e0bfed15 	stw	r2,-76(fp)

		//check checksum
		int i;
		int length = strlen(data) -4;
 10003d0:	e13ffe17 	ldw	r4,-8(fp)
 10003d4:	1004fa80 	call	1004fa8 <strlen>
 10003d8:	10bfff04 	addi	r2,r2,-4
 10003dc:	e0bff115 	stw	r2,-60(fp)
		for(i = 2; i < length; i++) {
 10003e0:	00800084 	movi	r2,2
 10003e4:	e0bfee15 	stw	r2,-72(fp)
 10003e8:	00000d06 	br	1000420 <parseData+0x104>
			sum ^= data[i];
 10003ec:	e0bfee17 	ldw	r2,-72(fp)
 10003f0:	e0fffe17 	ldw	r3,-8(fp)
 10003f4:	1885883a 	add	r2,r3,r2
 10003f8:	10800003 	ldbu	r2,0(r2)
 10003fc:	10803fcc 	andi	r2,r2,255
 1000400:	1080201c 	xori	r2,r2,128
 1000404:	10bfe004 	addi	r2,r2,-128
 1000408:	e0ffed17 	ldw	r3,-76(fp)
 100040c:	1884f03a 	xor	r2,r3,r2
 1000410:	e0bfed15 	stw	r2,-76(fp)
		sum += parseHex(data[strlen(data) - 2]);

		//check checksum
		int i;
		int length = strlen(data) -4;
		for(i = 2; i < length; i++) {
 1000414:	e0bfee17 	ldw	r2,-72(fp)
 1000418:	10800044 	addi	r2,r2,1
 100041c:	e0bfee15 	stw	r2,-72(fp)
 1000420:	e0ffee17 	ldw	r3,-72(fp)
 1000424:	e0bff117 	ldw	r2,-60(fp)
 1000428:	18bff016 	blt	r3,r2,10003ec <__alt_data_end+0xff8003ec>
			sum ^= data[i];
		}

		if(sum != 0) {
 100042c:	e0bfed17 	ldw	r2,-76(fp)
 1000430:	10000226 	beq	r2,zero,100043c <parseData+0x120>
			return 0;
 1000434:	0005883a 	mov	r2,zero
 1000438:	0003ef06 	br	10013f8 <parseData+0x10dc>
	int32_t degree;
	long minutes;
	char degreebuff[10];

	//GGA format
	if(strstr(data, "$GPGGA")) {
 100043c:	e13ffe17 	ldw	r4,-8(fp)
 1000440:	014040b4 	movhi	r5,258
 1000444:	29648d04 	addi	r5,r5,-28108
 1000448:	100559c0 	call	100559c <strstr>
 100044c:	1001ee26 	beq	r2,zero,1000c08 <parseData+0x8ec>
		char *p = data;
 1000450:	e0bffe17 	ldw	r2,-8(fp)
 1000454:	e0bfef15 	stw	r2,-68(fp)
		p = strchr(p, ',') + 1;
 1000458:	e13fef17 	ldw	r4,-68(fp)
 100045c:	01400b04 	movi	r5,44
 1000460:	1004e440 	call	1004e44 <strchr>
 1000464:	10800044 	addi	r2,r2,1
 1000468:	e0bfef15 	stw	r2,-68(fp)
		float timef = atof(p);
 100046c:	e13fef17 	ldw	r4,-68(fp)
 1000470:	1004c040 	call	1004c04 <atof>
 1000474:	100b883a 	mov	r5,r2
 1000478:	180d883a 	mov	r6,r3
 100047c:	2809883a 	mov	r4,r5
 1000480:	300b883a 	mov	r5,r6
 1000484:	10048dc0 	call	10048dc <__truncdfsf2>
 1000488:	1007883a 	mov	r3,r2
 100048c:	e0fff215 	stw	r3,-56(fp)
		int time = timef;
 1000490:	e13ff217 	ldw	r4,-56(fp)
 1000494:	10035240 	call	1003524 <__fixsfsi>
 1000498:	e0bff315 	stw	r2,-52(fp)
		hour = time/10000;
 100049c:	e0fff317 	ldw	r3,-52(fp)
 10004a0:	0089c404 	movi	r2,10000
 10004a4:	1885283a 	div	r2,r3,r2
 10004a8:	d0a6ff15 	stw	r2,-25604(gp)
		minute = (time % 10000) / 100;
 10004ac:	e0bff317 	ldw	r2,-52(fp)
 10004b0:	00c9c404 	movi	r3,10000
 10004b4:	10c7283a 	div	r3,r2,r3
 10004b8:	18c9c424 	muli	r3,r3,10000
 10004bc:	10c7c83a 	sub	r3,r2,r3
 10004c0:	00801904 	movi	r2,100
 10004c4:	1885283a 	div	r2,r3,r2
 10004c8:	d0a6fa15 	stw	r2,-25624(gp)
		seconds = (time % 100);
 10004cc:	e0bff317 	ldw	r2,-52(fp)
 10004d0:	00c01904 	movi	r3,100
 10004d4:	10c7283a 	div	r3,r2,r3
 10004d8:	18c01924 	muli	r3,r3,100
 10004dc:	10c5c83a 	sub	r2,r2,r3
 10004e0:	d0a70715 	stw	r2,-25572(gp)

		milliseconds = fmod(timef, 1.0)*1000;
 10004e4:	e13ff217 	ldw	r4,-56(fp)
 10004e8:	10047cc0 	call	10047cc <__extendsfdf2>
 10004ec:	100b883a 	mov	r5,r2
 10004f0:	180d883a 	mov	r6,r3
 10004f4:	2809883a 	mov	r4,r5
 10004f8:	300b883a 	mov	r5,r6
 10004fc:	000d883a 	mov	r6,zero
 1000500:	01cffc34 	movhi	r7,16368
 1000504:	1001dd00 	call	1001dd0 <fmod>
 1000508:	100b883a 	mov	r5,r2
 100050c:	180d883a 	mov	r6,r3
 1000510:	2809883a 	mov	r4,r5
 1000514:	300b883a 	mov	r5,r6
 1000518:	000d883a 	mov	r6,zero
 100051c:	01d023f4 	movhi	r7,16527
 1000520:	39d00004 	addi	r7,r7,16384
 1000524:	10040200 	call	1004020 <__muldf3>
 1000528:	1009883a 	mov	r4,r2
 100052c:	180b883a 	mov	r5,r3
 1000530:	2005883a 	mov	r2,r4
 1000534:	2807883a 	mov	r3,r5
 1000538:	1009883a 	mov	r4,r2
 100053c:	180b883a 	mov	r5,r3
 1000540:	10047440 	call	1004744 <__fixdfsi>
 1000544:	d0a6fd15 	stw	r2,-25612(gp)

		//latitude

		p = strchr(p, ',') + 1;
 1000548:	e13fef17 	ldw	r4,-68(fp)
 100054c:	01400b04 	movi	r5,44
 1000550:	1004e440 	call	1004e44 <strchr>
 1000554:	10800044 	addi	r2,r2,1
 1000558:	e0bfef15 	stw	r2,-68(fp)
		if(',' != *p)
 100055c:	e0bfef17 	ldw	r2,-68(fp)
 1000560:	10800003 	ldbu	r2,0(r2)
 1000564:	10803fcc 	andi	r2,r2,255
 1000568:	1080201c 	xori	r2,r2,128
 100056c:	10bfe004 	addi	r2,r2,-128
 1000570:	10800b20 	cmpeqi	r2,r2,44
 1000574:	1000651e 	bne	r2,zero,100070c <parseData+0x3f0>
		{
			strncpy(degreebuff, p ,2);
 1000578:	e0bffb04 	addi	r2,fp,-20
 100057c:	1009883a 	mov	r4,r2
 1000580:	e17fef17 	ldw	r5,-68(fp)
 1000584:	01800084 	movi	r6,2
 1000588:	10050400 	call	1005040 <strncpy>
			p +=2;
 100058c:	e0bfef17 	ldw	r2,-68(fp)
 1000590:	10800084 	addi	r2,r2,2
 1000594:	e0bfef15 	stw	r2,-68(fp)
			degreebuff[2] = '\0';
 1000598:	e03ffb85 	stb	zero,-18(fp)
			degree = atol(degreebuff)*10000000;
 100059c:	e0bffb04 	addi	r2,fp,-20
 10005a0:	1009883a 	mov	r4,r2
 10005a4:	1004c240 	call	1004c24 <atol>
 10005a8:	1007883a 	mov	r3,r2
 10005ac:	00802674 	movhi	r2,153
 10005b0:	10a5a004 	addi	r2,r2,-27008
 10005b4:	1885383a 	mul	r2,r3,r2
 10005b8:	e0bff415 	stw	r2,-48(fp)
			strncpy(degreebuff, p, 2);
 10005bc:	e0bffb04 	addi	r2,fp,-20
 10005c0:	1009883a 	mov	r4,r2
 10005c4:	e17fef17 	ldw	r5,-68(fp)
 10005c8:	01800084 	movi	r6,2
 10005cc:	10050400 	call	1005040 <strncpy>
			p += 3;
 10005d0:	e0bfef17 	ldw	r2,-68(fp)
 10005d4:	108000c4 	addi	r2,r2,3
 10005d8:	e0bfef15 	stw	r2,-68(fp)
			strncpy(degreebuff + 2, p , 4);
 10005dc:	e0bffb04 	addi	r2,fp,-20
 10005e0:	10800084 	addi	r2,r2,2
 10005e4:	1009883a 	mov	r4,r2
 10005e8:	e17fef17 	ldw	r5,-68(fp)
 10005ec:	01800104 	movi	r6,4
 10005f0:	10050400 	call	1005040 <strncpy>
			degreebuff[6] = '\0';
 10005f4:	e03ffc85 	stb	zero,-14(fp)
			minutes = 50*atol(degreebuff) / 3;
 10005f8:	e0bffb04 	addi	r2,fp,-20
 10005fc:	1009883a 	mov	r4,r2
 1000600:	1004c240 	call	1004c24 <atol>
 1000604:	10c00ca4 	muli	r3,r2,50
 1000608:	008000c4 	movi	r2,3
 100060c:	1885283a 	div	r2,r3,r2
 1000610:	e0bff515 	stw	r2,-44(fp)
			latitude_fixed = degree + minutes;
 1000614:	e0fff417 	ldw	r3,-48(fp)
 1000618:	e0bff517 	ldw	r2,-44(fp)
 100061c:	1885883a 	add	r2,r3,r2
 1000620:	d0a6fc15 	stw	r2,-25616(gp)
			latitude = degree/100000 + minutes*0.000006F;
 1000624:	e0fff417 	ldw	r3,-48(fp)
 1000628:	008000b4 	movhi	r2,2
 100062c:	10a1a804 	addi	r2,r2,-31072
 1000630:	1885283a 	div	r2,r3,r2
 1000634:	1009883a 	mov	r4,r2
 1000638:	100359c0 	call	100359c <__floatsisf>
 100063c:	1021883a 	mov	r16,r2
 1000640:	e13ff517 	ldw	r4,-44(fp)
 1000644:	100359c0 	call	100359c <__floatsisf>
 1000648:	1007883a 	mov	r3,r2
 100064c:	1809883a 	mov	r4,r3
 1000650:	014db274 	movhi	r5,14025
 1000654:	2954e704 	addi	r5,r5,21404
 1000658:	1002c040 	call	1002c04 <__mulsf3>
 100065c:	1007883a 	mov	r3,r2
 1000660:	1805883a 	mov	r2,r3
 1000664:	8009883a 	mov	r4,r16
 1000668:	100b883a 	mov	r5,r2
 100066c:	10022d40 	call	10022d4 <__addsf3>
 1000670:	1007883a 	mov	r3,r2
 1000674:	1805883a 	mov	r2,r3
 1000678:	d0a70f15 	stw	r2,-25540(gp)
			latitudeDegrees = (latitude-100*(latitude/100))/60.0;
 100067c:	d4270f17 	ldw	r16,-25540(gp)
 1000680:	d0a70f17 	ldw	r2,-25540(gp)
 1000684:	1009883a 	mov	r4,r2
 1000688:	0150b234 	movhi	r5,17096
 100068c:	10027b40 	call	10027b4 <__divsf3>
 1000690:	1007883a 	mov	r3,r2
 1000694:	1805883a 	mov	r2,r3
 1000698:	1009883a 	mov	r4,r2
 100069c:	0150b234 	movhi	r5,17096
 10006a0:	1002c040 	call	1002c04 <__mulsf3>
 10006a4:	1007883a 	mov	r3,r2
 10006a8:	1805883a 	mov	r2,r3
 10006ac:	8009883a 	mov	r4,r16
 10006b0:	100b883a 	mov	r5,r2
 10006b4:	10030280 	call	1003028 <__subsf3>
 10006b8:	1007883a 	mov	r3,r2
 10006bc:	1805883a 	mov	r2,r3
 10006c0:	1009883a 	mov	r4,r2
 10006c4:	01509c34 	movhi	r5,17008
 10006c8:	10027b40 	call	10027b4 <__divsf3>
 10006cc:	1007883a 	mov	r3,r2
 10006d0:	1805883a 	mov	r2,r3
 10006d4:	d0a70c15 	stw	r2,-25552(gp)
			latitudeDegrees += (latitude/100);
 10006d8:	d0a70f17 	ldw	r2,-25540(gp)
 10006dc:	1009883a 	mov	r4,r2
 10006e0:	0150b234 	movhi	r5,17096
 10006e4:	10027b40 	call	10027b4 <__divsf3>
 10006e8:	1009883a 	mov	r4,r2
 10006ec:	2007883a 	mov	r3,r4
 10006f0:	d0a70c17 	ldw	r2,-25552(gp)
 10006f4:	1809883a 	mov	r4,r3
 10006f8:	100b883a 	mov	r5,r2
 10006fc:	10022d40 	call	10022d4 <__addsf3>
 1000700:	1007883a 	mov	r3,r2
 1000704:	1805883a 	mov	r2,r3
 1000708:	d0a70c15 	stw	r2,-25552(gp)
		}

	    p = strchr(p, ',')+1;
 100070c:	e13fef17 	ldw	r4,-68(fp)
 1000710:	01400b04 	movi	r5,44
 1000714:	1004e440 	call	1004e44 <strchr>
 1000718:	10800044 	addi	r2,r2,1
 100071c:	e0bfef15 	stw	r2,-68(fp)
	    if (',' != *p)
 1000720:	e0bfef17 	ldw	r2,-68(fp)
 1000724:	10800003 	ldbu	r2,0(r2)
 1000728:	10803fcc 	andi	r2,r2,255
 100072c:	1080201c 	xori	r2,r2,128
 1000730:	10bfe004 	addi	r2,r2,-128
 1000734:	10800b20 	cmpeqi	r2,r2,44
 1000738:	1000291e 	bne	r2,zero,10007e0 <parseData+0x4c4>
	    {
	      if (p[0] == 'S') latitudeDegrees *= -1.0;
 100073c:	e0bfef17 	ldw	r2,-68(fp)
 1000740:	10800003 	ldbu	r2,0(r2)
 1000744:	10803fcc 	andi	r2,r2,255
 1000748:	1080201c 	xori	r2,r2,128
 100074c:	10bfe004 	addi	r2,r2,-128
 1000750:	108014d8 	cmpnei	r2,r2,83
 1000754:	1000031e 	bne	r2,zero,1000764 <parseData+0x448>
 1000758:	d0a70c17 	ldw	r2,-25552(gp)
 100075c:	10a0003c 	xorhi	r2,r2,32768
 1000760:	d0a70c15 	stw	r2,-25552(gp)
	      if (p[0] == 'N') lat = 'N';
 1000764:	e0bfef17 	ldw	r2,-68(fp)
 1000768:	10800003 	ldbu	r2,0(r2)
 100076c:	10803fcc 	andi	r2,r2,255
 1000770:	1080201c 	xori	r2,r2,128
 1000774:	10bfe004 	addi	r2,r2,-128
 1000778:	10801398 	cmpnei	r2,r2,78
 100077c:	1000031e 	bne	r2,zero,100078c <parseData+0x470>
 1000780:	00801384 	movi	r2,78
 1000784:	d0a71505 	stb	r2,-25516(gp)
 1000788:	00001506 	br	10007e0 <parseData+0x4c4>
	      else if (p[0] == 'S') lat = 'S';
 100078c:	e0bfef17 	ldw	r2,-68(fp)
 1000790:	10800003 	ldbu	r2,0(r2)
 1000794:	10803fcc 	andi	r2,r2,255
 1000798:	1080201c 	xori	r2,r2,128
 100079c:	10bfe004 	addi	r2,r2,-128
 10007a0:	108014d8 	cmpnei	r2,r2,83
 10007a4:	1000031e 	bne	r2,zero,10007b4 <parseData+0x498>
 10007a8:	008014c4 	movi	r2,83
 10007ac:	d0a71505 	stb	r2,-25516(gp)
 10007b0:	00000b06 	br	10007e0 <parseData+0x4c4>
	      else if (p[0] == ',') lat = 0;
 10007b4:	e0bfef17 	ldw	r2,-68(fp)
 10007b8:	10800003 	ldbu	r2,0(r2)
 10007bc:	10803fcc 	andi	r2,r2,255
 10007c0:	1080201c 	xori	r2,r2,128
 10007c4:	10bfe004 	addi	r2,r2,-128
 10007c8:	10800b18 	cmpnei	r2,r2,44
 10007cc:	1000021e 	bne	r2,zero,10007d8 <parseData+0x4bc>
 10007d0:	d0271505 	stb	zero,-25516(gp)
 10007d4:	00000206 	br	10007e0 <parseData+0x4c4>
	      else return 0;
 10007d8:	0005883a 	mov	r2,zero
 10007dc:	00030606 	br	10013f8 <parseData+0x10dc>
	    }

	    p = strchr(p, ',')+1;
 10007e0:	e13fef17 	ldw	r4,-68(fp)
 10007e4:	01400b04 	movi	r5,44
 10007e8:	1004e440 	call	1004e44 <strchr>
 10007ec:	10800044 	addi	r2,r2,1
 10007f0:	e0bfef15 	stw	r2,-68(fp)

	    if (',' != *p)
 10007f4:	e0bfef17 	ldw	r2,-68(fp)
 10007f8:	10800003 	ldbu	r2,0(r2)
 10007fc:	10803fcc 	andi	r2,r2,255
 1000800:	1080201c 	xori	r2,r2,128
 1000804:	10bfe004 	addi	r2,r2,-128
 1000808:	10800b20 	cmpeqi	r2,r2,44
 100080c:	1000651e 	bne	r2,zero,10009a4 <parseData+0x688>
	    {
	       strncpy(degreebuff, p, 3);
 1000810:	e0bffb04 	addi	r2,fp,-20
 1000814:	1009883a 	mov	r4,r2
 1000818:	e17fef17 	ldw	r5,-68(fp)
 100081c:	018000c4 	movi	r6,3
 1000820:	10050400 	call	1005040 <strncpy>
	       p += 3;
 1000824:	e0bfef17 	ldw	r2,-68(fp)
 1000828:	108000c4 	addi	r2,r2,3
 100082c:	e0bfef15 	stw	r2,-68(fp)
	       degreebuff[3] = '\0';
 1000830:	e03ffbc5 	stb	zero,-17(fp)
	       degree = atol(degreebuff) * 10000000;
 1000834:	e0bffb04 	addi	r2,fp,-20
 1000838:	1009883a 	mov	r4,r2
 100083c:	1004c240 	call	1004c24 <atol>
 1000840:	1007883a 	mov	r3,r2
 1000844:	00802674 	movhi	r2,153
 1000848:	10a5a004 	addi	r2,r2,-27008
 100084c:	1885383a 	mul	r2,r3,r2
 1000850:	e0bff415 	stw	r2,-48(fp)
	       strncpy(degreebuff, p, 2); // minutes
 1000854:	e0bffb04 	addi	r2,fp,-20
 1000858:	1009883a 	mov	r4,r2
 100085c:	e17fef17 	ldw	r5,-68(fp)
 1000860:	01800084 	movi	r6,2
 1000864:	10050400 	call	1005040 <strncpy>
	       p += 3; // skip decimal point
 1000868:	e0bfef17 	ldw	r2,-68(fp)
 100086c:	108000c4 	addi	r2,r2,3
 1000870:	e0bfef15 	stw	r2,-68(fp)
	       strncpy(degreebuff + 2, p, 4);
 1000874:	e0bffb04 	addi	r2,fp,-20
 1000878:	10800084 	addi	r2,r2,2
 100087c:	1009883a 	mov	r4,r2
 1000880:	e17fef17 	ldw	r5,-68(fp)
 1000884:	01800104 	movi	r6,4
 1000888:	10050400 	call	1005040 <strncpy>
	       degreebuff[6] = '\0';
 100088c:	e03ffc85 	stb	zero,-14(fp)
	       minutes = 50 * atol(degreebuff) / 3;
 1000890:	e0bffb04 	addi	r2,fp,-20
 1000894:	1009883a 	mov	r4,r2
 1000898:	1004c240 	call	1004c24 <atol>
 100089c:	10c00ca4 	muli	r3,r2,50
 10008a0:	008000c4 	movi	r2,3
 10008a4:	1885283a 	div	r2,r3,r2
 10008a8:	e0bff515 	stw	r2,-44(fp)
	       longitude_fixed = degree + minutes;
 10008ac:	e0fff417 	ldw	r3,-48(fp)
 10008b0:	e0bff517 	ldw	r2,-44(fp)
 10008b4:	1885883a 	add	r2,r3,r2
 10008b8:	d0a70515 	stw	r2,-25580(gp)
	       longitude = degree / 100000 + minutes * 0.000006F;
 10008bc:	e0fff417 	ldw	r3,-48(fp)
 10008c0:	008000b4 	movhi	r2,2
 10008c4:	10a1a804 	addi	r2,r2,-31072
 10008c8:	1885283a 	div	r2,r3,r2
 10008cc:	1009883a 	mov	r4,r2
 10008d0:	100359c0 	call	100359c <__floatsisf>
 10008d4:	1021883a 	mov	r16,r2
 10008d8:	e13ff517 	ldw	r4,-44(fp)
 10008dc:	100359c0 	call	100359c <__floatsisf>
 10008e0:	1007883a 	mov	r3,r2
 10008e4:	1809883a 	mov	r4,r3
 10008e8:	014db274 	movhi	r5,14025
 10008ec:	2954e704 	addi	r5,r5,21404
 10008f0:	1002c040 	call	1002c04 <__mulsf3>
 10008f4:	1007883a 	mov	r3,r2
 10008f8:	1805883a 	mov	r2,r3
 10008fc:	8009883a 	mov	r4,r16
 1000900:	100b883a 	mov	r5,r2
 1000904:	10022d40 	call	10022d4 <__addsf3>
 1000908:	1007883a 	mov	r3,r2
 100090c:	1805883a 	mov	r2,r3
 1000910:	d0a70215 	stw	r2,-25592(gp)
	       longitudeDegrees = (longitude-100*(longitude/100))/60.0;
 1000914:	d4270217 	ldw	r16,-25592(gp)
 1000918:	d0a70217 	ldw	r2,-25592(gp)
 100091c:	1009883a 	mov	r4,r2
 1000920:	0150b234 	movhi	r5,17096
 1000924:	10027b40 	call	10027b4 <__divsf3>
 1000928:	1007883a 	mov	r3,r2
 100092c:	1805883a 	mov	r2,r3
 1000930:	1009883a 	mov	r4,r2
 1000934:	0150b234 	movhi	r5,17096
 1000938:	1002c040 	call	1002c04 <__mulsf3>
 100093c:	1007883a 	mov	r3,r2
 1000940:	1805883a 	mov	r2,r3
 1000944:	8009883a 	mov	r4,r16
 1000948:	100b883a 	mov	r5,r2
 100094c:	10030280 	call	1003028 <__subsf3>
 1000950:	1007883a 	mov	r3,r2
 1000954:	1805883a 	mov	r2,r3
 1000958:	1009883a 	mov	r4,r2
 100095c:	01509c34 	movhi	r5,17008
 1000960:	10027b40 	call	10027b4 <__divsf3>
 1000964:	1007883a 	mov	r3,r2
 1000968:	1805883a 	mov	r2,r3
 100096c:	d0a70a15 	stw	r2,-25560(gp)
	       longitudeDegrees += (longitude/100);
 1000970:	d0a70217 	ldw	r2,-25592(gp)
 1000974:	1009883a 	mov	r4,r2
 1000978:	0150b234 	movhi	r5,17096
 100097c:	10027b40 	call	10027b4 <__divsf3>
 1000980:	1009883a 	mov	r4,r2
 1000984:	2007883a 	mov	r3,r4
 1000988:	d0a70a17 	ldw	r2,-25560(gp)
 100098c:	1809883a 	mov	r4,r3
 1000990:	100b883a 	mov	r5,r2
 1000994:	10022d40 	call	10022d4 <__addsf3>
 1000998:	1007883a 	mov	r3,r2
 100099c:	1805883a 	mov	r2,r3
 10009a0:	d0a70a15 	stw	r2,-25560(gp)
	    }

	    p = strchr(p, ',')+1;
 10009a4:	e13fef17 	ldw	r4,-68(fp)
 10009a8:	01400b04 	movi	r5,44
 10009ac:	1004e440 	call	1004e44 <strchr>
 10009b0:	10800044 	addi	r2,r2,1
 10009b4:	e0bfef15 	stw	r2,-68(fp)
	      if (',' != *p)
 10009b8:	e0bfef17 	ldw	r2,-68(fp)
 10009bc:	10800003 	ldbu	r2,0(r2)
 10009c0:	10803fcc 	andi	r2,r2,255
 10009c4:	1080201c 	xori	r2,r2,128
 10009c8:	10bfe004 	addi	r2,r2,-128
 10009cc:	10800b20 	cmpeqi	r2,r2,44
 10009d0:	1000291e 	bne	r2,zero,1000a78 <parseData+0x75c>
	      {
	        if (p[0] == 'W') longitudeDegrees *= -1.0;
 10009d4:	e0bfef17 	ldw	r2,-68(fp)
 10009d8:	10800003 	ldbu	r2,0(r2)
 10009dc:	10803fcc 	andi	r2,r2,255
 10009e0:	1080201c 	xori	r2,r2,128
 10009e4:	10bfe004 	addi	r2,r2,-128
 10009e8:	108015d8 	cmpnei	r2,r2,87
 10009ec:	1000031e 	bne	r2,zero,10009fc <parseData+0x6e0>
 10009f0:	d0a70a17 	ldw	r2,-25560(gp)
 10009f4:	10a0003c 	xorhi	r2,r2,32768
 10009f8:	d0a70a15 	stw	r2,-25560(gp)
	        if (p[0] == 'W') lon = 'W';
 10009fc:	e0bfef17 	ldw	r2,-68(fp)
 1000a00:	10800003 	ldbu	r2,0(r2)
 1000a04:	10803fcc 	andi	r2,r2,255
 1000a08:	1080201c 	xori	r2,r2,128
 1000a0c:	10bfe004 	addi	r2,r2,-128
 1000a10:	108015d8 	cmpnei	r2,r2,87
 1000a14:	1000031e 	bne	r2,zero,1000a24 <parseData+0x708>
 1000a18:	008015c4 	movi	r2,87
 1000a1c:	d0a70105 	stb	r2,-25596(gp)
 1000a20:	00001506 	br	1000a78 <parseData+0x75c>
	        else if (p[0] == 'E') lon = 'E';
 1000a24:	e0bfef17 	ldw	r2,-68(fp)
 1000a28:	10800003 	ldbu	r2,0(r2)
 1000a2c:	10803fcc 	andi	r2,r2,255
 1000a30:	1080201c 	xori	r2,r2,128
 1000a34:	10bfe004 	addi	r2,r2,-128
 1000a38:	10801158 	cmpnei	r2,r2,69
 1000a3c:	1000031e 	bne	r2,zero,1000a4c <parseData+0x730>
 1000a40:	00801144 	movi	r2,69
 1000a44:	d0a70105 	stb	r2,-25596(gp)
 1000a48:	00000b06 	br	1000a78 <parseData+0x75c>
	        else if (p[0] == ',') lon = 0;
 1000a4c:	e0bfef17 	ldw	r2,-68(fp)
 1000a50:	10800003 	ldbu	r2,0(r2)
 1000a54:	10803fcc 	andi	r2,r2,255
 1000a58:	1080201c 	xori	r2,r2,128
 1000a5c:	10bfe004 	addi	r2,r2,-128
 1000a60:	10800b18 	cmpnei	r2,r2,44
 1000a64:	1000021e 	bne	r2,zero,1000a70 <parseData+0x754>
 1000a68:	d0270105 	stb	zero,-25596(gp)
 1000a6c:	00000206 	br	1000a78 <parseData+0x75c>
	        else return 0;
 1000a70:	0005883a 	mov	r2,zero
 1000a74:	00026006 	br	10013f8 <parseData+0x10dc>
	      }

	      p = strchr(p, ',')+1;
 1000a78:	e13fef17 	ldw	r4,-68(fp)
 1000a7c:	01400b04 	movi	r5,44
 1000a80:	1004e440 	call	1004e44 <strchr>
 1000a84:	10800044 	addi	r2,r2,1
 1000a88:	e0bfef15 	stw	r2,-68(fp)
	         if (',' != *p)
 1000a8c:	e0bfef17 	ldw	r2,-68(fp)
 1000a90:	10800003 	ldbu	r2,0(r2)
 1000a94:	10803fcc 	andi	r2,r2,255
 1000a98:	1080201c 	xori	r2,r2,128
 1000a9c:	10bfe004 	addi	r2,r2,-128
 1000aa0:	10800b20 	cmpeqi	r2,r2,44
 1000aa4:	1000031e 	bne	r2,zero,1000ab4 <parseData+0x798>
	         {
	           fixquality = atoi(p);
 1000aa8:	e13fef17 	ldw	r4,-68(fp)
 1000aac:	1004c0c0 	call	1004c0c <atoi>
 1000ab0:	d0a6f415 	stw	r2,-25648(gp)
	         }

	         p = strchr(p, ',')+1;
 1000ab4:	e13fef17 	ldw	r4,-68(fp)
 1000ab8:	01400b04 	movi	r5,44
 1000abc:	1004e440 	call	1004e44 <strchr>
 1000ac0:	10800044 	addi	r2,r2,1
 1000ac4:	e0bfef15 	stw	r2,-68(fp)
	         if (',' != *p)
 1000ac8:	e0bfef17 	ldw	r2,-68(fp)
 1000acc:	10800003 	ldbu	r2,0(r2)
 1000ad0:	10803fcc 	andi	r2,r2,255
 1000ad4:	1080201c 	xori	r2,r2,128
 1000ad8:	10bfe004 	addi	r2,r2,-128
 1000adc:	10800b20 	cmpeqi	r2,r2,44
 1000ae0:	1000031e 	bne	r2,zero,1000af0 <parseData+0x7d4>
	         {
	           satellites = atoi(p);
 1000ae4:	e13fef17 	ldw	r4,-68(fp)
 1000ae8:	1004c0c0 	call	1004c0c <atoi>
 1000aec:	d0a70315 	stw	r2,-25588(gp)
	         }

	         p = strchr(p, ',')+1;
 1000af0:	e13fef17 	ldw	r4,-68(fp)
 1000af4:	01400b04 	movi	r5,44
 1000af8:	1004e440 	call	1004e44 <strchr>
 1000afc:	10800044 	addi	r2,r2,1
 1000b00:	e0bfef15 	stw	r2,-68(fp)
	         if (',' != *p)
 1000b04:	e0bfef17 	ldw	r2,-68(fp)
 1000b08:	10800003 	ldbu	r2,0(r2)
 1000b0c:	10803fcc 	andi	r2,r2,255
 1000b10:	1080201c 	xori	r2,r2,128
 1000b14:	10bfe004 	addi	r2,r2,-128
 1000b18:	10800b20 	cmpeqi	r2,r2,44
 1000b1c:	1000091e 	bne	r2,zero,1000b44 <parseData+0x828>
	         {
	           HDOP = atof(p);
 1000b20:	e13fef17 	ldw	r4,-68(fp)
 1000b24:	1004c040 	call	1004c04 <atof>
 1000b28:	100b883a 	mov	r5,r2
 1000b2c:	180d883a 	mov	r6,r3
 1000b30:	2809883a 	mov	r4,r5
 1000b34:	300b883a 	mov	r5,r6
 1000b38:	10048dc0 	call	10048dc <__truncdfsf2>
 1000b3c:	1007883a 	mov	r3,r2
 1000b40:	d0e71415 	stw	r3,-25520(gp)
	         }

	         p = strchr(p, ',')+1;
 1000b44:	e13fef17 	ldw	r4,-68(fp)
 1000b48:	01400b04 	movi	r5,44
 1000b4c:	1004e440 	call	1004e44 <strchr>
 1000b50:	10800044 	addi	r2,r2,1
 1000b54:	e0bfef15 	stw	r2,-68(fp)
	         if (',' != *p)
 1000b58:	e0bfef17 	ldw	r2,-68(fp)
 1000b5c:	10800003 	ldbu	r2,0(r2)
 1000b60:	10803fcc 	andi	r2,r2,255
 1000b64:	1080201c 	xori	r2,r2,128
 1000b68:	10bfe004 	addi	r2,r2,-128
 1000b6c:	10800b20 	cmpeqi	r2,r2,44
 1000b70:	1000091e 	bne	r2,zero,1000b98 <parseData+0x87c>
	         {
	           altitude = atof(p);
 1000b74:	e13fef17 	ldw	r4,-68(fp)
 1000b78:	1004c040 	call	1004c04 <atof>
 1000b7c:	100b883a 	mov	r5,r2
 1000b80:	180d883a 	mov	r6,r3
 1000b84:	2809883a 	mov	r4,r5
 1000b88:	300b883a 	mov	r5,r6
 1000b8c:	10048dc0 	call	10048dc <__truncdfsf2>
 1000b90:	1007883a 	mov	r3,r2
 1000b94:	d0e70415 	stw	r3,-25584(gp)
	         }

	         p = strchr(p, ',')+1;
 1000b98:	e13fef17 	ldw	r4,-68(fp)
 1000b9c:	01400b04 	movi	r5,44
 1000ba0:	1004e440 	call	1004e44 <strchr>
 1000ba4:	10800044 	addi	r2,r2,1
 1000ba8:	e0bfef15 	stw	r2,-68(fp)
	         p = strchr(p, ',')+1;
 1000bac:	e13fef17 	ldw	r4,-68(fp)
 1000bb0:	01400b04 	movi	r5,44
 1000bb4:	1004e440 	call	1004e44 <strchr>
 1000bb8:	10800044 	addi	r2,r2,1
 1000bbc:	e0bfef15 	stw	r2,-68(fp)
	         if (',' != *p)
 1000bc0:	e0bfef17 	ldw	r2,-68(fp)
 1000bc4:	10800003 	ldbu	r2,0(r2)
 1000bc8:	10803fcc 	andi	r2,r2,255
 1000bcc:	1080201c 	xori	r2,r2,128
 1000bd0:	10bfe004 	addi	r2,r2,-128
 1000bd4:	10800b20 	cmpeqi	r2,r2,44
 1000bd8:	1000091e 	bne	r2,zero,1000c00 <parseData+0x8e4>
	         {
	           geoidheight = atof(p);
 1000bdc:	e13fef17 	ldw	r4,-68(fp)
 1000be0:	1004c040 	call	1004c04 <atof>
 1000be4:	100b883a 	mov	r5,r2
 1000be8:	180d883a 	mov	r6,r3
 1000bec:	2809883a 	mov	r4,r5
 1000bf0:	300b883a 	mov	r5,r6
 1000bf4:	10048dc0 	call	10048dc <__truncdfsf2>
 1000bf8:	1007883a 	mov	r3,r2
 1000bfc:	d0e6f015 	stw	r3,-25664(gp)
	         }
	         return 1;
 1000c00:	00800044 	movi	r2,1
 1000c04:	0001fc06 	br	10013f8 <parseData+0x10dc>
	}


	if (strstr(data, "$GPRMC")) {
 1000c08:	e13ffe17 	ldw	r4,-8(fp)
 1000c0c:	014040b4 	movhi	r5,258
 1000c10:	29648f04 	addi	r5,r5,-28100
 1000c14:	100559c0 	call	100559c <strstr>
 1000c18:	1001f626 	beq	r2,zero,10013f4 <parseData+0x10d8>
	   // found RMC
	    char *p = data;
 1000c1c:	e0bffe17 	ldw	r2,-8(fp)
 1000c20:	e0bff015 	stw	r2,-64(fp)

	    // get time
	    p = strchr(p, ',')+1;
 1000c24:	e13ff017 	ldw	r4,-64(fp)
 1000c28:	01400b04 	movi	r5,44
 1000c2c:	1004e440 	call	1004e44 <strchr>
 1000c30:	10800044 	addi	r2,r2,1
 1000c34:	e0bff015 	stw	r2,-64(fp)
	    float timef = atof(p);
 1000c38:	e13ff017 	ldw	r4,-64(fp)
 1000c3c:	1004c040 	call	1004c04 <atof>
 1000c40:	100b883a 	mov	r5,r2
 1000c44:	180d883a 	mov	r6,r3
 1000c48:	2809883a 	mov	r4,r5
 1000c4c:	300b883a 	mov	r5,r6
 1000c50:	10048dc0 	call	10048dc <__truncdfsf2>
 1000c54:	1007883a 	mov	r3,r2
 1000c58:	e0fff615 	stw	r3,-40(fp)
	    int time = timef;
 1000c5c:	e13ff617 	ldw	r4,-40(fp)
 1000c60:	10035240 	call	1003524 <__fixsfsi>
 1000c64:	e0bff715 	stw	r2,-36(fp)
	    hour = time / 10000;
 1000c68:	e0fff717 	ldw	r3,-36(fp)
 1000c6c:	0089c404 	movi	r2,10000
 1000c70:	1885283a 	div	r2,r3,r2
 1000c74:	d0a6ff15 	stw	r2,-25604(gp)
	    minute = (time % 10000) / 100;
 1000c78:	e0bff717 	ldw	r2,-36(fp)
 1000c7c:	00c9c404 	movi	r3,10000
 1000c80:	10c7283a 	div	r3,r2,r3
 1000c84:	18c9c424 	muli	r3,r3,10000
 1000c88:	10c7c83a 	sub	r3,r2,r3
 1000c8c:	00801904 	movi	r2,100
 1000c90:	1885283a 	div	r2,r3,r2
 1000c94:	d0a6fa15 	stw	r2,-25624(gp)
	    seconds = (time % 100);
 1000c98:	e0bff717 	ldw	r2,-36(fp)
 1000c9c:	00c01904 	movi	r3,100
 1000ca0:	10c7283a 	div	r3,r2,r3
 1000ca4:	18c01924 	muli	r3,r3,100
 1000ca8:	10c5c83a 	sub	r2,r2,r3
 1000cac:	d0a70715 	stw	r2,-25572(gp)

	    milliseconds = fmod(timef, 1.0) * 1000;
 1000cb0:	e13ff617 	ldw	r4,-40(fp)
 1000cb4:	10047cc0 	call	10047cc <__extendsfdf2>
 1000cb8:	100b883a 	mov	r5,r2
 1000cbc:	180d883a 	mov	r6,r3
 1000cc0:	2809883a 	mov	r4,r5
 1000cc4:	300b883a 	mov	r5,r6
 1000cc8:	000d883a 	mov	r6,zero
 1000ccc:	01cffc34 	movhi	r7,16368
 1000cd0:	1001dd00 	call	1001dd0 <fmod>
 1000cd4:	100b883a 	mov	r5,r2
 1000cd8:	180d883a 	mov	r6,r3
 1000cdc:	2809883a 	mov	r4,r5
 1000ce0:	300b883a 	mov	r5,r6
 1000ce4:	000d883a 	mov	r6,zero
 1000ce8:	01d023f4 	movhi	r7,16527
 1000cec:	39d00004 	addi	r7,r7,16384
 1000cf0:	10040200 	call	1004020 <__muldf3>
 1000cf4:	1009883a 	mov	r4,r2
 1000cf8:	180b883a 	mov	r5,r3
 1000cfc:	2005883a 	mov	r2,r4
 1000d00:	2807883a 	mov	r3,r5
 1000d04:	1009883a 	mov	r4,r2
 1000d08:	180b883a 	mov	r5,r3
 1000d0c:	10047440 	call	1004744 <__fixdfsi>
 1000d10:	d0a6fd15 	stw	r2,-25612(gp)

	    p = strchr(p, ',')+1;
 1000d14:	e13ff017 	ldw	r4,-64(fp)
 1000d18:	01400b04 	movi	r5,44
 1000d1c:	1004e440 	call	1004e44 <strchr>
 1000d20:	10800044 	addi	r2,r2,1
 1000d24:	e0bff015 	stw	r2,-64(fp)
	    // Serial.println(p);
	    if (p[0] == 'A')
 1000d28:	e0bff017 	ldw	r2,-64(fp)
 1000d2c:	10800003 	ldbu	r2,0(r2)
 1000d30:	10803fcc 	andi	r2,r2,255
 1000d34:	1080201c 	xori	r2,r2,128
 1000d38:	10bfe004 	addi	r2,r2,-128
 1000d3c:	10801058 	cmpnei	r2,r2,65
 1000d40:	1000031e 	bne	r2,zero,1000d50 <parseData+0xa34>
	      fix = 1;
 1000d44:	00800044 	movi	r2,1
 1000d48:	d0a70915 	stw	r2,-25564(gp)
 1000d4c:	00000b06 	br	1000d7c <parseData+0xa60>
	    else if (p[0] == 'V')
 1000d50:	e0bff017 	ldw	r2,-64(fp)
 1000d54:	10800003 	ldbu	r2,0(r2)
 1000d58:	10803fcc 	andi	r2,r2,255
 1000d5c:	1080201c 	xori	r2,r2,128
 1000d60:	10bfe004 	addi	r2,r2,-128
 1000d64:	10801598 	cmpnei	r2,r2,86
 1000d68:	1000021e 	bne	r2,zero,1000d74 <parseData+0xa58>
	      fix = 0;
 1000d6c:	d0270915 	stw	zero,-25564(gp)
 1000d70:	00000206 	br	1000d7c <parseData+0xa60>
	    else
	      return 0;
 1000d74:	0005883a 	mov	r2,zero
 1000d78:	00019f06 	br	10013f8 <parseData+0x10dc>

	    // parse out latitude
	    p = strchr(p, ',')+1;
 1000d7c:	e13ff017 	ldw	r4,-64(fp)
 1000d80:	01400b04 	movi	r5,44
 1000d84:	1004e440 	call	1004e44 <strchr>
 1000d88:	10800044 	addi	r2,r2,1
 1000d8c:	e0bff015 	stw	r2,-64(fp)
	    if (',' != *p)
 1000d90:	e0bff017 	ldw	r2,-64(fp)
 1000d94:	10800003 	ldbu	r2,0(r2)
 1000d98:	10803fcc 	andi	r2,r2,255
 1000d9c:	1080201c 	xori	r2,r2,128
 1000da0:	10bfe004 	addi	r2,r2,-128
 1000da4:	10800b20 	cmpeqi	r2,r2,44
 1000da8:	1000651e 	bne	r2,zero,1000f40 <parseData+0xc24>
	    {
	      strncpy(degreebuff, p, 2);
 1000dac:	e0bffb04 	addi	r2,fp,-20
 1000db0:	1009883a 	mov	r4,r2
 1000db4:	e17ff017 	ldw	r5,-64(fp)
 1000db8:	01800084 	movi	r6,2
 1000dbc:	10050400 	call	1005040 <strncpy>
	      p += 2;
 1000dc0:	e0bff017 	ldw	r2,-64(fp)
 1000dc4:	10800084 	addi	r2,r2,2
 1000dc8:	e0bff015 	stw	r2,-64(fp)
	      degreebuff[2] = '\0';
 1000dcc:	e03ffb85 	stb	zero,-18(fp)
	      long degree = atol(degreebuff) * 10000000;
 1000dd0:	e0bffb04 	addi	r2,fp,-20
 1000dd4:	1009883a 	mov	r4,r2
 1000dd8:	1004c240 	call	1004c24 <atol>
 1000ddc:	1007883a 	mov	r3,r2
 1000de0:	00802674 	movhi	r2,153
 1000de4:	10a5a004 	addi	r2,r2,-27008
 1000de8:	1885383a 	mul	r2,r3,r2
 1000dec:	e0bff815 	stw	r2,-32(fp)
	      strncpy(degreebuff, p, 2); // minutes
 1000df0:	e0bffb04 	addi	r2,fp,-20
 1000df4:	1009883a 	mov	r4,r2
 1000df8:	e17ff017 	ldw	r5,-64(fp)
 1000dfc:	01800084 	movi	r6,2
 1000e00:	10050400 	call	1005040 <strncpy>
	      p += 3; // skip decimal point
 1000e04:	e0bff017 	ldw	r2,-64(fp)
 1000e08:	108000c4 	addi	r2,r2,3
 1000e0c:	e0bff015 	stw	r2,-64(fp)
	      strncpy(degreebuff + 2, p, 4);
 1000e10:	e0bffb04 	addi	r2,fp,-20
 1000e14:	10800084 	addi	r2,r2,2
 1000e18:	1009883a 	mov	r4,r2
 1000e1c:	e17ff017 	ldw	r5,-64(fp)
 1000e20:	01800104 	movi	r6,4
 1000e24:	10050400 	call	1005040 <strncpy>
	      degreebuff[6] = '\0';
 1000e28:	e03ffc85 	stb	zero,-14(fp)
	      long minutes = 50 * atol(degreebuff) / 3;
 1000e2c:	e0bffb04 	addi	r2,fp,-20
 1000e30:	1009883a 	mov	r4,r2
 1000e34:	1004c240 	call	1004c24 <atol>
 1000e38:	10c00ca4 	muli	r3,r2,50
 1000e3c:	008000c4 	movi	r2,3
 1000e40:	1885283a 	div	r2,r3,r2
 1000e44:	e0bff915 	stw	r2,-28(fp)
	      latitude_fixed = degree + minutes;
 1000e48:	e0fff817 	ldw	r3,-32(fp)
 1000e4c:	e0bff917 	ldw	r2,-28(fp)
 1000e50:	1885883a 	add	r2,r3,r2
 1000e54:	d0a6fc15 	stw	r2,-25616(gp)
	      latitude = degree / 100000 + minutes * 0.000006F;
 1000e58:	e0fff817 	ldw	r3,-32(fp)
 1000e5c:	008000b4 	movhi	r2,2
 1000e60:	10a1a804 	addi	r2,r2,-31072
 1000e64:	1885283a 	div	r2,r3,r2
 1000e68:	1009883a 	mov	r4,r2
 1000e6c:	100359c0 	call	100359c <__floatsisf>
 1000e70:	1021883a 	mov	r16,r2
 1000e74:	e13ff917 	ldw	r4,-28(fp)
 1000e78:	100359c0 	call	100359c <__floatsisf>
 1000e7c:	1007883a 	mov	r3,r2
 1000e80:	1809883a 	mov	r4,r3
 1000e84:	014db274 	movhi	r5,14025
 1000e88:	2954e704 	addi	r5,r5,21404
 1000e8c:	1002c040 	call	1002c04 <__mulsf3>
 1000e90:	1007883a 	mov	r3,r2
 1000e94:	1805883a 	mov	r2,r3
 1000e98:	8009883a 	mov	r4,r16
 1000e9c:	100b883a 	mov	r5,r2
 1000ea0:	10022d40 	call	10022d4 <__addsf3>
 1000ea4:	1007883a 	mov	r3,r2
 1000ea8:	1805883a 	mov	r2,r3
 1000eac:	d0a70f15 	stw	r2,-25540(gp)
	      latitudeDegrees = (latitude-100*(latitude/100))/60.0;
 1000eb0:	d4270f17 	ldw	r16,-25540(gp)
 1000eb4:	d0a70f17 	ldw	r2,-25540(gp)
 1000eb8:	1009883a 	mov	r4,r2
 1000ebc:	0150b234 	movhi	r5,17096
 1000ec0:	10027b40 	call	10027b4 <__divsf3>
 1000ec4:	1007883a 	mov	r3,r2
 1000ec8:	1805883a 	mov	r2,r3
 1000ecc:	1009883a 	mov	r4,r2
 1000ed0:	0150b234 	movhi	r5,17096
 1000ed4:	1002c040 	call	1002c04 <__mulsf3>
 1000ed8:	1007883a 	mov	r3,r2
 1000edc:	1805883a 	mov	r2,r3
 1000ee0:	8009883a 	mov	r4,r16
 1000ee4:	100b883a 	mov	r5,r2
 1000ee8:	10030280 	call	1003028 <__subsf3>
 1000eec:	1007883a 	mov	r3,r2
 1000ef0:	1805883a 	mov	r2,r3
 1000ef4:	1009883a 	mov	r4,r2
 1000ef8:	01509c34 	movhi	r5,17008
 1000efc:	10027b40 	call	10027b4 <__divsf3>
 1000f00:	1007883a 	mov	r3,r2
 1000f04:	1805883a 	mov	r2,r3
 1000f08:	d0a70c15 	stw	r2,-25552(gp)
	      latitudeDegrees += (latitude/100);
 1000f0c:	d0a70f17 	ldw	r2,-25540(gp)
 1000f10:	1009883a 	mov	r4,r2
 1000f14:	0150b234 	movhi	r5,17096
 1000f18:	10027b40 	call	10027b4 <__divsf3>
 1000f1c:	1009883a 	mov	r4,r2
 1000f20:	2007883a 	mov	r3,r4
 1000f24:	d0a70c17 	ldw	r2,-25552(gp)
 1000f28:	1809883a 	mov	r4,r3
 1000f2c:	100b883a 	mov	r5,r2
 1000f30:	10022d40 	call	10022d4 <__addsf3>
 1000f34:	1007883a 	mov	r3,r2
 1000f38:	1805883a 	mov	r2,r3
 1000f3c:	d0a70c15 	stw	r2,-25552(gp)
	    }

	    p = strchr(p, ',')+1;
 1000f40:	e13ff017 	ldw	r4,-64(fp)
 1000f44:	01400b04 	movi	r5,44
 1000f48:	1004e440 	call	1004e44 <strchr>
 1000f4c:	10800044 	addi	r2,r2,1
 1000f50:	e0bff015 	stw	r2,-64(fp)
	    if (',' != *p)
 1000f54:	e0bff017 	ldw	r2,-64(fp)
 1000f58:	10800003 	ldbu	r2,0(r2)
 1000f5c:	10803fcc 	andi	r2,r2,255
 1000f60:	1080201c 	xori	r2,r2,128
 1000f64:	10bfe004 	addi	r2,r2,-128
 1000f68:	10800b20 	cmpeqi	r2,r2,44
 1000f6c:	1000291e 	bne	r2,zero,1001014 <parseData+0xcf8>
	    {
	      if (p[0] == 'S') latitudeDegrees *= -1.0;
 1000f70:	e0bff017 	ldw	r2,-64(fp)
 1000f74:	10800003 	ldbu	r2,0(r2)
 1000f78:	10803fcc 	andi	r2,r2,255
 1000f7c:	1080201c 	xori	r2,r2,128
 1000f80:	10bfe004 	addi	r2,r2,-128
 1000f84:	108014d8 	cmpnei	r2,r2,83
 1000f88:	1000031e 	bne	r2,zero,1000f98 <parseData+0xc7c>
 1000f8c:	d0a70c17 	ldw	r2,-25552(gp)
 1000f90:	10a0003c 	xorhi	r2,r2,32768
 1000f94:	d0a70c15 	stw	r2,-25552(gp)
	      if (p[0] == 'N') lat = 'N';
 1000f98:	e0bff017 	ldw	r2,-64(fp)
 1000f9c:	10800003 	ldbu	r2,0(r2)
 1000fa0:	10803fcc 	andi	r2,r2,255
 1000fa4:	1080201c 	xori	r2,r2,128
 1000fa8:	10bfe004 	addi	r2,r2,-128
 1000fac:	10801398 	cmpnei	r2,r2,78
 1000fb0:	1000031e 	bne	r2,zero,1000fc0 <parseData+0xca4>
 1000fb4:	00801384 	movi	r2,78
 1000fb8:	d0a71505 	stb	r2,-25516(gp)
 1000fbc:	00001506 	br	1001014 <parseData+0xcf8>
	      else if (p[0] == 'S') lat = 'S';
 1000fc0:	e0bff017 	ldw	r2,-64(fp)
 1000fc4:	10800003 	ldbu	r2,0(r2)
 1000fc8:	10803fcc 	andi	r2,r2,255
 1000fcc:	1080201c 	xori	r2,r2,128
 1000fd0:	10bfe004 	addi	r2,r2,-128
 1000fd4:	108014d8 	cmpnei	r2,r2,83
 1000fd8:	1000031e 	bne	r2,zero,1000fe8 <parseData+0xccc>
 1000fdc:	008014c4 	movi	r2,83
 1000fe0:	d0a71505 	stb	r2,-25516(gp)
 1000fe4:	00000b06 	br	1001014 <parseData+0xcf8>
	      else if (p[0] == ',') lat = 0;
 1000fe8:	e0bff017 	ldw	r2,-64(fp)
 1000fec:	10800003 	ldbu	r2,0(r2)
 1000ff0:	10803fcc 	andi	r2,r2,255
 1000ff4:	1080201c 	xori	r2,r2,128
 1000ff8:	10bfe004 	addi	r2,r2,-128
 1000ffc:	10800b18 	cmpnei	r2,r2,44
 1001000:	1000021e 	bne	r2,zero,100100c <parseData+0xcf0>
 1001004:	d0271505 	stb	zero,-25516(gp)
 1001008:	00000206 	br	1001014 <parseData+0xcf8>
	      else return 0;
 100100c:	0005883a 	mov	r2,zero
 1001010:	0000f906 	br	10013f8 <parseData+0x10dc>
	    }

	    // parse out longitude
	    p = strchr(p, ',')+1;
 1001014:	e13ff017 	ldw	r4,-64(fp)
 1001018:	01400b04 	movi	r5,44
 100101c:	1004e440 	call	1004e44 <strchr>
 1001020:	10800044 	addi	r2,r2,1
 1001024:	e0bff015 	stw	r2,-64(fp)
	    if (',' != *p)
 1001028:	e0bff017 	ldw	r2,-64(fp)
 100102c:	10800003 	ldbu	r2,0(r2)
 1001030:	10803fcc 	andi	r2,r2,255
 1001034:	1080201c 	xori	r2,r2,128
 1001038:	10bfe004 	addi	r2,r2,-128
 100103c:	10800b20 	cmpeqi	r2,r2,44
 1001040:	1000651e 	bne	r2,zero,10011d8 <parseData+0xebc>
	    {
	      strncpy(degreebuff, p, 3);
 1001044:	e0bffb04 	addi	r2,fp,-20
 1001048:	1009883a 	mov	r4,r2
 100104c:	e17ff017 	ldw	r5,-64(fp)
 1001050:	018000c4 	movi	r6,3
 1001054:	10050400 	call	1005040 <strncpy>
	      p += 3;
 1001058:	e0bff017 	ldw	r2,-64(fp)
 100105c:	108000c4 	addi	r2,r2,3
 1001060:	e0bff015 	stw	r2,-64(fp)
	      degreebuff[3] = '\0';
 1001064:	e03ffbc5 	stb	zero,-17(fp)
	      degree = atol(degreebuff) * 10000000;
 1001068:	e0bffb04 	addi	r2,fp,-20
 100106c:	1009883a 	mov	r4,r2
 1001070:	1004c240 	call	1004c24 <atol>
 1001074:	1007883a 	mov	r3,r2
 1001078:	00802674 	movhi	r2,153
 100107c:	10a5a004 	addi	r2,r2,-27008
 1001080:	1885383a 	mul	r2,r3,r2
 1001084:	e0bff415 	stw	r2,-48(fp)
	      strncpy(degreebuff, p, 2); // minutes
 1001088:	e0bffb04 	addi	r2,fp,-20
 100108c:	1009883a 	mov	r4,r2
 1001090:	e17ff017 	ldw	r5,-64(fp)
 1001094:	01800084 	movi	r6,2
 1001098:	10050400 	call	1005040 <strncpy>
	      p += 3; // skip decimal point
 100109c:	e0bff017 	ldw	r2,-64(fp)
 10010a0:	108000c4 	addi	r2,r2,3
 10010a4:	e0bff015 	stw	r2,-64(fp)
	      strncpy(degreebuff + 2, p, 4);
 10010a8:	e0bffb04 	addi	r2,fp,-20
 10010ac:	10800084 	addi	r2,r2,2
 10010b0:	1009883a 	mov	r4,r2
 10010b4:	e17ff017 	ldw	r5,-64(fp)
 10010b8:	01800104 	movi	r6,4
 10010bc:	10050400 	call	1005040 <strncpy>
	      degreebuff[6] = '\0';
 10010c0:	e03ffc85 	stb	zero,-14(fp)
	      minutes = 50 * atol(degreebuff) / 3;
 10010c4:	e0bffb04 	addi	r2,fp,-20
 10010c8:	1009883a 	mov	r4,r2
 10010cc:	1004c240 	call	1004c24 <atol>
 10010d0:	10c00ca4 	muli	r3,r2,50
 10010d4:	008000c4 	movi	r2,3
 10010d8:	1885283a 	div	r2,r3,r2
 10010dc:	e0bff515 	stw	r2,-44(fp)
	      longitude_fixed = degree + minutes;
 10010e0:	e0fff417 	ldw	r3,-48(fp)
 10010e4:	e0bff517 	ldw	r2,-44(fp)
 10010e8:	1885883a 	add	r2,r3,r2
 10010ec:	d0a70515 	stw	r2,-25580(gp)
	      longitude = degree / 100000 + minutes * 0.000006F;
 10010f0:	e0fff417 	ldw	r3,-48(fp)
 10010f4:	008000b4 	movhi	r2,2
 10010f8:	10a1a804 	addi	r2,r2,-31072
 10010fc:	1885283a 	div	r2,r3,r2
 1001100:	1009883a 	mov	r4,r2
 1001104:	100359c0 	call	100359c <__floatsisf>
 1001108:	1021883a 	mov	r16,r2
 100110c:	e13ff517 	ldw	r4,-44(fp)
 1001110:	100359c0 	call	100359c <__floatsisf>
 1001114:	1007883a 	mov	r3,r2
 1001118:	1809883a 	mov	r4,r3
 100111c:	014db274 	movhi	r5,14025
 1001120:	2954e704 	addi	r5,r5,21404
 1001124:	1002c040 	call	1002c04 <__mulsf3>
 1001128:	1007883a 	mov	r3,r2
 100112c:	1805883a 	mov	r2,r3
 1001130:	8009883a 	mov	r4,r16
 1001134:	100b883a 	mov	r5,r2
 1001138:	10022d40 	call	10022d4 <__addsf3>
 100113c:	1007883a 	mov	r3,r2
 1001140:	1805883a 	mov	r2,r3
 1001144:	d0a70215 	stw	r2,-25592(gp)
	      longitudeDegrees = (longitude-100*(longitude/100))/60.0;
 1001148:	d4270217 	ldw	r16,-25592(gp)
 100114c:	d0a70217 	ldw	r2,-25592(gp)
 1001150:	1009883a 	mov	r4,r2
 1001154:	0150b234 	movhi	r5,17096
 1001158:	10027b40 	call	10027b4 <__divsf3>
 100115c:	1007883a 	mov	r3,r2
 1001160:	1805883a 	mov	r2,r3
 1001164:	1009883a 	mov	r4,r2
 1001168:	0150b234 	movhi	r5,17096
 100116c:	1002c040 	call	1002c04 <__mulsf3>
 1001170:	1007883a 	mov	r3,r2
 1001174:	1805883a 	mov	r2,r3
 1001178:	8009883a 	mov	r4,r16
 100117c:	100b883a 	mov	r5,r2
 1001180:	10030280 	call	1003028 <__subsf3>
 1001184:	1007883a 	mov	r3,r2
 1001188:	1805883a 	mov	r2,r3
 100118c:	1009883a 	mov	r4,r2
 1001190:	01509c34 	movhi	r5,17008
 1001194:	10027b40 	call	10027b4 <__divsf3>
 1001198:	1007883a 	mov	r3,r2
 100119c:	1805883a 	mov	r2,r3
 10011a0:	d0a70a15 	stw	r2,-25560(gp)
	      longitudeDegrees += (longitude/100);
 10011a4:	d0a70217 	ldw	r2,-25592(gp)
 10011a8:	1009883a 	mov	r4,r2
 10011ac:	0150b234 	movhi	r5,17096
 10011b0:	10027b40 	call	10027b4 <__divsf3>
 10011b4:	1009883a 	mov	r4,r2
 10011b8:	2007883a 	mov	r3,r4
 10011bc:	d0a70a17 	ldw	r2,-25560(gp)
 10011c0:	1809883a 	mov	r4,r3
 10011c4:	100b883a 	mov	r5,r2
 10011c8:	10022d40 	call	10022d4 <__addsf3>
 10011cc:	1007883a 	mov	r3,r2
 10011d0:	1805883a 	mov	r2,r3
 10011d4:	d0a70a15 	stw	r2,-25560(gp)
	    }

	    p = strchr(p, ',')+1;
 10011d8:	e13ff017 	ldw	r4,-64(fp)
 10011dc:	01400b04 	movi	r5,44
 10011e0:	1004e440 	call	1004e44 <strchr>
 10011e4:	10800044 	addi	r2,r2,1
 10011e8:	e0bff015 	stw	r2,-64(fp)
	    if (',' != *p)
 10011ec:	e0bff017 	ldw	r2,-64(fp)
 10011f0:	10800003 	ldbu	r2,0(r2)
 10011f4:	10803fcc 	andi	r2,r2,255
 10011f8:	1080201c 	xori	r2,r2,128
 10011fc:	10bfe004 	addi	r2,r2,-128
 1001200:	10800b20 	cmpeqi	r2,r2,44
 1001204:	1000291e 	bne	r2,zero,10012ac <parseData+0xf90>
	    {
	      if (p[0] == 'W') longitudeDegrees *= -1.0;
 1001208:	e0bff017 	ldw	r2,-64(fp)
 100120c:	10800003 	ldbu	r2,0(r2)
 1001210:	10803fcc 	andi	r2,r2,255
 1001214:	1080201c 	xori	r2,r2,128
 1001218:	10bfe004 	addi	r2,r2,-128
 100121c:	108015d8 	cmpnei	r2,r2,87
 1001220:	1000031e 	bne	r2,zero,1001230 <parseData+0xf14>
 1001224:	d0a70a17 	ldw	r2,-25560(gp)
 1001228:	10a0003c 	xorhi	r2,r2,32768
 100122c:	d0a70a15 	stw	r2,-25560(gp)
	      if (p[0] == 'W') lon = 'W';
 1001230:	e0bff017 	ldw	r2,-64(fp)
 1001234:	10800003 	ldbu	r2,0(r2)
 1001238:	10803fcc 	andi	r2,r2,255
 100123c:	1080201c 	xori	r2,r2,128
 1001240:	10bfe004 	addi	r2,r2,-128
 1001244:	108015d8 	cmpnei	r2,r2,87
 1001248:	1000031e 	bne	r2,zero,1001258 <parseData+0xf3c>
 100124c:	008015c4 	movi	r2,87
 1001250:	d0a70105 	stb	r2,-25596(gp)
 1001254:	00001506 	br	10012ac <parseData+0xf90>
	      else if (p[0] == 'E') lon = 'E';
 1001258:	e0bff017 	ldw	r2,-64(fp)
 100125c:	10800003 	ldbu	r2,0(r2)
 1001260:	10803fcc 	andi	r2,r2,255
 1001264:	1080201c 	xori	r2,r2,128
 1001268:	10bfe004 	addi	r2,r2,-128
 100126c:	10801158 	cmpnei	r2,r2,69
 1001270:	1000031e 	bne	r2,zero,1001280 <parseData+0xf64>
 1001274:	00801144 	movi	r2,69
 1001278:	d0a70105 	stb	r2,-25596(gp)
 100127c:	00000b06 	br	10012ac <parseData+0xf90>
	      else if (p[0] == ',') lon = 0;
 1001280:	e0bff017 	ldw	r2,-64(fp)
 1001284:	10800003 	ldbu	r2,0(r2)
 1001288:	10803fcc 	andi	r2,r2,255
 100128c:	1080201c 	xori	r2,r2,128
 1001290:	10bfe004 	addi	r2,r2,-128
 1001294:	10800b18 	cmpnei	r2,r2,44
 1001298:	1000021e 	bne	r2,zero,10012a4 <parseData+0xf88>
 100129c:	d0270105 	stb	zero,-25596(gp)
 10012a0:	00000206 	br	10012ac <parseData+0xf90>
	      else return 0;
 10012a4:	0005883a 	mov	r2,zero
 10012a8:	00005306 	br	10013f8 <parseData+0x10dc>
	    }
	    // speed
	    p = strchr(p, ',')+1;
 10012ac:	e13ff017 	ldw	r4,-64(fp)
 10012b0:	01400b04 	movi	r5,44
 10012b4:	1004e440 	call	1004e44 <strchr>
 10012b8:	10800044 	addi	r2,r2,1
 10012bc:	e0bff015 	stw	r2,-64(fp)
	    if (',' != *p)
 10012c0:	e0bff017 	ldw	r2,-64(fp)
 10012c4:	10800003 	ldbu	r2,0(r2)
 10012c8:	10803fcc 	andi	r2,r2,255
 10012cc:	1080201c 	xori	r2,r2,128
 10012d0:	10bfe004 	addi	r2,r2,-128
 10012d4:	10800b20 	cmpeqi	r2,r2,44
 10012d8:	1000091e 	bne	r2,zero,1001300 <parseData+0xfe4>
	    {
	      speed = atof(p);
 10012dc:	e13ff017 	ldw	r4,-64(fp)
 10012e0:	1004c040 	call	1004c04 <atof>
 10012e4:	100b883a 	mov	r5,r2
 10012e8:	180d883a 	mov	r6,r3
 10012ec:	2809883a 	mov	r4,r5
 10012f0:	300b883a 	mov	r5,r6
 10012f4:	10048dc0 	call	10048dc <__truncdfsf2>
 10012f8:	1007883a 	mov	r3,r2
 10012fc:	d0e71215 	stw	r3,-25528(gp)
	    }

	    // angle
	    p = strchr(p, ',')+1;
 1001300:	e13ff017 	ldw	r4,-64(fp)
 1001304:	01400b04 	movi	r5,44
 1001308:	1004e440 	call	1004e44 <strchr>
 100130c:	10800044 	addi	r2,r2,1
 1001310:	e0bff015 	stw	r2,-64(fp)
	    if (',' != *p)
 1001314:	e0bff017 	ldw	r2,-64(fp)
 1001318:	10800003 	ldbu	r2,0(r2)
 100131c:	10803fcc 	andi	r2,r2,255
 1001320:	1080201c 	xori	r2,r2,128
 1001324:	10bfe004 	addi	r2,r2,-128
 1001328:	10800b20 	cmpeqi	r2,r2,44
 100132c:	1000091e 	bne	r2,zero,1001354 <parseData+0x1038>
	    {
	      angle = atof(p);
 1001330:	e13ff017 	ldw	r4,-64(fp)
 1001334:	1004c040 	call	1004c04 <atof>
 1001338:	100b883a 	mov	r5,r2
 100133c:	180d883a 	mov	r6,r3
 1001340:	2809883a 	mov	r4,r5
 1001344:	300b883a 	mov	r5,r6
 1001348:	10048dc0 	call	10048dc <__truncdfsf2>
 100134c:	1007883a 	mov	r3,r2
 1001350:	d0e70015 	stw	r3,-25600(gp)
	    }

	    p = strchr(p, ',')+1;
 1001354:	e13ff017 	ldw	r4,-64(fp)
 1001358:	01400b04 	movi	r5,44
 100135c:	1004e440 	call	1004e44 <strchr>
 1001360:	10800044 	addi	r2,r2,1
 1001364:	e0bff015 	stw	r2,-64(fp)
	    if (',' != *p)
 1001368:	e0bff017 	ldw	r2,-64(fp)
 100136c:	10800003 	ldbu	r2,0(r2)
 1001370:	10803fcc 	andi	r2,r2,255
 1001374:	1080201c 	xori	r2,r2,128
 1001378:	10bfe004 	addi	r2,r2,-128
 100137c:	10800b20 	cmpeqi	r2,r2,44
 1001380:	10001a1e 	bne	r2,zero,10013ec <parseData+0x10d0>
	    {
	      int fulldate = atof(p);
 1001384:	e13ff017 	ldw	r4,-64(fp)
 1001388:	1004c040 	call	1004c04 <atof>
 100138c:	100b883a 	mov	r5,r2
 1001390:	180d883a 	mov	r6,r3
 1001394:	2809883a 	mov	r4,r5
 1001398:	300b883a 	mov	r5,r6
 100139c:	10047440 	call	1004744 <__fixdfsi>
 10013a0:	e0bffa15 	stw	r2,-24(fp)
	      day = fulldate / 10000;
 10013a4:	e0fffa17 	ldw	r3,-24(fp)
 10013a8:	0089c404 	movi	r2,10000
 10013ac:	1885283a 	div	r2,r3,r2
 10013b0:	d0a71015 	stw	r2,-25536(gp)
	      month = (fulldate % 10000) / 100;
 10013b4:	e0bffa17 	ldw	r2,-24(fp)
 10013b8:	00c9c404 	movi	r3,10000
 10013bc:	10c7283a 	div	r3,r2,r3
 10013c0:	18c9c424 	muli	r3,r3,10000
 10013c4:	10c7c83a 	sub	r3,r2,r3
 10013c8:	00801904 	movi	r2,100
 10013cc:	1885283a 	div	r2,r3,r2
 10013d0:	d0a6f815 	stw	r2,-25632(gp)
	      year = (fulldate % 100);
 10013d4:	e0bffa17 	ldw	r2,-24(fp)
 10013d8:	00c01904 	movi	r3,100
 10013dc:	10c7283a 	div	r3,r2,r3
 10013e0:	18c01924 	muli	r3,r3,100
 10013e4:	10c5c83a 	sub	r2,r2,r3
 10013e8:	d0a70d15 	stw	r2,-25548(gp)
	    }
	    // we dont parse the remaining, yet!
	    return 1;
 10013ec:	00800044 	movi	r2,1
 10013f0:	00000106 	br	10013f8 <parseData+0x10dc>
	  }

	return 0;
 10013f4:	0005883a 	mov	r2,zero
}
 10013f8:	e6ffff04 	addi	sp,fp,-4
 10013fc:	dfc00217 	ldw	ra,8(sp)
 1001400:	df000117 	ldw	fp,4(sp)
 1001404:	dc000017 	ldw	r16,0(sp)
 1001408:	dec00304 	addi	sp,sp,12
 100140c:	f800283a 	ret

01001410 <parseHex>:


int parseHex(char c){
 1001410:	defffb04 	addi	sp,sp,-20
 1001414:	df000415 	stw	fp,16(sp)
 1001418:	df000404 	addi	fp,sp,16
 100141c:	2005883a 	mov	r2,r4
 1001420:	e0bfff05 	stb	r2,-4(fp)

	if(c < '0')
 1001424:	e0bfff07 	ldb	r2,-4(fp)
 1001428:	10800c08 	cmpgei	r2,r2,48
 100142c:	1000021e 	bne	r2,zero,1001438 <parseHex+0x28>
		return 0;
 1001430:	0005883a 	mov	r2,zero
 1001434:	00001906 	br	100149c <parseHex+0x8c>
	if(c <= '9')
 1001438:	e0bfff07 	ldb	r2,-4(fp)
 100143c:	10800e88 	cmpgei	r2,r2,58
 1001440:	1000051e 	bne	r2,zero,1001458 <parseHex+0x48>
	{
		int i = c - '0';
 1001444:	e0bfff07 	ldb	r2,-4(fp)
 1001448:	10bff404 	addi	r2,r2,-48
 100144c:	e0bffc15 	stw	r2,-16(fp)
		return i;
 1001450:	e0bffc17 	ldw	r2,-16(fp)
 1001454:	00001106 	br	100149c <parseHex+0x8c>
	}
	if(c < 'A')
 1001458:	e0bfff07 	ldb	r2,-4(fp)
 100145c:	10801048 	cmpgei	r2,r2,65
 1001460:	1000021e 	bne	r2,zero,100146c <parseHex+0x5c>
		return 0;
 1001464:	0005883a 	mov	r2,zero
 1001468:	00000c06 	br	100149c <parseHex+0x8c>
	if(c <= 'F') {
 100146c:	e0bfff07 	ldb	r2,-4(fp)
 1001470:	108011c8 	cmpgei	r2,r2,71
 1001474:	1000081e 	bne	r2,zero,1001498 <parseHex+0x88>
		int i = c - 'A';
 1001478:	e0bfff07 	ldb	r2,-4(fp)
 100147c:	10bfefc4 	addi	r2,r2,-65
 1001480:	e0bffd15 	stw	r2,-12(fp)
		int j = i + 10;
 1001484:	e0bffd17 	ldw	r2,-12(fp)
 1001488:	10800284 	addi	r2,r2,10
 100148c:	e0bffe15 	stw	r2,-8(fp)
		return j;
 1001490:	e0bffe17 	ldw	r2,-8(fp)
 1001494:	00000106 	br	100149c <parseHex+0x8c>

	}
	return 0;
 1001498:	0005883a 	mov	r2,zero

}
 100149c:	e037883a 	mov	sp,fp
 10014a0:	df000017 	ldw	fp,0(sp)
 10014a4:	dec00104 	addi	sp,sp,4
 10014a8:	f800283a 	ret

010014ac <waitForSentence>:


int waitForSentence(const char *data) {
 10014ac:	defff604 	addi	sp,sp,-40
 10014b0:	dfc00915 	stw	ra,36(sp)
 10014b4:	df000815 	stw	fp,32(sp)
 10014b8:	df000804 	addi	fp,sp,32
 10014bc:	e13fff15 	stw	r4,-4(fp)
	  char str[20];

	  int i=0;
 10014c0:	e03ff815 	stw	zero,-32(fp)
	  while (i < MAXLINELENGTH) {
 10014c4:	00001506 	br	100151c <waitForSentence+0x70>
	    if (newNMEAreceived() == 1) {
 10014c8:	10015400 	call	1001540 <newNMEAreceived>
 10014cc:	10800058 	cmpnei	r2,r2,1
 10014d0:	1000121e 	bne	r2,zero,100151c <waitForSentence+0x70>
	      char *nmea = lastNMEA();
 10014d4:	10015600 	call	1001560 <lastNMEA>
 10014d8:	e0bff915 	stw	r2,-28(fp)
	      strncpy(str, nmea, 20);
 10014dc:	e0bffa04 	addi	r2,fp,-24
 10014e0:	1009883a 	mov	r4,r2
 10014e4:	e17ff917 	ldw	r5,-28(fp)
 10014e8:	01800504 	movi	r6,20
 10014ec:	10050400 	call	1005040 <strncpy>
	      str[19] = 0;
 10014f0:	e03ffec5 	stb	zero,-5(fp)
	      i++;
 10014f4:	e0bff817 	ldw	r2,-32(fp)
 10014f8:	10800044 	addi	r2,r2,1
 10014fc:	e0bff815 	stw	r2,-32(fp)

	      if (strstr(str, data))
 1001500:	e0bffa04 	addi	r2,fp,-24
 1001504:	1009883a 	mov	r4,r2
 1001508:	e17fff17 	ldw	r5,-4(fp)
 100150c:	100559c0 	call	100559c <strstr>
 1001510:	10000226 	beq	r2,zero,100151c <waitForSentence+0x70>
		return 1;
 1001514:	00800044 	movi	r2,1
 1001518:	00000406 	br	100152c <waitForSentence+0x80>

int waitForSentence(const char *data) {
	  char str[20];

	  int i=0;
	  while (i < MAXLINELENGTH) {
 100151c:	e0bff817 	ldw	r2,-32(fp)
 1001520:	10801e10 	cmplti	r2,r2,120
 1001524:	103fe81e 	bne	r2,zero,10014c8 <__alt_data_end+0xff8014c8>
	      if (strstr(str, data))
		return 1;
	    }
	  }

	  return 0;
 1001528:	0005883a 	mov	r2,zero
}
 100152c:	e037883a 	mov	sp,fp
 1001530:	dfc00117 	ldw	ra,4(sp)
 1001534:	df000017 	ldw	fp,0(sp)
 1001538:	dec00204 	addi	sp,sp,8
 100153c:	f800283a 	ret

01001540 <newNMEAreceived>:

int newNMEAreceived(void) {
 1001540:	deffff04 	addi	sp,sp,-4
 1001544:	df000015 	stw	fp,0(sp)
 1001548:	d839883a 	mov	fp,sp
  return receivedFlag;
 100154c:	d0a6fe17 	ldw	r2,-25608(gp)
}
 1001550:	e037883a 	mov	sp,fp
 1001554:	df000017 	ldw	fp,0(sp)
 1001558:	dec00104 	addi	sp,sp,4
 100155c:	f800283a 	ret

01001560 <lastNMEA>:



char* lastNMEA(void) {
 1001560:	deffff04 	addi	sp,sp,-4
 1001564:	df000015 	stw	fp,0(sp)
 1001568:	d839883a 	mov	fp,sp
  receivedFlag = 0;
 100156c:	d026fe15 	stw	zero,-25608(gp)
  return (char *)lastline;
 1001570:	d0a6f317 	ldw	r2,-25652(gp)
}
 1001574:	e037883a 	mov	sp,fp
 1001578:	df000017 	ldw	fp,0(sp)
 100157c:	dec00104 	addi	sp,sp,4
 1001580:	f800283a 	ret

01001584 <LOCUS_StartLogger>:

int LOCUS_StartLogger(void) {
 1001584:	defffe04 	addi	sp,sp,-8
 1001588:	dfc00115 	stw	ra,4(sp)
 100158c:	df000015 	stw	fp,0(sp)
 1001590:	d839883a 	mov	fp,sp
  sendCommand(PMTK_LOCUS_STARTLOG);
 1001594:	010040b4 	movhi	r4,258
 1001598:	21249104 	addi	r4,r4,-28092
 100159c:	1001ad00 	call	1001ad0 <sendCommand>
  receivedFlag = 0;
 10015a0:	d026fe15 	stw	zero,-25608(gp)
  return waitForSentence(PMTK_LOCUS_STARTSTOPACK);
 10015a4:	010040b4 	movhi	r4,258
 10015a8:	21249504 	addi	r4,r4,-28076
 10015ac:	10014ac0 	call	10014ac <waitForSentence>
}
 10015b0:	e037883a 	mov	sp,fp
 10015b4:	dfc00117 	ldw	ra,4(sp)
 10015b8:	df000017 	ldw	fp,0(sp)
 10015bc:	dec00204 	addi	sp,sp,8
 10015c0:	f800283a 	ret

010015c4 <LOCUS_StopLogger>:

int LOCUS_StopLogger(void) {
 10015c4:	defffe04 	addi	sp,sp,-8
 10015c8:	dfc00115 	stw	ra,4(sp)
 10015cc:	df000015 	stw	fp,0(sp)
 10015d0:	d839883a 	mov	fp,sp
  sendCommand(PMTK_LOCUS_STOPLOG);
 10015d4:	010040b4 	movhi	r4,258
 10015d8:	21249a04 	addi	r4,r4,-28056
 10015dc:	1001ad00 	call	1001ad0 <sendCommand>
  receivedFlag = 0;
 10015e0:	d026fe15 	stw	zero,-25608(gp)
  return waitForSentence(PMTK_LOCUS_STARTSTOPACK);
 10015e4:	010040b4 	movhi	r4,258
 10015e8:	21249504 	addi	r4,r4,-28076
 10015ec:	10014ac0 	call	10014ac <waitForSentence>
}
 10015f0:	e037883a 	mov	sp,fp
 10015f4:	dfc00117 	ldw	ra,4(sp)
 10015f8:	df000017 	ldw	fp,0(sp)
 10015fc:	dec00204 	addi	sp,sp,8
 1001600:	f800283a 	ret

01001604 <LOCUS_ReadStatus>:

int LOCUS_ReadStatus(void) {
 1001604:	defff104 	addi	sp,sp,-60
 1001608:	dfc00e15 	stw	ra,56(sp)
 100160c:	df000d15 	stw	fp,52(sp)
 1001610:	df000d04 	addi	fp,sp,52
  sendCommand(PMTK_LOCUS_QUERY_STATUS);
 1001614:	010040b4 	movhi	r4,258
 1001618:	21249e04 	addi	r4,r4,-28040
 100161c:	1001ad00 	call	1001ad0 <sendCommand>

  if (! waitForSentence("$PMTKLOG"))
 1001620:	010040b4 	movhi	r4,258
 1001624:	2124a104 	addi	r4,r4,-28028
 1001628:	10014ac0 	call	10014ac <waitForSentence>
 100162c:	1000021e 	bne	r2,zero,1001638 <LOCUS_ReadStatus+0x34>
    return 0;
 1001630:	0005883a 	mov	r2,zero
 1001634:	0000ac06 	br	10018e8 <LOCUS_ReadStatus+0x2e4>

  char *response = lastNMEA();
 1001638:	10015600 	call	1001560 <lastNMEA>
 100163c:	e0bff315 	stw	r2,-52(fp)
  int parsed[10];
  int i;

  for (i=0; i<10; i++) parsed[i] = -1;
 1001640:	e03ff415 	stw	zero,-48(fp)
 1001644:	00000b06 	br	1001674 <LOCUS_ReadStatus+0x70>
 1001648:	e0bff417 	ldw	r2,-48(fp)
 100164c:	1085883a 	add	r2,r2,r2
 1001650:	1085883a 	add	r2,r2,r2
 1001654:	e0fff304 	addi	r3,fp,-52
 1001658:	1885883a 	add	r2,r3,r2
 100165c:	10800304 	addi	r2,r2,12
 1001660:	00ffffc4 	movi	r3,-1
 1001664:	10c00015 	stw	r3,0(r2)
 1001668:	e0bff417 	ldw	r2,-48(fp)
 100166c:	10800044 	addi	r2,r2,1
 1001670:	e0bff415 	stw	r2,-48(fp)
 1001674:	e0bff417 	ldw	r2,-48(fp)
 1001678:	10800290 	cmplti	r2,r2,10
 100167c:	103ff21e 	bne	r2,zero,1001648 <__alt_data_end+0xff801648>

  response = strchr(response, ',');
 1001680:	e13ff317 	ldw	r4,-52(fp)
 1001684:	01400b04 	movi	r5,44
 1001688:	1004e440 	call	1004e44 <strchr>
 100168c:	e0bff315 	stw	r2,-52(fp)
  for (i=0; i<10; i++) {
 1001690:	e03ff415 	stw	zero,-48(fp)
 1001694:	00006d06 	br	100184c <LOCUS_ReadStatus+0x248>
    if (!response || (response[0] == 0) || (response[0] == '*'))
 1001698:	e0bff317 	ldw	r2,-52(fp)
 100169c:	10006e26 	beq	r2,zero,1001858 <LOCUS_ReadStatus+0x254>
 10016a0:	e0bff317 	ldw	r2,-52(fp)
 10016a4:	10800003 	ldbu	r2,0(r2)
 10016a8:	10803fcc 	andi	r2,r2,255
 10016ac:	1080201c 	xori	r2,r2,128
 10016b0:	10bfe004 	addi	r2,r2,-128
 10016b4:	10006826 	beq	r2,zero,1001858 <LOCUS_ReadStatus+0x254>
 10016b8:	e0bff317 	ldw	r2,-52(fp)
 10016bc:	10800003 	ldbu	r2,0(r2)
 10016c0:	10803fcc 	andi	r2,r2,255
 10016c4:	1080201c 	xori	r2,r2,128
 10016c8:	10bfe004 	addi	r2,r2,-128
 10016cc:	10800aa0 	cmpeqi	r2,r2,42
 10016d0:	1000611e 	bne	r2,zero,1001858 <LOCUS_ReadStatus+0x254>
      break;
    response++;
 10016d4:	e0bff317 	ldw	r2,-52(fp)
 10016d8:	10800044 	addi	r2,r2,1
 10016dc:	e0bff315 	stw	r2,-52(fp)
    parsed[i]=0;
 10016e0:	e0bff417 	ldw	r2,-48(fp)
 10016e4:	1085883a 	add	r2,r2,r2
 10016e8:	1085883a 	add	r2,r2,r2
 10016ec:	e13ff304 	addi	r4,fp,-52
 10016f0:	2085883a 	add	r2,r4,r2
 10016f4:	10800304 	addi	r2,r2,12
 10016f8:	10000015 	stw	zero,0(r2)
    while ((response[0] != ',') &&
 10016fc:	00003c06 	br	10017f0 <LOCUS_ReadStatus+0x1ec>
	   (response[0] != '*') && (response[0] != 0)) {
      parsed[i] *= 10;
 1001700:	e0bff417 	ldw	r2,-48(fp)
 1001704:	1085883a 	add	r2,r2,r2
 1001708:	1085883a 	add	r2,r2,r2
 100170c:	e0fff304 	addi	r3,fp,-52
 1001710:	1885883a 	add	r2,r3,r2
 1001714:	10800304 	addi	r2,r2,12
 1001718:	10800017 	ldw	r2,0(r2)
 100171c:	10c002a4 	muli	r3,r2,10
 1001720:	e0bff417 	ldw	r2,-48(fp)
 1001724:	1085883a 	add	r2,r2,r2
 1001728:	1085883a 	add	r2,r2,r2
 100172c:	e13ff304 	addi	r4,fp,-52
 1001730:	2085883a 	add	r2,r4,r2
 1001734:	10800304 	addi	r2,r2,12
 1001738:	10c00015 	stw	r3,0(r2)
      int c = response[0];
 100173c:	e0bff317 	ldw	r2,-52(fp)
 1001740:	10800003 	ldbu	r2,0(r2)
 1001744:	10803fcc 	andi	r2,r2,255
 1001748:	1080201c 	xori	r2,r2,128
 100174c:	10bfe004 	addi	r2,r2,-128
 1001750:	e0bff515 	stw	r2,-44(fp)
      if (isdigit(c))
 1001754:	008040b4 	movhi	r2,258
 1001758:	10ad3604 	addi	r2,r2,-19240
 100175c:	10c00017 	ldw	r3,0(r2)
 1001760:	e0bff517 	ldw	r2,-44(fp)
 1001764:	10800044 	addi	r2,r2,1
 1001768:	1885883a 	add	r2,r3,r2
 100176c:	10800003 	ldbu	r2,0(r2)
 1001770:	10803fcc 	andi	r2,r2,255
 1001774:	1080010c 	andi	r2,r2,4
 1001778:	10001226 	beq	r2,zero,10017c4 <LOCUS_ReadStatus+0x1c0>
        parsed[i] += c - '0';
 100177c:	e0bff417 	ldw	r2,-48(fp)
 1001780:	1085883a 	add	r2,r2,r2
 1001784:	1085883a 	add	r2,r2,r2
 1001788:	e0fff304 	addi	r3,fp,-52
 100178c:	1885883a 	add	r2,r3,r2
 1001790:	10800304 	addi	r2,r2,12
 1001794:	10c00017 	ldw	r3,0(r2)
 1001798:	e0bff517 	ldw	r2,-44(fp)
 100179c:	10bff404 	addi	r2,r2,-48
 10017a0:	1887883a 	add	r3,r3,r2
 10017a4:	e0bff417 	ldw	r2,-48(fp)
 10017a8:	1085883a 	add	r2,r2,r2
 10017ac:	1085883a 	add	r2,r2,r2
 10017b0:	e13ff304 	addi	r4,fp,-52
 10017b4:	2085883a 	add	r2,r4,r2
 10017b8:	10800304 	addi	r2,r2,12
 10017bc:	10c00015 	stw	r3,0(r2)
 10017c0:	00000806 	br	10017e4 <LOCUS_ReadStatus+0x1e0>
      else
        parsed[i] = c;
 10017c4:	e0bff417 	ldw	r2,-48(fp)
 10017c8:	1085883a 	add	r2,r2,r2
 10017cc:	1085883a 	add	r2,r2,r2
 10017d0:	e0fff304 	addi	r3,fp,-52
 10017d4:	1885883a 	add	r2,r3,r2
 10017d8:	10800304 	addi	r2,r2,12
 10017dc:	e0fff517 	ldw	r3,-44(fp)
 10017e0:	10c00015 	stw	r3,0(r2)
      response++;
 10017e4:	e0bff317 	ldw	r2,-52(fp)
 10017e8:	10800044 	addi	r2,r2,1
 10017ec:	e0bff315 	stw	r2,-52(fp)
  for (i=0; i<10; i++) {
    if (!response || (response[0] == 0) || (response[0] == '*'))
      break;
    response++;
    parsed[i]=0;
    while ((response[0] != ',') &&
 10017f0:	e0bff317 	ldw	r2,-52(fp)
 10017f4:	10800003 	ldbu	r2,0(r2)
 10017f8:	10803fcc 	andi	r2,r2,255
 10017fc:	1080201c 	xori	r2,r2,128
 1001800:	10bfe004 	addi	r2,r2,-128
 1001804:	10800b20 	cmpeqi	r2,r2,44
 1001808:	10000d1e 	bne	r2,zero,1001840 <LOCUS_ReadStatus+0x23c>
	   (response[0] != '*') && (response[0] != 0)) {
 100180c:	e0bff317 	ldw	r2,-52(fp)
 1001810:	10800003 	ldbu	r2,0(r2)
  for (i=0; i<10; i++) {
    if (!response || (response[0] == 0) || (response[0] == '*'))
      break;
    response++;
    parsed[i]=0;
    while ((response[0] != ',') &&
 1001814:	10803fcc 	andi	r2,r2,255
 1001818:	1080201c 	xori	r2,r2,128
 100181c:	10bfe004 	addi	r2,r2,-128
 1001820:	10800aa0 	cmpeqi	r2,r2,42
 1001824:	1000061e 	bne	r2,zero,1001840 <LOCUS_ReadStatus+0x23c>
	   (response[0] != '*') && (response[0] != 0)) {
 1001828:	e0bff317 	ldw	r2,-52(fp)
 100182c:	10800003 	ldbu	r2,0(r2)
 1001830:	10803fcc 	andi	r2,r2,255
 1001834:	1080201c 	xori	r2,r2,128
 1001838:	10bfe004 	addi	r2,r2,-128
 100183c:	103fb01e 	bne	r2,zero,1001700 <__alt_data_end+0xff801700>
  int i;

  for (i=0; i<10; i++) parsed[i] = -1;

  response = strchr(response, ',');
  for (i=0; i<10; i++) {
 1001840:	e0bff417 	ldw	r2,-48(fp)
 1001844:	10800044 	addi	r2,r2,1
 1001848:	e0bff415 	stw	r2,-48(fp)
 100184c:	e0bff417 	ldw	r2,-48(fp)
 1001850:	10800290 	cmplti	r2,r2,10
 1001854:	103f901e 	bne	r2,zero,1001698 <__alt_data_end+0xff801698>
      else
        parsed[i] = c;
      response++;
    }
  }
  LOCUS_serial = parsed[0];
 1001858:	e0bff617 	ldw	r2,-40(fp)
 100185c:	d0a6f615 	stw	r2,-25640(gp)
  LOCUS_type = parsed[1];
 1001860:	e0bff717 	ldw	r2,-36(fp)
 1001864:	d0a70815 	stw	r2,-25568(gp)
  if (isalpha(parsed[2])) {
 1001868:	008040b4 	movhi	r2,258
 100186c:	10ad3604 	addi	r2,r2,-19240
 1001870:	10c00017 	ldw	r3,0(r2)
 1001874:	e0bff817 	ldw	r2,-32(fp)
 1001878:	10800044 	addi	r2,r2,1
 100187c:	1885883a 	add	r2,r3,r2
 1001880:	10800003 	ldbu	r2,0(r2)
 1001884:	10803fcc 	andi	r2,r2,255
 1001888:	108000cc 	andi	r2,r2,3
 100188c:	10000326 	beq	r2,zero,100189c <LOCUS_ReadStatus+0x298>
    parsed[2] = parsed[2] - 'a' + 10;
 1001890:	e0bff817 	ldw	r2,-32(fp)
 1001894:	10bfea44 	addi	r2,r2,-87
 1001898:	e0bff815 	stw	r2,-32(fp)
  }
  LOCUS_mode = parsed[2];
 100189c:	e0bff817 	ldw	r2,-32(fp)
 10018a0:	d0a6fb15 	stw	r2,-25620(gp)
  LOCUS_config = parsed[3];
 10018a4:	e0bff917 	ldw	r2,-28(fp)
 10018a8:	d0a6f915 	stw	r2,-25628(gp)
  LOCUS_interval = parsed[4];
 10018ac:	e0bffa17 	ldw	r2,-24(fp)
 10018b0:	d0a71615 	stw	r2,-25512(gp)
  LOCUS_distance = parsed[5];
 10018b4:	e0bffb17 	ldw	r2,-20(fp)
 10018b8:	d0a6f215 	stw	r2,-25656(gp)
  LOCUS_speed = parsed[6];
 10018bc:	e0bffc17 	ldw	r2,-16(fp)
 10018c0:	d0a70e15 	stw	r2,-25544(gp)
  LOCUS_status = !parsed[7];
 10018c4:	e0bffd17 	ldw	r2,-12(fp)
 10018c8:	1005003a 	cmpeq	r2,r2,zero
 10018cc:	10803fcc 	andi	r2,r2,255
 10018d0:	d0a70b15 	stw	r2,-25556(gp)
  LOCUS_records = parsed[8];
 10018d4:	e0bffe17 	ldw	r2,-8(fp)
 10018d8:	d0a71115 	stw	r2,-25532(gp)
  LOCUS_percent = parsed[9];
 10018dc:	e0bfff17 	ldw	r2,-4(fp)
 10018e0:	d0a70615 	stw	r2,-25576(gp)

  return 1;
 10018e4:	00800044 	movi	r2,1
}
 10018e8:	e037883a 	mov	sp,fp
 10018ec:	dfc00117 	ldw	ra,4(sp)
 10018f0:	df000017 	ldw	fp,0(sp)
 10018f4:	dec00204 	addi	sp,sp,8
 10018f8:	f800283a 	ret

010018fc <standby>:


int standby(void) {
 10018fc:	defffe04 	addi	sp,sp,-8
 1001900:	dfc00115 	stw	ra,4(sp)
 1001904:	df000015 	stw	fp,0(sp)
 1001908:	d839883a 	mov	fp,sp
  if (inStandbyMode == 1) {
 100190c:	d0a6f517 	ldw	r2,-25644(gp)
 1001910:	10800058 	cmpnei	r2,r2,1
 1001914:	1000021e 	bne	r2,zero,1001920 <standby+0x24>
    return 0;  // Returns false if already in standby mode, so that you do not wake it up by sending commands to GPS
 1001918:	0005883a 	mov	r2,zero
 100191c:	00000606 	br	1001938 <standby+0x3c>
  }
  else {
    inStandbyMode = 1;
 1001920:	00800044 	movi	r2,1
 1001924:	d0a6f515 	stw	r2,-25644(gp)
    sendCommand(PMTK_STANDBY);
 1001928:	010040b4 	movhi	r4,258
 100192c:	2124a404 	addi	r4,r4,-28016
 1001930:	1001ad00 	call	1001ad0 <sendCommand>
    //return waitForSentence(PMTK_STANDBY_SUCCESS);  // don't seem to be fast enough to catch the message, or something else just is not working
    return 1;
 1001934:	00800044 	movi	r2,1
  }
}
 1001938:	e037883a 	mov	sp,fp
 100193c:	dfc00117 	ldw	ra,4(sp)
 1001940:	df000017 	ldw	fp,0(sp)
 1001944:	dec00204 	addi	sp,sp,8
 1001948:	f800283a 	ret

0100194c <wakeup>:

int wakeup(void) {
 100194c:	defffe04 	addi	sp,sp,-8
 1001950:	dfc00115 	stw	ra,4(sp)
 1001954:	df000015 	stw	fp,0(sp)
 1001958:	d839883a 	mov	fp,sp
  if (inStandbyMode) {
 100195c:	d0a6f517 	ldw	r2,-25644(gp)
 1001960:	10000826 	beq	r2,zero,1001984 <wakeup+0x38>
   inStandbyMode = 0;
 1001964:	d026f515 	stw	zero,-25644(gp)
    sendCommand("");  // send byte to wake it up
 1001968:	010040b4 	movhi	r4,258
 100196c:	2124a804 	addi	r4,r4,-28000
 1001970:	1001ad00 	call	1001ad0 <sendCommand>
    return waitForSentence(PMTK_AWAKE);
 1001974:	010040b4 	movhi	r4,258
 1001978:	2124a904 	addi	r4,r4,-27996
 100197c:	10014ac0 	call	10014ac <waitForSentence>
 1001980:	00000106 	br	1001988 <wakeup+0x3c>
  }
  else {
      return 0;  // Returns false if not in standby mode, nothing to wakeup
 1001984:	0005883a 	mov	r2,zero
  }
}
 1001988:	e037883a 	mov	sp,fp
 100198c:	dfc00117 	ldw	ra,4(sp)
 1001990:	df000017 	ldw	fp,0(sp)
 1001994:	dec00204 	addi	sp,sp,8
 1001998:	f800283a 	ret

0100199c <FloatToLatitudeConversion>:




char *FloatToLatitudeConversion(int x) //output format is xx.yyyy
{
 100199c:	defffb04 	addi	sp,sp,-20
 10019a0:	dfc00415 	stw	ra,16(sp)
 10019a4:	df000315 	stw	fp,12(sp)
 10019a8:	df000304 	addi	fp,sp,12
 10019ac:	e13fff15 	stw	r4,-4(fp)
	static char buff[100] ;
	float *ptr = (float *)(&x) ; // cast int to float
 10019b0:	e0bfff04 	addi	r2,fp,-4
 10019b4:	e0bffd15 	stw	r2,-12(fp)
	float f = *ptr ; // get the float
 10019b8:	e0bffd17 	ldw	r2,-12(fp)
 10019bc:	10800017 	ldw	r2,0(r2)
 10019c0:	e0bffe15 	stw	r2,-8(fp)
	sprintf(buff, "%2.4f", f); // write in string to an array
 10019c4:	e13ffe17 	ldw	r4,-8(fp)
 10019c8:	10047cc0 	call	10047cc <__extendsfdf2>
 10019cc:	100f883a 	mov	r7,r2
 10019d0:	1811883a 	mov	r8,r3
 10019d4:	010040b4 	movhi	r4,258
 10019d8:	21345904 	addi	r4,r4,-11932
 10019dc:	014040b4 	movhi	r5,258
 10019e0:	2964ad04 	addi	r5,r5,-27980
 10019e4:	380d883a 	mov	r6,r7
 10019e8:	400f883a 	mov	r7,r8
 10019ec:	1004dd80 	call	1004dd8 <sprintf>
	return buff ;
 10019f0:	008040b4 	movhi	r2,258
 10019f4:	10b45904 	addi	r2,r2,-11932
}
 10019f8:	e037883a 	mov	sp,fp
 10019fc:	dfc00117 	ldw	ra,4(sp)
 1001a00:	df000017 	ldw	fp,0(sp)
 1001a04:	dec00204 	addi	sp,sp,8
 1001a08:	f800283a 	ret

01001a0c <FloatToLongitudeConversion>:
char *FloatToLongitudeConversion(int x) // output format is (-)xxx.yyyy
{
 1001a0c:	defffb04 	addi	sp,sp,-20
 1001a10:	dfc00415 	stw	ra,16(sp)
 1001a14:	df000315 	stw	fp,12(sp)
 1001a18:	df000304 	addi	fp,sp,12
 1001a1c:	e13fff15 	stw	r4,-4(fp)
	static char buff[100] ;
	float *ptr = (float *)(&x) ;
 1001a20:	e0bfff04 	addi	r2,fp,-4
 1001a24:	e0bffd15 	stw	r2,-12(fp)
	float f = *ptr ;
 1001a28:	e0bffd17 	ldw	r2,-12(fp)
 1001a2c:	10800017 	ldw	r2,0(r2)
 1001a30:	e0bffe15 	stw	r2,-8(fp)
	sprintf(buff, "%3.4f", f);
 1001a34:	e13ffe17 	ldw	r4,-8(fp)
 1001a38:	10047cc0 	call	10047cc <__extendsfdf2>
 1001a3c:	100f883a 	mov	r7,r2
 1001a40:	1811883a 	mov	r8,r3
 1001a44:	010040b4 	movhi	r4,258
 1001a48:	21347204 	addi	r4,r4,-11832
 1001a4c:	014040b4 	movhi	r5,258
 1001a50:	2964af04 	addi	r5,r5,-27972
 1001a54:	380d883a 	mov	r6,r7
 1001a58:	400f883a 	mov	r7,r8
 1001a5c:	1004dd80 	call	1004dd8 <sprintf>
	return buff ;
 1001a60:	008040b4 	movhi	r2,258
 1001a64:	10b47204 	addi	r2,r2,-11832
}
 1001a68:	e037883a 	mov	sp,fp
 1001a6c:	dfc00117 	ldw	ra,4(sp)
 1001a70:	df000017 	ldw	fp,0(sp)
 1001a74:	dec00204 	addi	sp,sp,8
 1001a78:	f800283a 	ret

01001a7c <putcharGPSCHIP>:


char putcharGPSCHIP(char c)
{
 1001a7c:	defffe04 	addi	sp,sp,-8
 1001a80:	df000115 	stw	fp,4(sp)
 1001a84:	df000104 	addi	fp,sp,4
 1001a88:	2005883a 	mov	r2,r4
 1001a8c:	e0bfff05 	stb	r2,-4(fp)
// poll Tx bit in 6850 status register. Wait for it to become '1'

// write 'c' to the 6850 TxData register to output the character

	while (!(GPSCHIP_Status & 0x2));
 1001a90:	0001883a 	nop
 1001a94:	00a10034 	movhi	r2,33792
 1001a98:	10808404 	addi	r2,r2,528
 1001a9c:	10800003 	ldbu	r2,0(r2)
 1001aa0:	10803fcc 	andi	r2,r2,255
 1001aa4:	1080008c 	andi	r2,r2,2
 1001aa8:	103ffa26 	beq	r2,zero,1001a94 <__alt_data_end+0xff801a94>
	GPSCHIP_TxData = c;
 1001aac:	00a10034 	movhi	r2,33792
 1001ab0:	10808484 	addi	r2,r2,530
 1001ab4:	e0ffff03 	ldbu	r3,-4(fp)
 1001ab8:	10c00005 	stb	r3,0(r2)

	return c;
 1001abc:	e0bfff03 	ldbu	r2,-4(fp)
}
 1001ac0:	e037883a 	mov	sp,fp
 1001ac4:	df000017 	ldw	fp,0(sp)
 1001ac8:	dec00104 	addi	sp,sp,4
 1001acc:	f800283a 	ret

01001ad0 <sendCommand>:

void sendCommand(const char *str){
 1001ad0:	defffb04 	addi	sp,sp,-20
 1001ad4:	dfc00415 	stw	ra,16(sp)
 1001ad8:	df000315 	stw	fp,12(sp)
 1001adc:	df000304 	addi	fp,sp,12
 1001ae0:	e13fff15 	stw	r4,-4(fp)

	int length = sizeof(str);
 1001ae4:	00800104 	movi	r2,4
 1001ae8:	e0bffe15 	stw	r2,-8(fp)

	int i = 0;
 1001aec:	e03ffd15 	stw	zero,-12(fp)
		for(i = 0; i < length; i++){
 1001af0:	e03ffd15 	stw	zero,-12(fp)
 1001af4:	00000f06 	br	1001b34 <sendCommand+0x64>
			usleep(100000); //wait for 100ms
 1001af8:	010000b4 	movhi	r4,2
 1001afc:	2121a804 	addi	r4,r4,-31072
 1001b00:	1016a700 	call	1016a70 <usleep>
			putcharGPSCHIP(str[i]);
 1001b04:	e0bffd17 	ldw	r2,-12(fp)
 1001b08:	e0ffff17 	ldw	r3,-4(fp)
 1001b0c:	1885883a 	add	r2,r3,r2
 1001b10:	10800003 	ldbu	r2,0(r2)
 1001b14:	10803fcc 	andi	r2,r2,255
 1001b18:	1080201c 	xori	r2,r2,128
 1001b1c:	10bfe004 	addi	r2,r2,-128
 1001b20:	1009883a 	mov	r4,r2
 1001b24:	1001a7c0 	call	1001a7c <putcharGPSCHIP>
void sendCommand(const char *str){

	int length = sizeof(str);

	int i = 0;
		for(i = 0; i < length; i++){
 1001b28:	e0bffd17 	ldw	r2,-12(fp)
 1001b2c:	10800044 	addi	r2,r2,1
 1001b30:	e0bffd15 	stw	r2,-12(fp)
 1001b34:	e0fffd17 	ldw	r3,-12(fp)
 1001b38:	e0bffe17 	ldw	r2,-8(fp)
 1001b3c:	18bfee16 	blt	r3,r2,1001af8 <__alt_data_end+0xff801af8>
			usleep(100000); //wait for 100ms
			putcharGPSCHIP(str[i]);
		}
}
 1001b40:	e037883a 	mov	sp,fp
 1001b44:	dfc00117 	ldw	ra,4(sp)
 1001b48:	df000017 	ldw	fp,0(sp)
 1001b4c:	dec00204 	addi	sp,sp,8
 1001b50:	f800283a 	ret

01001b54 <getcharGPSCHIP>:



char getcharGPSCHIP( void )
{
 1001b54:	deffff04 	addi	sp,sp,-4
 1001b58:	df000015 	stw	fp,0(sp)
 1001b5c:	d839883a 	mov	fp,sp
 // poll Rx bit in 6850 status register. Wait for it to become '1'
 // read received character from 6850 RxData register.
	while (!(GPSCHIP_Status & 0x1));
 1001b60:	0001883a 	nop
 1001b64:	00a10034 	movhi	r2,33792
 1001b68:	10808404 	addi	r2,r2,528
 1001b6c:	10800003 	ldbu	r2,0(r2)
 1001b70:	10803fcc 	andi	r2,r2,255
 1001b74:	1080004c 	andi	r2,r2,1
 1001b78:	103ffa26 	beq	r2,zero,1001b64 <__alt_data_end+0xff801b64>

	if(GPSCHIP_RxData == '\n') {
 1001b7c:	00a10034 	movhi	r2,33792
 1001b80:	10808484 	addi	r2,r2,530
 1001b84:	10800003 	ldbu	r2,0(r2)
 1001b88:	10803fcc 	andi	r2,r2,255
 1001b8c:	10800298 	cmpnei	r2,r2,10
 1001b90:	1000181e 	bne	r2,zero,1001bf4 <getcharGPSCHIP+0xa0>

		currentline[lineidx] = 0;
 1001b94:	d0a71317 	ldw	r2,-25524(gp)
 1001b98:	d0e6ef17 	ldw	r3,-25668(gp)
 1001b9c:	10c5883a 	add	r2,r2,r3
 1001ba0:	10000005 	stb	zero,0(r2)

		if(currentline == line1) {
 1001ba4:	d0e71317 	ldw	r3,-25524(gp)
 1001ba8:	008040b4 	movhi	r2,258
 1001bac:	10b49504 	addi	r2,r2,-11692
 1001bb0:	1880071e 	bne	r3,r2,1001bd0 <getcharGPSCHIP+0x7c>
			currentline = line2;
 1001bb4:	008040b4 	movhi	r2,258
 1001bb8:	10b4b304 	addi	r2,r2,-11572
 1001bbc:	d0a71315 	stw	r2,-25524(gp)
			lastline = line1;
 1001bc0:	008040b4 	movhi	r2,258
 1001bc4:	10b49504 	addi	r2,r2,-11692
 1001bc8:	d0a6f315 	stw	r2,-25652(gp)
 1001bcc:	00000606 	br	1001be8 <getcharGPSCHIP+0x94>
		} else {
			currentline = line1;
 1001bd0:	008040b4 	movhi	r2,258
 1001bd4:	10b49504 	addi	r2,r2,-11692
 1001bd8:	d0a71315 	stw	r2,-25524(gp)
			lastline = line2;
 1001bdc:	008040b4 	movhi	r2,258
 1001be0:	10b4b304 	addi	r2,r2,-11572
 1001be4:	d0a6f315 	stw	r2,-25652(gp)
		}

		lineidx = 0;
 1001be8:	d026ef15 	stw	zero,-25668(gp)
		receivedFlag = 1;
 1001bec:	00800044 	movi	r2,1
 1001bf0:	d0a6fe15 	stw	r2,-25608(gp)

	}

	currentline[lineidx++] = GPSCHIP_RxData;
 1001bf4:	d0e71317 	ldw	r3,-25524(gp)
 1001bf8:	d0a6ef17 	ldw	r2,-25668(gp)
 1001bfc:	11000044 	addi	r4,r2,1
 1001c00:	d126ef15 	stw	r4,-25668(gp)
 1001c04:	1887883a 	add	r3,r3,r2
 1001c08:	00a10034 	movhi	r2,33792
 1001c0c:	10808484 	addi	r2,r2,530
 1001c10:	10800003 	ldbu	r2,0(r2)
 1001c14:	18800005 	stb	r2,0(r3)
	if(lineidx >= MAXLINELENGTH)
 1001c18:	d0a6ef17 	ldw	r2,-25668(gp)
 1001c1c:	10801e10 	cmplti	r2,r2,120
 1001c20:	1000021e 	bne	r2,zero,1001c2c <getcharGPSCHIP+0xd8>
		lineidx = MAXLINELENGTH - 1;
 1001c24:	00801dc4 	movi	r2,119
 1001c28:	d0a6ef15 	stw	r2,-25668(gp)


	return GPSCHIP_RxData;
 1001c2c:	00a10034 	movhi	r2,33792
 1001c30:	10808484 	addi	r2,r2,530
 1001c34:	10800003 	ldbu	r2,0(r2)
}
 1001c38:	e037883a 	mov	sp,fp
 1001c3c:	df000017 	ldw	fp,0(sp)
 1001c40:	dec00104 	addi	sp,sp,4
 1001c44:	f800283a 	ret

01001c48 <GPSCHIPTestForReceivedData>:

// the following function polls the 6850 to determine if any character
// has been received. It doesn't wait for one, or read it, it simply tests
// to see if one is available to read
int GPSCHIPTestForReceivedData(void)
{
 1001c48:	deffff04 	addi	sp,sp,-4
 1001c4c:	df000015 	stw	fp,0(sp)
 1001c50:	d839883a 	mov	fp,sp
 // Test Rx bit in 6850 serial comms chip status register
 // if RX bit is set, return TRUE, otherwise return FALSE

	// RS232_Status: XXXX XXXX
	// We want bit0: 0000 0001
	return (GPSCHIP_Status & 0x1);
 1001c54:	00a10034 	movhi	r2,33792
 1001c58:	10808404 	addi	r2,r2,528
 1001c5c:	10800003 	ldbu	r2,0(r2)
 1001c60:	10803fcc 	andi	r2,r2,255
 1001c64:	1080004c 	andi	r2,r2,1
}
 1001c68:	e037883a 	mov	sp,fp
 1001c6c:	df000017 	ldw	fp,0(sp)
 1001c70:	dec00104 	addi	sp,sp,4
 1001c74:	f800283a 	ret

01001c78 <GPSCHIPTestForTransmitData>:

int GPSCHIPTestForTransmitData(void) {
 1001c78:	deffff04 	addi	sp,sp,-4
 1001c7c:	df000015 	stw	fp,0(sp)
 1001c80:	d839883a 	mov	fp,sp
	// Test Tx bit in 6850 serial communications chip status register
	// if TX bit is set, return TRUE, otherwise return FALSE

	// RS232_Status: XXXX XXXX
	// We want bit1: 0000 0010
	return (GPSCHIP_Status & 0x2);
 1001c84:	00a10034 	movhi	r2,33792
 1001c88:	10808404 	addi	r2,r2,528
 1001c8c:	10800003 	ldbu	r2,0(r2)
 1001c90:	10803fcc 	andi	r2,r2,255
 1001c94:	1080008c 	andi	r2,r2,2
}
 1001c98:	e037883a 	mov	sp,fp
 1001c9c:	df000017 	ldw	fp,0(sp)
 1001ca0:	dec00104 	addi	sp,sp,4
 1001ca4:	f800283a 	ret

01001ca8 <main>:

int main() {
 1001ca8:	defffe04 	addi	sp,sp,-8
 1001cac:	dfc00115 	stw	ra,4(sp)
 1001cb0:	df000015 	stw	fp,0(sp)
 1001cb4:	d839883a 	mov	fp,sp
	printf("Test GPSCHIP\n");
 1001cb8:	010040b4 	movhi	r4,258
 1001cbc:	2124b104 	addi	r4,r4,-27964
 1001cc0:	1004d6c0 	call	1004d6c <puts>
	Init_GPSCHIP();
 1001cc4:	100020c0 	call	100020c <Init_GPSCHIP>

	while(1){
		getcharGPSCHIP();
 1001cc8:	1001b540 	call	1001b54 <getcharGPSCHIP>

		if(newNMEAreceived() == 1) {
 1001ccc:	10015400 	call	1001540 <newNMEAreceived>
 1001cd0:	10800058 	cmpnei	r2,r2,1
 1001cd4:	10003d1e 	bne	r2,zero,1001dcc <main+0x124>
			if(parseData(lastNMEA())
 1001cd8:	10015600 	call	1001560 <lastNMEA>
 1001cdc:	1009883a 	mov	r4,r2
 1001ce0:	100031c0 	call	100031c <parseData>
 1001ce4:	10800058 	cmpnei	r2,r2,1
 1001ce8:	1000381e 	bne	r2,zero,1001dcc <main+0x124>
					== 1){
				printf("Time:" );
 1001cec:	010040b4 	movhi	r4,258
 1001cf0:	2124b504 	addi	r4,r4,-27948
 1001cf4:	1004c780 	call	1004c78 <printf>
				printf("Hour: %d", hour );
 1001cf8:	d0a6ff17 	ldw	r2,-25604(gp)
 1001cfc:	010040b4 	movhi	r4,258
 1001d00:	2124b704 	addi	r4,r4,-27940
 1001d04:	100b883a 	mov	r5,r2
 1001d08:	1004c780 	call	1004c78 <printf>
				printf("Minute: %d", minute );
 1001d0c:	d0a6fa17 	ldw	r2,-25624(gp)
 1001d10:	010040b4 	movhi	r4,258
 1001d14:	2124ba04 	addi	r4,r4,-27928
 1001d18:	100b883a 	mov	r5,r2
 1001d1c:	1004c780 	call	1004c78 <printf>
				printf("milliseconds: %d", milliseconds );
 1001d20:	d0a6fd17 	ldw	r2,-25612(gp)
 1001d24:	010040b4 	movhi	r4,258
 1001d28:	2124bd04 	addi	r4,r4,-27916
 1001d2c:	100b883a 	mov	r5,r2
 1001d30:	1004c780 	call	1004c78 <printf>
				printf("Date: ");
 1001d34:	010040b4 	movhi	r4,258
 1001d38:	2124c204 	addi	r4,r4,-27896
 1001d3c:	1004c780 	call	1004c78 <printf>
				printf("Day: %d", day);
 1001d40:	d0a71017 	ldw	r2,-25536(gp)
 1001d44:	010040b4 	movhi	r4,258
 1001d48:	2124c404 	addi	r4,r4,-27888
 1001d4c:	100b883a 	mov	r5,r2
 1001d50:	1004c780 	call	1004c78 <printf>
				printf("Month: %d", month);
 1001d54:	d0a6f817 	ldw	r2,-25632(gp)
 1001d58:	010040b4 	movhi	r4,258
 1001d5c:	2124c604 	addi	r4,r4,-27880
 1001d60:	100b883a 	mov	r5,r2
 1001d64:	1004c780 	call	1004c78 <printf>
				printf("Year: %d", year);
 1001d68:	d0a70d17 	ldw	r2,-25548(gp)
 1001d6c:	010040b4 	movhi	r4,258
 1001d70:	2124c904 	addi	r4,r4,-27868
 1001d74:	100b883a 	mov	r5,r2
 1001d78:	1004c780 	call	1004c78 <printf>
				printf("Latitude: %.2f", latitude);
 1001d7c:	d0a70f17 	ldw	r2,-25540(gp)
 1001d80:	1009883a 	mov	r4,r2
 1001d84:	10047cc0 	call	10047cc <__extendsfdf2>
 1001d88:	100d883a 	mov	r6,r2
 1001d8c:	180f883a 	mov	r7,r3
 1001d90:	010040b4 	movhi	r4,258
 1001d94:	2124cc04 	addi	r4,r4,-27856
 1001d98:	300b883a 	mov	r5,r6
 1001d9c:	380d883a 	mov	r6,r7
 1001da0:	1004c780 	call	1004c78 <printf>
				printf("Longitude: %.2f", longitude);
 1001da4:	d0a70217 	ldw	r2,-25592(gp)
 1001da8:	1009883a 	mov	r4,r2
 1001dac:	10047cc0 	call	10047cc <__extendsfdf2>
 1001db0:	100d883a 	mov	r6,r2
 1001db4:	180f883a 	mov	r7,r3
 1001db8:	010040b4 	movhi	r4,258
 1001dbc:	2124d004 	addi	r4,r4,-27840
 1001dc0:	300b883a 	mov	r5,r6
 1001dc4:	380d883a 	mov	r6,r7
 1001dc8:	1004c780 	call	1004c78 <printf>
			}
		}

	}
 1001dcc:	003fbe06 	br	1001cc8 <__alt_data_end+0xff801cc8>

01001dd0 <fmod>:
 1001dd0:	deffef04 	addi	sp,sp,-68
 1001dd4:	dc400a15 	stw	r17,40(sp)
 1001dd8:	044040b4 	movhi	r17,258
 1001ddc:	dd800f15 	stw	r22,60(sp)
 1001de0:	dd400e15 	stw	r21,56(sp)
 1001de4:	dd000d15 	stw	r20,52(sp)
 1001de8:	dcc00c15 	stw	r19,48(sp)
 1001dec:	dc800b15 	stw	r18,44(sp)
 1001df0:	dc000915 	stw	r16,36(sp)
 1001df4:	dfc01015 	stw	ra,64(sp)
 1001df8:	8c6d3504 	addi	r17,r17,-19244
 1001dfc:	202b883a 	mov	r21,r4
 1001e00:	2829883a 	mov	r20,r5
 1001e04:	3027883a 	mov	r19,r6
 1001e08:	3825883a 	mov	r18,r7
 1001e0c:	1001f280 	call	1001f28 <__ieee754_fmod>
 1001e10:	8a000017 	ldw	r8,0(r17)
 1001e14:	1021883a 	mov	r16,r2
 1001e18:	00bfffc4 	movi	r2,-1
 1001e1c:	182d883a 	mov	r22,r3
 1001e20:	40800426 	beq	r8,r2,1001e34 <fmod+0x64>
 1001e24:	9809883a 	mov	r4,r19
 1001e28:	900b883a 	mov	r5,r18
 1001e2c:	10022580 	call	1002258 <__fpclassifyd>
 1001e30:	10000c1e 	bne	r2,zero,1001e64 <fmod+0x94>
 1001e34:	8005883a 	mov	r2,r16
 1001e38:	b007883a 	mov	r3,r22
 1001e3c:	dfc01017 	ldw	ra,64(sp)
 1001e40:	dd800f17 	ldw	r22,60(sp)
 1001e44:	dd400e17 	ldw	r21,56(sp)
 1001e48:	dd000d17 	ldw	r20,52(sp)
 1001e4c:	dcc00c17 	ldw	r19,48(sp)
 1001e50:	dc800b17 	ldw	r18,44(sp)
 1001e54:	dc400a17 	ldw	r17,40(sp)
 1001e58:	dc000917 	ldw	r16,36(sp)
 1001e5c:	dec01104 	addi	sp,sp,68
 1001e60:	f800283a 	ret
 1001e64:	a809883a 	mov	r4,r21
 1001e68:	a00b883a 	mov	r5,r20
 1001e6c:	10022580 	call	1002258 <__fpclassifyd>
 1001e70:	103ff026 	beq	r2,zero,1001e34 <__alt_data_end+0xff801e34>
 1001e74:	9809883a 	mov	r4,r19
 1001e78:	900b883a 	mov	r5,r18
 1001e7c:	000d883a 	mov	r6,zero
 1001e80:	000f883a 	mov	r7,zero
 1001e84:	1003f9c0 	call	1003f9c <__eqdf2>
 1001e88:	103fea1e 	bne	r2,zero,1001e34 <__alt_data_end+0xff801e34>
 1001e8c:	00800044 	movi	r2,1
 1001e90:	d8800015 	stw	r2,0(sp)
 1001e94:	8c000017 	ldw	r16,0(r17)
 1001e98:	008040b4 	movhi	r2,258
 1001e9c:	10a4d404 	addi	r2,r2,-27824
 1001ea0:	d8800115 	stw	r2,4(sp)
 1001ea4:	dd400215 	stw	r21,8(sp)
 1001ea8:	dd000315 	stw	r20,12(sp)
 1001eac:	dcc00415 	stw	r19,16(sp)
 1001eb0:	dc800515 	stw	r18,20(sp)
 1001eb4:	d8000815 	stw	zero,32(sp)
 1001eb8:	80001126 	beq	r16,zero,1001f00 <fmod+0x130>
 1001ebc:	0009883a 	mov	r4,zero
 1001ec0:	000b883a 	mov	r5,zero
 1001ec4:	000d883a 	mov	r6,zero
 1001ec8:	000f883a 	mov	r7,zero
 1001ecc:	10036d00 	call	10036d0 <__divdf3>
 1001ed0:	d8800615 	stw	r2,24(sp)
 1001ed4:	d8c00715 	stw	r3,28(sp)
 1001ed8:	00800084 	movi	r2,2
 1001edc:	80800a1e 	bne	r16,r2,1001f08 <fmod+0x138>
 1001ee0:	1004c3c0 	call	1004c3c <__errno>
 1001ee4:	00c00844 	movi	r3,33
 1001ee8:	10c00015 	stw	r3,0(r2)
 1001eec:	d8800817 	ldw	r2,32(sp)
 1001ef0:	1000091e 	bne	r2,zero,1001f18 <fmod+0x148>
 1001ef4:	d8800617 	ldw	r2,24(sp)
 1001ef8:	d8c00717 	ldw	r3,28(sp)
 1001efc:	003fcf06 	br	1001e3c <__alt_data_end+0xff801e3c>
 1001f00:	dd400615 	stw	r21,24(sp)
 1001f04:	dd000715 	stw	r20,28(sp)
 1001f08:	d809883a 	mov	r4,sp
 1001f0c:	10022cc0 	call	10022cc <matherr>
 1001f10:	103ff61e 	bne	r2,zero,1001eec <__alt_data_end+0xff801eec>
 1001f14:	003ff206 	br	1001ee0 <__alt_data_end+0xff801ee0>
 1001f18:	1004c3c0 	call	1004c3c <__errno>
 1001f1c:	d8c00817 	ldw	r3,32(sp)
 1001f20:	10c00015 	stw	r3,0(r2)
 1001f24:	003ff306 	br	1001ef4 <__alt_data_end+0xff801ef4>

01001f28 <__ieee754_fmod>:
 1001f28:	00e00034 	movhi	r3,32768
 1001f2c:	18ffffc4 	addi	r3,r3,-1
 1001f30:	deffff04 	addi	sp,sp,-4
 1001f34:	38c6703a 	and	r3,r7,r3
 1001f38:	dfc00015 	stw	ra,0(sp)
 1001f3c:	1984b03a 	or	r2,r3,r6
 1001f40:	10001926 	beq	r2,zero,1001fa8 <__ieee754_fmod+0x80>
 1001f44:	2a60002c 	andhi	r9,r5,32768
 1001f48:	009ffc34 	movhi	r2,32752
 1001f4c:	4954f03a 	xor	r10,r9,r5
 1001f50:	10bfffc4 	addi	r2,r2,-1
 1001f54:	12801416 	blt	r2,r10,1001fa8 <__ieee754_fmod+0x80>
 1001f58:	0185c83a 	sub	r2,zero,r6
 1001f5c:	1184b03a 	or	r2,r2,r6
 1001f60:	1004d7fa 	srli	r2,r2,31
 1001f64:	02dffc34 	movhi	r11,32752
 1001f68:	10c4b03a 	or	r2,r2,r3
 1001f6c:	58800e36 	bltu	r11,r2,1001fa8 <__ieee754_fmod+0x80>
 1001f70:	2011883a 	mov	r8,r4
 1001f74:	3019883a 	mov	r12,r6
 1001f78:	1a801416 	blt	r3,r10,1001fcc <__ieee754_fmod+0xa4>
 1001f7c:	50c01e16 	blt	r10,r3,1001ff8 <__ieee754_fmod+0xd0>
 1001f80:	21801d36 	bltu	r4,r6,1001ff8 <__ieee754_fmod+0xd0>
 1001f84:	2180111e 	bne	r4,r6,1001fcc <__ieee754_fmod+0xa4>
 1001f88:	4806d7fa 	srli	r3,r9,31
 1001f8c:	180490fa 	slli	r2,r3,3
 1001f90:	00c040b4 	movhi	r3,258
 1001f94:	18e4d604 	addi	r3,r3,-27816
 1001f98:	1887883a 	add	r3,r3,r2
 1001f9c:	18800017 	ldw	r2,0(r3)
 1001fa0:	18c00117 	ldw	r3,4(r3)
 1001fa4:	00000606 	br	1001fc0 <__ieee754_fmod+0x98>
 1001fa8:	10040200 	call	1004020 <__muldf3>
 1001fac:	1009883a 	mov	r4,r2
 1001fb0:	180b883a 	mov	r5,r3
 1001fb4:	100d883a 	mov	r6,r2
 1001fb8:	180f883a 	mov	r7,r3
 1001fbc:	10036d00 	call	10036d0 <__divdf3>
 1001fc0:	dfc00017 	ldw	ra,0(sp)
 1001fc4:	dec00104 	addi	sp,sp,4
 1001fc8:	f800283a 	ret
 1001fcc:	00800434 	movhi	r2,16
 1001fd0:	10bfffc4 	addi	r2,r2,-1
 1001fd4:	12800b16 	blt	r2,r10,1002004 <__ieee754_fmod+0xdc>
 1001fd8:	5000711e 	bne	r10,zero,10021a0 <__ieee754_fmod+0x278>
 1001fdc:	2005883a 	mov	r2,r4
 1001fe0:	017efb44 	movi	r5,-1043
 1001fe4:	0100090e 	bge	zero,r4,100200c <__ieee754_fmod+0xe4>
 1001fe8:	1085883a 	add	r2,r2,r2
 1001fec:	297fffc4 	addi	r5,r5,-1
 1001ff0:	00bffd16 	blt	zero,r2,1001fe8 <__alt_data_end+0xff801fe8>
 1001ff4:	00000506 	br	100200c <__ieee754_fmod+0xe4>
 1001ff8:	2005883a 	mov	r2,r4
 1001ffc:	2807883a 	mov	r3,r5
 1002000:	003fef06 	br	1001fc0 <__alt_data_end+0xff801fc0>
 1002004:	500bd53a 	srai	r5,r10,20
 1002008:	297f0044 	addi	r5,r5,-1023
 100200c:	00800434 	movhi	r2,16
 1002010:	10bfffc4 	addi	r2,r2,-1
 1002014:	10c00816 	blt	r2,r3,1002038 <__ieee754_fmod+0x110>
 1002018:	1800681e 	bne	r3,zero,10021bc <__ieee754_fmod+0x294>
 100201c:	3005883a 	mov	r2,r6
 1002020:	03befb44 	movi	r14,-1043
 1002024:	0180060e 	bge	zero,r6,1002040 <__ieee754_fmod+0x118>
 1002028:	1085883a 	add	r2,r2,r2
 100202c:	73bfffc4 	addi	r14,r14,-1
 1002030:	00bffd16 	blt	zero,r2,1002028 <__alt_data_end+0xff802028>
 1002034:	00000206 	br	1002040 <__ieee754_fmod+0x118>
 1002038:	1805d53a 	srai	r2,r3,20
 100203c:	13bf0044 	addi	r14,r2,-1023
 1002040:	00bf0084 	movi	r2,-1022
 1002044:	28804b16 	blt	r5,r2,1002174 <__ieee754_fmod+0x24c>
 1002048:	00800434 	movhi	r2,16
 100204c:	10bfffc4 	addi	r2,r2,-1
 1002050:	5088703a 	and	r4,r10,r2
 1002054:	21000434 	orhi	r4,r4,16
 1002058:	00bf0084 	movi	r2,-1022
 100205c:	70803c16 	blt	r14,r2,1002150 <__ieee754_fmod+0x228>
 1002060:	00c00434 	movhi	r3,16
 1002064:	18ffffc4 	addi	r3,r3,-1
 1002068:	38ce703a 	and	r7,r7,r3
 100206c:	39800434 	orhi	r6,r7,16
 1002070:	2b8bc83a 	sub	r5,r5,r14
 1002074:	00000406 	br	1002088 <__ieee754_fmod+0x160>
 1002078:	58001126 	beq	r11,zero,10020c0 <__ieee754_fmod+0x198>
 100207c:	1091883a 	add	r8,r2,r2
 1002080:	6a89883a 	add	r4,r13,r10
 1002084:	297fffc4 	addi	r5,r5,-1
 1002088:	4305c83a 	sub	r2,r8,r12
 100208c:	1014d7fa 	srli	r10,r2,31
 1002090:	28001326 	beq	r5,zero,10020e0 <__ieee754_fmod+0x1b8>
 1002094:	2187c83a 	sub	r3,r4,r6
 1002098:	4300012e 	bgeu	r8,r12,10020a0 <__ieee754_fmod+0x178>
 100209c:	18ffffc4 	addi	r3,r3,-1
 10020a0:	1896b03a 	or	r11,r3,r2
 10020a4:	18db883a 	add	r13,r3,r3
 10020a8:	183ff30e 	bge	r3,zero,1002078 <__alt_data_end+0xff802078>
 10020ac:	4004d7fa 	srli	r2,r8,31
 10020b0:	2109883a 	add	r4,r4,r4
 10020b4:	4211883a 	add	r8,r8,r8
 10020b8:	2089883a 	add	r4,r4,r2
 10020bc:	003ff106 	br	1002084 <__alt_data_end+0xff802084>
 10020c0:	4806d7fa 	srli	r3,r9,31
 10020c4:	008040b4 	movhi	r2,258
 10020c8:	10a4d604 	addi	r2,r2,-27816
 10020cc:	180690fa 	slli	r3,r3,3
 10020d0:	10c7883a 	add	r3,r2,r3
 10020d4:	18800017 	ldw	r2,0(r3)
 10020d8:	18c00117 	ldw	r3,4(r3)
 10020dc:	003fb806 	br	1001fc0 <__alt_data_end+0xff801fc0>
 10020e0:	218dc83a 	sub	r6,r4,r6
 10020e4:	43002c36 	bltu	r8,r12,1002198 <__ieee754_fmod+0x270>
 10020e8:	30004c16 	blt	r6,zero,100221c <__ieee754_fmod+0x2f4>
 10020ec:	4311c83a 	sub	r8,r8,r12
 10020f0:	3204b03a 	or	r2,r6,r8
 10020f4:	103ff226 	beq	r2,zero,10020c0 <__alt_data_end+0xff8020c0>
 10020f8:	00c00434 	movhi	r3,16
 10020fc:	18ffffc4 	addi	r3,r3,-1
 1002100:	19800616 	blt	r3,r6,100211c <__ieee754_fmod+0x1f4>
 1002104:	4004d7fa 	srli	r2,r8,31
 1002108:	318d883a 	add	r6,r6,r6
 100210c:	4211883a 	add	r8,r8,r8
 1002110:	308d883a 	add	r6,r6,r2
 1002114:	73bfffc4 	addi	r14,r14,-1
 1002118:	19bffa0e 	bge	r3,r6,1002104 <__alt_data_end+0xff802104>
 100211c:	00bf0084 	movi	r2,-1022
 1002120:	7080360e 	bge	r14,r2,10021fc <__ieee754_fmod+0x2d4>
 1002124:	1385c83a 	sub	r2,r2,r14
 1002128:	00c00504 	movi	r3,20
 100212c:	18803d16 	blt	r3,r2,1002224 <__ieee754_fmod+0x2fc>
 1002130:	71010784 	addi	r4,r14,1054
 1002134:	4090d83a 	srl	r8,r8,r2
 1002138:	3108983a 	sll	r4,r6,r4
 100213c:	3087d83a 	sra	r3,r6,r2
 1002140:	2208b03a 	or	r4,r4,r8
 1002144:	2005883a 	mov	r2,r4
 1002148:	1a46b03a 	or	r3,r3,r9
 100214c:	003f9c06 	br	1001fc0 <__alt_data_end+0xff801fc0>
 1002150:	1385c83a 	sub	r2,r2,r14
 1002154:	01c007c4 	movi	r7,31
 1002158:	38802316 	blt	r7,r2,10021e8 <__ieee754_fmod+0x2c0>
 100215c:	71c10784 	addi	r7,r14,1054
 1002160:	1886983a 	sll	r3,r3,r2
 1002164:	31ced83a 	srl	r7,r6,r7
 1002168:	3098983a 	sll	r12,r6,r2
 100216c:	19ccb03a 	or	r6,r3,r7
 1002170:	003fbf06 	br	1002070 <__alt_data_end+0xff802070>
 1002174:	1145c83a 	sub	r2,r2,r5
 1002178:	020007c4 	movi	r8,31
 100217c:	40801516 	blt	r8,r2,10021d4 <__ieee754_fmod+0x2ac>
 1002180:	2ac10784 	addi	r11,r5,1054
 1002184:	5094983a 	sll	r10,r10,r2
 1002188:	22d6d83a 	srl	r11,r4,r11
 100218c:	2090983a 	sll	r8,r4,r2
 1002190:	52c8b03a 	or	r4,r10,r11
 1002194:	003fb006 	br	1002058 <__alt_data_end+0xff802058>
 1002198:	31bfffc4 	addi	r6,r6,-1
 100219c:	003fd206 	br	10020e8 <__alt_data_end+0xff8020e8>
 10021a0:	500492fa 	slli	r2,r10,11
 10021a4:	017f0084 	movi	r5,-1022
 10021a8:	00bf980e 	bge	zero,r2,100200c <__alt_data_end+0xff80200c>
 10021ac:	1085883a 	add	r2,r2,r2
 10021b0:	297fffc4 	addi	r5,r5,-1
 10021b4:	00bffd16 	blt	zero,r2,10021ac <__alt_data_end+0xff8021ac>
 10021b8:	003f9406 	br	100200c <__alt_data_end+0xff80200c>
 10021bc:	180492fa 	slli	r2,r3,11
 10021c0:	03bf0084 	movi	r14,-1022
 10021c4:	1085883a 	add	r2,r2,r2
 10021c8:	73bfffc4 	addi	r14,r14,-1
 10021cc:	00bffd16 	blt	zero,r2,10021c4 <__alt_data_end+0xff8021c4>
 10021d0:	003f9b06 	br	1002040 <__alt_data_end+0xff802040>
 10021d4:	00bef884 	movi	r2,-1054
 10021d8:	1145c83a 	sub	r2,r2,r5
 10021dc:	2088983a 	sll	r4,r4,r2
 10021e0:	0011883a 	mov	r8,zero
 10021e4:	003f9c06 	br	1002058 <__alt_data_end+0xff802058>
 10021e8:	00bef884 	movi	r2,-1054
 10021ec:	1385c83a 	sub	r2,r2,r14
 10021f0:	308c983a 	sll	r6,r6,r2
 10021f4:	0019883a 	mov	r12,zero
 10021f8:	003f9d06 	br	1002070 <__alt_data_end+0xff802070>
 10021fc:	71c0ffc4 	addi	r7,r14,1023
 1002200:	380e953a 	slli	r7,r7,20
 1002204:	00fffc34 	movhi	r3,65520
 1002208:	30c7883a 	add	r3,r6,r3
 100220c:	1a46b03a 	or	r3,r3,r9
 1002210:	4005883a 	mov	r2,r8
 1002214:	19c6b03a 	or	r3,r3,r7
 1002218:	003f6906 	br	1001fc0 <__alt_data_end+0xff801fc0>
 100221c:	200d883a 	mov	r6,r4
 1002220:	003fb306 	br	10020f0 <__alt_data_end+0xff8020f0>
 1002224:	00c007c4 	movi	r3,31
 1002228:	18800616 	blt	r3,r2,1002244 <__ieee754_fmod+0x31c>
 100222c:	71c10784 	addi	r7,r14,1054
 1002230:	4090d83a 	srl	r8,r8,r2
 1002234:	31c4983a 	sll	r2,r6,r7
 1002238:	4807883a 	mov	r3,r9
 100223c:	1208b03a 	or	r4,r2,r8
 1002240:	003fc006 	br	1002144 <__alt_data_end+0xff802144>
 1002244:	00bef884 	movi	r2,-1054
 1002248:	1385c83a 	sub	r2,r2,r14
 100224c:	3089d83a 	sra	r4,r6,r2
 1002250:	4807883a 	mov	r3,r9
 1002254:	003fbb06 	br	1002144 <__alt_data_end+0xff802144>

01002258 <__fpclassifyd>:
 1002258:	00a00034 	movhi	r2,32768
 100225c:	10bfffc4 	addi	r2,r2,-1
 1002260:	2884703a 	and	r2,r5,r2
 1002264:	10000726 	beq	r2,zero,1002284 <__fpclassifyd+0x2c>
 1002268:	00fffc34 	movhi	r3,65520
 100226c:	019ff834 	movhi	r6,32736
 1002270:	28c7883a 	add	r3,r5,r3
 1002274:	31bfffc4 	addi	r6,r6,-1
 1002278:	30c00536 	bltu	r6,r3,1002290 <__fpclassifyd+0x38>
 100227c:	00800104 	movi	r2,4
 1002280:	f800283a 	ret
 1002284:	2000021e 	bne	r4,zero,1002290 <__fpclassifyd+0x38>
 1002288:	00800084 	movi	r2,2
 100228c:	f800283a 	ret
 1002290:	00dffc34 	movhi	r3,32752
 1002294:	019ff834 	movhi	r6,32736
 1002298:	28cb883a 	add	r5,r5,r3
 100229c:	31bfffc4 	addi	r6,r6,-1
 10022a0:	317ff62e 	bgeu	r6,r5,100227c <__alt_data_end+0xff80227c>
 10022a4:	01400434 	movhi	r5,16
 10022a8:	297fffc4 	addi	r5,r5,-1
 10022ac:	28800236 	bltu	r5,r2,10022b8 <__fpclassifyd+0x60>
 10022b0:	008000c4 	movi	r2,3
 10022b4:	f800283a 	ret
 10022b8:	10c00226 	beq	r2,r3,10022c4 <__fpclassifyd+0x6c>
 10022bc:	0005883a 	mov	r2,zero
 10022c0:	f800283a 	ret
 10022c4:	2005003a 	cmpeq	r2,r4,zero
 10022c8:	f800283a 	ret

010022cc <matherr>:
 10022cc:	0005883a 	mov	r2,zero
 10022d0:	f800283a 	ret

010022d4 <__addsf3>:
 10022d4:	defffc04 	addi	sp,sp,-16
 10022d8:	2004d7fa 	srli	r2,r4,31
 10022dc:	280ed5fa 	srli	r7,r5,23
 10022e0:	dc000015 	stw	r16,0(sp)
 10022e4:	01802034 	movhi	r6,128
 10022e8:	2020d5fa 	srli	r16,r4,23
 10022ec:	31bfffc4 	addi	r6,r6,-1
 10022f0:	2810d7fa 	srli	r8,r5,31
 10022f4:	3108703a 	and	r4,r6,r4
 10022f8:	dc800215 	stw	r18,8(sp)
 10022fc:	314c703a 	and	r6,r6,r5
 1002300:	84003fcc 	andi	r16,r16,255
 1002304:	200690fa 	slli	r3,r4,3
 1002308:	dfc00315 	stw	ra,12(sp)
 100230c:	39003fcc 	andi	r4,r7,255
 1002310:	dc400115 	stw	r17,4(sp)
 1002314:	14803fcc 	andi	r18,r2,255
 1002318:	300c90fa 	slli	r6,r6,3
 100231c:	810bc83a 	sub	r5,r16,r4
 1002320:	92004826 	beq	r18,r8,1002444 <__addsf3+0x170>
 1002324:	01406c0e 	bge	zero,r5,10024d8 <__addsf3+0x204>
 1002328:	20001e1e 	bne	r4,zero,10023a4 <__addsf3+0xd0>
 100232c:	3000611e 	bne	r6,zero,10024b4 <__addsf3+0x1e0>
 1002330:	188001cc 	andi	r2,r3,7
 1002334:	10000426 	beq	r2,zero,1002348 <__addsf3+0x74>
 1002338:	190003cc 	andi	r4,r3,15
 100233c:	00800104 	movi	r2,4
 1002340:	20800126 	beq	r4,r2,1002348 <__addsf3+0x74>
 1002344:	18c00104 	addi	r3,r3,4
 1002348:	1901002c 	andhi	r4,r3,1024
 100234c:	9005883a 	mov	r2,r18
 1002350:	20003426 	beq	r4,zero,1002424 <__addsf3+0x150>
 1002354:	81400044 	addi	r5,r16,1
 1002358:	01003fc4 	movi	r4,255
 100235c:	29006926 	beq	r5,r4,1002504 <__addsf3+0x230>
 1002360:	180691ba 	slli	r3,r3,6
 1002364:	1808d27a 	srli	r4,r3,9
 1002368:	29403fcc 	andi	r5,r5,255
 100236c:	280a95fa 	slli	r5,r5,23
 1002370:	10803fcc 	andi	r2,r2,255
 1002374:	00c02034 	movhi	r3,128
 1002378:	100497fa 	slli	r2,r2,31
 100237c:	18ffffc4 	addi	r3,r3,-1
 1002380:	20c6703a 	and	r3,r4,r3
 1002384:	1946b03a 	or	r3,r3,r5
 1002388:	1884b03a 	or	r2,r3,r2
 100238c:	dfc00317 	ldw	ra,12(sp)
 1002390:	dc800217 	ldw	r18,8(sp)
 1002394:	dc400117 	ldw	r17,4(sp)
 1002398:	dc000017 	ldw	r16,0(sp)
 100239c:	dec00404 	addi	sp,sp,16
 10023a0:	f800283a 	ret
 10023a4:	00803fc4 	movi	r2,255
 10023a8:	80bfe126 	beq	r16,r2,1002330 <__alt_data_end+0xff802330>
 10023ac:	31810034 	orhi	r6,r6,1024
 10023b0:	008006c4 	movi	r2,27
 10023b4:	11405b0e 	bge	r2,r5,1002524 <__addsf3+0x250>
 10023b8:	01400044 	movi	r5,1
 10023bc:	1947c83a 	sub	r3,r3,r5
 10023c0:	1881002c 	andhi	r2,r3,1024
 10023c4:	10001426 	beq	r2,zero,1002418 <__addsf3+0x144>
 10023c8:	04410034 	movhi	r17,1024
 10023cc:	8c7fffc4 	addi	r17,r17,-1
 10023d0:	1c62703a 	and	r17,r3,r17
 10023d4:	8809883a 	mov	r4,r17
 10023d8:	1004a740 	call	1004a74 <__clzsi2>
 10023dc:	10bffec4 	addi	r2,r2,-5
 10023e0:	88a2983a 	sll	r17,r17,r2
 10023e4:	14004a16 	blt	r2,r16,1002510 <__addsf3+0x23c>
 10023e8:	140bc83a 	sub	r5,r2,r16
 10023ec:	00c007c4 	movi	r3,31
 10023f0:	1947c83a 	sub	r3,r3,r5
 10023f4:	88c6983a 	sll	r3,r17,r3
 10023f8:	29400044 	addi	r5,r5,1
 10023fc:	8962d83a 	srl	r17,r17,r5
 1002400:	1806c03a 	cmpne	r3,r3,zero
 1002404:	0021883a 	mov	r16,zero
 1002408:	1c46b03a 	or	r3,r3,r17
 100240c:	003fc806 	br	1002330 <__alt_data_end+0xff802330>
 1002410:	1000e526 	beq	r2,zero,10027a8 <__addsf3+0x4d4>
 1002414:	1007883a 	mov	r3,r2
 1002418:	188001cc 	andi	r2,r3,7
 100241c:	103fc61e 	bne	r2,zero,1002338 <__alt_data_end+0xff802338>
 1002420:	9005883a 	mov	r2,r18
 1002424:	01003fc4 	movi	r4,255
 1002428:	1806d0fa 	srli	r3,r3,3
 100242c:	81001a26 	beq	r16,r4,1002498 <__addsf3+0x1c4>
 1002430:	01002034 	movhi	r4,128
 1002434:	213fffc4 	addi	r4,r4,-1
 1002438:	800b883a 	mov	r5,r16
 100243c:	1908703a 	and	r4,r3,r4
 1002440:	003fc906 	br	1002368 <__alt_data_end+0xff802368>
 1002444:	01403e0e 	bge	zero,r5,1002540 <__addsf3+0x26c>
 1002448:	20001e26 	beq	r4,zero,10024c4 <__addsf3+0x1f0>
 100244c:	01003fc4 	movi	r4,255
 1002450:	813fb726 	beq	r16,r4,1002330 <__alt_data_end+0xff802330>
 1002454:	31810034 	orhi	r6,r6,1024
 1002458:	010006c4 	movi	r4,27
 100245c:	2140570e 	bge	r4,r5,10025bc <__addsf3+0x2e8>
 1002460:	01400044 	movi	r5,1
 1002464:	1947883a 	add	r3,r3,r5
 1002468:	1901002c 	andhi	r4,r3,1024
 100246c:	203fea26 	beq	r4,zero,1002418 <__alt_data_end+0xff802418>
 1002470:	84000044 	addi	r16,r16,1
 1002474:	01003fc4 	movi	r4,255
 1002478:	81007526 	beq	r16,r4,1002650 <__addsf3+0x37c>
 100247c:	00bf0034 	movhi	r2,64512
 1002480:	10bfffc4 	addi	r2,r2,-1
 1002484:	1900004c 	andi	r4,r3,1
 1002488:	1886703a 	and	r3,r3,r2
 100248c:	1806d07a 	srli	r3,r3,1
 1002490:	1906b03a 	or	r3,r3,r4
 1002494:	003fa606 	br	1002330 <__alt_data_end+0xff802330>
 1002498:	18001a26 	beq	r3,zero,1002504 <__addsf3+0x230>
 100249c:	19001034 	orhi	r4,r3,64
 10024a0:	00c02034 	movhi	r3,128
 10024a4:	18ffffc4 	addi	r3,r3,-1
 10024a8:	017fffc4 	movi	r5,-1
 10024ac:	20c8703a 	and	r4,r4,r3
 10024b0:	003fad06 	br	1002368 <__alt_data_end+0xff802368>
 10024b4:	297fffc4 	addi	r5,r5,-1
 10024b8:	28002c1e 	bne	r5,zero,100256c <__addsf3+0x298>
 10024bc:	1987c83a 	sub	r3,r3,r6
 10024c0:	003fbf06 	br	10023c0 <__alt_data_end+0xff8023c0>
 10024c4:	303f9a26 	beq	r6,zero,1002330 <__alt_data_end+0xff802330>
 10024c8:	297fffc4 	addi	r5,r5,-1
 10024cc:	28004b1e 	bne	r5,zero,10025fc <__addsf3+0x328>
 10024d0:	1987883a 	add	r3,r3,r6
 10024d4:	003fe406 	br	1002468 <__alt_data_end+0xff802468>
 10024d8:	2800271e 	bne	r5,zero,1002578 <__addsf3+0x2a4>
 10024dc:	80800044 	addi	r2,r16,1
 10024e0:	10803fcc 	andi	r2,r2,255
 10024e4:	01000044 	movi	r4,1
 10024e8:	2080520e 	bge	r4,r2,1002634 <__addsf3+0x360>
 10024ec:	19a3c83a 	sub	r17,r3,r6
 10024f0:	8881002c 	andhi	r2,r17,1024
 10024f4:	10002c26 	beq	r2,zero,10025a8 <__addsf3+0x2d4>
 10024f8:	30e3c83a 	sub	r17,r6,r3
 10024fc:	4025883a 	mov	r18,r8
 1002500:	003fb406 	br	10023d4 <__alt_data_end+0xff8023d4>
 1002504:	017fffc4 	movi	r5,-1
 1002508:	0009883a 	mov	r4,zero
 100250c:	003f9606 	br	1002368 <__alt_data_end+0xff802368>
 1002510:	00ff0034 	movhi	r3,64512
 1002514:	18ffffc4 	addi	r3,r3,-1
 1002518:	80a1c83a 	sub	r16,r16,r2
 100251c:	88c6703a 	and	r3,r17,r3
 1002520:	003f8306 	br	1002330 <__alt_data_end+0xff802330>
 1002524:	00800804 	movi	r2,32
 1002528:	1145c83a 	sub	r2,r2,r5
 100252c:	3084983a 	sll	r2,r6,r2
 1002530:	314cd83a 	srl	r6,r6,r5
 1002534:	100ac03a 	cmpne	r5,r2,zero
 1002538:	298ab03a 	or	r5,r5,r6
 100253c:	003f9f06 	br	10023bc <__alt_data_end+0xff8023bc>
 1002540:	2800451e 	bne	r5,zero,1002658 <__addsf3+0x384>
 1002544:	81000044 	addi	r4,r16,1
 1002548:	21c03fcc 	andi	r7,r4,255
 100254c:	01400044 	movi	r5,1
 1002550:	29c02d0e 	bge	r5,r7,1002608 <__addsf3+0x334>
 1002554:	01403fc4 	movi	r5,255
 1002558:	21403c26 	beq	r4,r5,100264c <__addsf3+0x378>
 100255c:	30c7883a 	add	r3,r6,r3
 1002560:	1806d07a 	srli	r3,r3,1
 1002564:	2021883a 	mov	r16,r4
 1002568:	003f7106 	br	1002330 <__alt_data_end+0xff802330>
 100256c:	00803fc4 	movi	r2,255
 1002570:	80bf8f1e 	bne	r16,r2,10023b0 <__alt_data_end+0xff8023b0>
 1002574:	003f6e06 	br	1002330 <__alt_data_end+0xff802330>
 1002578:	80001726 	beq	r16,zero,10025d8 <__addsf3+0x304>
 100257c:	00803fc4 	movi	r2,255
 1002580:	20801a26 	beq	r4,r2,10025ec <__addsf3+0x318>
 1002584:	014bc83a 	sub	r5,zero,r5
 1002588:	18c10034 	orhi	r3,r3,1024
 100258c:	008006c4 	movi	r2,27
 1002590:	1140430e 	bge	r2,r5,10026a0 <__addsf3+0x3cc>
 1002594:	00c00044 	movi	r3,1
 1002598:	30c7c83a 	sub	r3,r6,r3
 100259c:	2021883a 	mov	r16,r4
 10025a0:	4025883a 	mov	r18,r8
 10025a4:	003f8606 	br	10023c0 <__alt_data_end+0xff8023c0>
 10025a8:	883f8a1e 	bne	r17,zero,10023d4 <__alt_data_end+0xff8023d4>
 10025ac:	0007883a 	mov	r3,zero
 10025b0:	0005883a 	mov	r2,zero
 10025b4:	0021883a 	mov	r16,zero
 10025b8:	003f9a06 	br	1002424 <__alt_data_end+0xff802424>
 10025bc:	01000804 	movi	r4,32
 10025c0:	2149c83a 	sub	r4,r4,r5
 10025c4:	3108983a 	sll	r4,r6,r4
 10025c8:	314cd83a 	srl	r6,r6,r5
 10025cc:	200ac03a 	cmpne	r5,r4,zero
 10025d0:	298ab03a 	or	r5,r5,r6
 10025d4:	003fa306 	br	1002464 <__alt_data_end+0xff802464>
 10025d8:	18000426 	beq	r3,zero,10025ec <__addsf3+0x318>
 10025dc:	014a303a 	nor	r5,zero,r5
 10025e0:	283fed26 	beq	r5,zero,1002598 <__alt_data_end+0xff802598>
 10025e4:	00803fc4 	movi	r2,255
 10025e8:	20bfe81e 	bne	r4,r2,100258c <__alt_data_end+0xff80258c>
 10025ec:	3007883a 	mov	r3,r6
 10025f0:	2021883a 	mov	r16,r4
 10025f4:	4025883a 	mov	r18,r8
 10025f8:	003f4d06 	br	1002330 <__alt_data_end+0xff802330>
 10025fc:	01003fc4 	movi	r4,255
 1002600:	813f951e 	bne	r16,r4,1002458 <__alt_data_end+0xff802458>
 1002604:	003f4a06 	br	1002330 <__alt_data_end+0xff802330>
 1002608:	8000471e 	bne	r16,zero,1002728 <__addsf3+0x454>
 100260c:	18006126 	beq	r3,zero,1002794 <__addsf3+0x4c0>
 1002610:	303f4726 	beq	r6,zero,1002330 <__alt_data_end+0xff802330>
 1002614:	1987883a 	add	r3,r3,r6
 1002618:	1881002c 	andhi	r2,r3,1024
 100261c:	103f7e26 	beq	r2,zero,1002418 <__alt_data_end+0xff802418>
 1002620:	00bf0034 	movhi	r2,64512
 1002624:	10bfffc4 	addi	r2,r2,-1
 1002628:	2821883a 	mov	r16,r5
 100262c:	1886703a 	and	r3,r3,r2
 1002630:	003f3f06 	br	1002330 <__alt_data_end+0xff802330>
 1002634:	8000141e 	bne	r16,zero,1002688 <__addsf3+0x3b4>
 1002638:	1800311e 	bne	r3,zero,1002700 <__addsf3+0x42c>
 100263c:	30004626 	beq	r6,zero,1002758 <__addsf3+0x484>
 1002640:	3007883a 	mov	r3,r6
 1002644:	4025883a 	mov	r18,r8
 1002648:	003f3906 	br	1002330 <__alt_data_end+0xff802330>
 100264c:	2021883a 	mov	r16,r4
 1002650:	0007883a 	mov	r3,zero
 1002654:	003f7306 	br	1002424 <__alt_data_end+0xff802424>
 1002658:	8000181e 	bne	r16,zero,10026bc <__addsf3+0x3e8>
 100265c:	18002f26 	beq	r3,zero,100271c <__addsf3+0x448>
 1002660:	014a303a 	nor	r5,zero,r5
 1002664:	28000526 	beq	r5,zero,100267c <__addsf3+0x3a8>
 1002668:	01c03fc4 	movi	r7,255
 100266c:	21c02b26 	beq	r4,r7,100271c <__addsf3+0x448>
 1002670:	01c006c4 	movi	r7,27
 1002674:	3940400e 	bge	r7,r5,1002778 <__addsf3+0x4a4>
 1002678:	00c00044 	movi	r3,1
 100267c:	1987883a 	add	r3,r3,r6
 1002680:	2021883a 	mov	r16,r4
 1002684:	003f7806 	br	1002468 <__alt_data_end+0xff802468>
 1002688:	1800111e 	bne	r3,zero,10026d0 <__addsf3+0x3fc>
 100268c:	30003526 	beq	r6,zero,1002764 <__addsf3+0x490>
 1002690:	3007883a 	mov	r3,r6
 1002694:	4025883a 	mov	r18,r8
 1002698:	04003fc4 	movi	r16,255
 100269c:	003f2406 	br	1002330 <__alt_data_end+0xff802330>
 10026a0:	00800804 	movi	r2,32
 10026a4:	1145c83a 	sub	r2,r2,r5
 10026a8:	1884983a 	sll	r2,r3,r2
 10026ac:	194ad83a 	srl	r5,r3,r5
 10026b0:	1006c03a 	cmpne	r3,r2,zero
 10026b4:	1946b03a 	or	r3,r3,r5
 10026b8:	003fb706 	br	1002598 <__alt_data_end+0xff802598>
 10026bc:	01c03fc4 	movi	r7,255
 10026c0:	21c01626 	beq	r4,r7,100271c <__addsf3+0x448>
 10026c4:	014bc83a 	sub	r5,zero,r5
 10026c8:	18c10034 	orhi	r3,r3,1024
 10026cc:	003fe806 	br	1002670 <__alt_data_end+0xff802670>
 10026d0:	30001f26 	beq	r6,zero,1002750 <__addsf3+0x47c>
 10026d4:	1806d0fa 	srli	r3,r3,3
 10026d8:	1880102c 	andhi	r2,r3,64
 10026dc:	10000526 	beq	r2,zero,10026f4 <__addsf3+0x420>
 10026e0:	300cd0fa 	srli	r6,r6,3
 10026e4:	3080102c 	andhi	r2,r6,64
 10026e8:	1000021e 	bne	r2,zero,10026f4 <__addsf3+0x420>
 10026ec:	3007883a 	mov	r3,r6
 10026f0:	4025883a 	mov	r18,r8
 10026f4:	180690fa 	slli	r3,r3,3
 10026f8:	04003fc4 	movi	r16,255
 10026fc:	003f0c06 	br	1002330 <__alt_data_end+0xff802330>
 1002700:	303f0b26 	beq	r6,zero,1002330 <__alt_data_end+0xff802330>
 1002704:	1985c83a 	sub	r2,r3,r6
 1002708:	1101002c 	andhi	r4,r2,1024
 100270c:	203f4026 	beq	r4,zero,1002410 <__alt_data_end+0xff802410>
 1002710:	30c7c83a 	sub	r3,r6,r3
 1002714:	4025883a 	mov	r18,r8
 1002718:	003f0506 	br	1002330 <__alt_data_end+0xff802330>
 100271c:	3007883a 	mov	r3,r6
 1002720:	2021883a 	mov	r16,r4
 1002724:	003f0206 	br	1002330 <__alt_data_end+0xff802330>
 1002728:	18001c26 	beq	r3,zero,100279c <__addsf3+0x4c8>
 100272c:	30000826 	beq	r6,zero,1002750 <__addsf3+0x47c>
 1002730:	1806d0fa 	srli	r3,r3,3
 1002734:	1880102c 	andhi	r2,r3,64
 1002738:	103fee26 	beq	r2,zero,10026f4 <__alt_data_end+0xff8026f4>
 100273c:	300cd0fa 	srli	r6,r6,3
 1002740:	3080102c 	andhi	r2,r6,64
 1002744:	103feb1e 	bne	r2,zero,10026f4 <__alt_data_end+0xff8026f4>
 1002748:	3007883a 	mov	r3,r6
 100274c:	003fe906 	br	10026f4 <__alt_data_end+0xff8026f4>
 1002750:	04003fc4 	movi	r16,255
 1002754:	003ef606 	br	1002330 <__alt_data_end+0xff802330>
 1002758:	8007883a 	mov	r3,r16
 100275c:	0005883a 	mov	r2,zero
 1002760:	003f3006 	br	1002424 <__alt_data_end+0xff802424>
 1002764:	00c10034 	movhi	r3,1024
 1002768:	0005883a 	mov	r2,zero
 100276c:	18fffe04 	addi	r3,r3,-8
 1002770:	04003fc4 	movi	r16,255
 1002774:	003f2b06 	br	1002424 <__alt_data_end+0xff802424>
 1002778:	01c00804 	movi	r7,32
 100277c:	394fc83a 	sub	r7,r7,r5
 1002780:	19ce983a 	sll	r7,r3,r7
 1002784:	194ad83a 	srl	r5,r3,r5
 1002788:	3806c03a 	cmpne	r3,r7,zero
 100278c:	1946b03a 	or	r3,r3,r5
 1002790:	003fba06 	br	100267c <__alt_data_end+0xff80267c>
 1002794:	3007883a 	mov	r3,r6
 1002798:	003ee506 	br	1002330 <__alt_data_end+0xff802330>
 100279c:	3007883a 	mov	r3,r6
 10027a0:	04003fc4 	movi	r16,255
 10027a4:	003ee206 	br	1002330 <__alt_data_end+0xff802330>
 10027a8:	0007883a 	mov	r3,zero
 10027ac:	0005883a 	mov	r2,zero
 10027b0:	003f1c06 	br	1002424 <__alt_data_end+0xff802424>

010027b4 <__divsf3>:
 10027b4:	defff504 	addi	sp,sp,-44
 10027b8:	dd000515 	stw	r20,20(sp)
 10027bc:	2028d5fa 	srli	r20,r4,23
 10027c0:	dd400615 	stw	r21,24(sp)
 10027c4:	202ad7fa 	srli	r21,r4,31
 10027c8:	00c02034 	movhi	r3,128
 10027cc:	dcc00415 	stw	r19,16(sp)
 10027d0:	dc800315 	stw	r18,12(sp)
 10027d4:	18ffffc4 	addi	r3,r3,-1
 10027d8:	dfc00a15 	stw	ra,40(sp)
 10027dc:	df000915 	stw	fp,36(sp)
 10027e0:	ddc00815 	stw	r23,32(sp)
 10027e4:	dd800715 	stw	r22,28(sp)
 10027e8:	dc400215 	stw	r17,8(sp)
 10027ec:	dc000115 	stw	r16,4(sp)
 10027f0:	a5003fcc 	andi	r20,r20,255
 10027f4:	1924703a 	and	r18,r3,r4
 10027f8:	acc03fcc 	andi	r19,r21,255
 10027fc:	a0004d26 	beq	r20,zero,1002934 <__divsf3+0x180>
 1002800:	00803fc4 	movi	r2,255
 1002804:	a0802e26 	beq	r20,r2,10028c0 <__divsf3+0x10c>
 1002808:	91002034 	orhi	r4,r18,128
 100280c:	202490fa 	slli	r18,r4,3
 1002810:	a53fe044 	addi	r20,r20,-127
 1002814:	0021883a 	mov	r16,zero
 1002818:	002f883a 	mov	r23,zero
 100281c:	2804d5fa 	srli	r2,r5,23
 1002820:	282cd7fa 	srli	r22,r5,31
 1002824:	00c02034 	movhi	r3,128
 1002828:	18ffffc4 	addi	r3,r3,-1
 100282c:	10803fcc 	andi	r2,r2,255
 1002830:	1962703a 	and	r17,r3,r5
 1002834:	b7003fcc 	andi	fp,r22,255
 1002838:	10004526 	beq	r2,zero,1002950 <__divsf3+0x19c>
 100283c:	00c03fc4 	movi	r3,255
 1002840:	10c04026 	beq	r2,r3,1002944 <__divsf3+0x190>
 1002844:	88c02034 	orhi	r3,r17,128
 1002848:	182290fa 	slli	r17,r3,3
 100284c:	10bfe044 	addi	r2,r2,-127
 1002850:	0009883a 	mov	r4,zero
 1002854:	2420b03a 	or	r16,r4,r16
 1002858:	802090ba 	slli	r16,r16,2
 100285c:	01c04034 	movhi	r7,256
 1002860:	39ca2004 	addi	r7,r7,10368
 1002864:	81e1883a 	add	r16,r16,r7
 1002868:	80c00017 	ldw	r3,0(r16)
 100286c:	ad8af03a 	xor	r5,r21,r22
 1002870:	280d883a 	mov	r6,r5
 1002874:	a085c83a 	sub	r2,r20,r2
 1002878:	29403fcc 	andi	r5,r5,255
 100287c:	1800683a 	jmp	r3
 1002880:	01002a8c 	andi	r4,zero,170
 1002884:	01002a34 	movhi	r4,168
 1002888:	01002a58 	cmpnei	r4,zero,169
 100288c:	01002a20 	cmpeqi	r4,zero,168
 1002890:	01002a58 	cmpnei	r4,zero,169
 1002894:	010028d0 	cmplti	r4,zero,163
 1002898:	01002a58 	cmpnei	r4,zero,169
 100289c:	01002a20 	cmpeqi	r4,zero,168
 10028a0:	01002a34 	movhi	r4,168
 10028a4:	01002a34 	movhi	r4,168
 10028a8:	010028d0 	cmplti	r4,zero,163
 10028ac:	01002a20 	cmpeqi	r4,zero,168
 10028b0:	01002b24 	muli	r4,zero,172
 10028b4:	01002b24 	muli	r4,zero,172
 10028b8:	01002b24 	muli	r4,zero,172
 10028bc:	01002a64 	muli	r4,zero,169
 10028c0:	9000531e 	bne	r18,zero,1002a10 <__divsf3+0x25c>
 10028c4:	04000204 	movi	r16,8
 10028c8:	05c00084 	movi	r23,2
 10028cc:	003fd306 	br	100281c <__alt_data_end+0xff80281c>
 10028d0:	00c02034 	movhi	r3,128
 10028d4:	000d883a 	mov	r6,zero
 10028d8:	18ffffc4 	addi	r3,r3,-1
 10028dc:	013fffc4 	movi	r4,-1
 10028e0:	21003fcc 	andi	r4,r4,255
 10028e4:	200895fa 	slli	r4,r4,23
 10028e8:	30803fcc 	andi	r2,r6,255
 10028ec:	01802034 	movhi	r6,128
 10028f0:	31bfffc4 	addi	r6,r6,-1
 10028f4:	100497fa 	slli	r2,r2,31
 10028f8:	1986703a 	and	r3,r3,r6
 10028fc:	1906b03a 	or	r3,r3,r4
 1002900:	1884b03a 	or	r2,r3,r2
 1002904:	dfc00a17 	ldw	ra,40(sp)
 1002908:	df000917 	ldw	fp,36(sp)
 100290c:	ddc00817 	ldw	r23,32(sp)
 1002910:	dd800717 	ldw	r22,28(sp)
 1002914:	dd400617 	ldw	r21,24(sp)
 1002918:	dd000517 	ldw	r20,20(sp)
 100291c:	dcc00417 	ldw	r19,16(sp)
 1002920:	dc800317 	ldw	r18,12(sp)
 1002924:	dc400217 	ldw	r17,8(sp)
 1002928:	dc000117 	ldw	r16,4(sp)
 100292c:	dec00b04 	addi	sp,sp,44
 1002930:	f800283a 	ret
 1002934:	90002b1e 	bne	r18,zero,10029e4 <__divsf3+0x230>
 1002938:	04000104 	movi	r16,4
 100293c:	05c00044 	movi	r23,1
 1002940:	003fb606 	br	100281c <__alt_data_end+0xff80281c>
 1002944:	8800251e 	bne	r17,zero,10029dc <__divsf3+0x228>
 1002948:	01000084 	movi	r4,2
 100294c:	00000206 	br	1002958 <__divsf3+0x1a4>
 1002950:	88001a1e 	bne	r17,zero,10029bc <__divsf3+0x208>
 1002954:	01000044 	movi	r4,1
 1002958:	2420b03a 	or	r16,r4,r16
 100295c:	802090ba 	slli	r16,r16,2
 1002960:	00c04034 	movhi	r3,256
 1002964:	18ca5f04 	addi	r3,r3,10620
 1002968:	80e1883a 	add	r16,r16,r3
 100296c:	80c00017 	ldw	r3,0(r16)
 1002970:	ad8af03a 	xor	r5,r21,r22
 1002974:	a085c83a 	sub	r2,r20,r2
 1002978:	1800683a 	jmp	r3
 100297c:	01002a34 	movhi	r4,168
 1002980:	01002a34 	movhi	r4,168
 1002984:	01002b84 	movi	r4,174
 1002988:	01002a1c 	xori	r4,zero,168
 100298c:	01002b84 	movi	r4,174
 1002990:	010028d0 	cmplti	r4,zero,163
 1002994:	01002b84 	movi	r4,174
 1002998:	01002a1c 	xori	r4,zero,168
 100299c:	01002a34 	movhi	r4,168
 10029a0:	01002a34 	movhi	r4,168
 10029a4:	010028d0 	cmplti	r4,zero,163
 10029a8:	01002a1c 	xori	r4,zero,168
 10029ac:	01002b24 	muli	r4,zero,172
 10029b0:	01002b24 	muli	r4,zero,172
 10029b4:	01002b24 	muli	r4,zero,172
 10029b8:	01002b50 	cmplti	r4,zero,173
 10029bc:	8809883a 	mov	r4,r17
 10029c0:	1004a740 	call	1004a74 <__clzsi2>
 10029c4:	10fffec4 	addi	r3,r2,-5
 10029c8:	88e2983a 	sll	r17,r17,r3
 10029cc:	00ffe284 	movi	r3,-118
 10029d0:	1885c83a 	sub	r2,r3,r2
 10029d4:	0009883a 	mov	r4,zero
 10029d8:	003f9e06 	br	1002854 <__alt_data_end+0xff802854>
 10029dc:	010000c4 	movi	r4,3
 10029e0:	003f9c06 	br	1002854 <__alt_data_end+0xff802854>
 10029e4:	9009883a 	mov	r4,r18
 10029e8:	d9400015 	stw	r5,0(sp)
 10029ec:	1004a740 	call	1004a74 <__clzsi2>
 10029f0:	10fffec4 	addi	r3,r2,-5
 10029f4:	053fe284 	movi	r20,-118
 10029f8:	90e4983a 	sll	r18,r18,r3
 10029fc:	a0a9c83a 	sub	r20,r20,r2
 1002a00:	0021883a 	mov	r16,zero
 1002a04:	002f883a 	mov	r23,zero
 1002a08:	d9400017 	ldw	r5,0(sp)
 1002a0c:	003f8306 	br	100281c <__alt_data_end+0xff80281c>
 1002a10:	04000304 	movi	r16,12
 1002a14:	05c000c4 	movi	r23,3
 1002a18:	003f8006 	br	100281c <__alt_data_end+0xff80281c>
 1002a1c:	0023883a 	mov	r17,zero
 1002a20:	e027883a 	mov	r19,fp
 1002a24:	202f883a 	mov	r23,r4
 1002a28:	00c00084 	movi	r3,2
 1002a2c:	980b883a 	mov	r5,r19
 1002a30:	b8c0501e 	bne	r23,r3,1002b74 <__divsf3+0x3c0>
 1002a34:	2980004c 	andi	r6,r5,1
 1002a38:	013fffc4 	movi	r4,-1
 1002a3c:	0007883a 	mov	r3,zero
 1002a40:	003fa706 	br	10028e0 <__alt_data_end+0xff8028e0>
 1002a44:	013fe084 	movi	r4,-126
 1002a48:	2089c83a 	sub	r4,r4,r2
 1002a4c:	00c006c4 	movi	r3,27
 1002a50:	1900500e 	bge	r3,r4,1002b94 <__divsf3+0x3e0>
 1002a54:	9980004c 	andi	r6,r19,1
 1002a58:	0009883a 	mov	r4,zero
 1002a5c:	0007883a 	mov	r3,zero
 1002a60:	003f9f06 	br	10028e0 <__alt_data_end+0xff8028e0>
 1002a64:	9080102c 	andhi	r2,r18,64
 1002a68:	10000226 	beq	r2,zero,1002a74 <__divsf3+0x2c0>
 1002a6c:	8880102c 	andhi	r2,r17,64
 1002a70:	10003a26 	beq	r2,zero,1002b5c <__divsf3+0x3a8>
 1002a74:	00802034 	movhi	r2,128
 1002a78:	90c01034 	orhi	r3,r18,64
 1002a7c:	10bfffc4 	addi	r2,r2,-1
 1002a80:	a80d883a 	mov	r6,r21
 1002a84:	1886703a 	and	r3,r3,r2
 1002a88:	003f9406 	br	10028dc <__alt_data_end+0xff8028dc>
 1002a8c:	9006917a 	slli	r3,r18,5
 1002a90:	8822917a 	slli	r17,r17,5
 1002a94:	1c402936 	bltu	r3,r17,1002b3c <__divsf3+0x388>
 1002a98:	1c47c83a 	sub	r3,r3,r17
 1002a9c:	2827883a 	mov	r19,r5
 1002aa0:	01800684 	movi	r6,26
 1002aa4:	01000044 	movi	r4,1
 1002aa8:	180f883a 	mov	r7,r3
 1002aac:	2109883a 	add	r4,r4,r4
 1002ab0:	18c7883a 	add	r3,r3,r3
 1002ab4:	38000116 	blt	r7,zero,1002abc <__divsf3+0x308>
 1002ab8:	1c400236 	bltu	r3,r17,1002ac4 <__divsf3+0x310>
 1002abc:	1c47c83a 	sub	r3,r3,r17
 1002ac0:	21000054 	ori	r4,r4,1
 1002ac4:	31bfffc4 	addi	r6,r6,-1
 1002ac8:	303ff71e 	bne	r6,zero,1002aa8 <__alt_data_end+0xff802aa8>
 1002acc:	1806c03a 	cmpne	r3,r3,zero
 1002ad0:	1922b03a 	or	r17,r3,r4
 1002ad4:	11001fc4 	addi	r4,r2,127
 1002ad8:	013fda0e 	bge	zero,r4,1002a44 <__alt_data_end+0xff802a44>
 1002adc:	88c001cc 	andi	r3,r17,7
 1002ae0:	18000426 	beq	r3,zero,1002af4 <__divsf3+0x340>
 1002ae4:	894003cc 	andi	r5,r17,15
 1002ae8:	00c00104 	movi	r3,4
 1002aec:	28c00126 	beq	r5,r3,1002af4 <__divsf3+0x340>
 1002af0:	88e3883a 	add	r17,r17,r3
 1002af4:	88c2002c 	andhi	r3,r17,2048
 1002af8:	18000426 	beq	r3,zero,1002b0c <__divsf3+0x358>
 1002afc:	11002004 	addi	r4,r2,128
 1002b00:	00be0034 	movhi	r2,63488
 1002b04:	10bfffc4 	addi	r2,r2,-1
 1002b08:	88a2703a 	and	r17,r17,r2
 1002b0c:	00803f84 	movi	r2,254
 1002b10:	1100060e 	bge	r2,r4,1002b2c <__divsf3+0x378>
 1002b14:	9980004c 	andi	r6,r19,1
 1002b18:	013fffc4 	movi	r4,-1
 1002b1c:	0007883a 	mov	r3,zero
 1002b20:	003f6f06 	br	10028e0 <__alt_data_end+0xff8028e0>
 1002b24:	9023883a 	mov	r17,r18
 1002b28:	003fbf06 	br	1002a28 <__alt_data_end+0xff802a28>
 1002b2c:	880691ba 	slli	r3,r17,6
 1002b30:	9980004c 	andi	r6,r19,1
 1002b34:	1806d27a 	srli	r3,r3,9
 1002b38:	003f6906 	br	10028e0 <__alt_data_end+0xff8028e0>
 1002b3c:	10bfffc4 	addi	r2,r2,-1
 1002b40:	2827883a 	mov	r19,r5
 1002b44:	018006c4 	movi	r6,27
 1002b48:	0009883a 	mov	r4,zero
 1002b4c:	003fd606 	br	1002aa8 <__alt_data_end+0xff802aa8>
 1002b50:	9080102c 	andhi	r2,r18,64
 1002b54:	0023883a 	mov	r17,zero
 1002b58:	103fc626 	beq	r2,zero,1002a74 <__alt_data_end+0xff802a74>
 1002b5c:	00802034 	movhi	r2,128
 1002b60:	88c01034 	orhi	r3,r17,64
 1002b64:	10bfffc4 	addi	r2,r2,-1
 1002b68:	b00d883a 	mov	r6,r22
 1002b6c:	1886703a 	and	r3,r3,r2
 1002b70:	003f5a06 	br	10028dc <__alt_data_end+0xff8028dc>
 1002b74:	00c000c4 	movi	r3,3
 1002b78:	b8c01c26 	beq	r23,r3,1002bec <__divsf3+0x438>
 1002b7c:	00c00044 	movi	r3,1
 1002b80:	b8ffd41e 	bne	r23,r3,1002ad4 <__alt_data_end+0xff802ad4>
 1002b84:	2980004c 	andi	r6,r5,1
 1002b88:	0009883a 	mov	r4,zero
 1002b8c:	0007883a 	mov	r3,zero
 1002b90:	003f5306 	br	10028e0 <__alt_data_end+0xff8028e0>
 1002b94:	10802784 	addi	r2,r2,158
 1002b98:	8884983a 	sll	r2,r17,r2
 1002b9c:	8908d83a 	srl	r4,r17,r4
 1002ba0:	1022c03a 	cmpne	r17,r2,zero
 1002ba4:	8908b03a 	or	r4,r17,r4
 1002ba8:	208001cc 	andi	r2,r4,7
 1002bac:	10000426 	beq	r2,zero,1002bc0 <__divsf3+0x40c>
 1002bb0:	20c003cc 	andi	r3,r4,15
 1002bb4:	00800104 	movi	r2,4
 1002bb8:	18800126 	beq	r3,r2,1002bc0 <__divsf3+0x40c>
 1002bbc:	2089883a 	add	r4,r4,r2
 1002bc0:	2081002c 	andhi	r2,r4,1024
 1002bc4:	10000426 	beq	r2,zero,1002bd8 <__divsf3+0x424>
 1002bc8:	9980004c 	andi	r6,r19,1
 1002bcc:	01000044 	movi	r4,1
 1002bd0:	0007883a 	mov	r3,zero
 1002bd4:	003f4206 	br	10028e0 <__alt_data_end+0xff8028e0>
 1002bd8:	200691ba 	slli	r3,r4,6
 1002bdc:	9980004c 	andi	r6,r19,1
 1002be0:	0009883a 	mov	r4,zero
 1002be4:	1806d27a 	srli	r3,r3,9
 1002be8:	003f3d06 	br	10028e0 <__alt_data_end+0xff8028e0>
 1002bec:	00802034 	movhi	r2,128
 1002bf0:	88c01034 	orhi	r3,r17,64
 1002bf4:	10bfffc4 	addi	r2,r2,-1
 1002bf8:	9980004c 	andi	r6,r19,1
 1002bfc:	1886703a 	and	r3,r3,r2
 1002c00:	003f3606 	br	10028dc <__alt_data_end+0xff8028dc>

01002c04 <__mulsf3>:
 1002c04:	defff504 	addi	sp,sp,-44
 1002c08:	dc400215 	stw	r17,8(sp)
 1002c0c:	2022d5fa 	srli	r17,r4,23
 1002c10:	dd400615 	stw	r21,24(sp)
 1002c14:	202ad7fa 	srli	r21,r4,31
 1002c18:	dc000115 	stw	r16,4(sp)
 1002c1c:	04002034 	movhi	r16,128
 1002c20:	df000915 	stw	fp,36(sp)
 1002c24:	dd000515 	stw	r20,20(sp)
 1002c28:	843fffc4 	addi	r16,r16,-1
 1002c2c:	dfc00a15 	stw	ra,40(sp)
 1002c30:	ddc00815 	stw	r23,32(sp)
 1002c34:	dd800715 	stw	r22,28(sp)
 1002c38:	dcc00415 	stw	r19,16(sp)
 1002c3c:	dc800315 	stw	r18,12(sp)
 1002c40:	8c403fcc 	andi	r17,r17,255
 1002c44:	8120703a 	and	r16,r16,r4
 1002c48:	a829883a 	mov	r20,r21
 1002c4c:	af003fcc 	andi	fp,r21,255
 1002c50:	88005026 	beq	r17,zero,1002d94 <__mulsf3+0x190>
 1002c54:	00803fc4 	movi	r2,255
 1002c58:	88802f26 	beq	r17,r2,1002d18 <__mulsf3+0x114>
 1002c5c:	84002034 	orhi	r16,r16,128
 1002c60:	802090fa 	slli	r16,r16,3
 1002c64:	8c7fe044 	addi	r17,r17,-127
 1002c68:	0025883a 	mov	r18,zero
 1002c6c:	002f883a 	mov	r23,zero
 1002c70:	2804d5fa 	srli	r2,r5,23
 1002c74:	282cd7fa 	srli	r22,r5,31
 1002c78:	01002034 	movhi	r4,128
 1002c7c:	213fffc4 	addi	r4,r4,-1
 1002c80:	10803fcc 	andi	r2,r2,255
 1002c84:	2166703a 	and	r19,r4,r5
 1002c88:	b1803fcc 	andi	r6,r22,255
 1002c8c:	10004926 	beq	r2,zero,1002db4 <__mulsf3+0x1b0>
 1002c90:	00c03fc4 	movi	r3,255
 1002c94:	10c04326 	beq	r2,r3,1002da4 <__mulsf3+0x1a0>
 1002c98:	99402034 	orhi	r5,r19,128
 1002c9c:	282690fa 	slli	r19,r5,3
 1002ca0:	10bfe044 	addi	r2,r2,-127
 1002ca4:	000b883a 	mov	r5,zero
 1002ca8:	8885883a 	add	r2,r17,r2
 1002cac:	2c86b03a 	or	r3,r5,r18
 1002cb0:	010003c4 	movi	r4,15
 1002cb4:	adaaf03a 	xor	r21,r21,r22
 1002cb8:	12000044 	addi	r8,r2,1
 1002cbc:	20c06536 	bltu	r4,r3,1002e54 <__mulsf3+0x250>
 1002cc0:	180690ba 	slli	r3,r3,2
 1002cc4:	01004034 	movhi	r4,256
 1002cc8:	210b3604 	addi	r4,r4,11480
 1002ccc:	1907883a 	add	r3,r3,r4
 1002cd0:	18c00017 	ldw	r3,0(r3)
 1002cd4:	1800683a 	jmp	r3
 1002cd8:	01002e54 	movui	r4,185
 1002cdc:	01002f20 	cmpeqi	r4,zero,188
 1002ce0:	01002f20 	cmpeqi	r4,zero,188
 1002ce4:	01002f30 	cmpltui	r4,zero,188
 1002ce8:	01002d28 	cmpgeui	r4,zero,180
 1002cec:	01002d28 	cmpgeui	r4,zero,180
 1002cf0:	01002e40 	call	1002e4 <__alt_mem_onchip_memory2_0+0x1002e4>
 1002cf4:	01002f30 	cmpltui	r4,zero,188
 1002cf8:	01002d28 	cmpgeui	r4,zero,180
 1002cfc:	01002e40 	call	1002e4 <__alt_mem_onchip_memory2_0+0x1002e4>
 1002d00:	01002d28 	cmpgeui	r4,zero,180
 1002d04:	01002f30 	cmpltui	r4,zero,188
 1002d08:	01002d2c 	andhi	r4,zero,180
 1002d0c:	01002d2c 	andhi	r4,zero,180
 1002d10:	01002d2c 	andhi	r4,zero,180
 1002d14:	01002f40 	call	1002f4 <__alt_mem_onchip_memory2_0+0x1002f4>
 1002d18:	8000311e 	bne	r16,zero,1002de0 <__mulsf3+0x1dc>
 1002d1c:	04800204 	movi	r18,8
 1002d20:	05c00084 	movi	r23,2
 1002d24:	003fd206 	br	1002c70 <__alt_data_end+0xff802c70>
 1002d28:	a839883a 	mov	fp,r21
 1002d2c:	00800084 	movi	r2,2
 1002d30:	b880231e 	bne	r23,r2,1002dc0 <__mulsf3+0x1bc>
 1002d34:	e500004c 	andi	r20,fp,1
 1002d38:	00ffffc4 	movi	r3,-1
 1002d3c:	0009883a 	mov	r4,zero
 1002d40:	18c03fcc 	andi	r3,r3,255
 1002d44:	180695fa 	slli	r3,r3,23
 1002d48:	a0803fcc 	andi	r2,r20,255
 1002d4c:	04002034 	movhi	r16,128
 1002d50:	100497fa 	slli	r2,r2,31
 1002d54:	843fffc4 	addi	r16,r16,-1
 1002d58:	2420703a 	and	r16,r4,r16
 1002d5c:	80e0b03a 	or	r16,r16,r3
 1002d60:	8084b03a 	or	r2,r16,r2
 1002d64:	dfc00a17 	ldw	ra,40(sp)
 1002d68:	df000917 	ldw	fp,36(sp)
 1002d6c:	ddc00817 	ldw	r23,32(sp)
 1002d70:	dd800717 	ldw	r22,28(sp)
 1002d74:	dd400617 	ldw	r21,24(sp)
 1002d78:	dd000517 	ldw	r20,20(sp)
 1002d7c:	dcc00417 	ldw	r19,16(sp)
 1002d80:	dc800317 	ldw	r18,12(sp)
 1002d84:	dc400217 	ldw	r17,8(sp)
 1002d88:	dc000117 	ldw	r16,4(sp)
 1002d8c:	dec00b04 	addi	sp,sp,44
 1002d90:	f800283a 	ret
 1002d94:	8000151e 	bne	r16,zero,1002dec <__mulsf3+0x1e8>
 1002d98:	04800104 	movi	r18,4
 1002d9c:	05c00044 	movi	r23,1
 1002da0:	003fb306 	br	1002c70 <__alt_data_end+0xff802c70>
 1002da4:	980b003a 	cmpeq	r5,r19,zero
 1002da8:	00c000c4 	movi	r3,3
 1002dac:	194bc83a 	sub	r5,r3,r5
 1002db0:	003fbd06 	br	1002ca8 <__alt_data_end+0xff802ca8>
 1002db4:	9800181e 	bne	r19,zero,1002e18 <__mulsf3+0x214>
 1002db8:	01400044 	movi	r5,1
 1002dbc:	003fba06 	br	1002ca8 <__alt_data_end+0xff802ca8>
 1002dc0:	008000c4 	movi	r2,3
 1002dc4:	b8809226 	beq	r23,r2,1003010 <__mulsf3+0x40c>
 1002dc8:	00800044 	movi	r2,1
 1002dcc:	b880771e 	bne	r23,r2,1002fac <__mulsf3+0x3a8>
 1002dd0:	e0a8703a 	and	r20,fp,r2
 1002dd4:	0007883a 	mov	r3,zero
 1002dd8:	0009883a 	mov	r4,zero
 1002ddc:	003fd806 	br	1002d40 <__alt_data_end+0xff802d40>
 1002de0:	04800304 	movi	r18,12
 1002de4:	05c000c4 	movi	r23,3
 1002de8:	003fa106 	br	1002c70 <__alt_data_end+0xff802c70>
 1002dec:	8009883a 	mov	r4,r16
 1002df0:	d9400015 	stw	r5,0(sp)
 1002df4:	1004a740 	call	1004a74 <__clzsi2>
 1002df8:	10fffec4 	addi	r3,r2,-5
 1002dfc:	047fe284 	movi	r17,-118
 1002e00:	80e0983a 	sll	r16,r16,r3
 1002e04:	88a3c83a 	sub	r17,r17,r2
 1002e08:	0025883a 	mov	r18,zero
 1002e0c:	002f883a 	mov	r23,zero
 1002e10:	d9400017 	ldw	r5,0(sp)
 1002e14:	003f9606 	br	1002c70 <__alt_data_end+0xff802c70>
 1002e18:	9809883a 	mov	r4,r19
 1002e1c:	d9800015 	stw	r6,0(sp)
 1002e20:	1004a740 	call	1004a74 <__clzsi2>
 1002e24:	10fffec4 	addi	r3,r2,-5
 1002e28:	98e6983a 	sll	r19,r19,r3
 1002e2c:	00ffe284 	movi	r3,-118
 1002e30:	1885c83a 	sub	r2,r3,r2
 1002e34:	000b883a 	mov	r5,zero
 1002e38:	d9800017 	ldw	r6,0(sp)
 1002e3c:	003f9a06 	br	1002ca8 <__alt_data_end+0xff802ca8>
 1002e40:	01002034 	movhi	r4,128
 1002e44:	0029883a 	mov	r20,zero
 1002e48:	213fffc4 	addi	r4,r4,-1
 1002e4c:	00ffffc4 	movi	r3,-1
 1002e50:	003fbb06 	br	1002d40 <__alt_data_end+0xff802d40>
 1002e54:	8006d43a 	srli	r3,r16,16
 1002e58:	9812d43a 	srli	r9,r19,16
 1002e5c:	843fffcc 	andi	r16,r16,65535
 1002e60:	997fffcc 	andi	r5,r19,65535
 1002e64:	2c0f383a 	mul	r7,r5,r16
 1002e68:	28cb383a 	mul	r5,r5,r3
 1002e6c:	4c21383a 	mul	r16,r9,r16
 1002e70:	380cd43a 	srli	r6,r7,16
 1002e74:	48d3383a 	mul	r9,r9,r3
 1002e78:	2c21883a 	add	r16,r5,r16
 1002e7c:	8187883a 	add	r3,r16,r6
 1002e80:	1940022e 	bgeu	r3,r5,1002e8c <__mulsf3+0x288>
 1002e84:	01000074 	movhi	r4,1
 1002e88:	4913883a 	add	r9,r9,r4
 1002e8c:	1808943a 	slli	r4,r3,16
 1002e90:	39ffffcc 	andi	r7,r7,65535
 1002e94:	1806d43a 	srli	r3,r3,16
 1002e98:	21c9883a 	add	r4,r4,r7
 1002e9c:	202091ba 	slli	r16,r4,6
 1002ea0:	48c7883a 	add	r3,r9,r3
 1002ea4:	2008d6ba 	srli	r4,r4,26
 1002ea8:	180691ba 	slli	r3,r3,6
 1002eac:	8020c03a 	cmpne	r16,r16,zero
 1002eb0:	8120b03a 	or	r16,r16,r4
 1002eb4:	80e0b03a 	or	r16,r16,r3
 1002eb8:	80c2002c 	andhi	r3,r16,2048
 1002ebc:	18000426 	beq	r3,zero,1002ed0 <__mulsf3+0x2cc>
 1002ec0:	8006d07a 	srli	r3,r16,1
 1002ec4:	8400004c 	andi	r16,r16,1
 1002ec8:	4005883a 	mov	r2,r8
 1002ecc:	80e0b03a 	or	r16,r16,r3
 1002ed0:	10c01fc4 	addi	r3,r2,127
 1002ed4:	00c02d0e 	bge	zero,r3,1002f8c <__mulsf3+0x388>
 1002ed8:	810001cc 	andi	r4,r16,7
 1002edc:	20000426 	beq	r4,zero,1002ef0 <__mulsf3+0x2ec>
 1002ee0:	814003cc 	andi	r5,r16,15
 1002ee4:	01000104 	movi	r4,4
 1002ee8:	29000126 	beq	r5,r4,1002ef0 <__mulsf3+0x2ec>
 1002eec:	8121883a 	add	r16,r16,r4
 1002ef0:	8102002c 	andhi	r4,r16,2048
 1002ef4:	20000426 	beq	r4,zero,1002f08 <__mulsf3+0x304>
 1002ef8:	10c02004 	addi	r3,r2,128
 1002efc:	00be0034 	movhi	r2,63488
 1002f00:	10bfffc4 	addi	r2,r2,-1
 1002f04:	80a0703a 	and	r16,r16,r2
 1002f08:	00803f84 	movi	r2,254
 1002f0c:	10c01b0e 	bge	r2,r3,1002f7c <__mulsf3+0x378>
 1002f10:	ad00004c 	andi	r20,r21,1
 1002f14:	00ffffc4 	movi	r3,-1
 1002f18:	0009883a 	mov	r4,zero
 1002f1c:	003f8806 	br	1002d40 <__alt_data_end+0xff802d40>
 1002f20:	9821883a 	mov	r16,r19
 1002f24:	a839883a 	mov	fp,r21
 1002f28:	282f883a 	mov	r23,r5
 1002f2c:	003f7f06 	br	1002d2c <__alt_data_end+0xff802d2c>
 1002f30:	9821883a 	mov	r16,r19
 1002f34:	3039883a 	mov	fp,r6
 1002f38:	282f883a 	mov	r23,r5
 1002f3c:	003f7b06 	br	1002d2c <__alt_data_end+0xff802d2c>
 1002f40:	8080102c 	andhi	r2,r16,64
 1002f44:	10000826 	beq	r2,zero,1002f68 <__mulsf3+0x364>
 1002f48:	9880102c 	andhi	r2,r19,64
 1002f4c:	1000061e 	bne	r2,zero,1002f68 <__mulsf3+0x364>
 1002f50:	00802034 	movhi	r2,128
 1002f54:	99001034 	orhi	r4,r19,64
 1002f58:	10bfffc4 	addi	r2,r2,-1
 1002f5c:	b029883a 	mov	r20,r22
 1002f60:	2088703a 	and	r4,r4,r2
 1002f64:	003fb906 	br	1002e4c <__alt_data_end+0xff802e4c>
 1002f68:	00802034 	movhi	r2,128
 1002f6c:	81001034 	orhi	r4,r16,64
 1002f70:	10bfffc4 	addi	r2,r2,-1
 1002f74:	2088703a 	and	r4,r4,r2
 1002f78:	003fb406 	br	1002e4c <__alt_data_end+0xff802e4c>
 1002f7c:	802091ba 	slli	r16,r16,6
 1002f80:	ad00004c 	andi	r20,r21,1
 1002f84:	8008d27a 	srli	r4,r16,9
 1002f88:	003f6d06 	br	1002d40 <__alt_data_end+0xff802d40>
 1002f8c:	00ffe084 	movi	r3,-126
 1002f90:	1887c83a 	sub	r3,r3,r2
 1002f94:	010006c4 	movi	r4,27
 1002f98:	20c0070e 	bge	r4,r3,1002fb8 <__mulsf3+0x3b4>
 1002f9c:	ad00004c 	andi	r20,r21,1
 1002fa0:	0007883a 	mov	r3,zero
 1002fa4:	0009883a 	mov	r4,zero
 1002fa8:	003f6506 	br	1002d40 <__alt_data_end+0xff802d40>
 1002fac:	4005883a 	mov	r2,r8
 1002fb0:	e02b883a 	mov	r21,fp
 1002fb4:	003fc606 	br	1002ed0 <__alt_data_end+0xff802ed0>
 1002fb8:	10802784 	addi	r2,r2,158
 1002fbc:	8084983a 	sll	r2,r16,r2
 1002fc0:	80e0d83a 	srl	r16,r16,r3
 1002fc4:	1004c03a 	cmpne	r2,r2,zero
 1002fc8:	1404b03a 	or	r2,r2,r16
 1002fcc:	10c001cc 	andi	r3,r2,7
 1002fd0:	18000426 	beq	r3,zero,1002fe4 <__mulsf3+0x3e0>
 1002fd4:	110003cc 	andi	r4,r2,15
 1002fd8:	00c00104 	movi	r3,4
 1002fdc:	20c00126 	beq	r4,r3,1002fe4 <__mulsf3+0x3e0>
 1002fe0:	10c5883a 	add	r2,r2,r3
 1002fe4:	10c1002c 	andhi	r3,r2,1024
 1002fe8:	18000426 	beq	r3,zero,1002ffc <__mulsf3+0x3f8>
 1002fec:	ad00004c 	andi	r20,r21,1
 1002ff0:	00c00044 	movi	r3,1
 1002ff4:	0009883a 	mov	r4,zero
 1002ff8:	003f5106 	br	1002d40 <__alt_data_end+0xff802d40>
 1002ffc:	100491ba 	slli	r2,r2,6
 1003000:	ad00004c 	andi	r20,r21,1
 1003004:	0007883a 	mov	r3,zero
 1003008:	1008d27a 	srli	r4,r2,9
 100300c:	003f4c06 	br	1002d40 <__alt_data_end+0xff802d40>
 1003010:	00802034 	movhi	r2,128
 1003014:	81001034 	orhi	r4,r16,64
 1003018:	10bfffc4 	addi	r2,r2,-1
 100301c:	e500004c 	andi	r20,fp,1
 1003020:	2088703a 	and	r4,r4,r2
 1003024:	003f8906 	br	1002e4c <__alt_data_end+0xff802e4c>

01003028 <__subsf3>:
 1003028:	defffc04 	addi	sp,sp,-16
 100302c:	280ed5fa 	srli	r7,r5,23
 1003030:	02002034 	movhi	r8,128
 1003034:	280d883a 	mov	r6,r5
 1003038:	423fffc4 	addi	r8,r8,-1
 100303c:	200ad5fa 	srli	r5,r4,23
 1003040:	dc400115 	stw	r17,4(sp)
 1003044:	2022d7fa 	srli	r17,r4,31
 1003048:	4108703a 	and	r4,r8,r4
 100304c:	dc000015 	stw	r16,0(sp)
 1003050:	4190703a 	and	r8,r8,r6
 1003054:	200690fa 	slli	r3,r4,3
 1003058:	dfc00315 	stw	ra,12(sp)
 100305c:	dc800215 	stw	r18,8(sp)
 1003060:	39c03fcc 	andi	r7,r7,255
 1003064:	01003fc4 	movi	r4,255
 1003068:	8805883a 	mov	r2,r17
 100306c:	2c003fcc 	andi	r16,r5,255
 1003070:	8c403fcc 	andi	r17,r17,255
 1003074:	300cd7fa 	srli	r6,r6,31
 1003078:	401090fa 	slli	r8,r8,3
 100307c:	39006126 	beq	r7,r4,1003204 <__subsf3+0x1dc>
 1003080:	3180005c 	xori	r6,r6,1
 1003084:	89804926 	beq	r17,r6,10031ac <__subsf3+0x184>
 1003088:	81c5c83a 	sub	r2,r16,r7
 100308c:	0080710e 	bge	zero,r2,1003254 <__subsf3+0x22c>
 1003090:	38001e1e 	bne	r7,zero,100310c <__subsf3+0xe4>
 1003094:	4000651e 	bne	r8,zero,100322c <__subsf3+0x204>
 1003098:	188001cc 	andi	r2,r3,7
 100309c:	10000426 	beq	r2,zero,10030b0 <__subsf3+0x88>
 10030a0:	190003cc 	andi	r4,r3,15
 10030a4:	00800104 	movi	r2,4
 10030a8:	20800126 	beq	r4,r2,10030b0 <__subsf3+0x88>
 10030ac:	18c00104 	addi	r3,r3,4
 10030b0:	1901002c 	andhi	r4,r3,1024
 10030b4:	8880004c 	andi	r2,r17,1
 10030b8:	20003426 	beq	r4,zero,100318c <__subsf3+0x164>
 10030bc:	81400044 	addi	r5,r16,1
 10030c0:	01003fc4 	movi	r4,255
 10030c4:	29006e26 	beq	r5,r4,1003280 <__subsf3+0x258>
 10030c8:	180691ba 	slli	r3,r3,6
 10030cc:	1808d27a 	srli	r4,r3,9
 10030d0:	29403fcc 	andi	r5,r5,255
 10030d4:	280a95fa 	slli	r5,r5,23
 10030d8:	10803fcc 	andi	r2,r2,255
 10030dc:	00c02034 	movhi	r3,128
 10030e0:	100497fa 	slli	r2,r2,31
 10030e4:	18ffffc4 	addi	r3,r3,-1
 10030e8:	20c6703a 	and	r3,r4,r3
 10030ec:	1946b03a 	or	r3,r3,r5
 10030f0:	1884b03a 	or	r2,r3,r2
 10030f4:	dfc00317 	ldw	ra,12(sp)
 10030f8:	dc800217 	ldw	r18,8(sp)
 10030fc:	dc400117 	ldw	r17,4(sp)
 1003100:	dc000017 	ldw	r16,0(sp)
 1003104:	dec00404 	addi	sp,sp,16
 1003108:	f800283a 	ret
 100310c:	01003fc4 	movi	r4,255
 1003110:	813fe126 	beq	r16,r4,1003098 <__alt_data_end+0xff803098>
 1003114:	42010034 	orhi	r8,r8,1024
 1003118:	010006c4 	movi	r4,27
 100311c:	2080600e 	bge	r4,r2,10032a0 <__subsf3+0x278>
 1003120:	02000044 	movi	r8,1
 1003124:	1a07c83a 	sub	r3,r3,r8
 1003128:	1881002c 	andhi	r2,r3,1024
 100312c:	10001426 	beq	r2,zero,1003180 <__subsf3+0x158>
 1003130:	04810034 	movhi	r18,1024
 1003134:	94bfffc4 	addi	r18,r18,-1
 1003138:	1ca4703a 	and	r18,r3,r18
 100313c:	9009883a 	mov	r4,r18
 1003140:	1004a740 	call	1004a74 <__clzsi2>
 1003144:	10bffec4 	addi	r2,r2,-5
 1003148:	90a4983a 	sll	r18,r18,r2
 100314c:	14004f16 	blt	r2,r16,100328c <__subsf3+0x264>
 1003150:	140bc83a 	sub	r5,r2,r16
 1003154:	00c007c4 	movi	r3,31
 1003158:	1947c83a 	sub	r3,r3,r5
 100315c:	90c6983a 	sll	r3,r18,r3
 1003160:	29400044 	addi	r5,r5,1
 1003164:	9164d83a 	srl	r18,r18,r5
 1003168:	1806c03a 	cmpne	r3,r3,zero
 100316c:	0021883a 	mov	r16,zero
 1003170:	1c86b03a 	or	r3,r3,r18
 1003174:	003fc806 	br	1003098 <__alt_data_end+0xff803098>
 1003178:	1000e726 	beq	r2,zero,1003518 <__subsf3+0x4f0>
 100317c:	1007883a 	mov	r3,r2
 1003180:	188001cc 	andi	r2,r3,7
 1003184:	103fc61e 	bne	r2,zero,10030a0 <__alt_data_end+0xff8030a0>
 1003188:	8880004c 	andi	r2,r17,1
 100318c:	01003fc4 	movi	r4,255
 1003190:	1806d0fa 	srli	r3,r3,3
 1003194:	81001e26 	beq	r16,r4,1003210 <__subsf3+0x1e8>
 1003198:	01002034 	movhi	r4,128
 100319c:	213fffc4 	addi	r4,r4,-1
 10031a0:	800b883a 	mov	r5,r16
 10031a4:	1908703a 	and	r4,r3,r4
 10031a8:	003fc906 	br	10030d0 <__alt_data_end+0xff8030d0>
 10031ac:	81c9c83a 	sub	r4,r16,r7
 10031b0:	0100420e 	bge	zero,r4,10032bc <__subsf3+0x294>
 10031b4:	38002226 	beq	r7,zero,1003240 <__subsf3+0x218>
 10031b8:	01403fc4 	movi	r5,255
 10031bc:	817fb626 	beq	r16,r5,1003098 <__alt_data_end+0xff803098>
 10031c0:	42010034 	orhi	r8,r8,1024
 10031c4:	014006c4 	movi	r5,27
 10031c8:	2900580e 	bge	r5,r4,100332c <__subsf3+0x304>
 10031cc:	01000044 	movi	r4,1
 10031d0:	1907883a 	add	r3,r3,r4
 10031d4:	1901002c 	andhi	r4,r3,1024
 10031d8:	203fe926 	beq	r4,zero,1003180 <__alt_data_end+0xff803180>
 10031dc:	84000044 	addi	r16,r16,1
 10031e0:	01003fc4 	movi	r4,255
 10031e4:	81007626 	beq	r16,r4,10033c0 <__subsf3+0x398>
 10031e8:	00bf0034 	movhi	r2,64512
 10031ec:	10bfffc4 	addi	r2,r2,-1
 10031f0:	1900004c 	andi	r4,r3,1
 10031f4:	1886703a 	and	r3,r3,r2
 10031f8:	1806d07a 	srli	r3,r3,1
 10031fc:	1906b03a 	or	r3,r3,r4
 1003200:	003fa506 	br	1003098 <__alt_data_end+0xff803098>
 1003204:	403f9e26 	beq	r8,zero,1003080 <__alt_data_end+0xff803080>
 1003208:	31803fcc 	andi	r6,r6,255
 100320c:	003f9d06 	br	1003084 <__alt_data_end+0xff803084>
 1003210:	18001b26 	beq	r3,zero,1003280 <__subsf3+0x258>
 1003214:	19001034 	orhi	r4,r3,64
 1003218:	00c02034 	movhi	r3,128
 100321c:	18ffffc4 	addi	r3,r3,-1
 1003220:	017fffc4 	movi	r5,-1
 1003224:	20c8703a 	and	r4,r4,r3
 1003228:	003fa906 	br	10030d0 <__alt_data_end+0xff8030d0>
 100322c:	10bfffc4 	addi	r2,r2,-1
 1003230:	103fbc26 	beq	r2,zero,1003124 <__alt_data_end+0xff803124>
 1003234:	01003fc4 	movi	r4,255
 1003238:	813fb71e 	bne	r16,r4,1003118 <__alt_data_end+0xff803118>
 100323c:	003f9606 	br	1003098 <__alt_data_end+0xff803098>
 1003240:	403f9526 	beq	r8,zero,1003098 <__alt_data_end+0xff803098>
 1003244:	213fffc4 	addi	r4,r4,-1
 1003248:	2000481e 	bne	r4,zero,100336c <__subsf3+0x344>
 100324c:	1a07883a 	add	r3,r3,r8
 1003250:	003fe006 	br	10031d4 <__alt_data_end+0xff8031d4>
 1003254:	1000241e 	bne	r2,zero,10032e8 <__subsf3+0x2c0>
 1003258:	80800044 	addi	r2,r16,1
 100325c:	10803fcc 	andi	r2,r2,255
 1003260:	01000044 	movi	r4,1
 1003264:	20804f0e 	bge	r4,r2,10033a4 <__subsf3+0x37c>
 1003268:	1a25c83a 	sub	r18,r3,r8
 100326c:	9081002c 	andhi	r2,r18,1024
 1003270:	10002926 	beq	r2,zero,1003318 <__subsf3+0x2f0>
 1003274:	40e5c83a 	sub	r18,r8,r3
 1003278:	3023883a 	mov	r17,r6
 100327c:	003faf06 	br	100313c <__alt_data_end+0xff80313c>
 1003280:	017fffc4 	movi	r5,-1
 1003284:	0009883a 	mov	r4,zero
 1003288:	003f9106 	br	10030d0 <__alt_data_end+0xff8030d0>
 100328c:	00ff0034 	movhi	r3,64512
 1003290:	18ffffc4 	addi	r3,r3,-1
 1003294:	80a1c83a 	sub	r16,r16,r2
 1003298:	90c6703a 	and	r3,r18,r3
 100329c:	003f7e06 	br	1003098 <__alt_data_end+0xff803098>
 10032a0:	01000804 	movi	r4,32
 10032a4:	2089c83a 	sub	r4,r4,r2
 10032a8:	4108983a 	sll	r4,r8,r4
 10032ac:	4090d83a 	srl	r8,r8,r2
 10032b0:	2004c03a 	cmpne	r2,r4,zero
 10032b4:	1210b03a 	or	r8,r2,r8
 10032b8:	003f9a06 	br	1003124 <__alt_data_end+0xff803124>
 10032bc:	2000421e 	bne	r4,zero,10033c8 <__subsf3+0x3a0>
 10032c0:	81000044 	addi	r4,r16,1
 10032c4:	21803fcc 	andi	r6,r4,255
 10032c8:	01400044 	movi	r5,1
 10032cc:	29802a0e 	bge	r5,r6,1003378 <__subsf3+0x350>
 10032d0:	01403fc4 	movi	r5,255
 10032d4:	21403926 	beq	r4,r5,10033bc <__subsf3+0x394>
 10032d8:	40c7883a 	add	r3,r8,r3
 10032dc:	1806d07a 	srli	r3,r3,1
 10032e0:	2021883a 	mov	r16,r4
 10032e4:	003f6c06 	br	1003098 <__alt_data_end+0xff803098>
 10032e8:	80001726 	beq	r16,zero,1003348 <__subsf3+0x320>
 10032ec:	01003fc4 	movi	r4,255
 10032f0:	39001a26 	beq	r7,r4,100335c <__subsf3+0x334>
 10032f4:	0085c83a 	sub	r2,zero,r2
 10032f8:	18c10034 	orhi	r3,r3,1024
 10032fc:	010006c4 	movi	r4,27
 1003300:	2080430e 	bge	r4,r2,1003410 <__subsf3+0x3e8>
 1003304:	00c00044 	movi	r3,1
 1003308:	40c7c83a 	sub	r3,r8,r3
 100330c:	3821883a 	mov	r16,r7
 1003310:	3023883a 	mov	r17,r6
 1003314:	003f8406 	br	1003128 <__alt_data_end+0xff803128>
 1003318:	903f881e 	bne	r18,zero,100313c <__alt_data_end+0xff80313c>
 100331c:	0007883a 	mov	r3,zero
 1003320:	0005883a 	mov	r2,zero
 1003324:	0021883a 	mov	r16,zero
 1003328:	003f9806 	br	100318c <__alt_data_end+0xff80318c>
 100332c:	01400804 	movi	r5,32
 1003330:	290bc83a 	sub	r5,r5,r4
 1003334:	414a983a 	sll	r5,r8,r5
 1003338:	4110d83a 	srl	r8,r8,r4
 100333c:	2808c03a 	cmpne	r4,r5,zero
 1003340:	2208b03a 	or	r4,r4,r8
 1003344:	003fa206 	br	10031d0 <__alt_data_end+0xff8031d0>
 1003348:	18000426 	beq	r3,zero,100335c <__subsf3+0x334>
 100334c:	0084303a 	nor	r2,zero,r2
 1003350:	103fed26 	beq	r2,zero,1003308 <__alt_data_end+0xff803308>
 1003354:	01003fc4 	movi	r4,255
 1003358:	393fe81e 	bne	r7,r4,10032fc <__alt_data_end+0xff8032fc>
 100335c:	4007883a 	mov	r3,r8
 1003360:	3821883a 	mov	r16,r7
 1003364:	3023883a 	mov	r17,r6
 1003368:	003f4b06 	br	1003098 <__alt_data_end+0xff803098>
 100336c:	01403fc4 	movi	r5,255
 1003370:	817f941e 	bne	r16,r5,10031c4 <__alt_data_end+0xff8031c4>
 1003374:	003f4806 	br	1003098 <__alt_data_end+0xff803098>
 1003378:	8000471e 	bne	r16,zero,1003498 <__subsf3+0x470>
 100337c:	18006126 	beq	r3,zero,1003504 <__subsf3+0x4dc>
 1003380:	403f4526 	beq	r8,zero,1003098 <__alt_data_end+0xff803098>
 1003384:	1a07883a 	add	r3,r3,r8
 1003388:	1881002c 	andhi	r2,r3,1024
 100338c:	103f7c26 	beq	r2,zero,1003180 <__alt_data_end+0xff803180>
 1003390:	00bf0034 	movhi	r2,64512
 1003394:	10bfffc4 	addi	r2,r2,-1
 1003398:	2821883a 	mov	r16,r5
 100339c:	1886703a 	and	r3,r3,r2
 10033a0:	003f3d06 	br	1003098 <__alt_data_end+0xff803098>
 10033a4:	8000141e 	bne	r16,zero,10033f8 <__subsf3+0x3d0>
 10033a8:	1800311e 	bne	r3,zero,1003470 <__subsf3+0x448>
 10033ac:	40004626 	beq	r8,zero,10034c8 <__subsf3+0x4a0>
 10033b0:	4007883a 	mov	r3,r8
 10033b4:	3023883a 	mov	r17,r6
 10033b8:	003f3706 	br	1003098 <__alt_data_end+0xff803098>
 10033bc:	2021883a 	mov	r16,r4
 10033c0:	0007883a 	mov	r3,zero
 10033c4:	003f7106 	br	100318c <__alt_data_end+0xff80318c>
 10033c8:	8000181e 	bne	r16,zero,100342c <__subsf3+0x404>
 10033cc:	18002f26 	beq	r3,zero,100348c <__subsf3+0x464>
 10033d0:	0108303a 	nor	r4,zero,r4
 10033d4:	20000526 	beq	r4,zero,10033ec <__subsf3+0x3c4>
 10033d8:	01403fc4 	movi	r5,255
 10033dc:	39402b26 	beq	r7,r5,100348c <__subsf3+0x464>
 10033e0:	014006c4 	movi	r5,27
 10033e4:	2900400e 	bge	r5,r4,10034e8 <__subsf3+0x4c0>
 10033e8:	00c00044 	movi	r3,1
 10033ec:	1a07883a 	add	r3,r3,r8
 10033f0:	3821883a 	mov	r16,r7
 10033f4:	003f7706 	br	10031d4 <__alt_data_end+0xff8031d4>
 10033f8:	1800111e 	bne	r3,zero,1003440 <__subsf3+0x418>
 10033fc:	40003526 	beq	r8,zero,10034d4 <__subsf3+0x4ac>
 1003400:	4007883a 	mov	r3,r8
 1003404:	3023883a 	mov	r17,r6
 1003408:	04003fc4 	movi	r16,255
 100340c:	003f2206 	br	1003098 <__alt_data_end+0xff803098>
 1003410:	01000804 	movi	r4,32
 1003414:	2089c83a 	sub	r4,r4,r2
 1003418:	1908983a 	sll	r4,r3,r4
 100341c:	1884d83a 	srl	r2,r3,r2
 1003420:	2006c03a 	cmpne	r3,r4,zero
 1003424:	1886b03a 	or	r3,r3,r2
 1003428:	003fb706 	br	1003308 <__alt_data_end+0xff803308>
 100342c:	01403fc4 	movi	r5,255
 1003430:	39401626 	beq	r7,r5,100348c <__subsf3+0x464>
 1003434:	0109c83a 	sub	r4,zero,r4
 1003438:	18c10034 	orhi	r3,r3,1024
 100343c:	003fe806 	br	10033e0 <__alt_data_end+0xff8033e0>
 1003440:	40001f26 	beq	r8,zero,10034c0 <__subsf3+0x498>
 1003444:	1806d0fa 	srli	r3,r3,3
 1003448:	1880102c 	andhi	r2,r3,64
 100344c:	10000526 	beq	r2,zero,1003464 <__subsf3+0x43c>
 1003450:	4010d0fa 	srli	r8,r8,3
 1003454:	4080102c 	andhi	r2,r8,64
 1003458:	1000021e 	bne	r2,zero,1003464 <__subsf3+0x43c>
 100345c:	4007883a 	mov	r3,r8
 1003460:	3023883a 	mov	r17,r6
 1003464:	180690fa 	slli	r3,r3,3
 1003468:	04003fc4 	movi	r16,255
 100346c:	003f0a06 	br	1003098 <__alt_data_end+0xff803098>
 1003470:	403f0926 	beq	r8,zero,1003098 <__alt_data_end+0xff803098>
 1003474:	1a05c83a 	sub	r2,r3,r8
 1003478:	1101002c 	andhi	r4,r2,1024
 100347c:	203f3e26 	beq	r4,zero,1003178 <__alt_data_end+0xff803178>
 1003480:	40c7c83a 	sub	r3,r8,r3
 1003484:	3023883a 	mov	r17,r6
 1003488:	003f0306 	br	1003098 <__alt_data_end+0xff803098>
 100348c:	4007883a 	mov	r3,r8
 1003490:	3821883a 	mov	r16,r7
 1003494:	003f0006 	br	1003098 <__alt_data_end+0xff803098>
 1003498:	18001c26 	beq	r3,zero,100350c <__subsf3+0x4e4>
 100349c:	40000826 	beq	r8,zero,10034c0 <__subsf3+0x498>
 10034a0:	1806d0fa 	srli	r3,r3,3
 10034a4:	1880102c 	andhi	r2,r3,64
 10034a8:	103fee26 	beq	r2,zero,1003464 <__alt_data_end+0xff803464>
 10034ac:	4010d0fa 	srli	r8,r8,3
 10034b0:	4080102c 	andhi	r2,r8,64
 10034b4:	103feb1e 	bne	r2,zero,1003464 <__alt_data_end+0xff803464>
 10034b8:	4007883a 	mov	r3,r8
 10034bc:	003fe906 	br	1003464 <__alt_data_end+0xff803464>
 10034c0:	04003fc4 	movi	r16,255
 10034c4:	003ef406 	br	1003098 <__alt_data_end+0xff803098>
 10034c8:	8007883a 	mov	r3,r16
 10034cc:	0005883a 	mov	r2,zero
 10034d0:	003f2e06 	br	100318c <__alt_data_end+0xff80318c>
 10034d4:	00c10034 	movhi	r3,1024
 10034d8:	0005883a 	mov	r2,zero
 10034dc:	18fffe04 	addi	r3,r3,-8
 10034e0:	04003fc4 	movi	r16,255
 10034e4:	003f2906 	br	100318c <__alt_data_end+0xff80318c>
 10034e8:	01400804 	movi	r5,32
 10034ec:	290bc83a 	sub	r5,r5,r4
 10034f0:	194a983a 	sll	r5,r3,r5
 10034f4:	1908d83a 	srl	r4,r3,r4
 10034f8:	2806c03a 	cmpne	r3,r5,zero
 10034fc:	1906b03a 	or	r3,r3,r4
 1003500:	003fba06 	br	10033ec <__alt_data_end+0xff8033ec>
 1003504:	4007883a 	mov	r3,r8
 1003508:	003ee306 	br	1003098 <__alt_data_end+0xff803098>
 100350c:	4007883a 	mov	r3,r8
 1003510:	04003fc4 	movi	r16,255
 1003514:	003ee006 	br	1003098 <__alt_data_end+0xff803098>
 1003518:	0007883a 	mov	r3,zero
 100351c:	0005883a 	mov	r2,zero
 1003520:	003f1a06 	br	100318c <__alt_data_end+0xff80318c>

01003524 <__fixsfsi>:
 1003524:	2006d5fa 	srli	r3,r4,23
 1003528:	00802034 	movhi	r2,128
 100352c:	10bfffc4 	addi	r2,r2,-1
 1003530:	18c03fcc 	andi	r3,r3,255
 1003534:	01401f84 	movi	r5,126
 1003538:	1104703a 	and	r2,r2,r4
 100353c:	2008d7fa 	srli	r4,r4,31
 1003540:	28c0110e 	bge	r5,r3,1003588 <__fixsfsi+0x64>
 1003544:	01402744 	movi	r5,157
 1003548:	28c00b16 	blt	r5,r3,1003578 <__fixsfsi+0x54>
 100354c:	01402544 	movi	r5,149
 1003550:	10802034 	orhi	r2,r2,128
 1003554:	28c00e16 	blt	r5,r3,1003590 <__fixsfsi+0x6c>
 1003558:	01402584 	movi	r5,150
 100355c:	28c7c83a 	sub	r3,r5,r3
 1003560:	10c6d83a 	srl	r3,r2,r3
 1003564:	21003fcc 	andi	r4,r4,255
 1003568:	0105c83a 	sub	r2,zero,r4
 100356c:	1886f03a 	xor	r3,r3,r2
 1003570:	1905883a 	add	r2,r3,r4
 1003574:	f800283a 	ret
 1003578:	00a00034 	movhi	r2,32768
 100357c:	10bfffc4 	addi	r2,r2,-1
 1003580:	2085883a 	add	r2,r4,r2
 1003584:	f800283a 	ret
 1003588:	0005883a 	mov	r2,zero
 100358c:	f800283a 	ret
 1003590:	18ffda84 	addi	r3,r3,-150
 1003594:	10c6983a 	sll	r3,r2,r3
 1003598:	003ff206 	br	1003564 <__alt_data_end+0xff803564>

0100359c <__floatsisf>:
 100359c:	defffd04 	addi	sp,sp,-12
 10035a0:	dc000015 	stw	r16,0(sp)
 10035a4:	dfc00215 	stw	ra,8(sp)
 10035a8:	dc400115 	stw	r17,4(sp)
 10035ac:	2021883a 	mov	r16,r4
 10035b0:	20003a26 	beq	r4,zero,100369c <__floatsisf+0x100>
 10035b4:	2022d7fa 	srli	r17,r4,31
 10035b8:	88000126 	beq	r17,zero,10035c0 <__floatsisf+0x24>
 10035bc:	0121c83a 	sub	r16,zero,r4
 10035c0:	8009883a 	mov	r4,r16
 10035c4:	1004a740 	call	1004a74 <__clzsi2>
 10035c8:	00c02784 	movi	r3,158
 10035cc:	1887c83a 	sub	r3,r3,r2
 10035d0:	01802584 	movi	r6,150
 10035d4:	800b883a 	mov	r5,r16
 10035d8:	30c01616 	blt	r6,r3,1003634 <__floatsisf+0x98>
 10035dc:	01000204 	movi	r4,8
 10035e0:	2080020e 	bge	r4,r2,10035ec <__floatsisf+0x50>
 10035e4:	10bffe04 	addi	r2,r2,-8
 10035e8:	80a0983a 	sll	r16,r16,r2
 10035ec:	00802034 	movhi	r2,128
 10035f0:	10bfffc4 	addi	r2,r2,-1
 10035f4:	8809883a 	mov	r4,r17
 10035f8:	80a0703a 	and	r16,r16,r2
 10035fc:	18803fcc 	andi	r2,r3,255
 1003600:	100695fa 	slli	r3,r2,23
 1003604:	20803fcc 	andi	r2,r4,255
 1003608:	100897fa 	slli	r4,r2,31
 100360c:	00802034 	movhi	r2,128
 1003610:	10bfffc4 	addi	r2,r2,-1
 1003614:	8084703a 	and	r2,r16,r2
 1003618:	10c4b03a 	or	r2,r2,r3
 100361c:	1104b03a 	or	r2,r2,r4
 1003620:	dfc00217 	ldw	ra,8(sp)
 1003624:	dc400117 	ldw	r17,4(sp)
 1003628:	dc000017 	ldw	r16,0(sp)
 100362c:	dec00304 	addi	sp,sp,12
 1003630:	f800283a 	ret
 1003634:	01002644 	movi	r4,153
 1003638:	20c01c16 	blt	r4,r3,10036ac <__floatsisf+0x110>
 100363c:	01000144 	movi	r4,5
 1003640:	2080020e 	bge	r4,r2,100364c <__floatsisf+0xb0>
 1003644:	113ffec4 	addi	r4,r2,-5
 1003648:	290a983a 	sll	r5,r5,r4
 100364c:	043f0034 	movhi	r16,64512
 1003650:	843fffc4 	addi	r16,r16,-1
 1003654:	298001cc 	andi	r6,r5,7
 1003658:	2c20703a 	and	r16,r5,r16
 100365c:	30000426 	beq	r6,zero,1003670 <__floatsisf+0xd4>
 1003660:	294003cc 	andi	r5,r5,15
 1003664:	01000104 	movi	r4,4
 1003668:	29000126 	beq	r5,r4,1003670 <__floatsisf+0xd4>
 100366c:	8121883a 	add	r16,r16,r4
 1003670:	8101002c 	andhi	r4,r16,1024
 1003674:	20000526 	beq	r4,zero,100368c <__floatsisf+0xf0>
 1003678:	00c027c4 	movi	r3,159
 100367c:	1887c83a 	sub	r3,r3,r2
 1003680:	00bf0034 	movhi	r2,64512
 1003684:	10bfffc4 	addi	r2,r2,-1
 1003688:	80a0703a 	and	r16,r16,r2
 100368c:	802091ba 	slli	r16,r16,6
 1003690:	8809883a 	mov	r4,r17
 1003694:	8020d27a 	srli	r16,r16,9
 1003698:	003fd806 	br	10035fc <__alt_data_end+0xff8035fc>
 100369c:	0009883a 	mov	r4,zero
 10036a0:	0007883a 	mov	r3,zero
 10036a4:	0021883a 	mov	r16,zero
 10036a8:	003fd406 	br	10035fc <__alt_data_end+0xff8035fc>
 10036ac:	01800144 	movi	r6,5
 10036b0:	110006c4 	addi	r4,r2,27
 10036b4:	8108983a 	sll	r4,r16,r4
 10036b8:	308fc83a 	sub	r7,r6,r2
 10036bc:	81cad83a 	srl	r5,r16,r7
 10036c0:	2008c03a 	cmpne	r4,r4,zero
 10036c4:	214ab03a 	or	r5,r4,r5
 10036c8:	30bfe00e 	bge	r6,r2,100364c <__alt_data_end+0xff80364c>
 10036cc:	003fdd06 	br	1003644 <__alt_data_end+0xff803644>

010036d0 <__divdf3>:
 10036d0:	defff204 	addi	sp,sp,-56
 10036d4:	dd000815 	stw	r20,32(sp)
 10036d8:	2828d53a 	srli	r20,r5,20
 10036dc:	dd800a15 	stw	r22,40(sp)
 10036e0:	282cd7fa 	srli	r22,r5,31
 10036e4:	dc000415 	stw	r16,16(sp)
 10036e8:	04000434 	movhi	r16,16
 10036ec:	df000c15 	stw	fp,48(sp)
 10036f0:	dcc00715 	stw	r19,28(sp)
 10036f4:	dc800615 	stw	r18,24(sp)
 10036f8:	dc400515 	stw	r17,20(sp)
 10036fc:	843fffc4 	addi	r16,r16,-1
 1003700:	dfc00d15 	stw	ra,52(sp)
 1003704:	ddc00b15 	stw	r23,44(sp)
 1003708:	dd400915 	stw	r21,36(sp)
 100370c:	a501ffcc 	andi	r20,r20,2047
 1003710:	2025883a 	mov	r18,r4
 1003714:	2027883a 	mov	r19,r4
 1003718:	2c22703a 	and	r17,r5,r16
 100371c:	b7003fcc 	andi	fp,r22,255
 1003720:	a0005e26 	beq	r20,zero,100389c <__divdf3+0x1cc>
 1003724:	0081ffc4 	movi	r2,2047
 1003728:	a0803526 	beq	r20,r2,1003800 <__divdf3+0x130>
 100372c:	8c000434 	orhi	r16,r17,16
 1003730:	2004d77a 	srli	r2,r4,29
 1003734:	802090fa 	slli	r16,r16,3
 1003738:	202690fa 	slli	r19,r4,3
 100373c:	a53f0044 	addi	r20,r20,-1023
 1003740:	80a2b03a 	or	r17,r16,r2
 1003744:	0025883a 	mov	r18,zero
 1003748:	0011883a 	mov	r8,zero
 100374c:	380ad53a 	srli	r5,r7,20
 1003750:	382ed7fa 	srli	r23,r7,31
 1003754:	04000434 	movhi	r16,16
 1003758:	843fffc4 	addi	r16,r16,-1
 100375c:	2941ffcc 	andi	r5,r5,2047
 1003760:	302b883a 	mov	r21,r6
 1003764:	3c20703a 	and	r16,r7,r16
 1003768:	ba403fcc 	andi	r9,r23,255
 100376c:	28006726 	beq	r5,zero,100390c <__divdf3+0x23c>
 1003770:	0081ffc4 	movi	r2,2047
 1003774:	28805f26 	beq	r5,r2,10038f4 <__divdf3+0x224>
 1003778:	84000434 	orhi	r16,r16,16
 100377c:	3004d77a 	srli	r2,r6,29
 1003780:	802090fa 	slli	r16,r16,3
 1003784:	302a90fa 	slli	r21,r6,3
 1003788:	297f0044 	addi	r5,r5,-1023
 100378c:	80a0b03a 	or	r16,r16,r2
 1003790:	000f883a 	mov	r7,zero
 1003794:	3c86b03a 	or	r3,r7,r18
 1003798:	180690ba 	slli	r3,r3,2
 100379c:	00804034 	movhi	r2,256
 10037a0:	108df004 	addi	r2,r2,14272
 10037a4:	1887883a 	add	r3,r3,r2
 10037a8:	18c00017 	ldw	r3,0(r3)
 10037ac:	b5c8f03a 	xor	r4,r22,r23
 10037b0:	200d883a 	mov	r6,r4
 10037b4:	24803fcc 	andi	r18,r4,255
 10037b8:	a169c83a 	sub	r20,r20,r5
 10037bc:	1800683a 	jmp	r3
 10037c0:	01003a08 	cmpgei	r4,zero,232
 10037c4:	01003838 	rdprs	r4,zero,224
 10037c8:	010039cc 	andi	r4,zero,231
 10037cc:	0100381c 	xori	r4,zero,224
 10037d0:	010039cc 	andi	r4,zero,231
 10037d4:	010039a0 	cmpeqi	r4,zero,230
 10037d8:	010039cc 	andi	r4,zero,231
 10037dc:	0100381c 	xori	r4,zero,224
 10037e0:	01003838 	rdprs	r4,zero,224
 10037e4:	01003838 	rdprs	r4,zero,224
 10037e8:	010039a0 	cmpeqi	r4,zero,230
 10037ec:	0100381c 	xori	r4,zero,224
 10037f0:	0100382c 	andhi	r4,zero,224
 10037f4:	0100382c 	andhi	r4,zero,224
 10037f8:	0100382c 	andhi	r4,zero,224
 10037fc:	010039dc 	xori	r4,zero,231
 1003800:	8904b03a 	or	r2,r17,r4
 1003804:	1000631e 	bne	r2,zero,1003994 <__divdf3+0x2c4>
 1003808:	04800204 	movi	r18,8
 100380c:	0023883a 	mov	r17,zero
 1003810:	0027883a 	mov	r19,zero
 1003814:	02000084 	movi	r8,2
 1003818:	003fcc06 	br	100374c <__alt_data_end+0xff80374c>
 100381c:	8023883a 	mov	r17,r16
 1003820:	a827883a 	mov	r19,r21
 1003824:	4839883a 	mov	fp,r9
 1003828:	3811883a 	mov	r8,r7
 100382c:	00800084 	movi	r2,2
 1003830:	40812a1e 	bne	r8,r2,1003cdc <__divdf3+0x60c>
 1003834:	e025883a 	mov	r18,fp
 1003838:	9180004c 	andi	r6,r18,1
 100383c:	0101ffc4 	movi	r4,2047
 1003840:	000b883a 	mov	r5,zero
 1003844:	0027883a 	mov	r19,zero
 1003848:	2008953a 	slli	r4,r4,20
 100384c:	30c03fcc 	andi	r3,r6,255
 1003850:	04000434 	movhi	r16,16
 1003854:	180697fa 	slli	r3,r3,31
 1003858:	843fffc4 	addi	r16,r16,-1
 100385c:	2c20703a 	and	r16,r5,r16
 1003860:	8120b03a 	or	r16,r16,r4
 1003864:	80c6b03a 	or	r3,r16,r3
 1003868:	9805883a 	mov	r2,r19
 100386c:	dfc00d17 	ldw	ra,52(sp)
 1003870:	df000c17 	ldw	fp,48(sp)
 1003874:	ddc00b17 	ldw	r23,44(sp)
 1003878:	dd800a17 	ldw	r22,40(sp)
 100387c:	dd400917 	ldw	r21,36(sp)
 1003880:	dd000817 	ldw	r20,32(sp)
 1003884:	dcc00717 	ldw	r19,28(sp)
 1003888:	dc800617 	ldw	r18,24(sp)
 100388c:	dc400517 	ldw	r17,20(sp)
 1003890:	dc000417 	ldw	r16,16(sp)
 1003894:	dec00e04 	addi	sp,sp,56
 1003898:	f800283a 	ret
 100389c:	8904b03a 	or	r2,r17,r4
 10038a0:	10003726 	beq	r2,zero,1003980 <__divdf3+0x2b0>
 10038a4:	88011c26 	beq	r17,zero,1003d18 <__divdf3+0x648>
 10038a8:	8809883a 	mov	r4,r17
 10038ac:	d9800315 	stw	r6,12(sp)
 10038b0:	d9c00115 	stw	r7,4(sp)
 10038b4:	1004a740 	call	1004a74 <__clzsi2>
 10038b8:	d9800317 	ldw	r6,12(sp)
 10038bc:	d9c00117 	ldw	r7,4(sp)
 10038c0:	1007883a 	mov	r3,r2
 10038c4:	01000a04 	movi	r4,40
 10038c8:	1cfffe04 	addi	r19,r3,-8
 10038cc:	20c9c83a 	sub	r4,r4,r3
 10038d0:	8cca983a 	sll	r5,r17,r19
 10038d4:	9108d83a 	srl	r4,r18,r4
 10038d8:	94e6983a 	sll	r19,r18,r19
 10038dc:	2162b03a 	or	r17,r4,r5
 10038e0:	053f0344 	movi	r20,-1011
 10038e4:	a0e9c83a 	sub	r20,r20,r3
 10038e8:	0025883a 	mov	r18,zero
 10038ec:	0011883a 	mov	r8,zero
 10038f0:	003f9606 	br	100374c <__alt_data_end+0xff80374c>
 10038f4:	8184b03a 	or	r2,r16,r6
 10038f8:	10001f1e 	bne	r2,zero,1003978 <__divdf3+0x2a8>
 10038fc:	0021883a 	mov	r16,zero
 1003900:	002b883a 	mov	r21,zero
 1003904:	01c00084 	movi	r7,2
 1003908:	003fa206 	br	1003794 <__alt_data_end+0xff803794>
 100390c:	8184b03a 	or	r2,r16,r6
 1003910:	10001526 	beq	r2,zero,1003968 <__divdf3+0x298>
 1003914:	80010c26 	beq	r16,zero,1003d48 <__divdf3+0x678>
 1003918:	8009883a 	mov	r4,r16
 100391c:	d9800315 	stw	r6,12(sp)
 1003920:	da000215 	stw	r8,8(sp)
 1003924:	da400015 	stw	r9,0(sp)
 1003928:	1004a740 	call	1004a74 <__clzsi2>
 100392c:	d9800317 	ldw	r6,12(sp)
 1003930:	da000217 	ldw	r8,8(sp)
 1003934:	da400017 	ldw	r9,0(sp)
 1003938:	1007883a 	mov	r3,r2
 100393c:	01000a04 	movi	r4,40
 1003940:	1d7ffe04 	addi	r21,r3,-8
 1003944:	20c9c83a 	sub	r4,r4,r3
 1003948:	8560983a 	sll	r16,r16,r21
 100394c:	3108d83a 	srl	r4,r6,r4
 1003950:	356a983a 	sll	r21,r6,r21
 1003954:	2420b03a 	or	r16,r4,r16
 1003958:	017f0344 	movi	r5,-1011
 100395c:	28cbc83a 	sub	r5,r5,r3
 1003960:	000f883a 	mov	r7,zero
 1003964:	003f8b06 	br	1003794 <__alt_data_end+0xff803794>
 1003968:	0021883a 	mov	r16,zero
 100396c:	002b883a 	mov	r21,zero
 1003970:	01c00044 	movi	r7,1
 1003974:	003f8706 	br	1003794 <__alt_data_end+0xff803794>
 1003978:	01c000c4 	movi	r7,3
 100397c:	003f8506 	br	1003794 <__alt_data_end+0xff803794>
 1003980:	04800104 	movi	r18,4
 1003984:	0023883a 	mov	r17,zero
 1003988:	0027883a 	mov	r19,zero
 100398c:	02000044 	movi	r8,1
 1003990:	003f6e06 	br	100374c <__alt_data_end+0xff80374c>
 1003994:	04800304 	movi	r18,12
 1003998:	020000c4 	movi	r8,3
 100399c:	003f6b06 	br	100374c <__alt_data_end+0xff80374c>
 10039a0:	01400434 	movhi	r5,16
 10039a4:	000d883a 	mov	r6,zero
 10039a8:	297fffc4 	addi	r5,r5,-1
 10039ac:	04ffffc4 	movi	r19,-1
 10039b0:	0101ffc4 	movi	r4,2047
 10039b4:	003fa406 	br	1003848 <__alt_data_end+0xff803848>
 10039b8:	043f0084 	movi	r16,-1022
 10039bc:	8521c83a 	sub	r16,r16,r20
 10039c0:	00800e04 	movi	r2,56
 10039c4:	1401200e 	bge	r2,r16,1003e48 <__divdf3+0x778>
 10039c8:	9180004c 	andi	r6,r18,1
 10039cc:	0009883a 	mov	r4,zero
 10039d0:	000b883a 	mov	r5,zero
 10039d4:	0027883a 	mov	r19,zero
 10039d8:	003f9b06 	br	1003848 <__alt_data_end+0xff803848>
 10039dc:	8880022c 	andhi	r2,r17,8
 10039e0:	1000c726 	beq	r2,zero,1003d00 <__divdf3+0x630>
 10039e4:	8080022c 	andhi	r2,r16,8
 10039e8:	1000c51e 	bne	r2,zero,1003d00 <__divdf3+0x630>
 10039ec:	00800434 	movhi	r2,16
 10039f0:	81400234 	orhi	r5,r16,8
 10039f4:	10bfffc4 	addi	r2,r2,-1
 10039f8:	b80d883a 	mov	r6,r23
 10039fc:	288a703a 	and	r5,r5,r2
 1003a00:	a827883a 	mov	r19,r21
 1003a04:	003fea06 	br	10039b0 <__alt_data_end+0xff8039b0>
 1003a08:	8440ea36 	bltu	r16,r17,1003db4 <__divdf3+0x6e4>
 1003a0c:	8c00e826 	beq	r17,r16,1003db0 <__divdf3+0x6e0>
 1003a10:	a53fffc4 	addi	r20,r20,-1
 1003a14:	882d883a 	mov	r22,r17
 1003a18:	000d883a 	mov	r6,zero
 1003a1c:	a804d63a 	srli	r2,r21,24
 1003a20:	8020923a 	slli	r16,r16,8
 1003a24:	b009883a 	mov	r4,r22
 1003a28:	d9800315 	stw	r6,12(sp)
 1003a2c:	1420b03a 	or	r16,r2,r16
 1003a30:	802ed43a 	srli	r23,r16,16
 1003a34:	873fffcc 	andi	fp,r16,65535
 1003a38:	a82a923a 	slli	r21,r21,8
 1003a3c:	b80b883a 	mov	r5,r23
 1003a40:	1004bf40 	call	1004bf4 <__udivsi3>
 1003a44:	b009883a 	mov	r4,r22
 1003a48:	b80b883a 	mov	r5,r23
 1003a4c:	1023883a 	mov	r17,r2
 1003a50:	1004bfc0 	call	1004bfc <__umodsi3>
 1003a54:	1004943a 	slli	r2,r2,16
 1003a58:	9808d43a 	srli	r4,r19,16
 1003a5c:	8f2d383a 	mul	r22,r17,fp
 1003a60:	d9800317 	ldw	r6,12(sp)
 1003a64:	1106b03a 	or	r3,r2,r4
 1003a68:	1d80062e 	bgeu	r3,r22,1003a84 <__divdf3+0x3b4>
 1003a6c:	1c07883a 	add	r3,r3,r16
 1003a70:	88bfffc4 	addi	r2,r17,-1
 1003a74:	1c00dc36 	bltu	r3,r16,1003de8 <__divdf3+0x718>
 1003a78:	1d80db2e 	bgeu	r3,r22,1003de8 <__divdf3+0x718>
 1003a7c:	8c7fff84 	addi	r17,r17,-2
 1003a80:	1c07883a 	add	r3,r3,r16
 1003a84:	1dadc83a 	sub	r22,r3,r22
 1003a88:	b009883a 	mov	r4,r22
 1003a8c:	b80b883a 	mov	r5,r23
 1003a90:	d9800315 	stw	r6,12(sp)
 1003a94:	1004bf40 	call	1004bf4 <__udivsi3>
 1003a98:	b009883a 	mov	r4,r22
 1003a9c:	b80b883a 	mov	r5,r23
 1003aa0:	d8800015 	stw	r2,0(sp)
 1003aa4:	1004bfc0 	call	1004bfc <__umodsi3>
 1003aa8:	da400017 	ldw	r9,0(sp)
 1003aac:	1004943a 	slli	r2,r2,16
 1003ab0:	9cffffcc 	andi	r19,r19,65535
 1003ab4:	4f07383a 	mul	r3,r9,fp
 1003ab8:	14c8b03a 	or	r4,r2,r19
 1003abc:	d9800317 	ldw	r6,12(sp)
 1003ac0:	20c0062e 	bgeu	r4,r3,1003adc <__divdf3+0x40c>
 1003ac4:	2409883a 	add	r4,r4,r16
 1003ac8:	48bfffc4 	addi	r2,r9,-1
 1003acc:	2400c436 	bltu	r4,r16,1003de0 <__divdf3+0x710>
 1003ad0:	20c0c32e 	bgeu	r4,r3,1003de0 <__divdf3+0x710>
 1003ad4:	4a7fff84 	addi	r9,r9,-2
 1003ad8:	2409883a 	add	r4,r4,r16
 1003adc:	8822943a 	slli	r17,r17,16
 1003ae0:	a80ed43a 	srli	r7,r21,16
 1003ae4:	aa3fffcc 	andi	r8,r21,65535
 1003ae8:	4c62b03a 	or	r17,r9,r17
 1003aec:	8816d43a 	srli	r11,r17,16
 1003af0:	897fffcc 	andi	r5,r17,65535
 1003af4:	2a15383a 	mul	r10,r5,r8
 1003af8:	5a19383a 	mul	r12,r11,r8
 1003afc:	29cb383a 	mul	r5,r5,r7
 1003b00:	5012d43a 	srli	r9,r10,16
 1003b04:	20c5c83a 	sub	r2,r4,r3
 1003b08:	614b883a 	add	r5,r12,r5
 1003b0c:	2a4b883a 	add	r5,r5,r9
 1003b10:	59c7383a 	mul	r3,r11,r7
 1003b14:	2b00022e 	bgeu	r5,r12,1003b20 <__divdf3+0x450>
 1003b18:	01000074 	movhi	r4,1
 1003b1c:	1907883a 	add	r3,r3,r4
 1003b20:	2808d43a 	srli	r4,r5,16
 1003b24:	280a943a 	slli	r5,r5,16
 1003b28:	54ffffcc 	andi	r19,r10,65535
 1003b2c:	1907883a 	add	r3,r3,r4
 1003b30:	2ccb883a 	add	r5,r5,r19
 1003b34:	10c09336 	bltu	r2,r3,1003d84 <__divdf3+0x6b4>
 1003b38:	10c0ad26 	beq	r2,r3,1003df0 <__divdf3+0x720>
 1003b3c:	10c7c83a 	sub	r3,r2,r3
 1003b40:	3167c83a 	sub	r19,r6,r5
 1003b44:	34ed803a 	cmpltu	r22,r6,r19
 1003b48:	1dadc83a 	sub	r22,r3,r22
 1003b4c:	b400b226 	beq	r22,r16,1003e18 <__divdf3+0x748>
 1003b50:	b009883a 	mov	r4,r22
 1003b54:	b80b883a 	mov	r5,r23
 1003b58:	d9c00115 	stw	r7,4(sp)
 1003b5c:	da000215 	stw	r8,8(sp)
 1003b60:	1004bf40 	call	1004bf4 <__udivsi3>
 1003b64:	b009883a 	mov	r4,r22
 1003b68:	b80b883a 	mov	r5,r23
 1003b6c:	d8800315 	stw	r2,12(sp)
 1003b70:	1004bfc0 	call	1004bfc <__umodsi3>
 1003b74:	d9800317 	ldw	r6,12(sp)
 1003b78:	1004943a 	slli	r2,r2,16
 1003b7c:	9808d43a 	srli	r4,r19,16
 1003b80:	372d383a 	mul	r22,r6,fp
 1003b84:	d9c00117 	ldw	r7,4(sp)
 1003b88:	1106b03a 	or	r3,r2,r4
 1003b8c:	da000217 	ldw	r8,8(sp)
 1003b90:	1d80062e 	bgeu	r3,r22,1003bac <__divdf3+0x4dc>
 1003b94:	1c07883a 	add	r3,r3,r16
 1003b98:	30bfffc4 	addi	r2,r6,-1
 1003b9c:	1c00a036 	bltu	r3,r16,1003e20 <__divdf3+0x750>
 1003ba0:	1d809f2e 	bgeu	r3,r22,1003e20 <__divdf3+0x750>
 1003ba4:	31bfff84 	addi	r6,r6,-2
 1003ba8:	1c07883a 	add	r3,r3,r16
 1003bac:	1dadc83a 	sub	r22,r3,r22
 1003bb0:	b009883a 	mov	r4,r22
 1003bb4:	b80b883a 	mov	r5,r23
 1003bb8:	d9800315 	stw	r6,12(sp)
 1003bbc:	d9c00115 	stw	r7,4(sp)
 1003bc0:	da000215 	stw	r8,8(sp)
 1003bc4:	1004bf40 	call	1004bf4 <__udivsi3>
 1003bc8:	b009883a 	mov	r4,r22
 1003bcc:	b80b883a 	mov	r5,r23
 1003bd0:	d8800015 	stw	r2,0(sp)
 1003bd4:	1004bfc0 	call	1004bfc <__umodsi3>
 1003bd8:	da400017 	ldw	r9,0(sp)
 1003bdc:	1004943a 	slli	r2,r2,16
 1003be0:	993fffcc 	andi	r4,r19,65535
 1003be4:	4f39383a 	mul	fp,r9,fp
 1003be8:	1106b03a 	or	r3,r2,r4
 1003bec:	d9800317 	ldw	r6,12(sp)
 1003bf0:	d9c00117 	ldw	r7,4(sp)
 1003bf4:	da000217 	ldw	r8,8(sp)
 1003bf8:	1f00062e 	bgeu	r3,fp,1003c14 <__divdf3+0x544>
 1003bfc:	1c07883a 	add	r3,r3,r16
 1003c00:	48bfffc4 	addi	r2,r9,-1
 1003c04:	1c008836 	bltu	r3,r16,1003e28 <__divdf3+0x758>
 1003c08:	1f00872e 	bgeu	r3,fp,1003e28 <__divdf3+0x758>
 1003c0c:	4a7fff84 	addi	r9,r9,-2
 1003c10:	1c07883a 	add	r3,r3,r16
 1003c14:	3008943a 	slli	r4,r6,16
 1003c18:	1f07c83a 	sub	r3,r3,fp
 1003c1c:	4926b03a 	or	r19,r9,r4
 1003c20:	993fffcc 	andi	r4,r19,65535
 1003c24:	980cd43a 	srli	r6,r19,16
 1003c28:	220b383a 	mul	r5,r4,r8
 1003c2c:	21c5383a 	mul	r2,r4,r7
 1003c30:	3211383a 	mul	r8,r6,r8
 1003c34:	2808d43a 	srli	r4,r5,16
 1003c38:	31cf383a 	mul	r7,r6,r7
 1003c3c:	4085883a 	add	r2,r8,r2
 1003c40:	1105883a 	add	r2,r2,r4
 1003c44:	1200022e 	bgeu	r2,r8,1003c50 <__divdf3+0x580>
 1003c48:	01000074 	movhi	r4,1
 1003c4c:	390f883a 	add	r7,r7,r4
 1003c50:	1008d43a 	srli	r4,r2,16
 1003c54:	1004943a 	slli	r2,r2,16
 1003c58:	297fffcc 	andi	r5,r5,65535
 1003c5c:	390f883a 	add	r7,r7,r4
 1003c60:	1145883a 	add	r2,r2,r5
 1003c64:	19c06536 	bltu	r3,r7,1003dfc <__divdf3+0x72c>
 1003c68:	19c09f26 	beq	r3,r7,1003ee8 <__divdf3+0x818>
 1003c6c:	9cc00054 	ori	r19,r19,1
 1003c70:	a100ffc4 	addi	r4,r20,1023
 1003c74:	013f500e 	bge	zero,r4,10039b8 <__alt_data_end+0xff8039b8>
 1003c78:	988001cc 	andi	r2,r19,7
 1003c7c:	10000726 	beq	r2,zero,1003c9c <__divdf3+0x5cc>
 1003c80:	98c003cc 	andi	r3,r19,15
 1003c84:	00800104 	movi	r2,4
 1003c88:	18800426 	beq	r3,r2,1003c9c <__divdf3+0x5cc>
 1003c8c:	9885883a 	add	r2,r19,r2
 1003c90:	14e1803a 	cmpltu	r16,r2,r19
 1003c94:	8c23883a 	add	r17,r17,r16
 1003c98:	1027883a 	mov	r19,r2
 1003c9c:	8880402c 	andhi	r2,r17,256
 1003ca0:	10000426 	beq	r2,zero,1003cb4 <__divdf3+0x5e4>
 1003ca4:	00bfc034 	movhi	r2,65280
 1003ca8:	10bfffc4 	addi	r2,r2,-1
 1003cac:	a1010004 	addi	r4,r20,1024
 1003cb0:	88a2703a 	and	r17,r17,r2
 1003cb4:	0081ff84 	movi	r2,2046
 1003cb8:	113edf16 	blt	r2,r4,1003838 <__alt_data_end+0xff803838>
 1003cbc:	9826d0fa 	srli	r19,r19,3
 1003cc0:	8804977a 	slli	r2,r17,29
 1003cc4:	8820927a 	slli	r16,r17,9
 1003cc8:	2101ffcc 	andi	r4,r4,2047
 1003ccc:	14e6b03a 	or	r19,r2,r19
 1003cd0:	800ad33a 	srli	r5,r16,12
 1003cd4:	9180004c 	andi	r6,r18,1
 1003cd8:	003edb06 	br	1003848 <__alt_data_end+0xff803848>
 1003cdc:	008000c4 	movi	r2,3
 1003ce0:	4080a826 	beq	r8,r2,1003f84 <__divdf3+0x8b4>
 1003ce4:	00800044 	movi	r2,1
 1003ce8:	4080551e 	bne	r8,r2,1003e40 <__divdf3+0x770>
 1003cec:	e00d883a 	mov	r6,fp
 1003cf0:	0009883a 	mov	r4,zero
 1003cf4:	000b883a 	mov	r5,zero
 1003cf8:	0027883a 	mov	r19,zero
 1003cfc:	003ed206 	br	1003848 <__alt_data_end+0xff803848>
 1003d00:	00800434 	movhi	r2,16
 1003d04:	89400234 	orhi	r5,r17,8
 1003d08:	10bfffc4 	addi	r2,r2,-1
 1003d0c:	b00d883a 	mov	r6,r22
 1003d10:	288a703a 	and	r5,r5,r2
 1003d14:	003f2606 	br	10039b0 <__alt_data_end+0xff8039b0>
 1003d18:	d9800315 	stw	r6,12(sp)
 1003d1c:	d9c00115 	stw	r7,4(sp)
 1003d20:	1004a740 	call	1004a74 <__clzsi2>
 1003d24:	10c00804 	addi	r3,r2,32
 1003d28:	010009c4 	movi	r4,39
 1003d2c:	d9800317 	ldw	r6,12(sp)
 1003d30:	d9c00117 	ldw	r7,4(sp)
 1003d34:	20fee30e 	bge	r4,r3,10038c4 <__alt_data_end+0xff8038c4>
 1003d38:	117ffe04 	addi	r5,r2,-8
 1003d3c:	9162983a 	sll	r17,r18,r5
 1003d40:	0027883a 	mov	r19,zero
 1003d44:	003ee606 	br	10038e0 <__alt_data_end+0xff8038e0>
 1003d48:	3009883a 	mov	r4,r6
 1003d4c:	d9800315 	stw	r6,12(sp)
 1003d50:	da000215 	stw	r8,8(sp)
 1003d54:	da400015 	stw	r9,0(sp)
 1003d58:	1004a740 	call	1004a74 <__clzsi2>
 1003d5c:	10c00804 	addi	r3,r2,32
 1003d60:	010009c4 	movi	r4,39
 1003d64:	d9800317 	ldw	r6,12(sp)
 1003d68:	da000217 	ldw	r8,8(sp)
 1003d6c:	da400017 	ldw	r9,0(sp)
 1003d70:	20fef20e 	bge	r4,r3,100393c <__alt_data_end+0xff80393c>
 1003d74:	10bffe04 	addi	r2,r2,-8
 1003d78:	a8a0983a 	sll	r16,r21,r2
 1003d7c:	002b883a 	mov	r21,zero
 1003d80:	003ef506 	br	1003958 <__alt_data_end+0xff803958>
 1003d84:	354d883a 	add	r6,r6,r21
 1003d88:	3549803a 	cmpltu	r4,r6,r21
 1003d8c:	2409883a 	add	r4,r4,r16
 1003d90:	2089883a 	add	r4,r4,r2
 1003d94:	88bfffc4 	addi	r2,r17,-1
 1003d98:	81000c2e 	bgeu	r16,r4,1003dcc <__divdf3+0x6fc>
 1003d9c:	20c04436 	bltu	r4,r3,1003eb0 <__divdf3+0x7e0>
 1003da0:	19006f26 	beq	r3,r4,1003f60 <__divdf3+0x890>
 1003da4:	20c7c83a 	sub	r3,r4,r3
 1003da8:	1023883a 	mov	r17,r2
 1003dac:	003f6406 	br	1003b40 <__alt_data_end+0xff803b40>
 1003db0:	9d7f1736 	bltu	r19,r21,1003a10 <__alt_data_end+0xff803a10>
 1003db4:	9806d07a 	srli	r3,r19,1
 1003db8:	880497fa 	slli	r2,r17,31
 1003dbc:	980c97fa 	slli	r6,r19,31
 1003dc0:	882cd07a 	srli	r22,r17,1
 1003dc4:	18a6b03a 	or	r19,r3,r2
 1003dc8:	003f1406 	br	1003a1c <__alt_data_end+0xff803a1c>
 1003dcc:	243ff51e 	bne	r4,r16,1003da4 <__alt_data_end+0xff803da4>
 1003dd0:	357ff22e 	bgeu	r6,r21,1003d9c <__alt_data_end+0xff803d9c>
 1003dd4:	80c7c83a 	sub	r3,r16,r3
 1003dd8:	1023883a 	mov	r17,r2
 1003ddc:	003f5806 	br	1003b40 <__alt_data_end+0xff803b40>
 1003de0:	1013883a 	mov	r9,r2
 1003de4:	003f3d06 	br	1003adc <__alt_data_end+0xff803adc>
 1003de8:	1023883a 	mov	r17,r2
 1003dec:	003f2506 	br	1003a84 <__alt_data_end+0xff803a84>
 1003df0:	317fe436 	bltu	r6,r5,1003d84 <__alt_data_end+0xff803d84>
 1003df4:	0007883a 	mov	r3,zero
 1003df8:	003f5106 	br	1003b40 <__alt_data_end+0xff803b40>
 1003dfc:	1c07883a 	add	r3,r3,r16
 1003e00:	993fffc4 	addi	r4,r19,-1
 1003e04:	1c000a2e 	bgeu	r3,r16,1003e30 <__divdf3+0x760>
 1003e08:	2027883a 	mov	r19,r4
 1003e0c:	19ff971e 	bne	r3,r7,1003c6c <__alt_data_end+0xff803c6c>
 1003e10:	a8bf961e 	bne	r21,r2,1003c6c <__alt_data_end+0xff803c6c>
 1003e14:	003f9606 	br	1003c70 <__alt_data_end+0xff803c70>
 1003e18:	04ffffc4 	movi	r19,-1
 1003e1c:	003f9406 	br	1003c70 <__alt_data_end+0xff803c70>
 1003e20:	100d883a 	mov	r6,r2
 1003e24:	003f6106 	br	1003bac <__alt_data_end+0xff803bac>
 1003e28:	1013883a 	mov	r9,r2
 1003e2c:	003f7906 	br	1003c14 <__alt_data_end+0xff803c14>
 1003e30:	19c02636 	bltu	r3,r7,1003ecc <__divdf3+0x7fc>
 1003e34:	38c04d26 	beq	r7,r3,1003f6c <__divdf3+0x89c>
 1003e38:	2027883a 	mov	r19,r4
 1003e3c:	003f8b06 	br	1003c6c <__alt_data_end+0xff803c6c>
 1003e40:	e025883a 	mov	r18,fp
 1003e44:	003f8a06 	br	1003c70 <__alt_data_end+0xff803c70>
 1003e48:	008007c4 	movi	r2,31
 1003e4c:	14002a16 	blt	r2,r16,1003ef8 <__divdf3+0x828>
 1003e50:	a5010784 	addi	r20,r20,1054
 1003e54:	8d04983a 	sll	r2,r17,r20
 1003e58:	9c06d83a 	srl	r3,r19,r16
 1003e5c:	9d28983a 	sll	r20,r19,r20
 1003e60:	8c20d83a 	srl	r16,r17,r16
 1003e64:	1886b03a 	or	r3,r3,r2
 1003e68:	a004c03a 	cmpne	r2,r20,zero
 1003e6c:	1884b03a 	or	r2,r3,r2
 1003e70:	10c001cc 	andi	r3,r2,7
 1003e74:	18000726 	beq	r3,zero,1003e94 <__divdf3+0x7c4>
 1003e78:	110003cc 	andi	r4,r2,15
 1003e7c:	00c00104 	movi	r3,4
 1003e80:	20c00426 	beq	r4,r3,1003e94 <__divdf3+0x7c4>
 1003e84:	10c00104 	addi	r3,r2,4
 1003e88:	1885803a 	cmpltu	r2,r3,r2
 1003e8c:	80a1883a 	add	r16,r16,r2
 1003e90:	1805883a 	mov	r2,r3
 1003e94:	80c0202c 	andhi	r3,r16,128
 1003e98:	18002d26 	beq	r3,zero,1003f50 <__divdf3+0x880>
 1003e9c:	9180004c 	andi	r6,r18,1
 1003ea0:	01000044 	movi	r4,1
 1003ea4:	000b883a 	mov	r5,zero
 1003ea8:	0027883a 	mov	r19,zero
 1003eac:	003e6606 	br	1003848 <__alt_data_end+0xff803848>
 1003eb0:	354d883a 	add	r6,r6,r21
 1003eb4:	356d803a 	cmpltu	r22,r6,r21
 1003eb8:	b42d883a 	add	r22,r22,r16
 1003ebc:	b12d883a 	add	r22,r22,r4
 1003ec0:	8c7fff84 	addi	r17,r17,-2
 1003ec4:	b0c7c83a 	sub	r3,r22,r3
 1003ec8:	003f1d06 	br	1003b40 <__alt_data_end+0xff803b40>
 1003ecc:	ad4b883a 	add	r5,r21,r21
 1003ed0:	2d6b803a 	cmpltu	r21,r5,r21
 1003ed4:	ac2b883a 	add	r21,r21,r16
 1003ed8:	1d47883a 	add	r3,r3,r21
 1003edc:	993fff84 	addi	r4,r19,-2
 1003ee0:	282b883a 	mov	r21,r5
 1003ee4:	003fc806 	br	1003e08 <__alt_data_end+0xff803e08>
 1003ee8:	103fc41e 	bne	r2,zero,1003dfc <__alt_data_end+0xff803dfc>
 1003eec:	002b883a 	mov	r21,zero
 1003ef0:	a8bf5e1e 	bne	r21,r2,1003c6c <__alt_data_end+0xff803c6c>
 1003ef4:	003f5e06 	br	1003c70 <__alt_data_end+0xff803c70>
 1003ef8:	00bef884 	movi	r2,-1054
 1003efc:	1505c83a 	sub	r2,r2,r20
 1003f00:	00c00804 	movi	r3,32
 1003f04:	8884d83a 	srl	r2,r17,r2
 1003f08:	80c01c26 	beq	r16,r3,1003f7c <__divdf3+0x8ac>
 1003f0c:	a0c10f84 	addi	r3,r20,1086
 1003f10:	88c6983a 	sll	r3,r17,r3
 1003f14:	1cc6b03a 	or	r3,r3,r19
 1003f18:	1806c03a 	cmpne	r3,r3,zero
 1003f1c:	1884b03a 	or	r2,r3,r2
 1003f20:	140001cc 	andi	r16,r2,7
 1003f24:	8000061e 	bne	r16,zero,1003f40 <__divdf3+0x870>
 1003f28:	000b883a 	mov	r5,zero
 1003f2c:	1004d0fa 	srli	r2,r2,3
 1003f30:	9180004c 	andi	r6,r18,1
 1003f34:	0009883a 	mov	r4,zero
 1003f38:	1426b03a 	or	r19,r2,r16
 1003f3c:	003e4206 	br	1003848 <__alt_data_end+0xff803848>
 1003f40:	110003cc 	andi	r4,r2,15
 1003f44:	00c00104 	movi	r3,4
 1003f48:	0021883a 	mov	r16,zero
 1003f4c:	20ffcd1e 	bne	r4,r3,1003e84 <__alt_data_end+0xff803e84>
 1003f50:	800a927a 	slli	r5,r16,9
 1003f54:	8020977a 	slli	r16,r16,29
 1003f58:	280ad33a 	srli	r5,r5,12
 1003f5c:	003ff306 	br	1003f2c <__alt_data_end+0xff803f2c>
 1003f60:	317fd336 	bltu	r6,r5,1003eb0 <__alt_data_end+0xff803eb0>
 1003f64:	1023883a 	mov	r17,r2
 1003f68:	003fa206 	br	1003df4 <__alt_data_end+0xff803df4>
 1003f6c:	a8bfd736 	bltu	r21,r2,1003ecc <__alt_data_end+0xff803ecc>
 1003f70:	2027883a 	mov	r19,r4
 1003f74:	a8bf3d1e 	bne	r21,r2,1003c6c <__alt_data_end+0xff803c6c>
 1003f78:	003f3d06 	br	1003c70 <__alt_data_end+0xff803c70>
 1003f7c:	0007883a 	mov	r3,zero
 1003f80:	003fe406 	br	1003f14 <__alt_data_end+0xff803f14>
 1003f84:	00800434 	movhi	r2,16
 1003f88:	89400234 	orhi	r5,r17,8
 1003f8c:	10bfffc4 	addi	r2,r2,-1
 1003f90:	e00d883a 	mov	r6,fp
 1003f94:	288a703a 	and	r5,r5,r2
 1003f98:	003e8506 	br	10039b0 <__alt_data_end+0xff8039b0>

01003f9c <__eqdf2>:
 1003f9c:	2804d53a 	srli	r2,r5,20
 1003fa0:	3806d53a 	srli	r3,r7,20
 1003fa4:	02000434 	movhi	r8,16
 1003fa8:	423fffc4 	addi	r8,r8,-1
 1003fac:	1081ffcc 	andi	r2,r2,2047
 1003fb0:	0241ffc4 	movi	r9,2047
 1003fb4:	2a14703a 	and	r10,r5,r8
 1003fb8:	18c1ffcc 	andi	r3,r3,2047
 1003fbc:	3a10703a 	and	r8,r7,r8
 1003fc0:	280ad7fa 	srli	r5,r5,31
 1003fc4:	380ed7fa 	srli	r7,r7,31
 1003fc8:	12400f26 	beq	r2,r9,1004008 <__eqdf2+0x6c>
 1003fcc:	0241ffc4 	movi	r9,2047
 1003fd0:	1a400326 	beq	r3,r9,1003fe0 <__eqdf2+0x44>
 1003fd4:	10c00526 	beq	r2,r3,1003fec <__eqdf2+0x50>
 1003fd8:	00800044 	movi	r2,1
 1003fdc:	f800283a 	ret
 1003fe0:	4192b03a 	or	r9,r8,r6
 1003fe4:	483ffc1e 	bne	r9,zero,1003fd8 <__alt_data_end+0xff803fd8>
 1003fe8:	10fffb1e 	bne	r2,r3,1003fd8 <__alt_data_end+0xff803fd8>
 1003fec:	523ffa1e 	bne	r10,r8,1003fd8 <__alt_data_end+0xff803fd8>
 1003ff0:	21bff91e 	bne	r4,r6,1003fd8 <__alt_data_end+0xff803fd8>
 1003ff4:	29c00826 	beq	r5,r7,1004018 <__eqdf2+0x7c>
 1003ff8:	103ff71e 	bne	r2,zero,1003fd8 <__alt_data_end+0xff803fd8>
 1003ffc:	5104b03a 	or	r2,r10,r4
 1004000:	1004c03a 	cmpne	r2,r2,zero
 1004004:	f800283a 	ret
 1004008:	5112b03a 	or	r9,r10,r4
 100400c:	483fef26 	beq	r9,zero,1003fcc <__alt_data_end+0xff803fcc>
 1004010:	00800044 	movi	r2,1
 1004014:	f800283a 	ret
 1004018:	0005883a 	mov	r2,zero
 100401c:	f800283a 	ret

01004020 <__muldf3>:
 1004020:	defff204 	addi	sp,sp,-56
 1004024:	2804d53a 	srli	r2,r5,20
 1004028:	dd800a15 	stw	r22,40(sp)
 100402c:	282cd7fa 	srli	r22,r5,31
 1004030:	dc000415 	stw	r16,16(sp)
 1004034:	04000434 	movhi	r16,16
 1004038:	df000c15 	stw	fp,48(sp)
 100403c:	dd000815 	stw	r20,32(sp)
 1004040:	dcc00715 	stw	r19,28(sp)
 1004044:	dc800615 	stw	r18,24(sp)
 1004048:	dc400515 	stw	r17,20(sp)
 100404c:	843fffc4 	addi	r16,r16,-1
 1004050:	dfc00d15 	stw	ra,52(sp)
 1004054:	ddc00b15 	stw	r23,44(sp)
 1004058:	dd400915 	stw	r21,36(sp)
 100405c:	1501ffcc 	andi	r20,r2,2047
 1004060:	2023883a 	mov	r17,r4
 1004064:	2025883a 	mov	r18,r4
 1004068:	2c20703a 	and	r16,r5,r16
 100406c:	b027883a 	mov	r19,r22
 1004070:	b7003fcc 	andi	fp,r22,255
 1004074:	a0005926 	beq	r20,zero,10041dc <__muldf3+0x1bc>
 1004078:	0081ffc4 	movi	r2,2047
 100407c:	a0803426 	beq	r20,r2,1004150 <__muldf3+0x130>
 1004080:	84000434 	orhi	r16,r16,16
 1004084:	2004d77a 	srli	r2,r4,29
 1004088:	802090fa 	slli	r16,r16,3
 100408c:	202490fa 	slli	r18,r4,3
 1004090:	a53f0044 	addi	r20,r20,-1023
 1004094:	80a0b03a 	or	r16,r16,r2
 1004098:	002b883a 	mov	r21,zero
 100409c:	0015883a 	mov	r10,zero
 10040a0:	3812d53a 	srli	r9,r7,20
 10040a4:	3806d7fa 	srli	r3,r7,31
 10040a8:	02000434 	movhi	r8,16
 10040ac:	423fffc4 	addi	r8,r8,-1
 10040b0:	4941ffcc 	andi	r5,r9,2047
 10040b4:	302f883a 	mov	r23,r6
 10040b8:	3a22703a 	and	r17,r7,r8
 10040bc:	1ac03fcc 	andi	r11,r3,255
 10040c0:	28006226 	beq	r5,zero,100424c <__muldf3+0x22c>
 10040c4:	0081ffc4 	movi	r2,2047
 10040c8:	28805a26 	beq	r5,r2,1004234 <__muldf3+0x214>
 10040cc:	8a000434 	orhi	r8,r17,16
 10040d0:	3004d77a 	srli	r2,r6,29
 10040d4:	401090fa 	slli	r8,r8,3
 10040d8:	302e90fa 	slli	r23,r6,3
 10040dc:	297f0044 	addi	r5,r5,-1023
 10040e0:	40a2b03a 	or	r17,r8,r2
 10040e4:	0013883a 	mov	r9,zero
 10040e8:	4d4cb03a 	or	r6,r9,r21
 10040ec:	300c90ba 	slli	r6,r6,2
 10040f0:	02004034 	movhi	r8,256
 10040f4:	42104404 	addi	r8,r8,16656
 10040f8:	320d883a 	add	r6,r6,r8
 10040fc:	31800017 	ldw	r6,0(r6)
 1004100:	a14b883a 	add	r5,r20,r5
 1004104:	1dacf03a 	xor	r22,r3,r22
 1004108:	2b000044 	addi	r12,r5,1
 100410c:	3000683a 	jmp	r6
 1004110:	0100434c 	andi	r4,zero,269
 1004114:	01004338 	rdprs	r4,zero,268
 1004118:	01004338 	rdprs	r4,zero,268
 100411c:	01004324 	muli	r4,zero,268
 1004120:	0100416c 	andhi	r4,zero,261
 1004124:	0100416c 	andhi	r4,zero,261
 1004128:	0100430c 	andi	r4,zero,268
 100412c:	01004324 	muli	r4,zero,268
 1004130:	0100416c 	andhi	r4,zero,261
 1004134:	0100430c 	andi	r4,zero,268
 1004138:	0100416c 	andhi	r4,zero,261
 100413c:	01004324 	muli	r4,zero,268
 1004140:	01004170 	cmpltui	r4,zero,261
 1004144:	01004170 	cmpltui	r4,zero,261
 1004148:	01004170 	cmpltui	r4,zero,261
 100414c:	01004548 	cmpgei	r4,zero,277
 1004150:	8104b03a 	or	r2,r16,r4
 1004154:	10006a1e 	bne	r2,zero,1004300 <__muldf3+0x2e0>
 1004158:	05400204 	movi	r21,8
 100415c:	0021883a 	mov	r16,zero
 1004160:	0025883a 	mov	r18,zero
 1004164:	02800084 	movi	r10,2
 1004168:	003fcd06 	br	10040a0 <__alt_data_end+0xff8040a0>
 100416c:	b039883a 	mov	fp,r22
 1004170:	00800084 	movi	r2,2
 1004174:	50804e1e 	bne	r10,r2,10042b0 <__muldf3+0x290>
 1004178:	e4c0004c 	andi	r19,fp,1
 100417c:	0101ffc4 	movi	r4,2047
 1004180:	0021883a 	mov	r16,zero
 1004184:	0025883a 	mov	r18,zero
 1004188:	2008953a 	slli	r4,r4,20
 100418c:	98c03fcc 	andi	r3,r19,255
 1004190:	01400434 	movhi	r5,16
 1004194:	297fffc4 	addi	r5,r5,-1
 1004198:	180697fa 	slli	r3,r3,31
 100419c:	8160703a 	and	r16,r16,r5
 10041a0:	8120b03a 	or	r16,r16,r4
 10041a4:	80c6b03a 	or	r3,r16,r3
 10041a8:	9005883a 	mov	r2,r18
 10041ac:	dfc00d17 	ldw	ra,52(sp)
 10041b0:	df000c17 	ldw	fp,48(sp)
 10041b4:	ddc00b17 	ldw	r23,44(sp)
 10041b8:	dd800a17 	ldw	r22,40(sp)
 10041bc:	dd400917 	ldw	r21,36(sp)
 10041c0:	dd000817 	ldw	r20,32(sp)
 10041c4:	dcc00717 	ldw	r19,28(sp)
 10041c8:	dc800617 	ldw	r18,24(sp)
 10041cc:	dc400517 	ldw	r17,20(sp)
 10041d0:	dc000417 	ldw	r16,16(sp)
 10041d4:	dec00e04 	addi	sp,sp,56
 10041d8:	f800283a 	ret
 10041dc:	8104b03a 	or	r2,r16,r4
 10041e0:	10004226 	beq	r2,zero,10042ec <__muldf3+0x2cc>
 10041e4:	8000f926 	beq	r16,zero,10045cc <__muldf3+0x5ac>
 10041e8:	8009883a 	mov	r4,r16
 10041ec:	d9800315 	stw	r6,12(sp)
 10041f0:	d9c00015 	stw	r7,0(sp)
 10041f4:	1004a740 	call	1004a74 <__clzsi2>
 10041f8:	d9800317 	ldw	r6,12(sp)
 10041fc:	d9c00017 	ldw	r7,0(sp)
 1004200:	1007883a 	mov	r3,r2
 1004204:	01000a04 	movi	r4,40
 1004208:	18bffe04 	addi	r2,r3,-8
 100420c:	20c9c83a 	sub	r4,r4,r3
 1004210:	80a0983a 	sll	r16,r16,r2
 1004214:	8908d83a 	srl	r4,r17,r4
 1004218:	88a4983a 	sll	r18,r17,r2
 100421c:	2420b03a 	or	r16,r4,r16
 1004220:	017f0344 	movi	r5,-1011
 1004224:	28e9c83a 	sub	r20,r5,r3
 1004228:	002b883a 	mov	r21,zero
 100422c:	0015883a 	mov	r10,zero
 1004230:	003f9b06 	br	10040a0 <__alt_data_end+0xff8040a0>
 1004234:	8984b03a 	or	r2,r17,r6
 1004238:	10002a1e 	bne	r2,zero,10042e4 <__muldf3+0x2c4>
 100423c:	0023883a 	mov	r17,zero
 1004240:	002f883a 	mov	r23,zero
 1004244:	02400084 	movi	r9,2
 1004248:	003fa706 	br	10040e8 <__alt_data_end+0xff8040e8>
 100424c:	8984b03a 	or	r2,r17,r6
 1004250:	10002026 	beq	r2,zero,10042d4 <__muldf3+0x2b4>
 1004254:	8800cc26 	beq	r17,zero,1004588 <__muldf3+0x568>
 1004258:	8809883a 	mov	r4,r17
 100425c:	d8c00215 	stw	r3,8(sp)
 1004260:	d9800315 	stw	r6,12(sp)
 1004264:	da800015 	stw	r10,0(sp)
 1004268:	dac00115 	stw	r11,4(sp)
 100426c:	1004a740 	call	1004a74 <__clzsi2>
 1004270:	d8c00217 	ldw	r3,8(sp)
 1004274:	d9800317 	ldw	r6,12(sp)
 1004278:	da800017 	ldw	r10,0(sp)
 100427c:	dac00117 	ldw	r11,4(sp)
 1004280:	1009883a 	mov	r4,r2
 1004284:	01400a04 	movi	r5,40
 1004288:	25fffe04 	addi	r23,r4,-8
 100428c:	290bc83a 	sub	r5,r5,r4
 1004290:	8dd0983a 	sll	r8,r17,r23
 1004294:	314ad83a 	srl	r5,r6,r5
 1004298:	35ee983a 	sll	r23,r6,r23
 100429c:	2a22b03a 	or	r17,r5,r8
 10042a0:	017f0344 	movi	r5,-1011
 10042a4:	290bc83a 	sub	r5,r5,r4
 10042a8:	0013883a 	mov	r9,zero
 10042ac:	003f8e06 	br	10040e8 <__alt_data_end+0xff8040e8>
 10042b0:	008000c4 	movi	r2,3
 10042b4:	50811d26 	beq	r10,r2,100472c <__muldf3+0x70c>
 10042b8:	00800044 	movi	r2,1
 10042bc:	5080e01e 	bne	r10,r2,1004640 <__muldf3+0x620>
 10042c0:	e0a6703a 	and	r19,fp,r2
 10042c4:	0009883a 	mov	r4,zero
 10042c8:	0021883a 	mov	r16,zero
 10042cc:	0025883a 	mov	r18,zero
 10042d0:	003fad06 	br	1004188 <__alt_data_end+0xff804188>
 10042d4:	0023883a 	mov	r17,zero
 10042d8:	002f883a 	mov	r23,zero
 10042dc:	02400044 	movi	r9,1
 10042e0:	003f8106 	br	10040e8 <__alt_data_end+0xff8040e8>
 10042e4:	024000c4 	movi	r9,3
 10042e8:	003f7f06 	br	10040e8 <__alt_data_end+0xff8040e8>
 10042ec:	05400104 	movi	r21,4
 10042f0:	0021883a 	mov	r16,zero
 10042f4:	0025883a 	mov	r18,zero
 10042f8:	02800044 	movi	r10,1
 10042fc:	003f6806 	br	10040a0 <__alt_data_end+0xff8040a0>
 1004300:	05400304 	movi	r21,12
 1004304:	028000c4 	movi	r10,3
 1004308:	003f6506 	br	10040a0 <__alt_data_end+0xff8040a0>
 100430c:	04000434 	movhi	r16,16
 1004310:	0027883a 	mov	r19,zero
 1004314:	843fffc4 	addi	r16,r16,-1
 1004318:	04bfffc4 	movi	r18,-1
 100431c:	0101ffc4 	movi	r4,2047
 1004320:	003f9906 	br	1004188 <__alt_data_end+0xff804188>
 1004324:	8821883a 	mov	r16,r17
 1004328:	b825883a 	mov	r18,r23
 100432c:	5839883a 	mov	fp,r11
 1004330:	4815883a 	mov	r10,r9
 1004334:	003f8e06 	br	1004170 <__alt_data_end+0xff804170>
 1004338:	8821883a 	mov	r16,r17
 100433c:	b825883a 	mov	r18,r23
 1004340:	b039883a 	mov	fp,r22
 1004344:	4815883a 	mov	r10,r9
 1004348:	003f8906 	br	1004170 <__alt_data_end+0xff804170>
 100434c:	b80cd43a 	srli	r6,r23,16
 1004350:	9006d43a 	srli	r3,r18,16
 1004354:	90bfffcc 	andi	r2,r18,65535
 1004358:	bdffffcc 	andi	r23,r23,65535
 100435c:	b891383a 	mul	r8,r23,r2
 1004360:	b8c9383a 	mul	r4,r23,r3
 1004364:	309b383a 	mul	r13,r6,r2
 1004368:	400ed43a 	srli	r7,r8,16
 100436c:	30df383a 	mul	r15,r6,r3
 1004370:	235b883a 	add	r13,r4,r13
 1004374:	69db883a 	add	r13,r13,r7
 1004378:	6900022e 	bgeu	r13,r4,1004384 <__muldf3+0x364>
 100437c:	01000074 	movhi	r4,1
 1004380:	791f883a 	add	r15,r15,r4
 1004384:	8828d43a 	srli	r20,r17,16
 1004388:	8c7fffcc 	andi	r17,r17,65535
 100438c:	888f383a 	mul	r7,r17,r2
 1004390:	88d3383a 	mul	r9,r17,r3
 1004394:	a0a5383a 	mul	r18,r20,r2
 1004398:	3816d43a 	srli	r11,r7,16
 100439c:	6814943a 	slli	r10,r13,16
 10043a0:	4ca5883a 	add	r18,r9,r18
 10043a4:	423fffcc 	andi	r8,r8,65535
 10043a8:	92e5883a 	add	r18,r18,r11
 10043ac:	6808d43a 	srli	r4,r13,16
 10043b0:	5215883a 	add	r10,r10,r8
 10043b4:	a0c7383a 	mul	r3,r20,r3
 10043b8:	9240022e 	bgeu	r18,r9,10043c4 <__muldf3+0x3a4>
 10043bc:	00800074 	movhi	r2,1
 10043c0:	1887883a 	add	r3,r3,r2
 10043c4:	802ad43a 	srli	r21,r16,16
 10043c8:	80bfffcc 	andi	r2,r16,65535
 10043cc:	b893383a 	mul	r9,r23,r2
 10043d0:	3091383a 	mul	r8,r6,r2
 10043d4:	bd6f383a 	mul	r23,r23,r21
 10043d8:	9026943a 	slli	r19,r18,16
 10043dc:	481ad43a 	srli	r13,r9,16
 10043e0:	9024d43a 	srli	r18,r18,16
 10043e4:	39ffffcc 	andi	r7,r7,65535
 10043e8:	ba11883a 	add	r8,r23,r8
 10043ec:	99e7883a 	add	r19,r19,r7
 10043f0:	4351883a 	add	r8,r8,r13
 10043f4:	1c97883a 	add	r11,r3,r18
 10043f8:	354d383a 	mul	r6,r6,r21
 10043fc:	9925883a 	add	r18,r19,r4
 1004400:	45c0022e 	bgeu	r8,r23,100440c <__muldf3+0x3ec>
 1004404:	00c00074 	movhi	r3,1
 1004408:	30cd883a 	add	r6,r6,r3
 100440c:	8889383a 	mul	r4,r17,r2
 1004410:	8d63383a 	mul	r17,r17,r21
 1004414:	a085383a 	mul	r2,r20,r2
 1004418:	200ed43a 	srli	r7,r4,16
 100441c:	401cd43a 	srli	r14,r8,16
 1004420:	401a943a 	slli	r13,r8,16
 1004424:	8885883a 	add	r2,r17,r2
 1004428:	4a3fffcc 	andi	r8,r9,65535
 100442c:	11c5883a 	add	r2,r2,r7
 1004430:	339d883a 	add	r14,r6,r14
 1004434:	6a11883a 	add	r8,r13,r8
 1004438:	a561383a 	mul	r16,r20,r21
 100443c:	1440022e 	bgeu	r2,r17,1004448 <__muldf3+0x428>
 1004440:	00c00074 	movhi	r3,1
 1004444:	80e1883a 	add	r16,r16,r3
 1004448:	1006943a 	slli	r3,r2,16
 100444c:	213fffcc 	andi	r4,r4,65535
 1004450:	93db883a 	add	r13,r18,r15
 1004454:	1909883a 	add	r4,r3,r4
 1004458:	22c7883a 	add	r3,r4,r11
 100445c:	6cd3803a 	cmpltu	r9,r13,r19
 1004460:	6a09883a 	add	r4,r13,r8
 1004464:	1a5b883a 	add	r13,r3,r9
 1004468:	2211803a 	cmpltu	r8,r4,r8
 100446c:	734d883a 	add	r6,r14,r13
 1004470:	100ed43a 	srli	r7,r2,16
 1004474:	6a53803a 	cmpltu	r9,r13,r9
 1004478:	3205883a 	add	r2,r6,r8
 100447c:	1ac7803a 	cmpltu	r3,r3,r11
 1004480:	1211803a 	cmpltu	r8,r2,r8
 1004484:	48c6b03a 	or	r3,r9,r3
 1004488:	338d803a 	cmpltu	r6,r6,r14
 100448c:	19c7883a 	add	r3,r3,r7
 1004490:	418cb03a 	or	r6,r8,r6
 1004494:	1987883a 	add	r3,r3,r6
 1004498:	2024927a 	slli	r18,r4,9
 100449c:	1c07883a 	add	r3,r3,r16
 10044a0:	1806927a 	slli	r3,r3,9
 10044a4:	1020d5fa 	srli	r16,r2,23
 10044a8:	2008d5fa 	srli	r4,r4,23
 10044ac:	9294b03a 	or	r10,r18,r10
 10044b0:	1004927a 	slli	r2,r2,9
 10044b4:	5024c03a 	cmpne	r18,r10,zero
 10044b8:	1c20b03a 	or	r16,r3,r16
 10044bc:	9108b03a 	or	r4,r18,r4
 10044c0:	80c0402c 	andhi	r3,r16,256
 10044c4:	20a4b03a 	or	r18,r4,r2
 10044c8:	18000726 	beq	r3,zero,10044e8 <__muldf3+0x4c8>
 10044cc:	9006d07a 	srli	r3,r18,1
 10044d0:	800897fa 	slli	r4,r16,31
 10044d4:	9080004c 	andi	r2,r18,1
 10044d8:	8020d07a 	srli	r16,r16,1
 10044dc:	10c4b03a 	or	r2,r2,r3
 10044e0:	1124b03a 	or	r18,r2,r4
 10044e4:	600b883a 	mov	r5,r12
 10044e8:	2900ffc4 	addi	r4,r5,1023
 10044ec:	01004b0e 	bge	zero,r4,100461c <__muldf3+0x5fc>
 10044f0:	908001cc 	andi	r2,r18,7
 10044f4:	10000726 	beq	r2,zero,1004514 <__muldf3+0x4f4>
 10044f8:	90c003cc 	andi	r3,r18,15
 10044fc:	00800104 	movi	r2,4
 1004500:	18800426 	beq	r3,r2,1004514 <__muldf3+0x4f4>
 1004504:	9087883a 	add	r3,r18,r2
 1004508:	1c85803a 	cmpltu	r2,r3,r18
 100450c:	80a1883a 	add	r16,r16,r2
 1004510:	1825883a 	mov	r18,r3
 1004514:	8080402c 	andhi	r2,r16,256
 1004518:	10000426 	beq	r2,zero,100452c <__muldf3+0x50c>
 100451c:	00bfc034 	movhi	r2,65280
 1004520:	10bfffc4 	addi	r2,r2,-1
 1004524:	29010004 	addi	r4,r5,1024
 1004528:	80a0703a 	and	r16,r16,r2
 100452c:	0081ff84 	movi	r2,2046
 1004530:	1100320e 	bge	r2,r4,10045fc <__muldf3+0x5dc>
 1004534:	b4c0004c 	andi	r19,r22,1
 1004538:	0101ffc4 	movi	r4,2047
 100453c:	0021883a 	mov	r16,zero
 1004540:	0025883a 	mov	r18,zero
 1004544:	003f1006 	br	1004188 <__alt_data_end+0xff804188>
 1004548:	8080022c 	andhi	r2,r16,8
 100454c:	10000926 	beq	r2,zero,1004574 <__muldf3+0x554>
 1004550:	8880022c 	andhi	r2,r17,8
 1004554:	1000071e 	bne	r2,zero,1004574 <__muldf3+0x554>
 1004558:	00800434 	movhi	r2,16
 100455c:	8c000234 	orhi	r16,r17,8
 1004560:	10bfffc4 	addi	r2,r2,-1
 1004564:	1827883a 	mov	r19,r3
 1004568:	80a0703a 	and	r16,r16,r2
 100456c:	b825883a 	mov	r18,r23
 1004570:	003f6a06 	br	100431c <__alt_data_end+0xff80431c>
 1004574:	00800434 	movhi	r2,16
 1004578:	84000234 	orhi	r16,r16,8
 100457c:	10bfffc4 	addi	r2,r2,-1
 1004580:	80a0703a 	and	r16,r16,r2
 1004584:	003f6506 	br	100431c <__alt_data_end+0xff80431c>
 1004588:	3009883a 	mov	r4,r6
 100458c:	d8c00215 	stw	r3,8(sp)
 1004590:	d9800315 	stw	r6,12(sp)
 1004594:	da800015 	stw	r10,0(sp)
 1004598:	dac00115 	stw	r11,4(sp)
 100459c:	1004a740 	call	1004a74 <__clzsi2>
 10045a0:	11000804 	addi	r4,r2,32
 10045a4:	014009c4 	movi	r5,39
 10045a8:	d8c00217 	ldw	r3,8(sp)
 10045ac:	d9800317 	ldw	r6,12(sp)
 10045b0:	da800017 	ldw	r10,0(sp)
 10045b4:	dac00117 	ldw	r11,4(sp)
 10045b8:	293f320e 	bge	r5,r4,1004284 <__alt_data_end+0xff804284>
 10045bc:	10bffe04 	addi	r2,r2,-8
 10045c0:	b8a2983a 	sll	r17,r23,r2
 10045c4:	002f883a 	mov	r23,zero
 10045c8:	003f3506 	br	10042a0 <__alt_data_end+0xff8042a0>
 10045cc:	d9800315 	stw	r6,12(sp)
 10045d0:	d9c00015 	stw	r7,0(sp)
 10045d4:	1004a740 	call	1004a74 <__clzsi2>
 10045d8:	10c00804 	addi	r3,r2,32
 10045dc:	010009c4 	movi	r4,39
 10045e0:	d9800317 	ldw	r6,12(sp)
 10045e4:	d9c00017 	ldw	r7,0(sp)
 10045e8:	20ff060e 	bge	r4,r3,1004204 <__alt_data_end+0xff804204>
 10045ec:	10bffe04 	addi	r2,r2,-8
 10045f0:	88a0983a 	sll	r16,r17,r2
 10045f4:	0025883a 	mov	r18,zero
 10045f8:	003f0906 	br	1004220 <__alt_data_end+0xff804220>
 10045fc:	9004d0fa 	srli	r2,r18,3
 1004600:	8024977a 	slli	r18,r16,29
 1004604:	8020927a 	slli	r16,r16,9
 1004608:	2101ffcc 	andi	r4,r4,2047
 100460c:	90a4b03a 	or	r18,r18,r2
 1004610:	8020d33a 	srli	r16,r16,12
 1004614:	b4c0004c 	andi	r19,r22,1
 1004618:	003edb06 	br	1004188 <__alt_data_end+0xff804188>
 100461c:	00ff0084 	movi	r3,-1022
 1004620:	1947c83a 	sub	r3,r3,r5
 1004624:	00800e04 	movi	r2,56
 1004628:	10c0080e 	bge	r2,r3,100464c <__muldf3+0x62c>
 100462c:	b4c0004c 	andi	r19,r22,1
 1004630:	0009883a 	mov	r4,zero
 1004634:	0021883a 	mov	r16,zero
 1004638:	0025883a 	mov	r18,zero
 100463c:	003ed206 	br	1004188 <__alt_data_end+0xff804188>
 1004640:	600b883a 	mov	r5,r12
 1004644:	e02d883a 	mov	r22,fp
 1004648:	003fa706 	br	10044e8 <__alt_data_end+0xff8044e8>
 100464c:	008007c4 	movi	r2,31
 1004650:	10c01816 	blt	r2,r3,10046b4 <__muldf3+0x694>
 1004654:	29410784 	addi	r5,r5,1054
 1004658:	8144983a 	sll	r2,r16,r5
 100465c:	90c8d83a 	srl	r4,r18,r3
 1004660:	914a983a 	sll	r5,r18,r5
 1004664:	80c6d83a 	srl	r3,r16,r3
 1004668:	2088b03a 	or	r4,r4,r2
 100466c:	2804c03a 	cmpne	r2,r5,zero
 1004670:	2084b03a 	or	r2,r4,r2
 1004674:	110001cc 	andi	r4,r2,7
 1004678:	20000726 	beq	r4,zero,1004698 <__muldf3+0x678>
 100467c:	114003cc 	andi	r5,r2,15
 1004680:	01000104 	movi	r4,4
 1004684:	29000426 	beq	r5,r4,1004698 <__muldf3+0x678>
 1004688:	11000104 	addi	r4,r2,4
 100468c:	2085803a 	cmpltu	r2,r4,r2
 1004690:	1887883a 	add	r3,r3,r2
 1004694:	2005883a 	mov	r2,r4
 1004698:	1900202c 	andhi	r4,r3,128
 100469c:	20001826 	beq	r4,zero,1004700 <__muldf3+0x6e0>
 10046a0:	b4c0004c 	andi	r19,r22,1
 10046a4:	01000044 	movi	r4,1
 10046a8:	0021883a 	mov	r16,zero
 10046ac:	0025883a 	mov	r18,zero
 10046b0:	003eb506 	br	1004188 <__alt_data_end+0xff804188>
 10046b4:	00bef884 	movi	r2,-1054
 10046b8:	1145c83a 	sub	r2,r2,r5
 10046bc:	8088d83a 	srl	r4,r16,r2
 10046c0:	00800804 	movi	r2,32
 10046c4:	18801726 	beq	r3,r2,1004724 <__muldf3+0x704>
 10046c8:	28810f84 	addi	r2,r5,1086
 10046cc:	8084983a 	sll	r2,r16,r2
 10046d0:	1484b03a 	or	r2,r2,r18
 10046d4:	1004c03a 	cmpne	r2,r2,zero
 10046d8:	1104b03a 	or	r2,r2,r4
 10046dc:	10c001cc 	andi	r3,r2,7
 10046e0:	18000b1e 	bne	r3,zero,1004710 <__muldf3+0x6f0>
 10046e4:	0021883a 	mov	r16,zero
 10046e8:	1004d0fa 	srli	r2,r2,3
 10046ec:	b4c0004c 	andi	r19,r22,1
 10046f0:	0009883a 	mov	r4,zero
 10046f4:	10e4b03a 	or	r18,r2,r3
 10046f8:	003ea306 	br	1004188 <__alt_data_end+0xff804188>
 10046fc:	0007883a 	mov	r3,zero
 1004700:	1820927a 	slli	r16,r3,9
 1004704:	1806977a 	slli	r3,r3,29
 1004708:	8020d33a 	srli	r16,r16,12
 100470c:	003ff606 	br	10046e8 <__alt_data_end+0xff8046e8>
 1004710:	110003cc 	andi	r4,r2,15
 1004714:	00c00104 	movi	r3,4
 1004718:	20fff826 	beq	r4,r3,10046fc <__alt_data_end+0xff8046fc>
 100471c:	0007883a 	mov	r3,zero
 1004720:	003fd906 	br	1004688 <__alt_data_end+0xff804688>
 1004724:	0005883a 	mov	r2,zero
 1004728:	003fe906 	br	10046d0 <__alt_data_end+0xff8046d0>
 100472c:	00800434 	movhi	r2,16
 1004730:	84000234 	orhi	r16,r16,8
 1004734:	10bfffc4 	addi	r2,r2,-1
 1004738:	e4c0004c 	andi	r19,fp,1
 100473c:	80a0703a 	and	r16,r16,r2
 1004740:	003ef606 	br	100431c <__alt_data_end+0xff80431c>

01004744 <__fixdfsi>:
 1004744:	2806d53a 	srli	r3,r5,20
 1004748:	00800434 	movhi	r2,16
 100474c:	10bfffc4 	addi	r2,r2,-1
 1004750:	18c1ffcc 	andi	r3,r3,2047
 1004754:	0180ff84 	movi	r6,1022
 1004758:	2884703a 	and	r2,r5,r2
 100475c:	280ad7fa 	srli	r5,r5,31
 1004760:	30c0130e 	bge	r6,r3,10047b0 <__fixdfsi+0x6c>
 1004764:	01810744 	movi	r6,1053
 1004768:	30c00d16 	blt	r6,r3,10047a0 <__fixdfsi+0x5c>
 100476c:	01810cc4 	movi	r6,1075
 1004770:	30cdc83a 	sub	r6,r6,r3
 1004774:	01c007c4 	movi	r7,31
 1004778:	10800434 	orhi	r2,r2,16
 100477c:	39800e0e 	bge	r7,r6,10047b8 <__fixdfsi+0x74>
 1004780:	010104c4 	movi	r4,1043
 1004784:	20c7c83a 	sub	r3,r4,r3
 1004788:	10c6d83a 	srl	r3,r2,r3
 100478c:	29403fcc 	andi	r5,r5,255
 1004790:	0145c83a 	sub	r2,zero,r5
 1004794:	1884f03a 	xor	r2,r3,r2
 1004798:	1145883a 	add	r2,r2,r5
 100479c:	f800283a 	ret
 10047a0:	00a00034 	movhi	r2,32768
 10047a4:	10bfffc4 	addi	r2,r2,-1
 10047a8:	2885883a 	add	r2,r5,r2
 10047ac:	f800283a 	ret
 10047b0:	0005883a 	mov	r2,zero
 10047b4:	f800283a 	ret
 10047b8:	18fefb44 	addi	r3,r3,-1043
 10047bc:	2188d83a 	srl	r4,r4,r6
 10047c0:	10c6983a 	sll	r3,r2,r3
 10047c4:	20c6b03a 	or	r3,r4,r3
 10047c8:	003ff006 	br	100478c <__alt_data_end+0xff80478c>

010047cc <__extendsfdf2>:
 10047cc:	200ad5fa 	srli	r5,r4,23
 10047d0:	defffd04 	addi	sp,sp,-12
 10047d4:	dc400115 	stw	r17,4(sp)
 10047d8:	29403fcc 	andi	r5,r5,255
 10047dc:	29800044 	addi	r6,r5,1
 10047e0:	04402034 	movhi	r17,128
 10047e4:	dc000015 	stw	r16,0(sp)
 10047e8:	8c7fffc4 	addi	r17,r17,-1
 10047ec:	dfc00215 	stw	ra,8(sp)
 10047f0:	31803fcc 	andi	r6,r6,255
 10047f4:	00800044 	movi	r2,1
 10047f8:	8922703a 	and	r17,r17,r4
 10047fc:	2020d7fa 	srli	r16,r4,31
 1004800:	1180110e 	bge	r2,r6,1004848 <__extendsfdf2+0x7c>
 1004804:	880ed0fa 	srli	r7,r17,3
 1004808:	8822977a 	slli	r17,r17,29
 100480c:	2940e004 	addi	r5,r5,896
 1004810:	2941ffcc 	andi	r5,r5,2047
 1004814:	280c953a 	slli	r6,r5,20
 1004818:	01400434 	movhi	r5,16
 100481c:	800697fa 	slli	r3,r16,31
 1004820:	297fffc4 	addi	r5,r5,-1
 1004824:	394a703a 	and	r5,r7,r5
 1004828:	298ab03a 	or	r5,r5,r6
 100482c:	8805883a 	mov	r2,r17
 1004830:	28c6b03a 	or	r3,r5,r3
 1004834:	dfc00217 	ldw	ra,8(sp)
 1004838:	dc400117 	ldw	r17,4(sp)
 100483c:	dc000017 	ldw	r16,0(sp)
 1004840:	dec00304 	addi	sp,sp,12
 1004844:	f800283a 	ret
 1004848:	2800111e 	bne	r5,zero,1004890 <__extendsfdf2+0xc4>
 100484c:	88001c26 	beq	r17,zero,10048c0 <__extendsfdf2+0xf4>
 1004850:	8809883a 	mov	r4,r17
 1004854:	1004a740 	call	1004a74 <__clzsi2>
 1004858:	00c00284 	movi	r3,10
 100485c:	18801b16 	blt	r3,r2,10048cc <__extendsfdf2+0x100>
 1004860:	01c002c4 	movi	r7,11
 1004864:	388fc83a 	sub	r7,r7,r2
 1004868:	10c00544 	addi	r3,r2,21
 100486c:	89ced83a 	srl	r7,r17,r7
 1004870:	88e2983a 	sll	r17,r17,r3
 1004874:	0180e244 	movi	r6,905
 1004878:	308bc83a 	sub	r5,r6,r2
 100487c:	01800434 	movhi	r6,16
 1004880:	31bfffc4 	addi	r6,r6,-1
 1004884:	398e703a 	and	r7,r7,r6
 1004888:	2941ffcc 	andi	r5,r5,2047
 100488c:	003fe006 	br	1004810 <__alt_data_end+0xff804810>
 1004890:	88000826 	beq	r17,zero,10048b4 <__extendsfdf2+0xe8>
 1004894:	880ed0fa 	srli	r7,r17,3
 1004898:	00800434 	movhi	r2,16
 100489c:	10bfffc4 	addi	r2,r2,-1
 10048a0:	39c00234 	orhi	r7,r7,8
 10048a4:	8822977a 	slli	r17,r17,29
 10048a8:	388e703a 	and	r7,r7,r2
 10048ac:	0141ffc4 	movi	r5,2047
 10048b0:	003fd706 	br	1004810 <__alt_data_end+0xff804810>
 10048b4:	0141ffc4 	movi	r5,2047
 10048b8:	000f883a 	mov	r7,zero
 10048bc:	003fd406 	br	1004810 <__alt_data_end+0xff804810>
 10048c0:	000b883a 	mov	r5,zero
 10048c4:	000f883a 	mov	r7,zero
 10048c8:	003fd106 	br	1004810 <__alt_data_end+0xff804810>
 10048cc:	11fffd44 	addi	r7,r2,-11
 10048d0:	89ce983a 	sll	r7,r17,r7
 10048d4:	0023883a 	mov	r17,zero
 10048d8:	003fe606 	br	1004874 <__alt_data_end+0xff804874>

010048dc <__truncdfsf2>:
 10048dc:	2810d53a 	srli	r8,r5,20
 10048e0:	01c00434 	movhi	r7,16
 10048e4:	39ffffc4 	addi	r7,r7,-1
 10048e8:	29ce703a 	and	r7,r5,r7
 10048ec:	380e90fa 	slli	r7,r7,3
 10048f0:	4201ffcc 	andi	r8,r8,2047
 10048f4:	200cd77a 	srli	r6,r4,29
 10048f8:	42400044 	addi	r9,r8,1
 10048fc:	4a41ffcc 	andi	r9,r9,2047
 1004900:	00800044 	movi	r2,1
 1004904:	398cb03a 	or	r6,r7,r6
 1004908:	280ad7fa 	srli	r5,r5,31
 100490c:	200e90fa 	slli	r7,r4,3
 1004910:	1240230e 	bge	r2,r9,10049a0 <__truncdfsf2+0xc4>
 1004914:	40ff2004 	addi	r3,r8,-896
 1004918:	00803f84 	movi	r2,254
 100491c:	10c01516 	blt	r2,r3,1004974 <__truncdfsf2+0x98>
 1004920:	00c02d0e 	bge	zero,r3,10049d8 <__truncdfsf2+0xfc>
 1004924:	200891ba 	slli	r4,r4,6
 1004928:	300c90fa 	slli	r6,r6,3
 100492c:	380ed77a 	srli	r7,r7,29
 1004930:	2008c03a 	cmpne	r4,r4,zero
 1004934:	310cb03a 	or	r6,r6,r4
 1004938:	31ccb03a 	or	r6,r6,r7
 100493c:	308001cc 	andi	r2,r6,7
 1004940:	10000426 	beq	r2,zero,1004954 <__truncdfsf2+0x78>
 1004944:	310003cc 	andi	r4,r6,15
 1004948:	00800104 	movi	r2,4
 100494c:	20800126 	beq	r4,r2,1004954 <__truncdfsf2+0x78>
 1004950:	31800104 	addi	r6,r6,4
 1004954:	3081002c 	andhi	r2,r6,1024
 1004958:	10002326 	beq	r2,zero,10049e8 <__truncdfsf2+0x10c>
 100495c:	18c00044 	addi	r3,r3,1
 1004960:	00803fc4 	movi	r2,255
 1004964:	18800326 	beq	r3,r2,1004974 <__truncdfsf2+0x98>
 1004968:	300c91ba 	slli	r6,r6,6
 100496c:	300cd27a 	srli	r6,r6,9
 1004970:	00000206 	br	100497c <__truncdfsf2+0xa0>
 1004974:	00ffffc4 	movi	r3,-1
 1004978:	000d883a 	mov	r6,zero
 100497c:	18c03fcc 	andi	r3,r3,255
 1004980:	180895fa 	slli	r4,r3,23
 1004984:	00c02034 	movhi	r3,128
 1004988:	280a97fa 	slli	r5,r5,31
 100498c:	18ffffc4 	addi	r3,r3,-1
 1004990:	30c6703a 	and	r3,r6,r3
 1004994:	1906b03a 	or	r3,r3,r4
 1004998:	1944b03a 	or	r2,r3,r5
 100499c:	f800283a 	ret
 10049a0:	4000071e 	bne	r8,zero,10049c0 <__truncdfsf2+0xe4>
 10049a4:	31ccb03a 	or	r6,r6,r7
 10049a8:	30000d1e 	bne	r6,zero,10049e0 <__truncdfsf2+0x104>
 10049ac:	0007883a 	mov	r3,zero
 10049b0:	00802034 	movhi	r2,128
 10049b4:	10bfffc4 	addi	r2,r2,-1
 10049b8:	308c703a 	and	r6,r6,r2
 10049bc:	003fef06 	br	100497c <__alt_data_end+0xff80497c>
 10049c0:	31c8b03a 	or	r4,r6,r7
 10049c4:	203feb26 	beq	r4,zero,1004974 <__alt_data_end+0xff804974>
 10049c8:	300c90fa 	slli	r6,r6,3
 10049cc:	00c03fc4 	movi	r3,255
 10049d0:	31808034 	orhi	r6,r6,512
 10049d4:	003fd906 	br	100493c <__alt_data_end+0xff80493c>
 10049d8:	00bffa44 	movi	r2,-23
 10049dc:	1880090e 	bge	r3,r2,1004a04 <__truncdfsf2+0x128>
 10049e0:	01800144 	movi	r6,5
 10049e4:	0007883a 	mov	r3,zero
 10049e8:	00803fc4 	movi	r2,255
 10049ec:	300cd0fa 	srli	r6,r6,3
 10049f0:	18bfef1e 	bne	r3,r2,10049b0 <__alt_data_end+0xff8049b0>
 10049f4:	303fdf26 	beq	r6,zero,1004974 <__alt_data_end+0xff804974>
 10049f8:	31801034 	orhi	r6,r6,64
 10049fc:	00ffffc4 	movi	r3,-1
 1004a00:	003feb06 	br	10049b0 <__alt_data_end+0xff8049b0>
 1004a04:	0080e784 	movi	r2,926
 1004a08:	1205c83a 	sub	r2,r2,r8
 1004a0c:	00c007c4 	movi	r3,31
 1004a10:	31802034 	orhi	r6,r6,128
 1004a14:	18800916 	blt	r3,r2,1004a3c <__truncdfsf2+0x160>
 1004a18:	423f2084 	addi	r8,r8,-894
 1004a1c:	3a06983a 	sll	r3,r7,r8
 1004a20:	3210983a 	sll	r8,r6,r8
 1004a24:	388ed83a 	srl	r7,r7,r2
 1004a28:	180cc03a 	cmpne	r6,r3,zero
 1004a2c:	418cb03a 	or	r6,r8,r6
 1004a30:	31ccb03a 	or	r6,r6,r7
 1004a34:	0007883a 	mov	r3,zero
 1004a38:	003fc006 	br	100493c <__alt_data_end+0xff80493c>
 1004a3c:	00c0df84 	movi	r3,894
 1004a40:	1a07c83a 	sub	r3,r3,r8
 1004a44:	01000804 	movi	r4,32
 1004a48:	30c6d83a 	srl	r3,r6,r3
 1004a4c:	11000726 	beq	r2,r4,1004a6c <__truncdfsf2+0x190>
 1004a50:	423f2884 	addi	r8,r8,-862
 1004a54:	3210983a 	sll	r8,r6,r8
 1004a58:	41ceb03a 	or	r7,r8,r7
 1004a5c:	380ec03a 	cmpne	r7,r7,zero
 1004a60:	38ccb03a 	or	r6,r7,r3
 1004a64:	0007883a 	mov	r3,zero
 1004a68:	003fb406 	br	100493c <__alt_data_end+0xff80493c>
 1004a6c:	0011883a 	mov	r8,zero
 1004a70:	003ff906 	br	1004a58 <__alt_data_end+0xff804a58>

01004a74 <__clzsi2>:
 1004a74:	00bfffd4 	movui	r2,65535
 1004a78:	11000b36 	bltu	r2,r4,1004aa8 <__clzsi2+0x34>
 1004a7c:	00803fc4 	movi	r2,255
 1004a80:	1100122e 	bgeu	r2,r4,1004acc <__clzsi2+0x58>
 1004a84:	00c00204 	movi	r3,8
 1004a88:	01400604 	movi	r5,24
 1004a8c:	20c8d83a 	srl	r4,r4,r3
 1004a90:	008040b4 	movhi	r2,258
 1004a94:	10a4da04 	addi	r2,r2,-27800
 1004a98:	1109883a 	add	r4,r2,r4
 1004a9c:	20800003 	ldbu	r2,0(r4)
 1004aa0:	2885c83a 	sub	r2,r5,r2
 1004aa4:	f800283a 	ret
 1004aa8:	00804034 	movhi	r2,256
 1004aac:	10bfffc4 	addi	r2,r2,-1
 1004ab0:	11000336 	bltu	r2,r4,1004ac0 <__clzsi2+0x4c>
 1004ab4:	00c00404 	movi	r3,16
 1004ab8:	180b883a 	mov	r5,r3
 1004abc:	003ff306 	br	1004a8c <__alt_data_end+0xff804a8c>
 1004ac0:	00c00604 	movi	r3,24
 1004ac4:	01400204 	movi	r5,8
 1004ac8:	003ff006 	br	1004a8c <__alt_data_end+0xff804a8c>
 1004acc:	0007883a 	mov	r3,zero
 1004ad0:	01400804 	movi	r5,32
 1004ad4:	003fed06 	br	1004a8c <__alt_data_end+0xff804a8c>

01004ad8 <udivmodsi4>:
 1004ad8:	2900182e 	bgeu	r5,r4,1004b3c <udivmodsi4+0x64>
 1004adc:	28001716 	blt	r5,zero,1004b3c <udivmodsi4+0x64>
 1004ae0:	00800804 	movi	r2,32
 1004ae4:	00c00044 	movi	r3,1
 1004ae8:	00000206 	br	1004af4 <udivmodsi4+0x1c>
 1004aec:	10001126 	beq	r2,zero,1004b34 <udivmodsi4+0x5c>
 1004af0:	28000516 	blt	r5,zero,1004b08 <udivmodsi4+0x30>
 1004af4:	294b883a 	add	r5,r5,r5
 1004af8:	10bfffc4 	addi	r2,r2,-1
 1004afc:	18c7883a 	add	r3,r3,r3
 1004b00:	293ffa36 	bltu	r5,r4,1004aec <__alt_data_end+0xff804aec>
 1004b04:	18000b26 	beq	r3,zero,1004b34 <udivmodsi4+0x5c>
 1004b08:	0005883a 	mov	r2,zero
 1004b0c:	21400236 	bltu	r4,r5,1004b18 <udivmodsi4+0x40>
 1004b10:	2149c83a 	sub	r4,r4,r5
 1004b14:	10c4b03a 	or	r2,r2,r3
 1004b18:	1806d07a 	srli	r3,r3,1
 1004b1c:	280ad07a 	srli	r5,r5,1
 1004b20:	183ffa1e 	bne	r3,zero,1004b0c <__alt_data_end+0xff804b0c>
 1004b24:	3000011e 	bne	r6,zero,1004b2c <udivmodsi4+0x54>
 1004b28:	f800283a 	ret
 1004b2c:	2005883a 	mov	r2,r4
 1004b30:	f800283a 	ret
 1004b34:	0005883a 	mov	r2,zero
 1004b38:	003ffa06 	br	1004b24 <__alt_data_end+0xff804b24>
 1004b3c:	00c00044 	movi	r3,1
 1004b40:	003ff106 	br	1004b08 <__alt_data_end+0xff804b08>

01004b44 <__divsi3>:
 1004b44:	defffe04 	addi	sp,sp,-8
 1004b48:	dfc00115 	stw	ra,4(sp)
 1004b4c:	dc000015 	stw	r16,0(sp)
 1004b50:	20000b16 	blt	r4,zero,1004b80 <__divsi3+0x3c>
 1004b54:	0021883a 	mov	r16,zero
 1004b58:	28000c16 	blt	r5,zero,1004b8c <__divsi3+0x48>
 1004b5c:	000d883a 	mov	r6,zero
 1004b60:	1004ad80 	call	1004ad8 <udivmodsi4>
 1004b64:	0407c83a 	sub	r3,zero,r16
 1004b68:	1884f03a 	xor	r2,r3,r2
 1004b6c:	1405883a 	add	r2,r2,r16
 1004b70:	dfc00117 	ldw	ra,4(sp)
 1004b74:	dc000017 	ldw	r16,0(sp)
 1004b78:	dec00204 	addi	sp,sp,8
 1004b7c:	f800283a 	ret
 1004b80:	0109c83a 	sub	r4,zero,r4
 1004b84:	04000044 	movi	r16,1
 1004b88:	283ff40e 	bge	r5,zero,1004b5c <__alt_data_end+0xff804b5c>
 1004b8c:	014bc83a 	sub	r5,zero,r5
 1004b90:	8400005c 	xori	r16,r16,1
 1004b94:	003ff106 	br	1004b5c <__alt_data_end+0xff804b5c>

01004b98 <__modsi3>:
 1004b98:	defffd04 	addi	sp,sp,-12
 1004b9c:	dfc00215 	stw	ra,8(sp)
 1004ba0:	dc400115 	stw	r17,4(sp)
 1004ba4:	dc000015 	stw	r16,0(sp)
 1004ba8:	20000c16 	blt	r4,zero,1004bdc <__modsi3+0x44>
 1004bac:	0023883a 	mov	r17,zero
 1004bb0:	0021883a 	mov	r16,zero
 1004bb4:	28000d16 	blt	r5,zero,1004bec <__modsi3+0x54>
 1004bb8:	01800044 	movi	r6,1
 1004bbc:	1004ad80 	call	1004ad8 <udivmodsi4>
 1004bc0:	1404f03a 	xor	r2,r2,r16
 1004bc4:	8885883a 	add	r2,r17,r2
 1004bc8:	dfc00217 	ldw	ra,8(sp)
 1004bcc:	dc400117 	ldw	r17,4(sp)
 1004bd0:	dc000017 	ldw	r16,0(sp)
 1004bd4:	dec00304 	addi	sp,sp,12
 1004bd8:	f800283a 	ret
 1004bdc:	0109c83a 	sub	r4,zero,r4
 1004be0:	04400044 	movi	r17,1
 1004be4:	043fffc4 	movi	r16,-1
 1004be8:	283ff30e 	bge	r5,zero,1004bb8 <__alt_data_end+0xff804bb8>
 1004bec:	014bc83a 	sub	r5,zero,r5
 1004bf0:	003ff106 	br	1004bb8 <__alt_data_end+0xff804bb8>

01004bf4 <__udivsi3>:
 1004bf4:	000d883a 	mov	r6,zero
 1004bf8:	1004ad81 	jmpi	1004ad8 <udivmodsi4>

01004bfc <__umodsi3>:
 1004bfc:	01800044 	movi	r6,1
 1004c00:	1004ad81 	jmpi	1004ad8 <udivmodsi4>

01004c04 <atof>:
 1004c04:	000b883a 	mov	r5,zero
 1004c08:	1006e541 	jmpi	1006e54 <strtod>

01004c0c <atoi>:
 1004c0c:	000b883a 	mov	r5,zero
 1004c10:	01800284 	movi	r6,10
 1004c14:	10071d41 	jmpi	10071d4 <strtol>

01004c18 <_atoi_r>:
 1004c18:	000d883a 	mov	r6,zero
 1004c1c:	01c00284 	movi	r7,10
 1004c20:	1006f741 	jmpi	1006f74 <_strtol_r>

01004c24 <atol>:
 1004c24:	000b883a 	mov	r5,zero
 1004c28:	01800284 	movi	r6,10
 1004c2c:	10071d41 	jmpi	10071d4 <strtol>

01004c30 <_atol_r>:
 1004c30:	000d883a 	mov	r6,zero
 1004c34:	01c00284 	movi	r7,10
 1004c38:	1006f741 	jmpi	1006f74 <_strtol_r>

01004c3c <__errno>:
 1004c3c:	008040b4 	movhi	r2,258
 1004c40:	10ad3804 	addi	r2,r2,-19232
 1004c44:	10800017 	ldw	r2,0(r2)
 1004c48:	f800283a 	ret

01004c4c <_printf_r>:
 1004c4c:	defffd04 	addi	sp,sp,-12
 1004c50:	dfc00015 	stw	ra,0(sp)
 1004c54:	d9800115 	stw	r6,4(sp)
 1004c58:	d9c00215 	stw	r7,8(sp)
 1004c5c:	280d883a 	mov	r6,r5
 1004c60:	21400217 	ldw	r5,8(r4)
 1004c64:	d9c00104 	addi	r7,sp,4
 1004c68:	10091880 	call	1009188 <___vfprintf_internal_r>
 1004c6c:	dfc00017 	ldw	ra,0(sp)
 1004c70:	dec00304 	addi	sp,sp,12
 1004c74:	f800283a 	ret

01004c78 <printf>:
 1004c78:	defffc04 	addi	sp,sp,-16
 1004c7c:	dfc00015 	stw	ra,0(sp)
 1004c80:	d9400115 	stw	r5,4(sp)
 1004c84:	d9800215 	stw	r6,8(sp)
 1004c88:	d9c00315 	stw	r7,12(sp)
 1004c8c:	008040b4 	movhi	r2,258
 1004c90:	10ad3804 	addi	r2,r2,-19232
 1004c94:	10800017 	ldw	r2,0(r2)
 1004c98:	200b883a 	mov	r5,r4
 1004c9c:	d9800104 	addi	r6,sp,4
 1004ca0:	11000217 	ldw	r4,8(r2)
 1004ca4:	100b1840 	call	100b184 <__vfprintf_internal>
 1004ca8:	dfc00017 	ldw	ra,0(sp)
 1004cac:	dec00404 	addi	sp,sp,16
 1004cb0:	f800283a 	ret

01004cb4 <_puts_r>:
 1004cb4:	defff604 	addi	sp,sp,-40
 1004cb8:	dc000715 	stw	r16,28(sp)
 1004cbc:	2021883a 	mov	r16,r4
 1004cc0:	2809883a 	mov	r4,r5
 1004cc4:	dc400815 	stw	r17,32(sp)
 1004cc8:	dfc00915 	stw	ra,36(sp)
 1004ccc:	2823883a 	mov	r17,r5
 1004cd0:	1004fa80 	call	1004fa8 <strlen>
 1004cd4:	00c040b4 	movhi	r3,258
 1004cd8:	18ed3804 	addi	r3,r3,-19232
 1004cdc:	18c00017 	ldw	r3,0(r3)
 1004ce0:	11000044 	addi	r4,r2,1
 1004ce4:	d8800115 	stw	r2,4(sp)
 1004ce8:	18c00217 	ldw	r3,8(r3)
 1004cec:	014040b4 	movhi	r5,258
 1004cf0:	2965bc04 	addi	r5,r5,-26896
 1004cf4:	1880030b 	ldhu	r2,12(r3)
 1004cf8:	d9400215 	stw	r5,8(sp)
 1004cfc:	d9000615 	stw	r4,24(sp)
 1004d00:	01400044 	movi	r5,1
 1004d04:	01000084 	movi	r4,2
 1004d08:	d9000515 	stw	r4,20(sp)
 1004d0c:	dc400015 	stw	r17,0(sp)
 1004d10:	d9400315 	stw	r5,12(sp)
 1004d14:	dec00415 	stw	sp,16(sp)
 1004d18:	1108000c 	andi	r4,r2,8192
 1004d1c:	2000061e 	bne	r4,zero,1004d38 <_puts_r+0x84>
 1004d20:	19401917 	ldw	r5,100(r3)
 1004d24:	0137ffc4 	movi	r4,-8193
 1004d28:	10880014 	ori	r2,r2,8192
 1004d2c:	2908703a 	and	r4,r5,r4
 1004d30:	1880030d 	sth	r2,12(r3)
 1004d34:	19001915 	stw	r4,100(r3)
 1004d38:	81400217 	ldw	r5,8(r16)
 1004d3c:	8009883a 	mov	r4,r16
 1004d40:	d9800404 	addi	r6,sp,16
 1004d44:	100d60c0 	call	100d60c <__sfvwrite_r>
 1004d48:	1000061e 	bne	r2,zero,1004d64 <_puts_r+0xb0>
 1004d4c:	00800284 	movi	r2,10
 1004d50:	dfc00917 	ldw	ra,36(sp)
 1004d54:	dc400817 	ldw	r17,32(sp)
 1004d58:	dc000717 	ldw	r16,28(sp)
 1004d5c:	dec00a04 	addi	sp,sp,40
 1004d60:	f800283a 	ret
 1004d64:	00bfffc4 	movi	r2,-1
 1004d68:	003ff906 	br	1004d50 <__alt_data_end+0xff804d50>

01004d6c <puts>:
 1004d6c:	008040b4 	movhi	r2,258
 1004d70:	10ad3804 	addi	r2,r2,-19232
 1004d74:	200b883a 	mov	r5,r4
 1004d78:	11000017 	ldw	r4,0(r2)
 1004d7c:	1004cb41 	jmpi	1004cb4 <_puts_r>

01004d80 <_sprintf_r>:
 1004d80:	deffe404 	addi	sp,sp,-112
 1004d84:	2807883a 	mov	r3,r5
 1004d88:	dfc01a15 	stw	ra,104(sp)
 1004d8c:	d9c01b15 	stw	r7,108(sp)
 1004d90:	00a00034 	movhi	r2,32768
 1004d94:	10bfffc4 	addi	r2,r2,-1
 1004d98:	02008204 	movi	r8,520
 1004d9c:	d8800215 	stw	r2,8(sp)
 1004da0:	d8800515 	stw	r2,20(sp)
 1004da4:	d80b883a 	mov	r5,sp
 1004da8:	d9c01b04 	addi	r7,sp,108
 1004dac:	00bfffc4 	movi	r2,-1
 1004db0:	d8c00015 	stw	r3,0(sp)
 1004db4:	d8c00415 	stw	r3,16(sp)
 1004db8:	da00030d 	sth	r8,12(sp)
 1004dbc:	d880038d 	sth	r2,14(sp)
 1004dc0:	10071f80 	call	10071f8 <___svfprintf_internal_r>
 1004dc4:	d8c00017 	ldw	r3,0(sp)
 1004dc8:	18000005 	stb	zero,0(r3)
 1004dcc:	dfc01a17 	ldw	ra,104(sp)
 1004dd0:	dec01c04 	addi	sp,sp,112
 1004dd4:	f800283a 	ret

01004dd8 <sprintf>:
 1004dd8:	deffe304 	addi	sp,sp,-116
 1004ddc:	2007883a 	mov	r3,r4
 1004de0:	dfc01a15 	stw	ra,104(sp)
 1004de4:	d9801b15 	stw	r6,108(sp)
 1004de8:	d9c01c15 	stw	r7,112(sp)
 1004dec:	010040b4 	movhi	r4,258
 1004df0:	212d3804 	addi	r4,r4,-19232
 1004df4:	21000017 	ldw	r4,0(r4)
 1004df8:	00a00034 	movhi	r2,32768
 1004dfc:	10bfffc4 	addi	r2,r2,-1
 1004e00:	280d883a 	mov	r6,r5
 1004e04:	02008204 	movi	r8,520
 1004e08:	d8800215 	stw	r2,8(sp)
 1004e0c:	d8800515 	stw	r2,20(sp)
 1004e10:	d80b883a 	mov	r5,sp
 1004e14:	d9c01b04 	addi	r7,sp,108
 1004e18:	00bfffc4 	movi	r2,-1
 1004e1c:	d8c00015 	stw	r3,0(sp)
 1004e20:	d8c00415 	stw	r3,16(sp)
 1004e24:	da00030d 	sth	r8,12(sp)
 1004e28:	d880038d 	sth	r2,14(sp)
 1004e2c:	10071f80 	call	10071f8 <___svfprintf_internal_r>
 1004e30:	d8c00017 	ldw	r3,0(sp)
 1004e34:	18000005 	stb	zero,0(r3)
 1004e38:	dfc01a17 	ldw	ra,104(sp)
 1004e3c:	dec01d04 	addi	sp,sp,116
 1004e40:	f800283a 	ret

01004e44 <strchr>:
 1004e44:	2ac03fcc 	andi	r11,r5,255
 1004e48:	2815883a 	mov	r10,r5
 1004e4c:	208000cc 	andi	r2,r4,3
 1004e50:	58003726 	beq	r11,zero,1004f30 <strchr+0xec>
 1004e54:	10000b26 	beq	r2,zero,1004e84 <strchr+0x40>
 1004e58:	20800003 	ldbu	r2,0(r4)
 1004e5c:	10003226 	beq	r2,zero,1004f28 <strchr+0xe4>
 1004e60:	28c03fcc 	andi	r3,r5,255
 1004e64:	5880041e 	bne	r11,r2,1004e78 <strchr+0x34>
 1004e68:	00004d06 	br	1004fa0 <strchr+0x15c>
 1004e6c:	20800003 	ldbu	r2,0(r4)
 1004e70:	10002d26 	beq	r2,zero,1004f28 <strchr+0xe4>
 1004e74:	18804a26 	beq	r3,r2,1004fa0 <strchr+0x15c>
 1004e78:	21000044 	addi	r4,r4,1
 1004e7c:	208000cc 	andi	r2,r4,3
 1004e80:	103ffa1e 	bne	r2,zero,1004e6c <__alt_data_end+0xff804e6c>
 1004e84:	29403fcc 	andi	r5,r5,255
 1004e88:	280e923a 	slli	r7,r5,8
 1004e8c:	20800017 	ldw	r2,0(r4)
 1004e90:	01bfbff4 	movhi	r6,65279
 1004e94:	394ab03a 	or	r5,r7,r5
 1004e98:	280e943a 	slli	r7,r5,16
 1004e9c:	31bfbfc4 	addi	r6,r6,-257
 1004ea0:	0090303a 	nor	r8,zero,r2
 1004ea4:	394eb03a 	or	r7,r7,r5
 1004ea8:	1187883a 	add	r3,r2,r6
 1004eac:	11c4f03a 	xor	r2,r2,r7
 1004eb0:	008a303a 	nor	r5,zero,r2
 1004eb4:	1185883a 	add	r2,r2,r6
 1004eb8:	03202074 	movhi	r12,32897
 1004ebc:	2884703a 	and	r2,r5,r2
 1004ec0:	40c6703a 	and	r3,r8,r3
 1004ec4:	63202004 	addi	r12,r12,-32640
 1004ec8:	10c4b03a 	or	r2,r2,r3
 1004ecc:	1304703a 	and	r2,r2,r12
 1004ed0:	10000c1e 	bne	r2,zero,1004f04 <strchr+0xc0>
 1004ed4:	21000104 	addi	r4,r4,4
 1004ed8:	20800017 	ldw	r2,0(r4)
 1004edc:	3886f03a 	xor	r3,r7,r2
 1004ee0:	00d2303a 	nor	r9,zero,r3
 1004ee4:	198b883a 	add	r5,r3,r6
 1004ee8:	0090303a 	nor	r8,zero,r2
 1004eec:	1187883a 	add	r3,r2,r6
 1004ef0:	494a703a 	and	r5,r9,r5
 1004ef4:	40c4703a 	and	r2,r8,r3
 1004ef8:	2884b03a 	or	r2,r5,r2
 1004efc:	1304703a 	and	r2,r2,r12
 1004f00:	103ff426 	beq	r2,zero,1004ed4 <__alt_data_end+0xff804ed4>
 1004f04:	20800003 	ldbu	r2,0(r4)
 1004f08:	10000726 	beq	r2,zero,1004f28 <strchr+0xe4>
 1004f0c:	58802426 	beq	r11,r2,1004fa0 <strchr+0x15c>
 1004f10:	50c03fcc 	andi	r3,r10,255
 1004f14:	00000106 	br	1004f1c <strchr+0xd8>
 1004f18:	18802126 	beq	r3,r2,1004fa0 <strchr+0x15c>
 1004f1c:	21000044 	addi	r4,r4,1
 1004f20:	20800003 	ldbu	r2,0(r4)
 1004f24:	103ffc1e 	bne	r2,zero,1004f18 <__alt_data_end+0xff804f18>
 1004f28:	0005883a 	mov	r2,zero
 1004f2c:	f800283a 	ret
 1004f30:	10000526 	beq	r2,zero,1004f48 <strchr+0x104>
 1004f34:	20800003 	ldbu	r2,0(r4)
 1004f38:	10001926 	beq	r2,zero,1004fa0 <strchr+0x15c>
 1004f3c:	21000044 	addi	r4,r4,1
 1004f40:	208000cc 	andi	r2,r4,3
 1004f44:	103ffb1e 	bne	r2,zero,1004f34 <__alt_data_end+0xff804f34>
 1004f48:	20800017 	ldw	r2,0(r4)
 1004f4c:	01bfbff4 	movhi	r6,65279
 1004f50:	31bfbfc4 	addi	r6,r6,-257
 1004f54:	0086303a 	nor	r3,zero,r2
 1004f58:	01602074 	movhi	r5,32897
 1004f5c:	1185883a 	add	r2,r2,r6
 1004f60:	29602004 	addi	r5,r5,-32640
 1004f64:	10c4703a 	and	r2,r2,r3
 1004f68:	1144703a 	and	r2,r2,r5
 1004f6c:	10000a1e 	bne	r2,zero,1004f98 <strchr+0x154>
 1004f70:	21000104 	addi	r4,r4,4
 1004f74:	20800017 	ldw	r2,0(r4)
 1004f78:	1187883a 	add	r3,r2,r6
 1004f7c:	0084303a 	nor	r2,zero,r2
 1004f80:	1884703a 	and	r2,r3,r2
 1004f84:	1144703a 	and	r2,r2,r5
 1004f88:	103ff926 	beq	r2,zero,1004f70 <__alt_data_end+0xff804f70>
 1004f8c:	20800003 	ldbu	r2,0(r4)
 1004f90:	10000326 	beq	r2,zero,1004fa0 <strchr+0x15c>
 1004f94:	21000044 	addi	r4,r4,1
 1004f98:	20800003 	ldbu	r2,0(r4)
 1004f9c:	103ffd1e 	bne	r2,zero,1004f94 <__alt_data_end+0xff804f94>
 1004fa0:	2005883a 	mov	r2,r4
 1004fa4:	f800283a 	ret

01004fa8 <strlen>:
 1004fa8:	208000cc 	andi	r2,r4,3
 1004fac:	10002026 	beq	r2,zero,1005030 <strlen+0x88>
 1004fb0:	20800007 	ldb	r2,0(r4)
 1004fb4:	10002026 	beq	r2,zero,1005038 <strlen+0x90>
 1004fb8:	2005883a 	mov	r2,r4
 1004fbc:	00000206 	br	1004fc8 <strlen+0x20>
 1004fc0:	10c00007 	ldb	r3,0(r2)
 1004fc4:	18001826 	beq	r3,zero,1005028 <strlen+0x80>
 1004fc8:	10800044 	addi	r2,r2,1
 1004fcc:	10c000cc 	andi	r3,r2,3
 1004fd0:	183ffb1e 	bne	r3,zero,1004fc0 <__alt_data_end+0xff804fc0>
 1004fd4:	10c00017 	ldw	r3,0(r2)
 1004fd8:	01ffbff4 	movhi	r7,65279
 1004fdc:	39ffbfc4 	addi	r7,r7,-257
 1004fe0:	00ca303a 	nor	r5,zero,r3
 1004fe4:	01a02074 	movhi	r6,32897
 1004fe8:	19c7883a 	add	r3,r3,r7
 1004fec:	31a02004 	addi	r6,r6,-32640
 1004ff0:	1946703a 	and	r3,r3,r5
 1004ff4:	1986703a 	and	r3,r3,r6
 1004ff8:	1800091e 	bne	r3,zero,1005020 <strlen+0x78>
 1004ffc:	10800104 	addi	r2,r2,4
 1005000:	10c00017 	ldw	r3,0(r2)
 1005004:	19cb883a 	add	r5,r3,r7
 1005008:	00c6303a 	nor	r3,zero,r3
 100500c:	28c6703a 	and	r3,r5,r3
 1005010:	1986703a 	and	r3,r3,r6
 1005014:	183ff926 	beq	r3,zero,1004ffc <__alt_data_end+0xff804ffc>
 1005018:	00000106 	br	1005020 <strlen+0x78>
 100501c:	10800044 	addi	r2,r2,1
 1005020:	10c00007 	ldb	r3,0(r2)
 1005024:	183ffd1e 	bne	r3,zero,100501c <__alt_data_end+0xff80501c>
 1005028:	1105c83a 	sub	r2,r2,r4
 100502c:	f800283a 	ret
 1005030:	2005883a 	mov	r2,r4
 1005034:	003fe706 	br	1004fd4 <__alt_data_end+0xff804fd4>
 1005038:	0005883a 	mov	r2,zero
 100503c:	f800283a 	ret

01005040 <strncpy>:
 1005040:	2906b03a 	or	r3,r5,r4
 1005044:	18c000cc 	andi	r3,r3,3
 1005048:	2005883a 	mov	r2,r4
 100504c:	18002c1e 	bne	r3,zero,1005100 <strncpy+0xc0>
 1005050:	010000c4 	movi	r4,3
 1005054:	21802a2e 	bgeu	r4,r6,1005100 <strncpy+0xc0>
 1005058:	033fbff4 	movhi	r12,65279
 100505c:	02e02074 	movhi	r11,32897
 1005060:	633fbfc4 	addi	r12,r12,-257
 1005064:	5ae02004 	addi	r11,r11,-32640
 1005068:	100f883a 	mov	r7,r2
 100506c:	2a000017 	ldw	r8,0(r5)
 1005070:	3815883a 	mov	r10,r7
 1005074:	0212303a 	nor	r9,zero,r8
 1005078:	4307883a 	add	r3,r8,r12
 100507c:	48c6703a 	and	r3,r9,r3
 1005080:	1ac6703a 	and	r3,r3,r11
 1005084:	1800261e 	bne	r3,zero,1005120 <strncpy+0xe0>
 1005088:	39c00104 	addi	r7,r7,4
 100508c:	52000015 	stw	r8,0(r10)
 1005090:	31bfff04 	addi	r6,r6,-4
 1005094:	3811883a 	mov	r8,r7
 1005098:	29400104 	addi	r5,r5,4
 100509c:	21bff336 	bltu	r4,r6,100506c <__alt_data_end+0xff80506c>
 10050a0:	30001e26 	beq	r6,zero,100511c <strncpy+0xdc>
 10050a4:	29c00003 	ldbu	r7,0(r5)
 10050a8:	31bfffc4 	addi	r6,r6,-1
 10050ac:	40c00044 	addi	r3,r8,1
 10050b0:	41c00005 	stb	r7,0(r8)
 10050b4:	39c03fcc 	andi	r7,r7,255
 10050b8:	39c0201c 	xori	r7,r7,128
 10050bc:	39ffe004 	addi	r7,r7,-128
 10050c0:	29400044 	addi	r5,r5,1
 10050c4:	38001026 	beq	r7,zero,1005108 <strncpy+0xc8>
 10050c8:	1811883a 	mov	r8,r3
 10050cc:	00000906 	br	10050f4 <strncpy+0xb4>
 10050d0:	29c00003 	ldbu	r7,0(r5)
 10050d4:	31bfffc4 	addi	r6,r6,-1
 10050d8:	29400044 	addi	r5,r5,1
 10050dc:	41c00005 	stb	r7,0(r8)
 10050e0:	39c03fcc 	andi	r7,r7,255
 10050e4:	39c0201c 	xori	r7,r7,128
 10050e8:	39ffe004 	addi	r7,r7,-128
 10050ec:	1811883a 	mov	r8,r3
 10050f0:	38000526 	beq	r7,zero,1005108 <strncpy+0xc8>
 10050f4:	18c00044 	addi	r3,r3,1
 10050f8:	303ff51e 	bne	r6,zero,10050d0 <__alt_data_end+0xff8050d0>
 10050fc:	f800283a 	ret
 1005100:	1011883a 	mov	r8,r2
 1005104:	003fe606 	br	10050a0 <__alt_data_end+0xff8050a0>
 1005108:	30000726 	beq	r6,zero,1005128 <strncpy+0xe8>
 100510c:	198d883a 	add	r6,r3,r6
 1005110:	18000005 	stb	zero,0(r3)
 1005114:	18c00044 	addi	r3,r3,1
 1005118:	19bffd1e 	bne	r3,r6,1005110 <__alt_data_end+0xff805110>
 100511c:	f800283a 	ret
 1005120:	3811883a 	mov	r8,r7
 1005124:	003fde06 	br	10050a0 <__alt_data_end+0xff8050a0>
 1005128:	f800283a 	ret

0100512c <critical_factorization>:
 100512c:	02c00044 	movi	r11,1
 1005130:	5811883a 	mov	r8,r11
 1005134:	0013883a 	mov	r9,zero
 1005138:	00bfffc4 	movi	r2,-1
 100513c:	2087883a 	add	r3,r4,r2
 1005140:	1a0f883a 	add	r7,r3,r8
 1005144:	4247883a 	add	r3,r8,r9
 1005148:	20d5883a 	add	r10,r4,r3
 100514c:	1940102e 	bgeu	r3,r5,1005190 <critical_factorization+0x64>
 1005150:	52800003 	ldbu	r10,0(r10)
 1005154:	39c00003 	ldbu	r7,0(r7)
 1005158:	51c0042e 	bgeu	r10,r7,100516c <critical_factorization+0x40>
 100515c:	1897c83a 	sub	r11,r3,r2
 1005160:	1813883a 	mov	r9,r3
 1005164:	02000044 	movi	r8,1
 1005168:	003ff406 	br	100513c <__alt_data_end+0xff80513c>
 100516c:	51c00526 	beq	r10,r7,1005184 <critical_factorization+0x58>
 1005170:	02c00044 	movi	r11,1
 1005174:	4805883a 	mov	r2,r9
 1005178:	5811883a 	mov	r8,r11
 100517c:	4ad3883a 	add	r9,r9,r11
 1005180:	003fee06 	br	100513c <__alt_data_end+0xff80513c>
 1005184:	42c02226 	beq	r8,r11,1005210 <critical_factorization+0xe4>
 1005188:	42000044 	addi	r8,r8,1
 100518c:	003feb06 	br	100513c <__alt_data_end+0xff80513c>
 1005190:	03000044 	movi	r12,1
 1005194:	32c00015 	stw	r11,0(r6)
 1005198:	6011883a 	mov	r8,r12
 100519c:	0013883a 	mov	r9,zero
 10051a0:	02ffffc4 	movi	r11,-1
 10051a4:	22c7883a 	add	r3,r4,r11
 10051a8:	1a0f883a 	add	r7,r3,r8
 10051ac:	4247883a 	add	r3,r8,r9
 10051b0:	20d5883a 	add	r10,r4,r3
 10051b4:	1940102e 	bgeu	r3,r5,10051f8 <critical_factorization+0xcc>
 10051b8:	52800003 	ldbu	r10,0(r10)
 10051bc:	39c00003 	ldbu	r7,0(r7)
 10051c0:	3a80042e 	bgeu	r7,r10,10051d4 <critical_factorization+0xa8>
 10051c4:	1ad9c83a 	sub	r12,r3,r11
 10051c8:	1813883a 	mov	r9,r3
 10051cc:	02000044 	movi	r8,1
 10051d0:	003ff406 	br	10051a4 <__alt_data_end+0xff8051a4>
 10051d4:	51c00526 	beq	r10,r7,10051ec <critical_factorization+0xc0>
 10051d8:	03000044 	movi	r12,1
 10051dc:	4817883a 	mov	r11,r9
 10051e0:	6011883a 	mov	r8,r12
 10051e4:	4b13883a 	add	r9,r9,r12
 10051e8:	003fee06 	br	10051a4 <__alt_data_end+0xff8051a4>
 10051ec:	43000b26 	beq	r8,r12,100521c <critical_factorization+0xf0>
 10051f0:	42000044 	addi	r8,r8,1
 10051f4:	003feb06 	br	10051a4 <__alt_data_end+0xff8051a4>
 10051f8:	5ac00044 	addi	r11,r11,1
 10051fc:	10800044 	addi	r2,r2,1
 1005200:	58800236 	bltu	r11,r2,100520c <critical_factorization+0xe0>
 1005204:	33000015 	stw	r12,0(r6)
 1005208:	5805883a 	mov	r2,r11
 100520c:	f800283a 	ret
 1005210:	1813883a 	mov	r9,r3
 1005214:	02000044 	movi	r8,1
 1005218:	003fc806 	br	100513c <__alt_data_end+0xff80513c>
 100521c:	1813883a 	mov	r9,r3
 1005220:	02000044 	movi	r8,1
 1005224:	003fdf06 	br	10051a4 <__alt_data_end+0xff8051a4>

01005228 <two_way_long_needle>:
 1005228:	defef104 	addi	sp,sp,-1084
 100522c:	dc810715 	stw	r18,1052(sp)
 1005230:	dc810004 	addi	r18,sp,1024
 1005234:	df010d15 	stw	fp,1076(sp)
 1005238:	dd810b15 	stw	r22,1068(sp)
 100523c:	dc010515 	stw	r16,1044(sp)
 1005240:	302d883a 	mov	r22,r6
 1005244:	2021883a 	mov	r16,r4
 1005248:	2839883a 	mov	fp,r5
 100524c:	3009883a 	mov	r4,r6
 1005250:	380b883a 	mov	r5,r7
 1005254:	900d883a 	mov	r6,r18
 1005258:	ddc10c15 	stw	r23,1072(sp)
 100525c:	dc410615 	stw	r17,1048(sp)
 1005260:	dfc10e15 	stw	ra,1080(sp)
 1005264:	dd410a15 	stw	r21,1064(sp)
 1005268:	dd010915 	stw	r20,1060(sp)
 100526c:	dcc10815 	stw	r19,1056(sp)
 1005270:	382f883a 	mov	r23,r7
 1005274:	100512c0 	call	100512c <critical_factorization>
 1005278:	1023883a 	mov	r17,r2
 100527c:	d807883a 	mov	r3,sp
 1005280:	1dc00015 	stw	r23,0(r3)
 1005284:	18c00104 	addi	r3,r3,4
 1005288:	90fffd1e 	bne	r18,r3,1005280 <__alt_data_end+0xff805280>
 100528c:	b8000b26 	beq	r23,zero,10052bc <two_way_long_needle+0x94>
 1005290:	b93fffc4 	addi	r4,r23,-1
 1005294:	b007883a 	mov	r3,r22
 1005298:	b5cb883a 	add	r5,r22,r23
 100529c:	18800003 	ldbu	r2,0(r3)
 10052a0:	18c00044 	addi	r3,r3,1
 10052a4:	1085883a 	add	r2,r2,r2
 10052a8:	1085883a 	add	r2,r2,r2
 10052ac:	d885883a 	add	r2,sp,r2
 10052b0:	11000015 	stw	r4,0(r2)
 10052b4:	213fffc4 	addi	r4,r4,-1
 10052b8:	197ff81e 	bne	r3,r5,100529c <__alt_data_end+0xff80529c>
 10052bc:	d9410017 	ldw	r5,1024(sp)
 10052c0:	b009883a 	mov	r4,r22
 10052c4:	880d883a 	mov	r6,r17
 10052c8:	b14b883a 	add	r5,r22,r5
 10052cc:	100f37c0 	call	100f37c <memcmp>
 10052d0:	1000651e 	bne	r2,zero,1005468 <two_way_long_needle+0x240>
 10052d4:	88bfff84 	addi	r2,r17,-2
 10052d8:	b085883a 	add	r2,r22,r2
 10052dc:	88ffffc4 	addi	r3,r17,-1
 10052e0:	d8810415 	stw	r2,1040(sp)
 10052e4:	00800044 	movi	r2,1
 10052e8:	d8c10115 	stw	r3,1028(sp)
 10052ec:	1445c83a 	sub	r2,r2,r17
 10052f0:	b0c7883a 	add	r3,r22,r3
 10052f4:	0027883a 	mov	r19,zero
 10052f8:	002b883a 	mov	r21,zero
 10052fc:	bd3fffc4 	addi	r20,r23,-1
 1005300:	d8c10215 	stw	r3,1032(sp)
 1005304:	d8810315 	stw	r2,1036(sp)
 1005308:	00000706 	br	1005328 <two_way_long_needle+0x100>
 100530c:	98000426 	beq	r19,zero,1005320 <two_way_long_needle+0xf8>
 1005310:	d8c10017 	ldw	r3,1024(sp)
 1005314:	10c0022e 	bgeu	r2,r3,1005320 <two_way_long_needle+0xf8>
 1005318:	b8c5c83a 	sub	r2,r23,r3
 100531c:	0027883a 	mov	r19,zero
 1005320:	a8ab883a 	add	r21,r21,r2
 1005324:	9039883a 	mov	fp,r18
 1005328:	ade5883a 	add	r18,r21,r23
 100532c:	8709883a 	add	r4,r16,fp
 1005330:	000b883a 	mov	r5,zero
 1005334:	970dc83a 	sub	r6,r18,fp
 1005338:	100f2940 	call	100f294 <memchr>
 100533c:	10003d1e 	bne	r2,zero,1005434 <two_way_long_needle+0x20c>
 1005340:	90003c26 	beq	r18,zero,1005434 <two_way_long_needle+0x20c>
 1005344:	8485883a 	add	r2,r16,r18
 1005348:	10bfffc3 	ldbu	r2,-1(r2)
 100534c:	1085883a 	add	r2,r2,r2
 1005350:	1085883a 	add	r2,r2,r2
 1005354:	d885883a 	add	r2,sp,r2
 1005358:	10800017 	ldw	r2,0(r2)
 100535c:	103feb1e 	bne	r2,zero,100530c <__alt_data_end+0xff80530c>
 1005360:	9807883a 	mov	r3,r19
 1005364:	9c40012e 	bgeu	r19,r17,100536c <two_way_long_needle+0x144>
 1005368:	8807883a 	mov	r3,r17
 100536c:	1d000f2e 	bgeu	r3,r20,10053ac <two_way_long_needle+0x184>
 1005370:	8545883a 	add	r2,r16,r21
 1005374:	b0c9883a 	add	r4,r22,r3
 1005378:	10c5883a 	add	r2,r2,r3
 100537c:	21000003 	ldbu	r4,0(r4)
 1005380:	10800003 	ldbu	r2,0(r2)
 1005384:	20800426 	beq	r4,r2,1005398 <two_way_long_needle+0x170>
 1005388:	00002506 	br	1005420 <two_way_long_needle+0x1f8>
 100538c:	11000003 	ldbu	r4,0(r2)
 1005390:	40800003 	ldbu	r2,0(r8)
 1005394:	2080221e 	bne	r4,r2,1005420 <two_way_long_needle+0x1f8>
 1005398:	18c00044 	addi	r3,r3,1
 100539c:	1d51883a 	add	r8,r3,r21
 10053a0:	b0c5883a 	add	r2,r22,r3
 10053a4:	8211883a 	add	r8,r16,r8
 10053a8:	1d3ff836 	bltu	r3,r20,100538c <__alt_data_end+0xff80538c>
 10053ac:	d9810117 	ldw	r6,1028(sp)
 10053b0:	9c40762e 	bgeu	r19,r17,100558c <two_way_long_needle+0x364>
 10053b4:	d8c10117 	ldw	r3,1028(sp)
 10053b8:	d9010217 	ldw	r4,1032(sp)
 10053bc:	8545883a 	add	r2,r16,r21
 10053c0:	10c5883a 	add	r2,r2,r3
 10053c4:	10800003 	ldbu	r2,0(r2)
 10053c8:	20c00003 	ldbu	r3,0(r4)
 10053cc:	18806f1e 	bne	r3,r2,100558c <two_way_long_needle+0x364>
 10053d0:	9b3fffc4 	addi	r12,r19,-1
 10053d4:	d8810417 	ldw	r2,1040(sp)
 10053d8:	b319883a 	add	r12,r22,r12
 10053dc:	00000606 	br	10053f8 <two_way_long_needle+0x1d0>
 10053e0:	11000003 	ldbu	r4,0(r2)
 10053e4:	1a000003 	ldbu	r8,0(r3)
 10053e8:	10bfffc4 	addi	r2,r2,-1
 10053ec:	20c03fcc 	andi	r3,r4,255
 10053f0:	1a00051e 	bne	r3,r8,1005408 <two_way_long_needle+0x1e0>
 10053f4:	280d883a 	mov	r6,r5
 10053f8:	317fffc4 	addi	r5,r6,-1
 10053fc:	2d47883a 	add	r3,r5,r21
 1005400:	80c7883a 	add	r3,r16,r3
 1005404:	133ff61e 	bne	r2,r12,10053e0 <__alt_data_end+0xff8053e0>
 1005408:	9ac00044 	addi	r11,r19,1
 100540c:	32c06136 	bltu	r6,r11,1005594 <two_way_long_needle+0x36c>
 1005410:	dac10017 	ldw	r11,1024(sp)
 1005414:	aaeb883a 	add	r21,r21,r11
 1005418:	bae7c83a 	sub	r19,r23,r11
 100541c:	003fc106 	br	1005324 <__alt_data_end+0xff805324>
 1005420:	d8810317 	ldw	r2,1036(sp)
 1005424:	0027883a 	mov	r19,zero
 1005428:	154f883a 	add	r7,r2,r21
 100542c:	38eb883a 	add	r21,r7,r3
 1005430:	003fbc06 	br	1005324 <__alt_data_end+0xff805324>
 1005434:	0005883a 	mov	r2,zero
 1005438:	dfc10e17 	ldw	ra,1080(sp)
 100543c:	df010d17 	ldw	fp,1076(sp)
 1005440:	ddc10c17 	ldw	r23,1072(sp)
 1005444:	dd810b17 	ldw	r22,1068(sp)
 1005448:	dd410a17 	ldw	r21,1064(sp)
 100544c:	dd010917 	ldw	r20,1060(sp)
 1005450:	dcc10817 	ldw	r19,1056(sp)
 1005454:	dc810717 	ldw	r18,1052(sp)
 1005458:	dc410617 	ldw	r17,1048(sp)
 100545c:	dc010517 	ldw	r16,1044(sp)
 1005460:	dec10f04 	addi	sp,sp,1084
 1005464:	f800283a 	ret
 1005468:	bc45c83a 	sub	r2,r23,r17
 100546c:	14404536 	bltu	r2,r17,1005584 <two_way_long_needle+0x35c>
 1005470:	10800044 	addi	r2,r2,1
 1005474:	88ffffc4 	addi	r3,r17,-1
 1005478:	d8c10115 	stw	r3,1028(sp)
 100547c:	d8810015 	stw	r2,1024(sp)
 1005480:	b0c7883a 	add	r3,r22,r3
 1005484:	00800044 	movi	r2,1
 1005488:	d8c10315 	stw	r3,1036(sp)
 100548c:	1445c83a 	sub	r2,r2,r17
 1005490:	b447883a 	add	r3,r22,r17
 1005494:	0027883a 	mov	r19,zero
 1005498:	bd3fffc4 	addi	r20,r23,-1
 100549c:	057fffc4 	movi	r21,-1
 10054a0:	d8c10215 	stw	r3,1032(sp)
 10054a4:	d8810415 	stw	r2,1040(sp)
 10054a8:	9de5883a 	add	r18,r19,r23
 10054ac:	8709883a 	add	r4,r16,fp
 10054b0:	000b883a 	mov	r5,zero
 10054b4:	970dc83a 	sub	r6,r18,fp
 10054b8:	100f2940 	call	100f294 <memchr>
 10054bc:	103fdd1e 	bne	r2,zero,1005434 <__alt_data_end+0xff805434>
 10054c0:	903fdc26 	beq	r18,zero,1005434 <__alt_data_end+0xff805434>
 10054c4:	8485883a 	add	r2,r16,r18
 10054c8:	10bfffc3 	ldbu	r2,-1(r2)
 10054cc:	1085883a 	add	r2,r2,r2
 10054d0:	1085883a 	add	r2,r2,r2
 10054d4:	d885883a 	add	r2,sp,r2
 10054d8:	10800017 	ldw	r2,0(r2)
 10054dc:	1000221e 	bne	r2,zero,1005568 <two_way_long_needle+0x340>
 10054e0:	84c5883a 	add	r2,r16,r19
 10054e4:	8d000f2e 	bgeu	r17,r20,1005524 <two_way_long_needle+0x2fc>
 10054e8:	d9010217 	ldw	r4,1032(sp)
 10054ec:	1447883a 	add	r3,r2,r17
 10054f0:	21400003 	ldbu	r5,0(r4)
 10054f4:	19000003 	ldbu	r4,0(r3)
 10054f8:	8807883a 	mov	r3,r17
 10054fc:	29000426 	beq	r5,r4,1005510 <two_way_long_needle+0x2e8>
 1005500:	00001c06 	br	1005574 <two_way_long_needle+0x34c>
 1005504:	21400003 	ldbu	r5,0(r4)
 1005508:	41000003 	ldbu	r4,0(r8)
 100550c:	2900191e 	bne	r5,r4,1005574 <two_way_long_needle+0x34c>
 1005510:	18c00044 	addi	r3,r3,1
 1005514:	1cd1883a 	add	r8,r3,r19
 1005518:	b0c9883a 	add	r4,r22,r3
 100551c:	8211883a 	add	r8,r16,r8
 1005520:	1d3ff836 	bltu	r3,r20,1005504 <__alt_data_end+0xff805504>
 1005524:	d8c10117 	ldw	r3,1028(sp)
 1005528:	883fc326 	beq	r17,zero,1005438 <__alt_data_end+0xff805438>
 100552c:	d9410117 	ldw	r5,1028(sp)
 1005530:	d9810317 	ldw	r6,1036(sp)
 1005534:	1149883a 	add	r4,r2,r5
 1005538:	21000003 	ldbu	r4,0(r4)
 100553c:	31400003 	ldbu	r5,0(r6)
 1005540:	2900081e 	bne	r5,r4,1005564 <two_way_long_needle+0x33c>
 1005544:	18ffffc4 	addi	r3,r3,-1
 1005548:	1cc9883a 	add	r4,r3,r19
 100554c:	b0cb883a 	add	r5,r22,r3
 1005550:	8109883a 	add	r4,r16,r4
 1005554:	1d7fb826 	beq	r3,r21,1005438 <__alt_data_end+0xff805438>
 1005558:	29400003 	ldbu	r5,0(r5)
 100555c:	21000003 	ldbu	r4,0(r4)
 1005560:	293ff826 	beq	r5,r4,1005544 <__alt_data_end+0xff805544>
 1005564:	d8810017 	ldw	r2,1024(sp)
 1005568:	98a7883a 	add	r19,r19,r2
 100556c:	9039883a 	mov	fp,r18
 1005570:	003fcd06 	br	10054a8 <__alt_data_end+0xff8054a8>
 1005574:	d9010417 	ldw	r4,1040(sp)
 1005578:	24cf883a 	add	r7,r4,r19
 100557c:	38e7883a 	add	r19,r7,r3
 1005580:	003ffa06 	br	100556c <__alt_data_end+0xff80556c>
 1005584:	8805883a 	mov	r2,r17
 1005588:	003fb906 	br	1005470 <__alt_data_end+0xff805470>
 100558c:	880d883a 	mov	r6,r17
 1005590:	003f9d06 	br	1005408 <__alt_data_end+0xff805408>
 1005594:	8545883a 	add	r2,r16,r21
 1005598:	003fa706 	br	1005438 <__alt_data_end+0xff805438>

0100559c <strstr>:
 100559c:	21800007 	ldb	r6,0(r4)
 10055a0:	30003e26 	beq	r6,zero,100569c <strstr+0x100>
 10055a4:	28c00007 	ldb	r3,0(r5)
 10055a8:	18000f26 	beq	r3,zero,10055e8 <strstr+0x4c>
 10055ac:	280f883a 	mov	r7,r5
 10055b0:	2011883a 	mov	r8,r4
 10055b4:	02400044 	movi	r9,1
 10055b8:	00000206 	br	10055c4 <strstr+0x28>
 10055bc:	38c00007 	ldb	r3,0(r7)
 10055c0:	18000826 	beq	r3,zero,10055e4 <strstr+0x48>
 10055c4:	42000044 	addi	r8,r8,1
 10055c8:	30c7003a 	cmpeq	r3,r6,r3
 10055cc:	41800007 	ldb	r6,0(r8)
 10055d0:	39c00044 	addi	r7,r7,1
 10055d4:	48d2703a 	and	r9,r9,r3
 10055d8:	303ff81e 	bne	r6,zero,10055bc <__alt_data_end+0xff8055bc>
 10055dc:	38800007 	ldb	r2,0(r7)
 10055e0:	1000301e 	bne	r2,zero,10056a4 <strstr+0x108>
 10055e4:	48000226 	beq	r9,zero,10055f0 <strstr+0x54>
 10055e8:	2005883a 	mov	r2,r4
 10055ec:	f800283a 	ret
 10055f0:	defff104 	addi	sp,sp,-60
 10055f4:	ddc00c15 	stw	r23,48(sp)
 10055f8:	dd800b15 	stw	r22,44(sp)
 10055fc:	dd400a15 	stw	r21,40(sp)
 1005600:	dc000515 	stw	r16,20(sp)
 1005604:	dfc00e15 	stw	ra,56(sp)
 1005608:	df000d15 	stw	fp,52(sp)
 100560c:	dd000915 	stw	r20,36(sp)
 1005610:	dcc00815 	stw	r19,32(sp)
 1005614:	dc800715 	stw	r18,28(sp)
 1005618:	dc400615 	stw	r17,24(sp)
 100561c:	282f883a 	mov	r23,r5
 1005620:	29400007 	ldb	r5,0(r5)
 1005624:	202b883a 	mov	r21,r4
 1005628:	21000044 	addi	r4,r4,1
 100562c:	3de1c83a 	sub	r16,r7,r23
 1005630:	1004e440 	call	1004e44 <strchr>
 1005634:	102d883a 	mov	r22,r2
 1005638:	10006e26 	beq	r2,zero,10057f4 <strstr+0x258>
 100563c:	00c00044 	movi	r3,1
 1005640:	80c00a26 	beq	r16,r3,100566c <strstr+0xd0>
 1005644:	ac09883a 	add	r4,r21,r16
 1005648:	20800136 	bltu	r4,r2,1005650 <strstr+0xb4>
 100564c:	2087c83a 	sub	r3,r4,r2
 1005650:	008007c4 	movi	r2,31
 1005654:	1400152e 	bgeu	r2,r16,10056ac <strstr+0x110>
 1005658:	b009883a 	mov	r4,r22
 100565c:	180b883a 	mov	r5,r3
 1005660:	b80d883a 	mov	r6,r23
 1005664:	800f883a 	mov	r7,r16
 1005668:	10052280 	call	1005228 <two_way_long_needle>
 100566c:	dfc00e17 	ldw	ra,56(sp)
 1005670:	df000d17 	ldw	fp,52(sp)
 1005674:	ddc00c17 	ldw	r23,48(sp)
 1005678:	dd800b17 	ldw	r22,44(sp)
 100567c:	dd400a17 	ldw	r21,40(sp)
 1005680:	dd000917 	ldw	r20,36(sp)
 1005684:	dcc00817 	ldw	r19,32(sp)
 1005688:	dc800717 	ldw	r18,28(sp)
 100568c:	dc400617 	ldw	r17,24(sp)
 1005690:	dc000517 	ldw	r16,20(sp)
 1005694:	dec00f04 	addi	sp,sp,60
 1005698:	f800283a 	ret
 100569c:	28800007 	ldb	r2,0(r5)
 10056a0:	103fd126 	beq	r2,zero,10055e8 <__alt_data_end+0xff8055e8>
 10056a4:	0005883a 	mov	r2,zero
 10056a8:	f800283a 	ret
 10056ac:	b809883a 	mov	r4,r23
 10056b0:	800b883a 	mov	r5,r16
 10056b4:	d80d883a 	mov	r6,sp
 10056b8:	d8c00415 	stw	r3,16(sp)
 10056bc:	100512c0 	call	100512c <critical_factorization>
 10056c0:	d9400017 	ldw	r5,0(sp)
 10056c4:	b809883a 	mov	r4,r23
 10056c8:	100d883a 	mov	r6,r2
 10056cc:	b94b883a 	add	r5,r23,r5
 10056d0:	1039883a 	mov	fp,r2
 10056d4:	100f37c0 	call	100f37c <memcmp>
 10056d8:	d8c00417 	ldw	r3,16(sp)
 10056dc:	1000471e 	bne	r2,zero,10057fc <strstr+0x260>
 10056e0:	e47fffc4 	addi	r17,fp,-1
 10056e4:	e4bfff84 	addi	r18,fp,-2
 10056e8:	bc45883a 	add	r2,r23,r17
 10056ec:	bca5883a 	add	r18,r23,r18
 10056f0:	04c00044 	movi	r19,1
 10056f4:	0029883a 	mov	r20,zero
 10056f8:	002b883a 	mov	r21,zero
 10056fc:	d8800115 	stw	r2,4(sp)
 1005700:	dc800215 	stw	r18,8(sp)
 1005704:	9f27c83a 	sub	r19,r19,fp
 1005708:	ac25883a 	add	r18,r21,r16
 100570c:	b0c9883a 	add	r4,r22,r3
 1005710:	000b883a 	mov	r5,zero
 1005714:	90cdc83a 	sub	r6,r18,r3
 1005718:	100f2940 	call	100f294 <memchr>
 100571c:	1000351e 	bne	r2,zero,10057f4 <strstr+0x258>
 1005720:	90003426 	beq	r18,zero,10057f4 <strstr+0x258>
 1005724:	a007883a 	mov	r3,r20
 1005728:	a700012e 	bgeu	r20,fp,1005730 <strstr+0x194>
 100572c:	e007883a 	mov	r3,fp
 1005730:	1c000f2e 	bgeu	r3,r16,1005770 <strstr+0x1d4>
 1005734:	b0c5883a 	add	r2,r22,r3
 1005738:	b8c9883a 	add	r4,r23,r3
 100573c:	1545883a 	add	r2,r2,r21
 1005740:	21000003 	ldbu	r4,0(r4)
 1005744:	10800003 	ldbu	r2,0(r2)
 1005748:	20800426 	beq	r4,r2,100575c <strstr+0x1c0>
 100574c:	00002506 	br	10057e4 <strstr+0x248>
 1005750:	11000003 	ldbu	r4,0(r2)
 1005754:	38800003 	ldbu	r2,0(r7)
 1005758:	2080221e 	bne	r4,r2,10057e4 <strstr+0x248>
 100575c:	18c00044 	addi	r3,r3,1
 1005760:	1d4f883a 	add	r7,r3,r21
 1005764:	b8c5883a 	add	r2,r23,r3
 1005768:	b1cf883a 	add	r7,r22,r7
 100576c:	1c3ff836 	bltu	r3,r16,1005750 <__alt_data_end+0xff805750>
 1005770:	880d883a 	mov	r6,r17
 1005774:	a700632e 	bgeu	r20,fp,1005904 <strstr+0x368>
 1005778:	d9000117 	ldw	r4,4(sp)
 100577c:	b545883a 	add	r2,r22,r21
 1005780:	1445883a 	add	r2,r2,r17
 1005784:	20c00003 	ldbu	r3,0(r4)
 1005788:	10800003 	ldbu	r2,0(r2)
 100578c:	18805d1e 	bne	r3,r2,1005904 <strstr+0x368>
 1005790:	a2bfffc4 	addi	r10,r20,-1
 1005794:	d8c00217 	ldw	r3,8(sp)
 1005798:	ba95883a 	add	r10,r23,r10
 100579c:	00000606 	br	10057b8 <strstr+0x21c>
 10057a0:	19000003 	ldbu	r4,0(r3)
 10057a4:	11c00003 	ldbu	r7,0(r2)
 10057a8:	18ffffc4 	addi	r3,r3,-1
 10057ac:	20803fcc 	andi	r2,r4,255
 10057b0:	11c0051e 	bne	r2,r7,10057c8 <strstr+0x22c>
 10057b4:	280d883a 	mov	r6,r5
 10057b8:	317fffc4 	addi	r5,r6,-1
 10057bc:	2d45883a 	add	r2,r5,r21
 10057c0:	b085883a 	add	r2,r22,r2
 10057c4:	1abff61e 	bne	r3,r10,10057a0 <__alt_data_end+0xff8057a0>
 10057c8:	a2000044 	addi	r8,r20,1
 10057cc:	32004f36 	bltu	r6,r8,100590c <strstr+0x370>
 10057d0:	da000017 	ldw	r8,0(sp)
 10057d4:	aa2b883a 	add	r21,r21,r8
 10057d8:	8229c83a 	sub	r20,r16,r8
 10057dc:	9007883a 	mov	r3,r18
 10057e0:	003fc906 	br	1005708 <__alt_data_end+0xff805708>
 10057e4:	9d6b883a 	add	r21,r19,r21
 10057e8:	a8eb883a 	add	r21,r21,r3
 10057ec:	0029883a 	mov	r20,zero
 10057f0:	003ffa06 	br	10057dc <__alt_data_end+0xff8057dc>
 10057f4:	0005883a 	mov	r2,zero
 10057f8:	003f9c06 	br	100566c <__alt_data_end+0xff80566c>
 10057fc:	8705c83a 	sub	r2,r16,fp
 1005800:	1700012e 	bgeu	r2,fp,1005808 <strstr+0x26c>
 1005804:	e005883a 	mov	r2,fp
 1005808:	10800044 	addi	r2,r2,1
 100580c:	e47fffc4 	addi	r17,fp,-1
 1005810:	05000044 	movi	r20,1
 1005814:	a729c83a 	sub	r20,r20,fp
 1005818:	d8800015 	stw	r2,0(sp)
 100581c:	b70d883a 	add	r6,r22,fp
 1005820:	bc45883a 	add	r2,r23,r17
 1005824:	dd000215 	stw	r20,8(sp)
 1005828:	002b883a 	mov	r21,zero
 100582c:	bf27883a 	add	r19,r23,fp
 1005830:	d9800115 	stw	r6,4(sp)
 1005834:	d8800315 	stw	r2,12(sp)
 1005838:	053fffc4 	movi	r20,-1
 100583c:	ac25883a 	add	r18,r21,r16
 1005840:	b0c9883a 	add	r4,r22,r3
 1005844:	000b883a 	mov	r5,zero
 1005848:	90cdc83a 	sub	r6,r18,r3
 100584c:	100f2940 	call	100f294 <memchr>
 1005850:	103fe81e 	bne	r2,zero,10057f4 <__alt_data_end+0xff8057f4>
 1005854:	903fe726 	beq	r18,zero,10057f4 <__alt_data_end+0xff8057f4>
 1005858:	e4000f2e 	bgeu	fp,r16,1005898 <strstr+0x2fc>
 100585c:	d8c00117 	ldw	r3,4(sp)
 1005860:	99000003 	ldbu	r4,0(r19)
 1005864:	1d45883a 	add	r2,r3,r21
 1005868:	10800003 	ldbu	r2,0(r2)
 100586c:	e007883a 	mov	r3,fp
 1005870:	20800426 	beq	r4,r2,1005884 <strstr+0x2e8>
 1005874:	00001b06 	br	10058e4 <strstr+0x348>
 1005878:	11000003 	ldbu	r4,0(r2)
 100587c:	38800003 	ldbu	r2,0(r7)
 1005880:	2080181e 	bne	r4,r2,10058e4 <strstr+0x348>
 1005884:	18c00044 	addi	r3,r3,1
 1005888:	1d4f883a 	add	r7,r3,r21
 100588c:	b8c5883a 	add	r2,r23,r3
 1005890:	b1cf883a 	add	r7,r22,r7
 1005894:	1c3ff836 	bltu	r3,r16,1005878 <__alt_data_end+0xff805878>
 1005898:	8805883a 	mov	r2,r17
 100589c:	b549883a 	add	r4,r22,r21
 10058a0:	e0000e26 	beq	fp,zero,10058dc <strstr+0x340>
 10058a4:	d9800317 	ldw	r6,12(sp)
 10058a8:	2447883a 	add	r3,r4,r17
 10058ac:	18c00003 	ldbu	r3,0(r3)
 10058b0:	31400003 	ldbu	r5,0(r6)
 10058b4:	28c00426 	beq	r5,r3,10058c8 <strstr+0x32c>
 10058b8:	00000f06 	br	10058f8 <strstr+0x35c>
 10058bc:	29400003 	ldbu	r5,0(r5)
 10058c0:	18c00003 	ldbu	r3,0(r3)
 10058c4:	28c00c1e 	bne	r5,r3,10058f8 <strstr+0x35c>
 10058c8:	10bfffc4 	addi	r2,r2,-1
 10058cc:	1547883a 	add	r3,r2,r21
 10058d0:	b88b883a 	add	r5,r23,r2
 10058d4:	b0c7883a 	add	r3,r22,r3
 10058d8:	153ff81e 	bne	r2,r20,10058bc <__alt_data_end+0xff8058bc>
 10058dc:	2005883a 	mov	r2,r4
 10058e0:	003f6206 	br	100566c <__alt_data_end+0xff80566c>
 10058e4:	d9000217 	ldw	r4,8(sp)
 10058e8:	2551883a 	add	r8,r4,r21
 10058ec:	40eb883a 	add	r21,r8,r3
 10058f0:	9007883a 	mov	r3,r18
 10058f4:	003fd106 	br	100583c <__alt_data_end+0xff80583c>
 10058f8:	d8800017 	ldw	r2,0(sp)
 10058fc:	a8ab883a 	add	r21,r21,r2
 1005900:	003ffb06 	br	10058f0 <__alt_data_end+0xff8058f0>
 1005904:	e00d883a 	mov	r6,fp
 1005908:	003faf06 	br	10057c8 <__alt_data_end+0xff8057c8>
 100590c:	b545883a 	add	r2,r22,r21
 1005910:	003f5606 	br	100566c <__alt_data_end+0xff80566c>

01005914 <_strtod_r>:
 1005914:	deffe104 	addi	sp,sp,-124
 1005918:	dd801b15 	stw	r22,108(sp)
 100591c:	dc001515 	stw	r16,84(sp)
 1005920:	d9400615 	stw	r5,24(sp)
 1005924:	dfc01e15 	stw	ra,120(sp)
 1005928:	df001d15 	stw	fp,116(sp)
 100592c:	ddc01c15 	stw	r23,112(sp)
 1005930:	dd401a15 	stw	r21,104(sp)
 1005934:	dd001915 	stw	r20,100(sp)
 1005938:	dcc01815 	stw	r19,96(sp)
 100593c:	dc801715 	stw	r18,92(sp)
 1005940:	dc401615 	stw	r17,88(sp)
 1005944:	2021883a 	mov	r16,r4
 1005948:	2809883a 	mov	r4,r5
 100594c:	20800003 	ldbu	r2,0(r4)
 1005950:	01c04034 	movhi	r7,256
 1005954:	282d883a 	mov	r22,r5
 1005958:	d9800c15 	stw	r6,48(sp)
 100595c:	d8000815 	stw	zero,32(sp)
 1005960:	d8000715 	stw	zero,28(sp)
 1005964:	01400b44 	movi	r5,45
 1005968:	10c03fcc 	andi	r3,r2,255
 100596c:	39d66104 	addi	r7,r7,22916
 1005970:	28c0bc36 	bltu	r5,r3,1005c64 <_strtod_r+0x350>
 1005974:	180690ba 	slli	r3,r3,2
 1005978:	19c7883a 	add	r3,r3,r7
 100597c:	18c00017 	ldw	r3,0(r3)
 1005980:	1800683a 	jmp	r3
 1005984:	01005a44 	movi	r4,361
 1005988:	01005c64 	muli	r4,zero,369
 100598c:	01005c64 	muli	r4,zero,369
 1005990:	01005c64 	muli	r4,zero,369
 1005994:	01005c64 	muli	r4,zero,369
 1005998:	01005c64 	muli	r4,zero,369
 100599c:	01005c64 	muli	r4,zero,369
 10059a0:	01005c64 	muli	r4,zero,369
 10059a4:	01005c64 	muli	r4,zero,369
 10059a8:	01005c50 	cmplti	r4,zero,369
 10059ac:	01005c50 	cmplti	r4,zero,369
 10059b0:	01005c50 	cmplti	r4,zero,369
 10059b4:	01005c50 	cmplti	r4,zero,369
 10059b8:	01005c50 	cmplti	r4,zero,369
 10059bc:	01005c64 	muli	r4,zero,369
 10059c0:	01005c64 	muli	r4,zero,369
 10059c4:	01005c64 	muli	r4,zero,369
 10059c8:	01005c64 	muli	r4,zero,369
 10059cc:	01005c64 	muli	r4,zero,369
 10059d0:	01005c64 	muli	r4,zero,369
 10059d4:	01005c64 	muli	r4,zero,369
 10059d8:	01005c64 	muli	r4,zero,369
 10059dc:	01005c64 	muli	r4,zero,369
 10059e0:	01005c64 	muli	r4,zero,369
 10059e4:	01005c64 	muli	r4,zero,369
 10059e8:	01005c64 	muli	r4,zero,369
 10059ec:	01005c64 	muli	r4,zero,369
 10059f0:	01005c64 	muli	r4,zero,369
 10059f4:	01005c64 	muli	r4,zero,369
 10059f8:	01005c64 	muli	r4,zero,369
 10059fc:	01005c64 	muli	r4,zero,369
 1005a00:	01005c64 	muli	r4,zero,369
 1005a04:	01005c50 	cmplti	r4,zero,369
 1005a08:	01005c64 	muli	r4,zero,369
 1005a0c:	01005c64 	muli	r4,zero,369
 1005a10:	01005c64 	muli	r4,zero,369
 1005a14:	01005c64 	muli	r4,zero,369
 1005a18:	01005c64 	muli	r4,zero,369
 1005a1c:	01005c64 	muli	r4,zero,369
 1005a20:	01005c64 	muli	r4,zero,369
 1005a24:	01005c64 	muli	r4,zero,369
 1005a28:	01005c64 	muli	r4,zero,369
 1005a2c:	01005c64 	muli	r4,zero,369
 1005a30:	01005aa4 	muli	r4,zero,362
 1005a34:	01005c64 	muli	r4,zero,369
 1005a38:	01005c44 	movi	r4,369
 1005a3c:	00801244 	movi	r2,73
 1005a40:	98849c26 	beq	r19,r2,1006cb4 <_strtod_r+0x13a0>
 1005a44:	002b883a 	mov	r21,zero
 1005a48:	0023883a 	mov	r17,zero
 1005a4c:	d8800c17 	ldw	r2,48(sp)
 1005a50:	10000626 	beq	r2,zero,1005a6c <_strtod_r+0x158>
 1005a54:	d8001015 	stw	zero,64(sp)
 1005a58:	d8800c17 	ldw	r2,48(sp)
 1005a5c:	15800015 	stw	r22,0(r2)
 1005a60:	d8c01017 	ldw	r3,64(sp)
 1005a64:	18000126 	beq	r3,zero,1005a6c <_strtod_r+0x158>
 1005a68:	8c60003c 	xorhi	r17,r17,32768
 1005a6c:	a805883a 	mov	r2,r21
 1005a70:	8807883a 	mov	r3,r17
 1005a74:	dfc01e17 	ldw	ra,120(sp)
 1005a78:	df001d17 	ldw	fp,116(sp)
 1005a7c:	ddc01c17 	ldw	r23,112(sp)
 1005a80:	dd801b17 	ldw	r22,108(sp)
 1005a84:	dd401a17 	ldw	r21,104(sp)
 1005a88:	dd001917 	ldw	r20,100(sp)
 1005a8c:	dcc01817 	ldw	r19,96(sp)
 1005a90:	dc801717 	ldw	r18,92(sp)
 1005a94:	dc401617 	ldw	r17,88(sp)
 1005a98:	dc001517 	ldw	r16,84(sp)
 1005a9c:	dec01f04 	addi	sp,sp,124
 1005aa0:	f800283a 	ret
 1005aa4:	d8001015 	stw	zero,64(sp)
 1005aa8:	24800044 	addi	r18,r4,1
 1005aac:	dc800615 	stw	r18,24(sp)
 1005ab0:	20800043 	ldbu	r2,1(r4)
 1005ab4:	10c03fcc 	andi	r3,r2,255
 1005ab8:	18c0201c 	xori	r3,r3,128
 1005abc:	18ffe004 	addi	r3,r3,-128
 1005ac0:	183fe026 	beq	r3,zero,1005a44 <__alt_data_end+0xff805a44>
 1005ac4:	11403fcc 	andi	r5,r2,255
 1005ac8:	2940201c 	xori	r5,r5,128
 1005acc:	297fe004 	addi	r5,r5,-128
 1005ad0:	00c00c04 	movi	r3,48
 1005ad4:	28c0f226 	beq	r5,r3,1005ea0 <_strtod_r+0x58c>
 1005ad8:	0023883a 	mov	r17,zero
 1005adc:	10fff404 	addi	r3,r2,-48
 1005ae0:	18c03fcc 	andi	r3,r3,255
 1005ae4:	01800244 	movi	r6,9
 1005ae8:	30c3d336 	bltu	r6,r3,1006a38 <_strtod_r+0x1124>
 1005aec:	91000044 	addi	r4,r18,1
 1005af0:	002b883a 	mov	r21,zero
 1005af4:	002f883a 	mov	r23,zero
 1005af8:	0029883a 	mov	r20,zero
 1005afc:	02000204 	movi	r8,8
 1005b00:	024003c4 	movi	r9,15
 1005b04:	45005a16 	blt	r8,r20,1005c70 <_strtod_r+0x35c>
 1005b08:	bdc002a4 	muli	r23,r23,10
 1005b0c:	10803fcc 	andi	r2,r2,255
 1005b10:	1080201c 	xori	r2,r2,128
 1005b14:	10bfe004 	addi	r2,r2,-128
 1005b18:	b885883a 	add	r2,r23,r2
 1005b1c:	15fff404 	addi	r23,r2,-48
 1005b20:	d9000615 	stw	r4,24(sp)
 1005b24:	20800003 	ldbu	r2,0(r4)
 1005b28:	2039883a 	mov	fp,r4
 1005b2c:	a5000044 	addi	r20,r20,1
 1005b30:	10fff404 	addi	r3,r2,-48
 1005b34:	18c03fcc 	andi	r3,r3,255
 1005b38:	21000044 	addi	r4,r4,1
 1005b3c:	30fff12e 	bgeu	r6,r3,1005b04 <__alt_data_end+0xff805b04>
 1005b40:	14c03fcc 	andi	r19,r2,255
 1005b44:	9cc0201c 	xori	r19,r19,128
 1005b48:	9cffe004 	addi	r19,r19,-128
 1005b4c:	8009883a 	mov	r4,r16
 1005b50:	100e9000 	call	100e900 <_localeconv_r>
 1005b54:	11400017 	ldw	r5,0(r2)
 1005b58:	8009883a 	mov	r4,r16
 1005b5c:	d9401315 	stw	r5,76(sp)
 1005b60:	100e9000 	call	100e900 <_localeconv_r>
 1005b64:	11000017 	ldw	r4,0(r2)
 1005b68:	1004fa80 	call	1004fa8 <strlen>
 1005b6c:	d9401317 	ldw	r5,76(sp)
 1005b70:	e009883a 	mov	r4,fp
 1005b74:	100d883a 	mov	r6,r2
 1005b78:	1010f100 	call	1010f10 <strncmp>
 1005b7c:	1000d926 	beq	r2,zero,1005ee4 <_strtod_r+0x5d0>
 1005b80:	a039883a 	mov	fp,r20
 1005b84:	000b883a 	mov	r5,zero
 1005b88:	0011883a 	mov	r8,zero
 1005b8c:	0013883a 	mov	r9,zero
 1005b90:	00801944 	movi	r2,101
 1005b94:	98804426 	beq	r19,r2,1005ca8 <_strtod_r+0x394>
 1005b98:	00801144 	movi	r2,69
 1005b9c:	98804226 	beq	r19,r2,1005ca8 <_strtod_r+0x394>
 1005ba0:	000f883a 	mov	r7,zero
 1005ba4:	e0007f1e 	bne	fp,zero,1005da4 <_strtod_r+0x490>
 1005ba8:	2800391e 	bne	r5,zero,1005c90 <_strtod_r+0x37c>
 1005bac:	8800381e 	bne	r17,zero,1005c90 <_strtod_r+0x37c>
 1005bb0:	4800b71e 	bne	r9,zero,1005e90 <_strtod_r+0x57c>
 1005bb4:	00801384 	movi	r2,78
 1005bb8:	98800526 	beq	r19,r2,1005bd0 <_strtod_r+0x2bc>
 1005bbc:	14ff9f0e 	bge	r2,r19,1005a3c <__alt_data_end+0xff805a3c>
 1005bc0:	00801a44 	movi	r2,105
 1005bc4:	98843b26 	beq	r19,r2,1006cb4 <_strtod_r+0x13a0>
 1005bc8:	00801b84 	movi	r2,110
 1005bcc:	98bf9d1e 	bne	r19,r2,1005a44 <__alt_data_end+0xff805a44>
 1005bd0:	014040b4 	movhi	r5,258
 1005bd4:	d9000617 	ldw	r4,24(sp)
 1005bd8:	2965c004 	addi	r5,r5,-26880
 1005bdc:	01c00644 	movi	r7,25
 1005be0:	00000b06 	br	1005c10 <_strtod_r+0x2fc>
 1005be4:	21000044 	addi	r4,r4,1
 1005be8:	20800003 	ldbu	r2,0(r4)
 1005bec:	10ffefc4 	addi	r3,r2,-65
 1005bf0:	10803fcc 	andi	r2,r2,255
 1005bf4:	1080201c 	xori	r2,r2,128
 1005bf8:	18c03fcc 	andi	r3,r3,255
 1005bfc:	10bfe004 	addi	r2,r2,-128
 1005c00:	38c00136 	bltu	r7,r3,1005c08 <_strtod_r+0x2f4>
 1005c04:	10800804 	addi	r2,r2,32
 1005c08:	29400044 	addi	r5,r5,1
 1005c0c:	11bf8d1e 	bne	r2,r6,1005a44 <__alt_data_end+0xff805a44>
 1005c10:	29800007 	ldb	r6,0(r5)
 1005c14:	303ff31e 	bne	r6,zero,1005be4 <__alt_data_end+0xff805be4>
 1005c18:	20800044 	addi	r2,r4,1
 1005c1c:	d8800615 	stw	r2,24(sp)
 1005c20:	20c00047 	ldb	r3,1(r4)
 1005c24:	00800a04 	movi	r2,40
 1005c28:	18846d26 	beq	r3,r2,1006de0 <_strtod_r+0x14cc>
 1005c2c:	013ffe34 	movhi	r4,65528
 1005c30:	d9000715 	stw	r4,28(sp)
 1005c34:	d8000815 	stw	zero,32(sp)
 1005c38:	dd400817 	ldw	r21,32(sp)
 1005c3c:	dc400717 	ldw	r17,28(sp)
 1005c40:	00001506 	br	1005c98 <_strtod_r+0x384>
 1005c44:	00800044 	movi	r2,1
 1005c48:	d8801015 	stw	r2,64(sp)
 1005c4c:	003f9606 	br	1005aa8 <__alt_data_end+0xff805aa8>
 1005c50:	21000044 	addi	r4,r4,1
 1005c54:	d9000615 	stw	r4,24(sp)
 1005c58:	20800003 	ldbu	r2,0(r4)
 1005c5c:	10c03fcc 	andi	r3,r2,255
 1005c60:	28ff442e 	bgeu	r5,r3,1005974 <__alt_data_end+0xff805974>
 1005c64:	2025883a 	mov	r18,r4
 1005c68:	d8001015 	stw	zero,64(sp)
 1005c6c:	003f9506 	br	1005ac4 <__alt_data_end+0xff805ac4>
 1005c70:	4d3fab16 	blt	r9,r20,1005b20 <__alt_data_end+0xff805b20>
 1005c74:	ad4002a4 	muli	r21,r21,10
 1005c78:	10c03fcc 	andi	r3,r2,255
 1005c7c:	18c0201c 	xori	r3,r3,128
 1005c80:	18ffe004 	addi	r3,r3,-128
 1005c84:	a8eb883a 	add	r21,r21,r3
 1005c88:	ad7ff404 	addi	r21,r21,-48
 1005c8c:	003fa406 	br	1005b20 <__alt_data_end+0xff805b20>
 1005c90:	002b883a 	mov	r21,zero
 1005c94:	0023883a 	mov	r17,zero
 1005c98:	d9000c17 	ldw	r4,48(sp)
 1005c9c:	203f7026 	beq	r4,zero,1005a60 <__alt_data_end+0xff805a60>
 1005ca0:	dd800617 	ldw	r22,24(sp)
 1005ca4:	003f6c06 	br	1005a58 <__alt_data_end+0xff805a58>
 1005ca8:	e0007726 	beq	fp,zero,1005e88 <_strtod_r+0x574>
 1005cac:	dd800617 	ldw	r22,24(sp)
 1005cb0:	00c00ac4 	movi	r3,43
 1005cb4:	b0800044 	addi	r2,r22,1
 1005cb8:	d8800615 	stw	r2,24(sp)
 1005cbc:	b0800047 	ldb	r2,1(r22)
 1005cc0:	10c25726 	beq	r2,r3,1006620 <_strtod_r+0xd0c>
 1005cc4:	00c00b44 	movi	r3,45
 1005cc8:	10c25026 	beq	r2,r3,100660c <_strtod_r+0xcf8>
 1005ccc:	1027883a 	mov	r19,r2
 1005cd0:	000f883a 	mov	r7,zero
 1005cd4:	98fff404 	addi	r3,r19,-48
 1005cd8:	01000244 	movi	r4,9
 1005cdc:	9805883a 	mov	r2,r19
 1005ce0:	20c23836 	bltu	r4,r3,10065c4 <_strtod_r+0xcb0>
 1005ce4:	00c00c04 	movi	r3,48
 1005ce8:	98c0071e 	bne	r19,r3,1005d08 <_strtod_r+0x3f4>
 1005cec:	d8c00617 	ldw	r3,24(sp)
 1005cf0:	18c00044 	addi	r3,r3,1
 1005cf4:	d8c00615 	stw	r3,24(sp)
 1005cf8:	18800007 	ldb	r2,0(r3)
 1005cfc:	18c00044 	addi	r3,r3,1
 1005d00:	14fffc26 	beq	r2,r19,1005cf4 <__alt_data_end+0xff805cf4>
 1005d04:	1027883a 	mov	r19,r2
 1005d08:	10bff3c4 	addi	r2,r2,-49
 1005d0c:	00c00204 	movi	r3,8
 1005d10:	18bfa336 	bltu	r3,r2,1005ba0 <__alt_data_end+0xff805ba0>
 1005d14:	db000617 	ldw	r12,24(sp)
 1005d18:	98bff404 	addi	r2,r19,-48
 1005d1c:	02c00244 	movi	r11,9
 1005d20:	62800044 	addi	r10,r12,1
 1005d24:	da800615 	stw	r10,24(sp)
 1005d28:	64c00043 	ldbu	r19,1(r12)
 1005d2c:	98fff404 	addi	r3,r19,-48
 1005d30:	9cc03fcc 	andi	r19,r19,255
 1005d34:	9cc0201c 	xori	r19,r19,128
 1005d38:	18c03fcc 	andi	r3,r3,255
 1005d3c:	9cffe004 	addi	r19,r19,-128
 1005d40:	58c00e36 	bltu	r11,r3,1005d7c <_strtod_r+0x468>
 1005d44:	61000084 	addi	r4,r12,2
 1005d48:	d9000615 	stw	r4,24(sp)
 1005d4c:	108002a4 	muli	r2,r2,10
 1005d50:	21800003 	ldbu	r6,0(r4)
 1005d54:	2015883a 	mov	r10,r4
 1005d58:	14e7883a 	add	r19,r2,r19
 1005d5c:	30fff404 	addi	r3,r6,-48
 1005d60:	98bff404 	addi	r2,r19,-48
 1005d64:	34c03fcc 	andi	r19,r6,255
 1005d68:	9cc0201c 	xori	r19,r19,128
 1005d6c:	18c03fcc 	andi	r3,r3,255
 1005d70:	9cffe004 	addi	r19,r19,-128
 1005d74:	21000044 	addi	r4,r4,1
 1005d78:	58fff32e 	bgeu	r11,r3,1005d48 <__alt_data_end+0xff805d48>
 1005d7c:	5315c83a 	sub	r10,r10,r12
 1005d80:	00c00204 	movi	r3,8
 1005d84:	1a832a16 	blt	r3,r10,1006a30 <_strtod_r+0x111c>
 1005d88:	00d387c4 	movi	r3,19999
 1005d8c:	1880010e 	bge	r3,r2,1005d94 <_strtod_r+0x480>
 1005d90:	1805883a 	mov	r2,r3
 1005d94:	01c7c83a 	sub	r3,zero,r7
 1005d98:	10c4f03a 	xor	r2,r2,r3
 1005d9c:	11cf883a 	add	r7,r2,r7
 1005da0:	e03f8126 	beq	fp,zero,1005ba8 <__alt_data_end+0xff805ba8>
 1005da4:	3a11c83a 	sub	r8,r7,r8
 1005da8:	da000e15 	stw	r8,56(sp)
 1005dac:	a000011e 	bne	r20,zero,1005db4 <_strtod_r+0x4a0>
 1005db0:	e029883a 	mov	r20,fp
 1005db4:	00800404 	movi	r2,16
 1005db8:	e023883a 	mov	r17,fp
 1005dbc:	1700010e 	bge	r2,fp,1005dc4 <_strtod_r+0x4b0>
 1005dc0:	1023883a 	mov	r17,r2
 1005dc4:	b809883a 	mov	r4,r23
 1005dc8:	10161700 	call	1016170 <__floatunsidf>
 1005dcc:	d8800815 	stw	r2,32(sp)
 1005dd0:	d8c00715 	stw	r3,28(sp)
 1005dd4:	00800244 	movi	r2,9
 1005dd8:	1440150e 	bge	r2,r17,1005e30 <_strtod_r+0x51c>
 1005ddc:	88bffdc4 	addi	r2,r17,-9
 1005de0:	100490fa 	slli	r2,r2,3
 1005de4:	180b883a 	mov	r5,r3
 1005de8:	00c040b4 	movhi	r3,258
 1005dec:	18e61104 	addi	r3,r3,-26556
 1005df0:	1885883a 	add	r2,r3,r2
 1005df4:	d9000817 	ldw	r4,32(sp)
 1005df8:	11800017 	ldw	r6,0(r2)
 1005dfc:	11c00117 	ldw	r7,4(r2)
 1005e00:	10040200 	call	1004020 <__muldf3>
 1005e04:	a809883a 	mov	r4,r21
 1005e08:	102d883a 	mov	r22,r2
 1005e0c:	1827883a 	mov	r19,r3
 1005e10:	10161700 	call	1016170 <__floatunsidf>
 1005e14:	b009883a 	mov	r4,r22
 1005e18:	980b883a 	mov	r5,r19
 1005e1c:	100d883a 	mov	r6,r2
 1005e20:	180f883a 	mov	r7,r3
 1005e24:	1014d740 	call	1014d74 <__adddf3>
 1005e28:	d8800815 	stw	r2,32(sp)
 1005e2c:	d8c00715 	stw	r3,28(sp)
 1005e30:	008003c4 	movi	r2,15
 1005e34:	17004916 	blt	r2,fp,1005f5c <_strtod_r+0x648>
 1005e38:	d8c00e17 	ldw	r3,56(sp)
 1005e3c:	183f7e26 	beq	r3,zero,1005c38 <__alt_data_end+0xff805c38>
 1005e40:	d9000e17 	ldw	r4,56(sp)
 1005e44:	0103730e 	bge	zero,r4,1006c14 <_strtod_r+0x1300>
 1005e48:	00c00584 	movi	r3,22
 1005e4c:	19030216 	blt	r3,r4,1006a58 <_strtod_r+0x1144>
 1005e50:	200490fa 	slli	r2,r4,3
 1005e54:	00c040b4 	movhi	r3,258
 1005e58:	18e61104 	addi	r3,r3,-26556
 1005e5c:	1885883a 	add	r2,r3,r2
 1005e60:	d9800817 	ldw	r6,32(sp)
 1005e64:	d9c00717 	ldw	r7,28(sp)
 1005e68:	11000017 	ldw	r4,0(r2)
 1005e6c:	11400117 	ldw	r5,4(r2)
 1005e70:	10040200 	call	1004020 <__muldf3>
 1005e74:	102b883a 	mov	r21,r2
 1005e78:	1823883a 	mov	r17,r3
 1005e7c:	003f8606 	br	1005c98 <__alt_data_end+0xff805c98>
 1005e80:	0011883a 	mov	r8,zero
 1005e84:	02400044 	movi	r9,1
 1005e88:	2800031e 	bne	r5,zero,1005e98 <_strtod_r+0x584>
 1005e8c:	8800021e 	bne	r17,zero,1005e98 <_strtod_r+0x584>
 1005e90:	002b883a 	mov	r21,zero
 1005e94:	003eed06 	br	1005a4c <__alt_data_end+0xff805a4c>
 1005e98:	0039883a 	mov	fp,zero
 1005e9c:	003f8306 	br	1005cac <__alt_data_end+0xff805cac>
 1005ea0:	90800047 	ldb	r2,1(r18)
 1005ea4:	00c01604 	movi	r3,88
 1005ea8:	10c21d26 	beq	r2,r3,1006720 <_strtod_r+0xe0c>
 1005eac:	00c01e04 	movi	r3,120
 1005eb0:	10c21b26 	beq	r2,r3,1006720 <_strtod_r+0xe0c>
 1005eb4:	90c00044 	addi	r3,r18,1
 1005eb8:	1825883a 	mov	r18,r3
 1005ebc:	d8c00615 	stw	r3,24(sp)
 1005ec0:	18c00044 	addi	r3,r3,1
 1005ec4:	18bfffc3 	ldbu	r2,-1(r3)
 1005ec8:	11003fcc 	andi	r4,r2,255
 1005ecc:	2100201c 	xori	r4,r4,128
 1005ed0:	213fe004 	addi	r4,r4,-128
 1005ed4:	217ff826 	beq	r4,r5,1005eb8 <__alt_data_end+0xff805eb8>
 1005ed8:	203f6d26 	beq	r4,zero,1005c90 <__alt_data_end+0xff805c90>
 1005edc:	04400044 	movi	r17,1
 1005ee0:	003efe06 	br	1005adc <__alt_data_end+0xff805adc>
 1005ee4:	8009883a 	mov	r4,r16
 1005ee8:	100e9000 	call	100e900 <_localeconv_r>
 1005eec:	11000017 	ldw	r4,0(r2)
 1005ef0:	1004fa80 	call	1004fa8 <strlen>
 1005ef4:	d9000617 	ldw	r4,24(sp)
 1005ef8:	2085883a 	add	r2,r4,r2
 1005efc:	d8800615 	stw	r2,24(sp)
 1005f00:	14c00007 	ldb	r19,0(r2)
 1005f04:	a001b21e 	bne	r20,zero,10065d0 <_strtod_r+0xcbc>
 1005f08:	00c00c04 	movi	r3,48
 1005f0c:	98c3931e 	bne	r19,r3,1006d5c <_strtod_r+0x1448>
 1005f10:	10c00044 	addi	r3,r2,1
 1005f14:	9809883a 	mov	r4,r19
 1005f18:	d8c00615 	stw	r3,24(sp)
 1005f1c:	1cc00007 	ldb	r19,0(r3)
 1005f20:	188bc83a 	sub	r5,r3,r2
 1005f24:	18c00044 	addi	r3,r3,1
 1005f28:	993ffb26 	beq	r19,r4,1005f18 <__alt_data_end+0xff805f18>
 1005f2c:	98bff3c4 	addi	r2,r19,-49
 1005f30:	00c00204 	movi	r3,8
 1005f34:	1881ee36 	bltu	r3,r2,10066f0 <_strtod_r+0xddc>
 1005f38:	dc800617 	ldw	r18,24(sp)
 1005f3c:	9cfff404 	addi	r19,r19,-48
 1005f40:	2a000044 	addi	r8,r5,1
 1005f44:	9009883a 	mov	r4,r18
 1005f48:	07000044 	movi	fp,1
 1005f4c:	b88002a4 	muli	r2,r23,10
 1005f50:	000b883a 	mov	r5,zero
 1005f54:	98af883a 	add	r23,r19,r2
 1005f58:	0001a806 	br	10065fc <_strtod_r+0xce8>
 1005f5c:	d9000e17 	ldw	r4,56(sp)
 1005f60:	e463c83a 	sub	r17,fp,r17
 1005f64:	2463883a 	add	r17,r4,r17
 1005f68:	0442670e 	bge	zero,r17,1006908 <_strtod_r+0xff4>
 1005f6c:	888003cc 	andi	r2,r17,15
 1005f70:	10000b26 	beq	r2,zero,1005fa0 <_strtod_r+0x68c>
 1005f74:	100490fa 	slli	r2,r2,3
 1005f78:	00c040b4 	movhi	r3,258
 1005f7c:	18e61104 	addi	r3,r3,-26556
 1005f80:	1885883a 	add	r2,r3,r2
 1005f84:	d9800817 	ldw	r6,32(sp)
 1005f88:	d9c00717 	ldw	r7,28(sp)
 1005f8c:	11000017 	ldw	r4,0(r2)
 1005f90:	11400117 	ldw	r5,4(r2)
 1005f94:	10040200 	call	1004020 <__muldf3>
 1005f98:	d8800815 	stw	r2,32(sp)
 1005f9c:	d8c00715 	stw	r3,28(sp)
 1005fa0:	04fffc04 	movi	r19,-16
 1005fa4:	8ce2703a 	and	r17,r17,r19
 1005fa8:	8801a11e 	bne	r17,zero,1006630 <_strtod_r+0xd1c>
 1005fac:	dd400817 	ldw	r21,32(sp)
 1005fb0:	dc400717 	ldw	r17,28(sp)
 1005fb4:	d8001215 	stw	zero,72(sp)
 1005fb8:	8009883a 	mov	r4,r16
 1005fbc:	ddc00015 	stw	r23,0(sp)
 1005fc0:	900b883a 	mov	r5,r18
 1005fc4:	a00d883a 	mov	r6,r20
 1005fc8:	e00f883a 	mov	r7,fp
 1005fcc:	100f9940 	call	100f994 <__s2b>
 1005fd0:	d8800d15 	stw	r2,52(sp)
 1005fd4:	d8800e17 	ldw	r2,56(sp)
 1005fd8:	d9000d17 	ldw	r4,52(sp)
 1005fdc:	dd801217 	ldw	r22,72(sp)
 1005fe0:	1007d7fa 	srai	r3,r2,31
 1005fe4:	0085c83a 	sub	r2,zero,r2
 1005fe8:	21000304 	addi	r4,r4,12
 1005fec:	1886703a 	and	r3,r3,r2
 1005ff0:	d9001115 	stw	r4,68(sp)
 1005ff4:	d8c00915 	stw	r3,36(sp)
 1005ff8:	d8800d17 	ldw	r2,52(sp)
 1005ffc:	8009883a 	mov	r4,r16
 1006000:	0029883a 	mov	r20,zero
 1006004:	11400117 	ldw	r5,4(r2)
 1006008:	100f7b00 	call	100f7b0 <_Balloc>
 100600c:	d8c00d17 	ldw	r3,52(sp)
 1006010:	d9401117 	ldw	r5,68(sp)
 1006014:	11000304 	addi	r4,r2,12
 1006018:	19800417 	ldw	r6,16(r3)
 100601c:	1027883a 	mov	r19,r2
 1006020:	31800084 	addi	r6,r6,2
 1006024:	318d883a 	add	r6,r6,r6
 1006028:	318d883a 	add	r6,r6,r6
 100602c:	100f3f80 	call	100f3f8 <memcpy>
 1006030:	d8800204 	addi	r2,sp,8
 1006034:	8009883a 	mov	r4,r16
 1006038:	a80b883a 	mov	r5,r21
 100603c:	880d883a 	mov	r6,r17
 1006040:	d9c00404 	addi	r7,sp,16
 1006044:	d8800015 	stw	r2,0(sp)
 1006048:	10103e40 	call	10103e4 <__d2b>
 100604c:	8009883a 	mov	r4,r16
 1006050:	01400044 	movi	r5,1
 1006054:	d8800515 	stw	r2,20(sp)
 1006058:	100fbb00 	call	100fbb0 <__i2b>
 100605c:	d8c00e17 	ldw	r3,56(sp)
 1006060:	1025883a 	mov	r18,r2
 1006064:	00c0010e 	bge	zero,r3,100606c <_strtod_r+0x758>
 1006068:	1829883a 	mov	r20,r3
 100606c:	d8800417 	ldw	r2,16(sp)
 1006070:	1000dc16 	blt	r2,zero,10063e4 <_strtod_r+0xad0>
 1006074:	d9000917 	ldw	r4,36(sp)
 1006078:	a02f883a 	mov	r23,r20
 100607c:	20b9883a 	add	fp,r4,r2
 1006080:	d9000217 	ldw	r4,8(sp)
 1006084:	1585c83a 	sub	r2,r2,r22
 1006088:	00ff00c4 	movi	r3,-1021
 100608c:	110b883a 	add	r5,r2,r4
 1006090:	28c09e0e 	bge	r5,r3,100630c <_strtod_r+0x9f8>
 1006094:	10810cc4 	addi	r2,r2,1075
 1006098:	e087883a 	add	r3,fp,r2
 100609c:	b885883a 	add	r2,r23,r2
 10060a0:	15af883a 	add	r23,r2,r22
 10060a4:	1805883a 	mov	r2,r3
 10060a8:	e0c0010e 	bge	fp,r3,10060b0 <_strtod_r+0x79c>
 10060ac:	e005883a 	mov	r2,fp
 10060b0:	b880010e 	bge	r23,r2,10060b8 <_strtod_r+0x7a4>
 10060b4:	b805883a 	mov	r2,r23
 10060b8:	0080030e 	bge	zero,r2,10060c8 <_strtod_r+0x7b4>
 10060bc:	1887c83a 	sub	r3,r3,r2
 10060c0:	b8afc83a 	sub	r23,r23,r2
 10060c4:	e0b9c83a 	sub	fp,fp,r2
 10060c8:	d8800917 	ldw	r2,36(sp)
 10060cc:	10001126 	beq	r2,zero,1006114 <_strtod_r+0x800>
 10060d0:	900b883a 	mov	r5,r18
 10060d4:	100d883a 	mov	r6,r2
 10060d8:	8009883a 	mov	r4,r16
 10060dc:	d8c01415 	stw	r3,80(sp)
 10060e0:	100fde80 	call	100fde8 <__pow5mult>
 10060e4:	d9800517 	ldw	r6,20(sp)
 10060e8:	8009883a 	mov	r4,r16
 10060ec:	100b883a 	mov	r5,r2
 10060f0:	1025883a 	mov	r18,r2
 10060f4:	100fbec0 	call	100fbec <__multiply>
 10060f8:	d9400517 	ldw	r5,20(sp)
 10060fc:	8009883a 	mov	r4,r16
 1006100:	d8801315 	stw	r2,76(sp)
 1006104:	100f8580 	call	100f858 <_Bfree>
 1006108:	d8801317 	ldw	r2,76(sp)
 100610c:	d8c01417 	ldw	r3,80(sp)
 1006110:	d8800515 	stw	r2,20(sp)
 1006114:	00c0050e 	bge	zero,r3,100612c <_strtod_r+0x818>
 1006118:	d9400517 	ldw	r5,20(sp)
 100611c:	8009883a 	mov	r4,r16
 1006120:	180d883a 	mov	r6,r3
 1006124:	100ff280 	call	100ff28 <__lshift>
 1006128:	d8800515 	stw	r2,20(sp)
 100612c:	a0000526 	beq	r20,zero,1006144 <_strtod_r+0x830>
 1006130:	980b883a 	mov	r5,r19
 1006134:	8009883a 	mov	r4,r16
 1006138:	a00d883a 	mov	r6,r20
 100613c:	100fde80 	call	100fde8 <__pow5mult>
 1006140:	1027883a 	mov	r19,r2
 1006144:	05c0050e 	bge	zero,r23,100615c <_strtod_r+0x848>
 1006148:	980b883a 	mov	r5,r19
 100614c:	8009883a 	mov	r4,r16
 1006150:	b80d883a 	mov	r6,r23
 1006154:	100ff280 	call	100ff28 <__lshift>
 1006158:	1027883a 	mov	r19,r2
 100615c:	0700050e 	bge	zero,fp,1006174 <_strtod_r+0x860>
 1006160:	900b883a 	mov	r5,r18
 1006164:	8009883a 	mov	r4,r16
 1006168:	e00d883a 	mov	r6,fp
 100616c:	100ff280 	call	100ff28 <__lshift>
 1006170:	1025883a 	mov	r18,r2
 1006174:	d9400517 	ldw	r5,20(sp)
 1006178:	8009883a 	mov	r4,r16
 100617c:	980d883a 	mov	r6,r19
 1006180:	10100d00 	call	10100d0 <__mdiff>
 1006184:	10c00317 	ldw	r3,12(r2)
 1006188:	1009883a 	mov	r4,r2
 100618c:	10000315 	stw	zero,12(r2)
 1006190:	900b883a 	mov	r5,r18
 1006194:	1029883a 	mov	r20,r2
 1006198:	d8c00b15 	stw	r3,44(sp)
 100619c:	10100700 	call	1010070 <__mcmp>
 10061a0:	10017316 	blt	r2,zero,1006770 <_strtod_r+0xe5c>
 10061a4:	1001b526 	beq	r2,zero,100687c <_strtod_r+0xf68>
 10061a8:	a009883a 	mov	r4,r20
 10061ac:	900b883a 	mov	r5,r18
 10061b0:	10105200 	call	1010520 <__ratio>
 10061b4:	1009883a 	mov	r4,r2
 10061b8:	180b883a 	mov	r5,r3
 10061bc:	000d883a 	mov	r6,zero
 10061c0:	01d00034 	movhi	r7,16384
 10061c4:	182f883a 	mov	r23,r3
 10061c8:	d8801315 	stw	r2,76(sp)
 10061cc:	10156f00 	call	10156f0 <__ledf2>
 10061d0:	da001317 	ldw	r8,76(sp)
 10061d4:	00805016 	blt	zero,r2,1006318 <_strtod_r+0xa04>
 10061d8:	d9000b17 	ldw	r4,44(sp)
 10061dc:	20008426 	beq	r4,zero,10063f0 <_strtod_r+0xadc>
 10061e0:	05cffc34 	movhi	r23,16368
 10061e4:	0039883a 	mov	fp,zero
 10061e8:	d8000f15 	stw	zero,60(sp)
 10061ec:	ddc00a15 	stw	r23,40(sp)
 10061f0:	d8800717 	ldw	r2,28(sp)
 10061f4:	125ffc2c 	andhi	r9,r2,32752
 10061f8:	009ff834 	movhi	r2,32736
 10061fc:	48805626 	beq	r9,r2,1006358 <_strtod_r+0xa44>
 1006200:	b0001e26 	beq	r22,zero,100627c <_strtod_r+0x968>
 1006204:	0081a834 	movhi	r2,1696
 1006208:	12401c36 	bltu	r2,r9,100627c <_strtod_r+0x968>
 100620c:	d9000f17 	ldw	r4,60(sp)
 1006210:	d9400a17 	ldw	r5,40(sp)
 1006214:	01d07834 	movhi	r7,16864
 1006218:	39ffffc4 	addi	r7,r7,-1
 100621c:	01bff034 	movhi	r6,65472
 1006220:	da401315 	stw	r9,76(sp)
 1006224:	10156f00 	call	10156f0 <__ledf2>
 1006228:	da401317 	ldw	r9,76(sp)
 100622c:	00801016 	blt	zero,r2,1006270 <_strtod_r+0x95c>
 1006230:	d9000f17 	ldw	r4,60(sp)
 1006234:	d9400a17 	ldw	r5,40(sp)
 1006238:	1013fcc0 	call	1013fcc <__fixunsdfsi>
 100623c:	da401317 	ldw	r9,76(sp)
 1006240:	1000dc26 	beq	r2,zero,10065b4 <_strtod_r+0xca0>
 1006244:	1009883a 	mov	r4,r2
 1006248:	10161700 	call	1016170 <__floatunsidf>
 100624c:	da401317 	ldw	r9,76(sp)
 1006250:	d8800f15 	stw	r2,60(sp)
 1006254:	d8c00a15 	stw	r3,40(sp)
 1006258:	d8c00b17 	ldw	r3,44(sp)
 100625c:	1800d31e 	bne	r3,zero,10065ac <_strtod_r+0xc98>
 1006260:	d9000a17 	ldw	r4,40(sp)
 1006264:	2220003c 	xorhi	r8,r4,32768
 1006268:	df000f17 	ldw	fp,60(sp)
 100626c:	402f883a 	mov	r23,r8
 1006270:	0081ac34 	movhi	r2,1712
 1006274:	b891883a 	add	r8,r23,r2
 1006278:	426fc83a 	sub	r23,r8,r9
 100627c:	a809883a 	mov	r4,r21
 1006280:	880b883a 	mov	r5,r17
 1006284:	da401315 	stw	r9,76(sp)
 1006288:	10102680 	call	1010268 <__ulp>
 100628c:	b80b883a 	mov	r5,r23
 1006290:	e009883a 	mov	r4,fp
 1006294:	100d883a 	mov	r6,r2
 1006298:	180f883a 	mov	r7,r3
 100629c:	10040200 	call	1004020 <__muldf3>
 10062a0:	a809883a 	mov	r4,r21
 10062a4:	880b883a 	mov	r5,r17
 10062a8:	100d883a 	mov	r6,r2
 10062ac:	180f883a 	mov	r7,r3
 10062b0:	1014d740 	call	1014d74 <__adddf3>
 10062b4:	da401317 	ldw	r9,76(sp)
 10062b8:	102b883a 	mov	r21,r2
 10062bc:	1823883a 	mov	r17,r3
 10062c0:	d8800815 	stw	r2,32(sp)
 10062c4:	d8c00715 	stw	r3,28(sp)
 10062c8:	182f883a 	mov	r23,r3
 10062cc:	b000021e 	bne	r22,zero,10062d8 <_strtod_r+0x9c4>
 10062d0:	b89ffc2c 	andhi	r2,r23,32752
 10062d4:	48806e26 	beq	r9,r2,1006490 <_strtod_r+0xb7c>
 10062d8:	d9400517 	ldw	r5,20(sp)
 10062dc:	8009883a 	mov	r4,r16
 10062e0:	100f8580 	call	100f858 <_Bfree>
 10062e4:	8009883a 	mov	r4,r16
 10062e8:	980b883a 	mov	r5,r19
 10062ec:	100f8580 	call	100f858 <_Bfree>
 10062f0:	8009883a 	mov	r4,r16
 10062f4:	900b883a 	mov	r5,r18
 10062f8:	100f8580 	call	100f858 <_Bfree>
 10062fc:	8009883a 	mov	r4,r16
 1006300:	a00b883a 	mov	r5,r20
 1006304:	100f8580 	call	100f858 <_Bfree>
 1006308:	003f3b06 	br	1005ff8 <__alt_data_end+0xff805ff8>
 100630c:	00c00d84 	movi	r3,54
 1006310:	1905c83a 	sub	r2,r3,r4
 1006314:	003f6006 	br	1006098 <__alt_data_end+0xff806098>
 1006318:	4009883a 	mov	r4,r8
 100631c:	b80b883a 	mov	r5,r23
 1006320:	000d883a 	mov	r6,zero
 1006324:	01cff834 	movhi	r7,16352
 1006328:	10040200 	call	1004020 <__muldf3>
 100632c:	d9000b17 	ldw	r4,44(sp)
 1006330:	d8800f15 	stw	r2,60(sp)
 1006334:	d8c00a15 	stw	r3,40(sp)
 1006338:	2000481e 	bne	r4,zero,100645c <_strtod_r+0xb48>
 100633c:	1a20003c 	xorhi	r8,r3,32768
 1006340:	1039883a 	mov	fp,r2
 1006344:	d8800717 	ldw	r2,28(sp)
 1006348:	402f883a 	mov	r23,r8
 100634c:	125ffc2c 	andhi	r9,r2,32752
 1006350:	009ff834 	movhi	r2,32736
 1006354:	48bfaa1e 	bne	r9,r2,1006200 <__alt_data_end+0xff806200>
 1006358:	d8c00717 	ldw	r3,28(sp)
 100635c:	00bf2c34 	movhi	r2,64688
 1006360:	d9000817 	ldw	r4,32(sp)
 1006364:	1887883a 	add	r3,r3,r2
 1006368:	180b883a 	mov	r5,r3
 100636c:	da401315 	stw	r9,76(sp)
 1006370:	d8c00715 	stw	r3,28(sp)
 1006374:	10102680 	call	1010268 <__ulp>
 1006378:	e009883a 	mov	r4,fp
 100637c:	b80b883a 	mov	r5,r23
 1006380:	100d883a 	mov	r6,r2
 1006384:	180f883a 	mov	r7,r3
 1006388:	10040200 	call	1004020 <__muldf3>
 100638c:	d9000817 	ldw	r4,32(sp)
 1006390:	d9400717 	ldw	r5,28(sp)
 1006394:	100d883a 	mov	r6,r2
 1006398:	180f883a 	mov	r7,r3
 100639c:	1014d740 	call	1014d74 <__adddf3>
 10063a0:	011f2834 	movhi	r4,31904
 10063a4:	d8800815 	stw	r2,32(sp)
 10063a8:	213fffc4 	addi	r4,r4,-1
 10063ac:	189ffc2c 	andhi	r2,r3,32752
 10063b0:	da401317 	ldw	r9,76(sp)
 10063b4:	2080762e 	bgeu	r4,r2,1006590 <_strtod_r+0xc7c>
 10063b8:	009ffc34 	movhi	r2,32752
 10063bc:	10bfffc4 	addi	r2,r2,-1
 10063c0:	88814426 	beq	r17,r2,10068d4 <_strtod_r+0xfc0>
 10063c4:	00dffc34 	movhi	r3,32752
 10063c8:	18ffffc4 	addi	r3,r3,-1
 10063cc:	013fffc4 	movi	r4,-1
 10063d0:	d8c00715 	stw	r3,28(sp)
 10063d4:	d9000815 	stw	r4,32(sp)
 10063d8:	202b883a 	mov	r21,r4
 10063dc:	1823883a 	mov	r17,r3
 10063e0:	003fbd06 	br	10062d8 <__alt_data_end+0xff8062d8>
 10063e4:	a0afc83a 	sub	r23,r20,r2
 10063e8:	df000917 	ldw	fp,36(sp)
 10063ec:	003f2406 	br	1006080 <__alt_data_end+0xff806080>
 10063f0:	d8800817 	ldw	r2,32(sp)
 10063f4:	10001b1e 	bne	r2,zero,1006464 <_strtod_r+0xb50>
 10063f8:	d8c00717 	ldw	r3,28(sp)
 10063fc:	01000434 	movhi	r4,16
 1006400:	213fffc4 	addi	r4,r4,-1
 1006404:	1904703a 	and	r2,r3,r4
 1006408:	10001b1e 	bne	r2,zero,1006478 <_strtod_r+0xb64>
 100640c:	4009883a 	mov	r4,r8
 1006410:	b80b883a 	mov	r5,r23
 1006414:	000d883a 	mov	r6,zero
 1006418:	01cffc34 	movhi	r7,16368
 100641c:	da001315 	stw	r8,76(sp)
 1006420:	10156f00 	call	10156f0 <__ledf2>
 1006424:	da001317 	ldw	r8,76(sp)
 1006428:	10017b16 	blt	r2,zero,1006a18 <_strtod_r+0x1104>
 100642c:	4009883a 	mov	r4,r8
 1006430:	b80b883a 	mov	r5,r23
 1006434:	000d883a 	mov	r6,zero
 1006438:	01cff834 	movhi	r7,16352
 100643c:	10040200 	call	1004020 <__muldf3>
 1006440:	d8800f15 	stw	r2,60(sp)
 1006444:	d8c00a15 	stw	r3,40(sp)
 1006448:	102f883a 	mov	r23,r2
 100644c:	1a20003c 	xorhi	r8,r3,32768
 1006450:	b839883a 	mov	fp,r23
 1006454:	402f883a 	mov	r23,r8
 1006458:	003f6506 	br	10061f0 <__alt_data_end+0xff8061f0>
 100645c:	da000a17 	ldw	r8,40(sp)
 1006460:	003fb706 	br	1006340 <__alt_data_end+0xff806340>
 1006464:	d8c00817 	ldw	r3,32(sp)
 1006468:	00800044 	movi	r2,1
 100646c:	1880021e 	bne	r3,r2,1006478 <_strtod_r+0xb64>
 1006470:	d9000717 	ldw	r4,28(sp)
 1006474:	2000a426 	beq	r4,zero,1006708 <_strtod_r+0xdf4>
 1006478:	008ffc34 	movhi	r2,16368
 100647c:	0039883a 	mov	fp,zero
 1006480:	05effc34 	movhi	r23,49136
 1006484:	d8000f15 	stw	zero,60(sp)
 1006488:	d8800a15 	stw	r2,40(sp)
 100648c:	003f5806 	br	10061f0 <__alt_data_end+0xff8061f0>
 1006490:	d9400a17 	ldw	r5,40(sp)
 1006494:	d9000f17 	ldw	r4,60(sp)
 1006498:	10047440 	call	1004744 <__fixdfsi>
 100649c:	1009883a 	mov	r4,r2
 10064a0:	10160a00 	call	10160a0 <__floatsidf>
 10064a4:	d9000f17 	ldw	r4,60(sp)
 10064a8:	d9400a17 	ldw	r5,40(sp)
 10064ac:	100d883a 	mov	r6,r2
 10064b0:	180f883a 	mov	r7,r3
 10064b4:	10157d00 	call	10157d0 <__subdf3>
 10064b8:	1011883a 	mov	r8,r2
 10064bc:	d8800b17 	ldw	r2,44(sp)
 10064c0:	10001f1e 	bne	r2,zero,1006540 <_strtod_r+0xc2c>
 10064c4:	d9000817 	ldw	r4,32(sp)
 10064c8:	20001d1e 	bne	r4,zero,1006540 <_strtod_r+0xc2c>
 10064cc:	00800434 	movhi	r2,16
 10064d0:	10bfffc4 	addi	r2,r2,-1
 10064d4:	b8ae703a 	and	r23,r23,r2
 10064d8:	b800191e 	bne	r23,zero,1006540 <_strtod_r+0xc2c>
 10064dc:	01a52834 	movhi	r6,38048
 10064e0:	01cff434 	movhi	r7,16336
 10064e4:	318d6544 	addi	r6,r6,13717
 10064e8:	39ffffc4 	addi	r7,r7,-1
 10064ec:	4009883a 	mov	r4,r8
 10064f0:	180b883a 	mov	r5,r3
 10064f4:	10156f00 	call	10156f0 <__ledf2>
 10064f8:	103f770e 	bge	r2,zero,10062d8 <__alt_data_end+0xff8062d8>
 10064fc:	a02d883a 	mov	r22,r20
 1006500:	d9400517 	ldw	r5,20(sp)
 1006504:	8009883a 	mov	r4,r16
 1006508:	100f8580 	call	100f858 <_Bfree>
 100650c:	8009883a 	mov	r4,r16
 1006510:	980b883a 	mov	r5,r19
 1006514:	100f8580 	call	100f858 <_Bfree>
 1006518:	8009883a 	mov	r4,r16
 100651c:	900b883a 	mov	r5,r18
 1006520:	100f8580 	call	100f858 <_Bfree>
 1006524:	d9400d17 	ldw	r5,52(sp)
 1006528:	8009883a 	mov	r4,r16
 100652c:	100f8580 	call	100f858 <_Bfree>
 1006530:	8009883a 	mov	r4,r16
 1006534:	b00b883a 	mov	r5,r22
 1006538:	100f8580 	call	100f858 <_Bfree>
 100653c:	003dd606 	br	1005c98 <__alt_data_end+0xff805c98>
 1006540:	01a52834 	movhi	r6,38048
 1006544:	01cff834 	movhi	r7,16352
 1006548:	4009883a 	mov	r4,r8
 100654c:	180b883a 	mov	r5,r3
 1006550:	318d6544 	addi	r6,r6,13717
 1006554:	39ffffc4 	addi	r7,r7,-1
 1006558:	d8c01415 	stw	r3,80(sp)
 100655c:	da001315 	stw	r8,76(sp)
 1006560:	10156f00 	call	10156f0 <__ledf2>
 1006564:	d8c01417 	ldw	r3,80(sp)
 1006568:	da001317 	ldw	r8,76(sp)
 100656c:	103fe316 	blt	r2,zero,10064fc <__alt_data_end+0xff8064fc>
 1006570:	018d6c34 	movhi	r6,13744
 1006574:	31b94d44 	addi	r6,r6,-6859
 1006578:	4009883a 	mov	r4,r8
 100657c:	180b883a 	mov	r5,r3
 1006580:	01cff834 	movhi	r7,16352
 1006584:	10156100 	call	1015610 <__gedf2>
 1006588:	00bf530e 	bge	zero,r2,10062d8 <__alt_data_end+0xff8062d8>
 100658c:	003fdb06 	br	10064fc <__alt_data_end+0xff8064fc>
 1006590:	0080d434 	movhi	r2,848
 1006594:	1887883a 	add	r3,r3,r2
 1006598:	d8c00715 	stw	r3,28(sp)
 100659c:	182f883a 	mov	r23,r3
 10065a0:	dd400817 	ldw	r21,32(sp)
 10065a4:	1823883a 	mov	r17,r3
 10065a8:	003f4806 	br	10062cc <__alt_data_end+0xff8062cc>
 10065ac:	da000a17 	ldw	r8,40(sp)
 10065b0:	003f2d06 	br	1006268 <__alt_data_end+0xff806268>
 10065b4:	008ffc34 	movhi	r2,16368
 10065b8:	d8000f15 	stw	zero,60(sp)
 10065bc:	d8800a15 	stw	r2,40(sp)
 10065c0:	003f2506 	br	1006258 <__alt_data_end+0xff806258>
 10065c4:	dd800615 	stw	r22,24(sp)
 10065c8:	000f883a 	mov	r7,zero
 10065cc:	003d7506 	br	1005ba4 <__alt_data_end+0xff805ba4>
 10065d0:	a039883a 	mov	fp,r20
 10065d4:	000b883a 	mov	r5,zero
 10065d8:	0011883a 	mov	r8,zero
 10065dc:	99bff404 	addi	r6,r19,-48
 10065e0:	00800244 	movi	r2,9
 10065e4:	11801036 	bltu	r2,r6,1006628 <_strtod_r+0xd14>
 10065e8:	28c00044 	addi	r3,r5,1
 10065ec:	3027883a 	mov	r19,r6
 10065f0:	3001331e 	bne	r6,zero,1006ac0 <_strtod_r+0x11ac>
 10065f4:	d9000617 	ldw	r4,24(sp)
 10065f8:	180b883a 	mov	r5,r3
 10065fc:	20800044 	addi	r2,r4,1
 1006600:	d8800615 	stw	r2,24(sp)
 1006604:	24c00047 	ldb	r19,1(r4)
 1006608:	003ff406 	br	10065dc <__alt_data_end+0xff8065dc>
 100660c:	01c00044 	movi	r7,1
 1006610:	b0800084 	addi	r2,r22,2
 1006614:	d8800615 	stw	r2,24(sp)
 1006618:	b4c00087 	ldb	r19,2(r22)
 100661c:	003dad06 	br	1005cd4 <__alt_data_end+0xff805cd4>
 1006620:	000f883a 	mov	r7,zero
 1006624:	003ffa06 	br	1006610 <__alt_data_end+0xff806610>
 1006628:	02400044 	movi	r9,1
 100662c:	003d5806 	br	1005b90 <__alt_data_end+0xff805b90>
 1006630:	00804d04 	movi	r2,308
 1006634:	1440af16 	blt	r2,r17,10068f4 <_strtod_r+0xfe0>
 1006638:	8827d13a 	srai	r19,r17,4
 100663c:	05800044 	movi	r22,1
 1006640:	044040b4 	movhi	r17,258
 1006644:	8c660704 	addi	r17,r17,-26596
 1006648:	b4c1db0e 	bge	r22,r19,1006db8 <_strtod_r+0x14a4>
 100664c:	d8800817 	ldw	r2,32(sp)
 1006650:	d8c00717 	ldw	r3,28(sp)
 1006654:	002b883a 	mov	r21,zero
 1006658:	9980004c 	andi	r6,r19,1
 100665c:	30000726 	beq	r6,zero,100667c <_strtod_r+0xd68>
 1006660:	a80c90fa 	slli	r6,r21,3
 1006664:	1009883a 	mov	r4,r2
 1006668:	180b883a 	mov	r5,r3
 100666c:	8985883a 	add	r2,r17,r6
 1006670:	11800017 	ldw	r6,0(r2)
 1006674:	11c00117 	ldw	r7,4(r2)
 1006678:	10040200 	call	1004020 <__muldf3>
 100667c:	9827d07a 	srai	r19,r19,1
 1006680:	ad400044 	addi	r21,r21,1
 1006684:	9dbff41e 	bne	r19,r22,1006658 <__alt_data_end+0xff806658>
 1006688:	d8800815 	stw	r2,32(sp)
 100668c:	d8c00715 	stw	r3,28(sp)
 1006690:	a82a90fa 	slli	r21,r21,3
 1006694:	d8800717 	ldw	r2,28(sp)
 1006698:	d9800817 	ldw	r6,32(sp)
 100669c:	8d63883a 	add	r17,r17,r21
 10066a0:	89000017 	ldw	r4,0(r17)
 10066a4:	89400117 	ldw	r5,4(r17)
 10066a8:	01ff2c34 	movhi	r7,64688
 10066ac:	11cf883a 	add	r7,r2,r7
 10066b0:	10040200 	call	1004020 <__muldf3>
 10066b4:	d8800815 	stw	r2,32(sp)
 10066b8:	011f2834 	movhi	r4,31904
 10066bc:	189ffc2c 	andhi	r2,r3,32752
 10066c0:	20808c36 	bltu	r4,r2,10068f4 <_strtod_r+0xfe0>
 10066c4:	011f2434 	movhi	r4,31888
 10066c8:	2081a62e 	bgeu	r4,r2,1006d64 <_strtod_r+0x1450>
 10066cc:	00dffc34 	movhi	r3,32752
 10066d0:	18ffffc4 	addi	r3,r3,-1
 10066d4:	013fffc4 	movi	r4,-1
 10066d8:	d8c00715 	stw	r3,28(sp)
 10066dc:	d9000815 	stw	r4,32(sp)
 10066e0:	202b883a 	mov	r21,r4
 10066e4:	1823883a 	mov	r17,r3
 10066e8:	d8001215 	stw	zero,72(sp)
 10066ec:	003e3206 	br	1005fb8 <__alt_data_end+0xff805fb8>
 10066f0:	00801944 	movi	r2,101
 10066f4:	98bde226 	beq	r19,r2,1005e80 <__alt_data_end+0xff805e80>
 10066f8:	0039883a 	mov	fp,zero
 10066fc:	0011883a 	mov	r8,zero
 1006700:	02400044 	movi	r9,1
 1006704:	003d2406 	br	1005b98 <__alt_data_end+0xff805b98>
 1006708:	a02d883a 	mov	r22,r20
 100670c:	00800884 	movi	r2,34
 1006710:	80800015 	stw	r2,0(r16)
 1006714:	002b883a 	mov	r21,zero
 1006718:	0023883a 	mov	r17,zero
 100671c:	003f7806 	br	1006500 <__alt_data_end+0xff806500>
 1006720:	d8c01017 	ldw	r3,64(sp)
 1006724:	04c040b4 	movhi	r19,258
 1006728:	d8800504 	addi	r2,sp,20
 100672c:	9ce77804 	addi	r19,r19,-25120
 1006730:	d8800015 	stw	r2,0(sp)
 1006734:	d8c00115 	stw	r3,4(sp)
 1006738:	8009883a 	mov	r4,r16
 100673c:	d9400604 	addi	r5,sp,24
 1006740:	980d883a 	mov	r6,r19
 1006744:	d9c00404 	addi	r7,sp,16
 1006748:	100dda40 	call	100dda4 <__gethex>
 100674c:	144001cc 	andi	r17,r2,7
 1006750:	883d4f26 	beq	r17,zero,1005c90 <__alt_data_end+0xff805c90>
 1006754:	00c00184 	movi	r3,6
 1006758:	88c0f21e 	bne	r17,r3,1006b24 <_strtod_r+0x1210>
 100675c:	94800044 	addi	r18,r18,1
 1006760:	dc800615 	stw	r18,24(sp)
 1006764:	002b883a 	mov	r21,zero
 1006768:	0023883a 	mov	r17,zero
 100676c:	003d4a06 	br	1005c98 <__alt_data_end+0xff805c98>
 1006770:	df000b17 	ldw	fp,44(sp)
 1006774:	a02d883a 	mov	r22,r20
 1006778:	e0003d1e 	bne	fp,zero,1006870 <_strtod_r+0xf5c>
 100677c:	d9000817 	ldw	r4,32(sp)
 1006780:	20003b1e 	bne	r4,zero,1006870 <_strtod_r+0xf5c>
 1006784:	d8c00717 	ldw	r3,28(sp)
 1006788:	00800434 	movhi	r2,16
 100678c:	10bfffc4 	addi	r2,r2,-1
 1006790:	1884703a 	and	r2,r3,r2
 1006794:	1000361e 	bne	r2,zero,1006870 <_strtod_r+0xf5c>
 1006798:	18dffc2c 	andhi	r3,r3,32752
 100679c:	0081ac34 	movhi	r2,1712
 10067a0:	10c0332e 	bgeu	r2,r3,1006870 <_strtod_r+0xf5c>
 10067a4:	a0800517 	ldw	r2,20(r20)
 10067a8:	1000031e 	bne	r2,zero,10067b8 <_strtod_r+0xea4>
 10067ac:	a0800417 	ldw	r2,16(r20)
 10067b0:	01000044 	movi	r4,1
 10067b4:	20802e0e 	bge	r4,r2,1006870 <_strtod_r+0xf5c>
 10067b8:	8009883a 	mov	r4,r16
 10067bc:	a00b883a 	mov	r5,r20
 10067c0:	01800044 	movi	r6,1
 10067c4:	d8c01415 	stw	r3,80(sp)
 10067c8:	100ff280 	call	100ff28 <__lshift>
 10067cc:	1009883a 	mov	r4,r2
 10067d0:	900b883a 	mov	r5,r18
 10067d4:	102d883a 	mov	r22,r2
 10067d8:	10100700 	call	1010070 <__mcmp>
 10067dc:	d8c01417 	ldw	r3,80(sp)
 10067e0:	0080230e 	bge	zero,r2,1006870 <_strtod_r+0xf5c>
 10067e4:	d8801217 	ldw	r2,72(sp)
 10067e8:	10016a26 	beq	r2,zero,1006d94 <_strtod_r+0x1480>
 10067ec:	0081ac34 	movhi	r2,1712
 10067f0:	10c16816 	blt	r2,r3,1006d94 <_strtod_r+0x1480>
 10067f4:	0080dc34 	movhi	r2,880
 10067f8:	10ffc40e 	bge	r2,r3,100670c <__alt_data_end+0xff80670c>
 10067fc:	a809883a 	mov	r4,r21
 1006800:	880b883a 	mov	r5,r17
 1006804:	000d883a 	mov	r6,zero
 1006808:	01ce5434 	movhi	r7,14672
 100680c:	10040200 	call	1004020 <__muldf3>
 1006810:	102b883a 	mov	r21,r2
 1006814:	1823883a 	mov	r17,r3
 1006818:	183f391e 	bne	r3,zero,1006500 <__alt_data_end+0xff806500>
 100681c:	103f381e 	bne	r2,zero,1006500 <__alt_data_end+0xff806500>
 1006820:	00800884 	movi	r2,34
 1006824:	80800015 	stw	r2,0(r16)
 1006828:	003f3506 	br	1006500 <__alt_data_end+0xff806500>
 100682c:	d8801217 	ldw	r2,72(sp)
 1006830:	10015f26 	beq	r2,zero,1006db0 <_strtod_r+0x149c>
 1006834:	209ffc2c 	andhi	r2,r4,32752
 1006838:	00c1a834 	movhi	r3,1696
 100683c:	18815c36 	bltu	r3,r2,1006db0 <_strtod_r+0x149c>
 1006840:	1004d53a 	srli	r2,r2,20
 1006844:	00c01ac4 	movi	r3,107
 1006848:	1887c83a 	sub	r3,r3,r2
 100684c:	00bfffc4 	movi	r2,-1
 1006850:	10c4983a 	sll	r2,r2,r3
 1006854:	d8c00817 	ldw	r3,32(sp)
 1006858:	1880101e 	bne	r3,r2,100689c <_strtod_r+0xf88>
 100685c:	d9000717 	ldw	r4,28(sp)
 1006860:	00800434 	movhi	r2,16
 1006864:	002b883a 	mov	r21,zero
 1006868:	245ffc2c 	andhi	r17,r4,32752
 100686c:	88a3883a 	add	r17,r17,r2
 1006870:	d8c01217 	ldw	r3,72(sp)
 1006874:	183fe11e 	bne	r3,zero,10067fc <__alt_data_end+0xff8067fc>
 1006878:	003f2106 	br	1006500 <__alt_data_end+0xff806500>
 100687c:	df000b17 	ldw	fp,44(sp)
 1006880:	00800434 	movhi	r2,16
 1006884:	a02d883a 	mov	r22,r20
 1006888:	10bfffc4 	addi	r2,r2,-1
 100688c:	e0009e26 	beq	fp,zero,1006b08 <_strtod_r+0x11f4>
 1006890:	d9000717 	ldw	r4,28(sp)
 1006894:	2086703a 	and	r3,r4,r2
 1006898:	18bfe426 	beq	r3,r2,100682c <__alt_data_end+0xff80682c>
 100689c:	d8c00817 	ldw	r3,32(sp)
 10068a0:	1880004c 	andi	r2,r3,1
 10068a4:	103ff226 	beq	r2,zero,1006870 <__alt_data_end+0xff806870>
 10068a8:	a809883a 	mov	r4,r21
 10068ac:	880b883a 	mov	r5,r17
 10068b0:	10102680 	call	1010268 <__ulp>
 10068b4:	a809883a 	mov	r4,r21
 10068b8:	880b883a 	mov	r5,r17
 10068bc:	100d883a 	mov	r6,r2
 10068c0:	180f883a 	mov	r7,r3
 10068c4:	1014d740 	call	1014d74 <__adddf3>
 10068c8:	102b883a 	mov	r21,r2
 10068cc:	1823883a 	mov	r17,r3
 10068d0:	003fe706 	br	1006870 <__alt_data_end+0xff806870>
 10068d4:	00bfffc4 	movi	r2,-1
 10068d8:	a8beba1e 	bne	r21,r2,10063c4 <__alt_data_end+0xff8063c4>
 10068dc:	00800884 	movi	r2,34
 10068e0:	80800015 	stw	r2,0(r16)
 10068e4:	002b883a 	mov	r21,zero
 10068e8:	045ffc34 	movhi	r17,32752
 10068ec:	a02d883a 	mov	r22,r20
 10068f0:	003f0306 	br	1006500 <__alt_data_end+0xff806500>
 10068f4:	00800884 	movi	r2,34
 10068f8:	80800015 	stw	r2,0(r16)
 10068fc:	002b883a 	mov	r21,zero
 1006900:	045ffc34 	movhi	r17,32752
 1006904:	003ce406 	br	1005c98 <__alt_data_end+0xff805c98>
 1006908:	883da826 	beq	r17,zero,1005fac <__alt_data_end+0xff805fac>
 100690c:	0463c83a 	sub	r17,zero,r17
 1006910:	888003cc 	andi	r2,r17,15
 1006914:	10000b26 	beq	r2,zero,1006944 <_strtod_r+0x1030>
 1006918:	100490fa 	slli	r2,r2,3
 100691c:	00c040b4 	movhi	r3,258
 1006920:	18e61104 	addi	r3,r3,-26556
 1006924:	1885883a 	add	r2,r3,r2
 1006928:	d9000817 	ldw	r4,32(sp)
 100692c:	d9400717 	ldw	r5,28(sp)
 1006930:	11800017 	ldw	r6,0(r2)
 1006934:	11c00117 	ldw	r7,4(r2)
 1006938:	10036d00 	call	10036d0 <__divdf3>
 100693c:	d8800815 	stw	r2,32(sp)
 1006940:	d8c00715 	stw	r3,28(sp)
 1006944:	8823d13a 	srai	r17,r17,4
 1006948:	883d9826 	beq	r17,zero,1005fac <__alt_data_end+0xff805fac>
 100694c:	008007c4 	movi	r2,31
 1006950:	14402c16 	blt	r2,r17,1006a04 <_strtod_r+0x10f0>
 1006954:	8880040c 	andi	r2,r17,16
 1006958:	10011e26 	beq	r2,zero,1006dd4 <_strtod_r+0x14c0>
 100695c:	0441330e 	bge	zero,r17,1006e2c <_strtod_r+0x1518>
 1006960:	00801a84 	movi	r2,106
 1006964:	d8801215 	stw	r2,72(sp)
 1006968:	d8800817 	ldw	r2,32(sp)
 100696c:	d8c00717 	ldw	r3,28(sp)
 1006970:	04c040b4 	movhi	r19,258
 1006974:	9ce5c104 	addi	r19,r19,-26876
 1006978:	8980004c 	andi	r6,r17,1
 100697c:	30000526 	beq	r6,zero,1006994 <_strtod_r+0x1080>
 1006980:	99800017 	ldw	r6,0(r19)
 1006984:	99c00117 	ldw	r7,4(r19)
 1006988:	1009883a 	mov	r4,r2
 100698c:	180b883a 	mov	r5,r3
 1006990:	10040200 	call	1004020 <__muldf3>
 1006994:	8823d07a 	srai	r17,r17,1
 1006998:	9cc00204 	addi	r19,r19,8
 100699c:	047ff616 	blt	zero,r17,1006978 <__alt_data_end+0xff806978>
 10069a0:	d8c00715 	stw	r3,28(sp)
 10069a4:	d8c01217 	ldw	r3,72(sp)
 10069a8:	d8800815 	stw	r2,32(sp)
 10069ac:	18000d26 	beq	r3,zero,10069e4 <_strtod_r+0x10d0>
 10069b0:	d9000717 	ldw	r4,28(sp)
 10069b4:	00801ac4 	movi	r2,107
 10069b8:	20dffc2c 	andhi	r3,r4,32752
 10069bc:	1806d53a 	srli	r3,r3,20
 10069c0:	10c5c83a 	sub	r2,r2,r3
 10069c4:	0080070e 	bge	zero,r2,10069e4 <_strtod_r+0x10d0>
 10069c8:	00c007c4 	movi	r3,31
 10069cc:	1881110e 	bge	r3,r2,1006e14 <_strtod_r+0x1500>
 10069d0:	d8000815 	stw	zero,32(sp)
 10069d4:	00c00d04 	movi	r3,52
 10069d8:	1881170e 	bge	r3,r2,1006e38 <_strtod_r+0x1524>
 10069dc:	0080dc34 	movhi	r2,880
 10069e0:	d8800715 	stw	r2,28(sp)
 10069e4:	d9000817 	ldw	r4,32(sp)
 10069e8:	d9400717 	ldw	r5,28(sp)
 10069ec:	000d883a 	mov	r6,zero
 10069f0:	000f883a 	mov	r7,zero
 10069f4:	202b883a 	mov	r21,r4
 10069f8:	2823883a 	mov	r17,r5
 10069fc:	1003f9c0 	call	1003f9c <__eqdf2>
 1006a00:	103d6d1e 	bne	r2,zero,1005fb8 <__alt_data_end+0xff805fb8>
 1006a04:	00800884 	movi	r2,34
 1006a08:	80800015 	stw	r2,0(r16)
 1006a0c:	002b883a 	mov	r21,zero
 1006a10:	0023883a 	mov	r17,zero
 1006a14:	003ca006 	br	1005c98 <__alt_data_end+0xff805c98>
 1006a18:	00cff834 	movhi	r3,16352
 1006a1c:	002f883a 	mov	r23,zero
 1006a20:	022ff834 	movhi	r8,49120
 1006a24:	d8000f15 	stw	zero,60(sp)
 1006a28:	d8c00a15 	stw	r3,40(sp)
 1006a2c:	003e8806 	br	1006450 <__alt_data_end+0xff806450>
 1006a30:	009387c4 	movi	r2,19999
 1006a34:	003cd706 	br	1005d94 <__alt_data_end+0xff805d94>
 1006a38:	14c03fcc 	andi	r19,r2,255
 1006a3c:	9cc0201c 	xori	r19,r19,128
 1006a40:	9cffe004 	addi	r19,r19,-128
 1006a44:	9039883a 	mov	fp,r18
 1006a48:	002b883a 	mov	r21,zero
 1006a4c:	002f883a 	mov	r23,zero
 1006a50:	0029883a 	mov	r20,zero
 1006a54:	003c3d06 	br	1005b4c <__alt_data_end+0xff805b4c>
 1006a58:	d9000e17 	ldw	r4,56(sp)
 1006a5c:	00c00944 	movi	r3,37
 1006a60:	1f07c83a 	sub	r3,r3,fp
 1006a64:	193d3d16 	blt	r3,r4,1005f5c <__alt_data_end+0xff805f5c>
 1006a68:	1739c83a 	sub	fp,r2,fp
 1006a6c:	e00690fa 	slli	r3,fp,3
 1006a70:	040040b4 	movhi	r16,258
 1006a74:	84261104 	addi	r16,r16,-26556
 1006a78:	80c7883a 	add	r3,r16,r3
 1006a7c:	d9800817 	ldw	r6,32(sp)
 1006a80:	d9c00717 	ldw	r7,28(sp)
 1006a84:	19000017 	ldw	r4,0(r3)
 1006a88:	19400117 	ldw	r5,4(r3)
 1006a8c:	10040200 	call	1004020 <__muldf3>
 1006a90:	d9000e17 	ldw	r4,56(sp)
 1006a94:	180b883a 	mov	r5,r3
 1006a98:	2739c83a 	sub	fp,r4,fp
 1006a9c:	e00c90fa 	slli	r6,fp,3
 1006aa0:	1009883a 	mov	r4,r2
 1006aa4:	8185883a 	add	r2,r16,r6
 1006aa8:	11800017 	ldw	r6,0(r2)
 1006aac:	11c00117 	ldw	r7,4(r2)
 1006ab0:	10040200 	call	1004020 <__muldf3>
 1006ab4:	102b883a 	mov	r21,r2
 1006ab8:	1823883a 	mov	r17,r3
 1006abc:	003c7606 	br	1005c98 <__alt_data_end+0xff805c98>
 1006ac0:	40d1883a 	add	r8,r8,r3
 1006ac4:	2800c126 	beq	r5,zero,1006dcc <_strtod_r+0x14b8>
 1006ac8:	2f0b883a 	add	r5,r5,fp
 1006acc:	01000204 	movi	r4,8
 1006ad0:	01c00404 	movi	r7,16
 1006ad4:	e7000044 	addi	fp,fp,1
 1006ad8:	e0bfffc4 	addi	r2,fp,-1
 1006adc:	20800716 	blt	r4,r2,1006afc <_strtod_r+0x11e8>
 1006ae0:	bdc002a4 	muli	r23,r23,10
 1006ae4:	e17ffb1e 	bne	fp,r5,1006ad4 <__alt_data_end+0xff806ad4>
 1006ae8:	00800204 	movi	r2,8
 1006aec:	2f000044 	addi	fp,r5,1
 1006af0:	11406b16 	blt	r2,r5,1006ca0 <_strtod_r+0x138c>
 1006af4:	d9000617 	ldw	r4,24(sp)
 1006af8:	003d1406 	br	1005f4c <__alt_data_end+0xff805f4c>
 1006afc:	3f3ff916 	blt	r7,fp,1006ae4 <__alt_data_end+0xff806ae4>
 1006b00:	ad4002a4 	muli	r21,r21,10
 1006b04:	003ff706 	br	1006ae4 <__alt_data_end+0xff806ae4>
 1006b08:	d8c00717 	ldw	r3,28(sp)
 1006b0c:	1884703a 	and	r2,r3,r2
 1006b10:	10004f1e 	bne	r2,zero,1006c50 <_strtod_r+0x133c>
 1006b14:	d9000817 	ldw	r4,32(sp)
 1006b18:	20004d1e 	bne	r4,zero,1006c50 <_strtod_r+0x133c>
 1006b1c:	18dffc2c 	andhi	r3,r3,32752
 1006b20:	003f3006 	br	10067e4 <__alt_data_end+0xff8067e4>
 1006b24:	d9800517 	ldw	r6,20(sp)
 1006b28:	30000826 	beq	r6,zero,1006b4c <_strtod_r+0x1238>
 1006b2c:	99400017 	ldw	r5,0(r19)
 1006b30:	d9000204 	addi	r4,sp,8
 1006b34:	d8801315 	stw	r2,76(sp)
 1006b38:	10106380 	call	1010638 <__copybits>
 1006b3c:	d9400517 	ldw	r5,20(sp)
 1006b40:	8009883a 	mov	r4,r16
 1006b44:	100f8580 	call	100f858 <_Bfree>
 1006b48:	d8801317 	ldw	r2,76(sp)
 1006b4c:	00c00184 	movi	r3,6
 1006b50:	d9000417 	ldw	r4,16(sp)
 1006b54:	1c401036 	bltu	r3,r17,1006b98 <_strtod_r+0x1284>
 1006b58:	882290ba 	slli	r17,r17,2
 1006b5c:	00c04034 	movhi	r3,256
 1006b60:	18dadc04 	addi	r3,r3,27504
 1006b64:	88e3883a 	add	r17,r17,r3
 1006b68:	88c00017 	ldw	r3,0(r17)
 1006b6c:	1800683a 	jmp	r3
 1006b70:	01006bb0 	cmpltui	r4,zero,430
 1006b74:	01006be8 	cmpgeui	r4,zero,431
 1006b78:	01006bd4 	movui	r4,431
 1006b7c:	01006b8c 	andi	r4,zero,430
 1006b80:	01006bbc 	xorhi	r4,zero,430
 1006b84:	01006be8 	cmpgeui	r4,zero,431
 1006b88:	01006bb0 	cmpltui	r4,zero,430
 1006b8c:	00dffc34 	movhi	r3,32752
 1006b90:	d8c00715 	stw	r3,28(sp)
 1006b94:	d8000815 	stw	zero,32(sp)
 1006b98:	1080020c 	andi	r2,r2,8
 1006b9c:	dd400817 	ldw	r21,32(sp)
 1006ba0:	103c2626 	beq	r2,zero,1005c3c <__alt_data_end+0xff805c3c>
 1006ba4:	d9000717 	ldw	r4,28(sp)
 1006ba8:	24600034 	orhi	r17,r4,32768
 1006bac:	003c3a06 	br	1005c98 <__alt_data_end+0xff805c98>
 1006bb0:	d8000715 	stw	zero,28(sp)
 1006bb4:	d8000815 	stw	zero,32(sp)
 1006bb8:	003ff706 	br	1006b98 <__alt_data_end+0xff806b98>
 1006bbc:	01200034 	movhi	r4,32768
 1006bc0:	213fffc4 	addi	r4,r4,-1
 1006bc4:	00ffffc4 	movi	r3,-1
 1006bc8:	d9000715 	stw	r4,28(sp)
 1006bcc:	d8c00815 	stw	r3,32(sp)
 1006bd0:	003ff106 	br	1006b98 <__alt_data_end+0xff806b98>
 1006bd4:	d9000217 	ldw	r4,8(sp)
 1006bd8:	d8c00317 	ldw	r3,12(sp)
 1006bdc:	d9000815 	stw	r4,32(sp)
 1006be0:	d8c00715 	stw	r3,28(sp)
 1006be4:	003fec06 	br	1006b98 <__alt_data_end+0xff806b98>
 1006be8:	20c10cc4 	addi	r3,r4,1075
 1006bec:	d9000217 	ldw	r4,8(sp)
 1006bf0:	d9400317 	ldw	r5,12(sp)
 1006bf4:	1806953a 	slli	r3,r3,20
 1006bf8:	d9000815 	stw	r4,32(sp)
 1006bfc:	013ffc34 	movhi	r4,65520
 1006c00:	213fffc4 	addi	r4,r4,-1
 1006c04:	2908703a 	and	r4,r5,r4
 1006c08:	1908b03a 	or	r4,r3,r4
 1006c0c:	d9000715 	stw	r4,28(sp)
 1006c10:	003fe106 	br	1006b98 <__alt_data_end+0xff806b98>
 1006c14:	d8c00e17 	ldw	r3,56(sp)
 1006c18:	00bffa84 	movi	r2,-22
 1006c1c:	18bccf16 	blt	r3,r2,1005f5c <__alt_data_end+0xff805f5c>
 1006c20:	180690fa 	slli	r3,r3,3
 1006c24:	008040b4 	movhi	r2,258
 1006c28:	10a61104 	addi	r2,r2,-26556
 1006c2c:	10c5c83a 	sub	r2,r2,r3
 1006c30:	d9000817 	ldw	r4,32(sp)
 1006c34:	d9400717 	ldw	r5,28(sp)
 1006c38:	11800017 	ldw	r6,0(r2)
 1006c3c:	11c00117 	ldw	r7,4(r2)
 1006c40:	10036d00 	call	10036d0 <__divdf3>
 1006c44:	102b883a 	mov	r21,r2
 1006c48:	1823883a 	mov	r17,r3
 1006c4c:	003c1206 	br	1005c98 <__alt_data_end+0xff805c98>
 1006c50:	d8c00817 	ldw	r3,32(sp)
 1006c54:	1880004c 	andi	r2,r3,1
 1006c58:	103f0526 	beq	r2,zero,1006870 <__alt_data_end+0xff806870>
 1006c5c:	a809883a 	mov	r4,r21
 1006c60:	880b883a 	mov	r5,r17
 1006c64:	10102680 	call	1010268 <__ulp>
 1006c68:	a809883a 	mov	r4,r21
 1006c6c:	880b883a 	mov	r5,r17
 1006c70:	100d883a 	mov	r6,r2
 1006c74:	180f883a 	mov	r7,r3
 1006c78:	10157d00 	call	10157d0 <__subdf3>
 1006c7c:	1009883a 	mov	r4,r2
 1006c80:	180b883a 	mov	r5,r3
 1006c84:	000d883a 	mov	r6,zero
 1006c88:	000f883a 	mov	r7,zero
 1006c8c:	102b883a 	mov	r21,r2
 1006c90:	1823883a 	mov	r17,r3
 1006c94:	1003f9c0 	call	1003f9c <__eqdf2>
 1006c98:	103e9c26 	beq	r2,zero,100670c <__alt_data_end+0xff80670c>
 1006c9c:	003ef406 	br	1006870 <__alt_data_end+0xff806870>
 1006ca0:	00800404 	movi	r2,16
 1006ca4:	1700360e 	bge	r2,fp,1006d80 <_strtod_r+0x146c>
 1006ca8:	d9000617 	ldw	r4,24(sp)
 1006cac:	000b883a 	mov	r5,zero
 1006cb0:	003e5206 	br	10065fc <__alt_data_end+0xff8065fc>
 1006cb4:	014040b4 	movhi	r5,258
 1006cb8:	d9000617 	ldw	r4,24(sp)
 1006cbc:	2965bd04 	addi	r5,r5,-26892
 1006cc0:	01c00644 	movi	r7,25
 1006cc4:	00000b06 	br	1006cf4 <_strtod_r+0x13e0>
 1006cc8:	21000044 	addi	r4,r4,1
 1006ccc:	20800003 	ldbu	r2,0(r4)
 1006cd0:	10ffefc4 	addi	r3,r2,-65
 1006cd4:	10803fcc 	andi	r2,r2,255
 1006cd8:	1080201c 	xori	r2,r2,128
 1006cdc:	18c03fcc 	andi	r3,r3,255
 1006ce0:	10bfe004 	addi	r2,r2,-128
 1006ce4:	38c00136 	bltu	r7,r3,1006cec <_strtod_r+0x13d8>
 1006ce8:	10800804 	addi	r2,r2,32
 1006cec:	29400044 	addi	r5,r5,1
 1006cf0:	11bb541e 	bne	r2,r6,1005a44 <__alt_data_end+0xff805a44>
 1006cf4:	29800007 	ldb	r6,0(r5)
 1006cf8:	303ff31e 	bne	r6,zero,1006cc8 <__alt_data_end+0xff806cc8>
 1006cfc:	018040b4 	movhi	r6,258
 1006d00:	200b883a 	mov	r5,r4
 1006d04:	d9000615 	stw	r4,24(sp)
 1006d08:	31a5be04 	addi	r6,r6,-26888
 1006d0c:	02000644 	movi	r8,25
 1006d10:	00000a06 	br	1006d3c <_strtod_r+0x1428>
 1006d14:	28800003 	ldbu	r2,0(r5)
 1006d18:	10ffefc4 	addi	r3,r2,-65
 1006d1c:	10803fcc 	andi	r2,r2,255
 1006d20:	1080201c 	xori	r2,r2,128
 1006d24:	18c03fcc 	andi	r3,r3,255
 1006d28:	10bfe004 	addi	r2,r2,-128
 1006d2c:	40c00136 	bltu	r8,r3,1006d34 <_strtod_r+0x1420>
 1006d30:	10800804 	addi	r2,r2,32
 1006d34:	31800044 	addi	r6,r6,1
 1006d38:	11c0211e 	bne	r2,r7,1006dc0 <_strtod_r+0x14ac>
 1006d3c:	31c00007 	ldb	r7,0(r6)
 1006d40:	29400044 	addi	r5,r5,1
 1006d44:	383ff31e 	bne	r7,zero,1006d14 <__alt_data_end+0xff806d14>
 1006d48:	d9400615 	stw	r5,24(sp)
 1006d4c:	009ffc34 	movhi	r2,32752
 1006d50:	d8800715 	stw	r2,28(sp)
 1006d54:	d8000815 	stw	zero,32(sp)
 1006d58:	003bb706 	br	1005c38 <__alt_data_end+0xff805c38>
 1006d5c:	000b883a 	mov	r5,zero
 1006d60:	003c7206 	br	1005f2c <__alt_data_end+0xff805f2c>
 1006d64:	0080d434 	movhi	r2,848
 1006d68:	1887883a 	add	r3,r3,r2
 1006d6c:	d8c00715 	stw	r3,28(sp)
 1006d70:	dd400817 	ldw	r21,32(sp)
 1006d74:	1823883a 	mov	r17,r3
 1006d78:	d8001215 	stw	zero,72(sp)
 1006d7c:	003c8e06 	br	1005fb8 <__alt_data_end+0xff805fb8>
 1006d80:	a9c002a4 	muli	r7,r21,10
 1006d84:	d9000617 	ldw	r4,24(sp)
 1006d88:	000b883a 	mov	r5,zero
 1006d8c:	31eb883a 	add	r21,r6,r7
 1006d90:	003e1a06 	br	10065fc <__alt_data_end+0xff8065fc>
 1006d94:	047ffc34 	movhi	r17,65520
 1006d98:	1c47883a 	add	r3,r3,r17
 1006d9c:	057fffc4 	movi	r21,-1
 1006da0:	04400434 	movhi	r17,16
 1006da4:	8d63883a 	add	r17,r17,r21
 1006da8:	1c62b03a 	or	r17,r3,r17
 1006dac:	003eb006 	br	1006870 <__alt_data_end+0xff806870>
 1006db0:	00bfffc4 	movi	r2,-1
 1006db4:	003ea706 	br	1006854 <__alt_data_end+0xff806854>
 1006db8:	002b883a 	mov	r21,zero
 1006dbc:	003e3406 	br	1006690 <__alt_data_end+0xff806690>
 1006dc0:	21000044 	addi	r4,r4,1
 1006dc4:	d9000615 	stw	r4,24(sp)
 1006dc8:	003fe006 	br	1006d4c <__alt_data_end+0xff806d4c>
 1006dcc:	e00b883a 	mov	r5,fp
 1006dd0:	003f4506 	br	1006ae8 <__alt_data_end+0xff806ae8>
 1006dd4:	d8001215 	stw	zero,72(sp)
 1006dd8:	047ee316 	blt	zero,r17,1006968 <__alt_data_end+0xff806968>
 1006ddc:	003f0106 	br	10069e4 <__alt_data_end+0xff8069e4>
 1006de0:	014040b4 	movhi	r5,258
 1006de4:	29677304 	addi	r5,r5,-25140
 1006de8:	d9000604 	addi	r4,sp,24
 1006dec:	d9800204 	addi	r6,sp,8
 1006df0:	100e5c00 	call	100e5c0 <__hexnan>
 1006df4:	00c00144 	movi	r3,5
 1006df8:	10fb8c1e 	bne	r2,r3,1005c2c <__alt_data_end+0xff805c2c>
 1006dfc:	d8800317 	ldw	r2,12(sp)
 1006e00:	d8c00217 	ldw	r3,8(sp)
 1006e04:	109ffc34 	orhi	r2,r2,32752
 1006e08:	d8c00815 	stw	r3,32(sp)
 1006e0c:	d8800715 	stw	r2,28(sp)
 1006e10:	003b8906 	br	1005c38 <__alt_data_end+0xff805c38>
 1006e14:	00ffffc4 	movi	r3,-1
 1006e18:	d9000817 	ldw	r4,32(sp)
 1006e1c:	1884983a 	sll	r2,r3,r2
 1006e20:	1108703a 	and	r4,r2,r4
 1006e24:	d9000815 	stw	r4,32(sp)
 1006e28:	003eee06 	br	10069e4 <__alt_data_end+0xff8069e4>
 1006e2c:	01001a84 	movi	r4,106
 1006e30:	d9001215 	stw	r4,72(sp)
 1006e34:	003ede06 	br	10069b0 <__alt_data_end+0xff8069b0>
 1006e38:	00ffffc4 	movi	r3,-1
 1006e3c:	10bff804 	addi	r2,r2,-32
 1006e40:	1884983a 	sll	r2,r3,r2
 1006e44:	d8c00717 	ldw	r3,28(sp)
 1006e48:	10c6703a 	and	r3,r2,r3
 1006e4c:	d8c00715 	stw	r3,28(sp)
 1006e50:	003ee406 	br	10069e4 <__alt_data_end+0xff8069e4>

01006e54 <strtod>:
 1006e54:	00c040b4 	movhi	r3,258
 1006e58:	18ed3804 	addi	r3,r3,-19232
 1006e5c:	2005883a 	mov	r2,r4
 1006e60:	19000017 	ldw	r4,0(r3)
 1006e64:	280d883a 	mov	r6,r5
 1006e68:	100b883a 	mov	r5,r2
 1006e6c:	10059141 	jmpi	1005914 <_strtod_r>

01006e70 <strtof>:
 1006e70:	defffb04 	addi	sp,sp,-20
 1006e74:	dcc00315 	stw	r19,12(sp)
 1006e78:	04c040b4 	movhi	r19,258
 1006e7c:	9ced3804 	addi	r19,r19,-19232
 1006e80:	2005883a 	mov	r2,r4
 1006e84:	99000017 	ldw	r4,0(r19)
 1006e88:	280d883a 	mov	r6,r5
 1006e8c:	100b883a 	mov	r5,r2
 1006e90:	dfc00415 	stw	ra,16(sp)
 1006e94:	dc800215 	stw	r18,8(sp)
 1006e98:	dc400115 	stw	r17,4(sp)
 1006e9c:	dc000015 	stw	r16,0(sp)
 1006ea0:	10059140 	call	1005914 <_strtod_r>
 1006ea4:	1009883a 	mov	r4,r2
 1006ea8:	180b883a 	mov	r5,r3
 1006eac:	1025883a 	mov	r18,r2
 1006eb0:	1823883a 	mov	r17,r3
 1006eb4:	10048dc0 	call	10048dc <__truncdfsf2>
 1006eb8:	1009883a 	mov	r4,r2
 1006ebc:	000b883a 	mov	r5,zero
 1006ec0:	1021883a 	mov	r16,r2
 1006ec4:	1014b900 	call	1014b90 <__eqsf2>
 1006ec8:	1000111e 	bne	r2,zero,1006f10 <strtof+0xa0>
 1006ecc:	9009883a 	mov	r4,r18
 1006ed0:	880b883a 	mov	r5,r17
 1006ed4:	000d883a 	mov	r6,zero
 1006ed8:	000f883a 	mov	r7,zero
 1006edc:	1003f9c0 	call	1003f9c <__eqdf2>
 1006ee0:	10000b26 	beq	r2,zero,1006f10 <strtof+0xa0>
 1006ee4:	98800017 	ldw	r2,0(r19)
 1006ee8:	00c00884 	movi	r3,34
 1006eec:	10c00015 	stw	r3,0(r2)
 1006ef0:	8005883a 	mov	r2,r16
 1006ef4:	dfc00417 	ldw	ra,16(sp)
 1006ef8:	dcc00317 	ldw	r19,12(sp)
 1006efc:	dc800217 	ldw	r18,8(sp)
 1006f00:	dc400117 	ldw	r17,4(sp)
 1006f04:	dc000017 	ldw	r16,0(sp)
 1006f08:	dec00504 	addi	sp,sp,20
 1006f0c:	f800283a 	ret
 1006f10:	015fe034 	movhi	r5,32640
 1006f14:	297fffc4 	addi	r5,r5,-1
 1006f18:	8009883a 	mov	r4,r16
 1006f1c:	1014c040 	call	1014c04 <__gesf2>
 1006f20:	0080070e 	bge	zero,r2,1006f40 <strtof+0xd0>
 1006f24:	01dffc34 	movhi	r7,32752
 1006f28:	39ffffc4 	addi	r7,r7,-1
 1006f2c:	9009883a 	mov	r4,r18
 1006f30:	880b883a 	mov	r5,r17
 1006f34:	01bfffc4 	movi	r6,-1
 1006f38:	10156100 	call	1015610 <__gedf2>
 1006f3c:	00bfe90e 	bge	zero,r2,1006ee4 <__alt_data_end+0xff806ee4>
 1006f40:	017fe034 	movhi	r5,65408
 1006f44:	297fffc4 	addi	r5,r5,-1
 1006f48:	8009883a 	mov	r4,r16
 1006f4c:	1014cbc0 	call	1014cbc <__lesf2>
 1006f50:	103fe70e 	bge	r2,zero,1006ef0 <__alt_data_end+0xff806ef0>
 1006f54:	01fffc34 	movhi	r7,65520
 1006f58:	39ffffc4 	addi	r7,r7,-1
 1006f5c:	9009883a 	mov	r4,r18
 1006f60:	880b883a 	mov	r5,r17
 1006f64:	01bfffc4 	movi	r6,-1
 1006f68:	10156f00 	call	10156f0 <__ledf2>
 1006f6c:	103fdd0e 	bge	r2,zero,1006ee4 <__alt_data_end+0xff806ee4>
 1006f70:	003fdf06 	br	1006ef0 <__alt_data_end+0xff806ef0>

01006f74 <_strtol_r>:
 1006f74:	008040b4 	movhi	r2,258
 1006f78:	defff404 	addi	sp,sp,-48
 1006f7c:	10ad3604 	addi	r2,r2,-19240
 1006f80:	dcc00515 	stw	r19,20(sp)
 1006f84:	14c00017 	ldw	r19,0(r2)
 1006f88:	dd800815 	stw	r22,32(sp)
 1006f8c:	dd400715 	stw	r21,28(sp)
 1006f90:	dd000615 	stw	r20,24(sp)
 1006f94:	dfc00b15 	stw	ra,44(sp)
 1006f98:	df000a15 	stw	fp,40(sp)
 1006f9c:	ddc00915 	stw	r23,36(sp)
 1006fa0:	dc800415 	stw	r18,16(sp)
 1006fa4:	dc400315 	stw	r17,12(sp)
 1006fa8:	dc000215 	stw	r16,8(sp)
 1006fac:	282b883a 	mov	r21,r5
 1006fb0:	d9000015 	stw	r4,0(sp)
 1006fb4:	3029883a 	mov	r20,r6
 1006fb8:	382d883a 	mov	r22,r7
 1006fbc:	2813883a 	mov	r9,r5
 1006fc0:	4a000007 	ldb	r8,0(r9)
 1006fc4:	4807883a 	mov	r3,r9
 1006fc8:	4a400044 	addi	r9,r9,1
 1006fcc:	9a05883a 	add	r2,r19,r8
 1006fd0:	10800043 	ldbu	r2,1(r2)
 1006fd4:	1080020c 	andi	r2,r2,8
 1006fd8:	103ff91e 	bne	r2,zero,1006fc0 <__alt_data_end+0xff806fc0>
 1006fdc:	00800b44 	movi	r2,45
 1006fe0:	4025883a 	mov	r18,r8
 1006fe4:	4823883a 	mov	r17,r9
 1006fe8:	40805826 	beq	r8,r2,100714c <_strtol_r+0x1d8>
 1006fec:	00800ac4 	movi	r2,43
 1006ff0:	40805a26 	beq	r8,r2,100715c <_strtol_r+0x1e8>
 1006ff4:	0039883a 	mov	fp,zero
 1006ff8:	b0000426 	beq	r22,zero,100700c <_strtol_r+0x98>
 1006ffc:	00800404 	movi	r2,16
 1007000:	b0805a26 	beq	r22,r2,100716c <_strtol_r+0x1f8>
 1007004:	b02f883a 	mov	r23,r22
 1007008:	00000406 	br	100701c <_strtol_r+0xa8>
 100700c:	00800c04 	movi	r2,48
 1007010:	90806526 	beq	r18,r2,10071a8 <_strtol_r+0x234>
 1007014:	05800284 	movi	r22,10
 1007018:	b02f883a 	mov	r23,r22
 100701c:	00e00034 	movhi	r3,32768
 1007020:	18ffffc4 	addi	r3,r3,-1
 1007024:	e0e1883a 	add	r16,fp,r3
 1007028:	b80b883a 	mov	r5,r23
 100702c:	8009883a 	mov	r4,r16
 1007030:	1004bfc0 	call	1004bfc <__umodsi3>
 1007034:	8009883a 	mov	r4,r16
 1007038:	b80b883a 	mov	r5,r23
 100703c:	d8800115 	stw	r2,4(sp)
 1007040:	1004bf40 	call	1004bf4 <__udivsi3>
 1007044:	9c91883a 	add	r8,r19,r18
 1007048:	42000043 	ldbu	r8,1(r8)
 100704c:	8807883a 	mov	r3,r17
 1007050:	000d883a 	mov	r6,zero
 1007054:	4240010c 	andi	r9,r8,4
 1007058:	0009883a 	mov	r4,zero
 100705c:	02800044 	movi	r10,1
 1007060:	017fffc4 	movi	r5,-1
 1007064:	d9c00117 	ldw	r7,4(sp)
 1007068:	48000e26 	beq	r9,zero,10070a4 <_strtol_r+0x130>
 100706c:	923ff404 	addi	r8,r18,-48
 1007070:	4580120e 	bge	r8,r22,10070bc <_strtol_r+0x148>
 1007074:	31400526 	beq	r6,r5,100708c <_strtol_r+0x118>
 1007078:	11002736 	bltu	r2,r4,1007118 <_strtol_r+0x1a4>
 100707c:	20802526 	beq	r4,r2,1007114 <_strtol_r+0x1a0>
 1007080:	25c9383a 	mul	r4,r4,r23
 1007084:	01800044 	movi	r6,1
 1007088:	4109883a 	add	r4,r8,r4
 100708c:	1c800007 	ldb	r18,0(r3)
 1007090:	18c00044 	addi	r3,r3,1
 1007094:	9c91883a 	add	r8,r19,r18
 1007098:	42000043 	ldbu	r8,1(r8)
 100709c:	4240010c 	andi	r9,r8,4
 10070a0:	483ff21e 	bne	r9,zero,100706c <__alt_data_end+0xff80706c>
 10070a4:	420000cc 	andi	r8,r8,3
 10070a8:	40000426 	beq	r8,zero,10070bc <_strtol_r+0x148>
 10070ac:	42801c26 	beq	r8,r10,1007120 <_strtol_r+0x1ac>
 10070b0:	024015c4 	movi	r9,87
 10070b4:	9251c83a 	sub	r8,r18,r9
 10070b8:	45bfee16 	blt	r8,r22,1007074 <__alt_data_end+0xff807074>
 10070bc:	00bfffc4 	movi	r2,-1
 10070c0:	30801926 	beq	r6,r2,1007128 <_strtol_r+0x1b4>
 10070c4:	0705c83a 	sub	r2,zero,fp
 10070c8:	2084f03a 	xor	r2,r4,r2
 10070cc:	1739883a 	add	fp,r2,fp
 10070d0:	e005883a 	mov	r2,fp
 10070d4:	a0000326 	beq	r20,zero,10070e4 <_strtol_r+0x170>
 10070d8:	30001a1e 	bne	r6,zero,1007144 <_strtol_r+0x1d0>
 10070dc:	a80b883a 	mov	r5,r21
 10070e0:	a1400015 	stw	r5,0(r20)
 10070e4:	dfc00b17 	ldw	ra,44(sp)
 10070e8:	df000a17 	ldw	fp,40(sp)
 10070ec:	ddc00917 	ldw	r23,36(sp)
 10070f0:	dd800817 	ldw	r22,32(sp)
 10070f4:	dd400717 	ldw	r21,28(sp)
 10070f8:	dd000617 	ldw	r20,24(sp)
 10070fc:	dcc00517 	ldw	r19,20(sp)
 1007100:	dc800417 	ldw	r18,16(sp)
 1007104:	dc400317 	ldw	r17,12(sp)
 1007108:	dc000217 	ldw	r16,8(sp)
 100710c:	dec00c04 	addi	sp,sp,48
 1007110:	f800283a 	ret
 1007114:	3a3fda0e 	bge	r7,r8,1007080 <__alt_data_end+0xff807080>
 1007118:	01bfffc4 	movi	r6,-1
 100711c:	003fdb06 	br	100708c <__alt_data_end+0xff80708c>
 1007120:	02400dc4 	movi	r9,55
 1007124:	003fe306 	br	10070b4 <__alt_data_end+0xff8070b4>
 1007128:	d9000017 	ldw	r4,0(sp)
 100712c:	00800884 	movi	r2,34
 1007130:	20800015 	stw	r2,0(r4)
 1007134:	00a00034 	movhi	r2,32768
 1007138:	10bfffc4 	addi	r2,r2,-1
 100713c:	e085883a 	add	r2,fp,r2
 1007140:	a03fe826 	beq	r20,zero,10070e4 <__alt_data_end+0xff8070e4>
 1007144:	197fffc4 	addi	r5,r3,-1
 1007148:	003fe506 	br	10070e0 <__alt_data_end+0xff8070e0>
 100714c:	1c400084 	addi	r17,r3,2
 1007150:	1c800047 	ldb	r18,1(r3)
 1007154:	07000044 	movi	fp,1
 1007158:	003fa706 	br	1006ff8 <__alt_data_end+0xff806ff8>
 100715c:	1c400084 	addi	r17,r3,2
 1007160:	1c800047 	ldb	r18,1(r3)
 1007164:	0039883a 	mov	fp,zero
 1007168:	003fa306 	br	1006ff8 <__alt_data_end+0xff806ff8>
 100716c:	00800c04 	movi	r2,48
 1007170:	90bfa41e 	bne	r18,r2,1007004 <__alt_data_end+0xff807004>
 1007174:	88c00003 	ldbu	r3,0(r17)
 1007178:	00bff7c4 	movi	r2,-33
 100717c:	1884703a 	and	r2,r3,r2
 1007180:	10803fcc 	andi	r2,r2,255
 1007184:	1080201c 	xori	r2,r2,128
 1007188:	10bfe004 	addi	r2,r2,-128
 100718c:	00c01604 	movi	r3,88
 1007190:	10ff9c1e 	bne	r2,r3,1007004 <__alt_data_end+0xff807004>
 1007194:	05c00404 	movi	r23,16
 1007198:	8c800047 	ldb	r18,1(r17)
 100719c:	b82d883a 	mov	r22,r23
 10071a0:	8c400084 	addi	r17,r17,2
 10071a4:	003f9d06 	br	100701c <__alt_data_end+0xff80701c>
 10071a8:	88c00003 	ldbu	r3,0(r17)
 10071ac:	00bff7c4 	movi	r2,-33
 10071b0:	1884703a 	and	r2,r3,r2
 10071b4:	10803fcc 	andi	r2,r2,255
 10071b8:	1080201c 	xori	r2,r2,128
 10071bc:	10bfe004 	addi	r2,r2,-128
 10071c0:	00c01604 	movi	r3,88
 10071c4:	10fff326 	beq	r2,r3,1007194 <__alt_data_end+0xff807194>
 10071c8:	05800204 	movi	r22,8
 10071cc:	b02f883a 	mov	r23,r22
 10071d0:	003f9206 	br	100701c <__alt_data_end+0xff80701c>

010071d4 <strtol>:
 10071d4:	2007883a 	mov	r3,r4
 10071d8:	010040b4 	movhi	r4,258
 10071dc:	212d3804 	addi	r4,r4,-19232
 10071e0:	21000017 	ldw	r4,0(r4)
 10071e4:	2805883a 	mov	r2,r5
 10071e8:	300f883a 	mov	r7,r6
 10071ec:	180b883a 	mov	r5,r3
 10071f0:	100d883a 	mov	r6,r2
 10071f4:	1006f741 	jmpi	1006f74 <_strtol_r>

010071f8 <___svfprintf_internal_r>:
 10071f8:	deffb504 	addi	sp,sp,-300
 10071fc:	dfc04a15 	stw	ra,296(sp)
 1007200:	ddc04815 	stw	r23,288(sp)
 1007204:	d9002f15 	stw	r4,188(sp)
 1007208:	282f883a 	mov	r23,r5
 100720c:	d9802915 	stw	r6,164(sp)
 1007210:	d9c02d15 	stw	r7,180(sp)
 1007214:	df004915 	stw	fp,292(sp)
 1007218:	dd804715 	stw	r22,284(sp)
 100721c:	dd404615 	stw	r21,280(sp)
 1007220:	dd004515 	stw	r20,276(sp)
 1007224:	dcc04415 	stw	r19,272(sp)
 1007228:	dc804315 	stw	r18,268(sp)
 100722c:	dc404215 	stw	r17,264(sp)
 1007230:	dc004115 	stw	r16,260(sp)
 1007234:	100e9000 	call	100e900 <_localeconv_r>
 1007238:	10800017 	ldw	r2,0(r2)
 100723c:	1009883a 	mov	r4,r2
 1007240:	d8803515 	stw	r2,212(sp)
 1007244:	1004fa80 	call	1004fa8 <strlen>
 1007248:	d8803915 	stw	r2,228(sp)
 100724c:	b880030b 	ldhu	r2,12(r23)
 1007250:	1080200c 	andi	r2,r2,128
 1007254:	10000226 	beq	r2,zero,1007260 <___svfprintf_internal_r+0x68>
 1007258:	b8800417 	ldw	r2,16(r23)
 100725c:	10065d26 	beq	r2,zero,1008bd4 <___svfprintf_internal_r+0x19dc>
 1007260:	db001dc4 	addi	r12,sp,119
 1007264:	dd801e04 	addi	r22,sp,120
 1007268:	d8800404 	addi	r2,sp,16
 100726c:	050040b4 	movhi	r20,258
 1007270:	b317c83a 	sub	r11,r22,r12
 1007274:	a525db84 	addi	r20,r20,-26770
 1007278:	db002815 	stw	r12,160(sp)
 100727c:	d8801e15 	stw	r2,120(sp)
 1007280:	d8002015 	stw	zero,128(sp)
 1007284:	d8001f15 	stw	zero,124(sp)
 1007288:	d8003315 	stw	zero,204(sp)
 100728c:	d8003715 	stw	zero,220(sp)
 1007290:	d8003815 	stw	zero,224(sp)
 1007294:	d8003b15 	stw	zero,236(sp)
 1007298:	d8003a15 	stw	zero,232(sp)
 100729c:	d8003015 	stw	zero,192(sp)
 10072a0:	1011883a 	mov	r8,r2
 10072a4:	dac03d15 	stw	r11,244(sp)
 10072a8:	db002917 	ldw	r12,164(sp)
 10072ac:	60800007 	ldb	r2,0(r12)
 10072b0:	1000ab26 	beq	r2,zero,1007560 <___svfprintf_internal_r+0x368>
 10072b4:	00c00944 	movi	r3,37
 10072b8:	10c0a926 	beq	r2,r3,1007560 <___svfprintf_internal_r+0x368>
 10072bc:	6021883a 	mov	r16,r12
 10072c0:	00000106 	br	10072c8 <___svfprintf_internal_r+0xd0>
 10072c4:	10c08426 	beq	r2,r3,10074d8 <___svfprintf_internal_r+0x2e0>
 10072c8:	84000044 	addi	r16,r16,1
 10072cc:	80800007 	ldb	r2,0(r16)
 10072d0:	103ffc1e 	bne	r2,zero,10072c4 <__alt_data_end+0xff8072c4>
 10072d4:	dac02917 	ldw	r11,164(sp)
 10072d8:	82e3c83a 	sub	r17,r16,r11
 10072dc:	88000f26 	beq	r17,zero,100731c <___svfprintf_internal_r+0x124>
 10072e0:	d8c02017 	ldw	r3,128(sp)
 10072e4:	d8801f17 	ldw	r2,124(sp)
 10072e8:	dac02917 	ldw	r11,164(sp)
 10072ec:	1c47883a 	add	r3,r3,r17
 10072f0:	10800044 	addi	r2,r2,1
 10072f4:	d8c02015 	stw	r3,128(sp)
 10072f8:	42c00015 	stw	r11,0(r8)
 10072fc:	44400115 	stw	r17,4(r8)
 1007300:	d8801f15 	stw	r2,124(sp)
 1007304:	00c001c4 	movi	r3,7
 1007308:	18807616 	blt	r3,r2,10074e4 <___svfprintf_internal_r+0x2ec>
 100730c:	42000204 	addi	r8,r8,8
 1007310:	db003017 	ldw	r12,192(sp)
 1007314:	6459883a 	add	r12,r12,r17
 1007318:	db003015 	stw	r12,192(sp)
 100731c:	80800007 	ldb	r2,0(r16)
 1007320:	10007726 	beq	r2,zero,1007500 <___svfprintf_internal_r+0x308>
 1007324:	80800044 	addi	r2,r16,1
 1007328:	84000047 	ldb	r16,1(r16)
 100732c:	d8002785 	stb	zero,158(sp)
 1007330:	000d883a 	mov	r6,zero
 1007334:	027fffc4 	movi	r9,-1
 1007338:	d8002e15 	stw	zero,184(sp)
 100733c:	0023883a 	mov	r17,zero
 1007340:	01001604 	movi	r4,88
 1007344:	01400244 	movi	r5,9
 1007348:	02800a84 	movi	r10,42
 100734c:	01c01b04 	movi	r7,108
 1007350:	10c00044 	addi	r3,r2,1
 1007354:	80bff804 	addi	r2,r16,-32
 1007358:	2082e436 	bltu	r4,r2,1007eec <___svfprintf_internal_r+0xcf4>
 100735c:	100490ba 	slli	r2,r2,2
 1007360:	02c04034 	movhi	r11,256
 1007364:	5adcdd04 	addi	r11,r11,29556
 1007368:	12c5883a 	add	r2,r2,r11
 100736c:	10800017 	ldw	r2,0(r2)
 1007370:	1000683a 	jmp	r2
 1007374:	01007ca4 	muli	r4,zero,498
 1007378:	01007eec 	andhi	r4,zero,507
 100737c:	01007eec 	andhi	r4,zero,507
 1007380:	01007e24 	muli	r4,zero,504
 1007384:	01007eec 	andhi	r4,zero,507
 1007388:	01007eec 	andhi	r4,zero,507
 100738c:	01007eec 	andhi	r4,zero,507
 1007390:	01007eec 	andhi	r4,zero,507
 1007394:	01007eec 	andhi	r4,zero,507
 1007398:	01007eec 	andhi	r4,zero,507
 100739c:	01007de8 	cmpgeui	r4,zero,503
 10073a0:	01007e14 	movui	r4,504
 10073a4:	01007eec 	andhi	r4,zero,507
 10073a8:	01007568 	cmpgeui	r4,zero,469
 10073ac:	01007578 	rdprs	r4,zero,469
 10073b0:	01007eec 	andhi	r4,zero,507
 10073b4:	010075b8 	rdprs	r4,zero,470
 10073b8:	010075c8 	cmpgei	r4,zero,471
 10073bc:	010075c8 	cmpgei	r4,zero,471
 10073c0:	010075c8 	cmpgei	r4,zero,471
 10073c4:	010075c8 	cmpgei	r4,zero,471
 10073c8:	010075c8 	cmpgei	r4,zero,471
 10073cc:	010075c8 	cmpgei	r4,zero,471
 10073d0:	010075c8 	cmpgei	r4,zero,471
 10073d4:	010075c8 	cmpgei	r4,zero,471
 10073d8:	010075c8 	cmpgei	r4,zero,471
 10073dc:	01007eec 	andhi	r4,zero,507
 10073e0:	01007eec 	andhi	r4,zero,507
 10073e4:	01007eec 	andhi	r4,zero,507
 10073e8:	01007eec 	andhi	r4,zero,507
 10073ec:	01007eec 	andhi	r4,zero,507
 10073f0:	01007eec 	andhi	r4,zero,507
 10073f4:	01007eec 	andhi	r4,zero,507
 10073f8:	01007eec 	andhi	r4,zero,507
 10073fc:	01007eec 	andhi	r4,zero,507
 1007400:	01007eec 	andhi	r4,zero,507
 1007404:	010075fc 	xorhi	r4,zero,471
 1007408:	01007ae8 	cmpgeui	r4,zero,491
 100740c:	01007eec 	andhi	r4,zero,507
 1007410:	01007ae8 	cmpgeui	r4,zero,491
 1007414:	01007eec 	andhi	r4,zero,507
 1007418:	01007eec 	andhi	r4,zero,507
 100741c:	01007eec 	andhi	r4,zero,507
 1007420:	01007eec 	andhi	r4,zero,507
 1007424:	01007bd4 	movui	r4,495
 1007428:	01007eec 	andhi	r4,zero,507
 100742c:	01007eec 	andhi	r4,zero,507
 1007430:	01007a7c 	xorhi	r4,zero,489
 1007434:	01007eec 	andhi	r4,zero,507
 1007438:	01007eec 	andhi	r4,zero,507
 100743c:	01007eec 	andhi	r4,zero,507
 1007440:	01007eec 	andhi	r4,zero,507
 1007444:	01007eec 	andhi	r4,zero,507
 1007448:	01007ab8 	rdprs	r4,zero,490
 100744c:	01007eec 	andhi	r4,zero,507
 1007450:	01007eec 	andhi	r4,zero,507
 1007454:	01007cc4 	movi	r4,499
 1007458:	01007eec 	andhi	r4,zero,507
 100745c:	01007eec 	andhi	r4,zero,507
 1007460:	01007eec 	andhi	r4,zero,507
 1007464:	01007eec 	andhi	r4,zero,507
 1007468:	01007eec 	andhi	r4,zero,507
 100746c:	01007eec 	andhi	r4,zero,507
 1007470:	01007eec 	andhi	r4,zero,507
 1007474:	01007eec 	andhi	r4,zero,507
 1007478:	01007eec 	andhi	r4,zero,507
 100747c:	01007eec 	andhi	r4,zero,507
 1007480:	01007da8 	cmpgeui	r4,zero,502
 1007484:	01007be4 	muli	r4,zero,495
 1007488:	01007ae8 	cmpgeui	r4,zero,491
 100748c:	01007ae8 	cmpgeui	r4,zero,491
 1007490:	01007ae8 	cmpgeui	r4,zero,491
 1007494:	01007c4c 	andi	r4,zero,497
 1007498:	01007be4 	muli	r4,zero,495
 100749c:	01007eec 	andhi	r4,zero,507
 10074a0:	01007eec 	andhi	r4,zero,507
 10074a4:	01007c5c 	xori	r4,zero,497
 10074a8:	01007eec 	andhi	r4,zero,507
 10074ac:	01007c70 	cmpltui	r4,zero,497
 10074b0:	01007eb0 	cmpltui	r4,zero,506
 10074b4:	01007b8c 	andi	r4,zero,494
 10074b8:	01007d98 	cmpnei	r4,zero,502
 10074bc:	01007eec 	andhi	r4,zero,507
 10074c0:	01007d20 	cmpeqi	r4,zero,500
 10074c4:	01007eec 	andhi	r4,zero,507
 10074c8:	01007e74 	movhi	r4,505
 10074cc:	01007eec 	andhi	r4,zero,507
 10074d0:	01007eec 	andhi	r4,zero,507
 10074d4:	01007e34 	movhi	r4,504
 10074d8:	db002917 	ldw	r12,164(sp)
 10074dc:	8323c83a 	sub	r17,r16,r12
 10074e0:	003f7e06 	br	10072dc <__alt_data_end+0xff8072dc>
 10074e4:	d9002f17 	ldw	r4,188(sp)
 10074e8:	b80b883a 	mov	r5,r23
 10074ec:	b00d883a 	mov	r6,r22
 10074f0:	1010fd00 	call	1010fd0 <__ssprint_r>
 10074f4:	1000081e 	bne	r2,zero,1007518 <___svfprintf_internal_r+0x320>
 10074f8:	da000404 	addi	r8,sp,16
 10074fc:	003f8406 	br	1007310 <__alt_data_end+0xff807310>
 1007500:	d8802017 	ldw	r2,128(sp)
 1007504:	10000426 	beq	r2,zero,1007518 <___svfprintf_internal_r+0x320>
 1007508:	d9002f17 	ldw	r4,188(sp)
 100750c:	b80b883a 	mov	r5,r23
 1007510:	d9801e04 	addi	r6,sp,120
 1007514:	1010fd00 	call	1010fd0 <__ssprint_r>
 1007518:	b880030b 	ldhu	r2,12(r23)
 100751c:	1080100c 	andi	r2,r2,64
 1007520:	10000d1e 	bne	r2,zero,1007558 <___svfprintf_internal_r+0x360>
 1007524:	d8803017 	ldw	r2,192(sp)
 1007528:	dfc04a17 	ldw	ra,296(sp)
 100752c:	df004917 	ldw	fp,292(sp)
 1007530:	ddc04817 	ldw	r23,288(sp)
 1007534:	dd804717 	ldw	r22,284(sp)
 1007538:	dd404617 	ldw	r21,280(sp)
 100753c:	dd004517 	ldw	r20,276(sp)
 1007540:	dcc04417 	ldw	r19,272(sp)
 1007544:	dc804317 	ldw	r18,268(sp)
 1007548:	dc404217 	ldw	r17,264(sp)
 100754c:	dc004117 	ldw	r16,260(sp)
 1007550:	dec04b04 	addi	sp,sp,300
 1007554:	f800283a 	ret
 1007558:	00bfffc4 	movi	r2,-1
 100755c:	003ff206 	br	1007528 <__alt_data_end+0xff807528>
 1007560:	dc002917 	ldw	r16,164(sp)
 1007564:	003f6d06 	br	100731c <__alt_data_end+0xff80731c>
 1007568:	1805883a 	mov	r2,r3
 100756c:	8c400114 	ori	r17,r17,4
 1007570:	1c000007 	ldb	r16,0(r3)
 1007574:	003f7606 	br	1007350 <__alt_data_end+0xff807350>
 1007578:	1c000007 	ldb	r16,0(r3)
 100757c:	18800044 	addi	r2,r3,1
 1007580:	8286e726 	beq	r16,r10,1009120 <___svfprintf_internal_r+0x1f28>
 1007584:	82fff404 	addi	r11,r16,-48
 1007588:	1007883a 	mov	r3,r2
 100758c:	0013883a 	mov	r9,zero
 1007590:	2aff7036 	bltu	r5,r11,1007354 <__alt_data_end+0xff807354>
 1007594:	1c000007 	ldb	r16,0(r3)
 1007598:	4a4002a4 	muli	r9,r9,10
 100759c:	18c00044 	addi	r3,r3,1
 10075a0:	5a53883a 	add	r9,r11,r9
 10075a4:	82fff404 	addi	r11,r16,-48
 10075a8:	2afffa2e 	bgeu	r5,r11,1007594 <__alt_data_end+0xff807594>
 10075ac:	483f690e 	bge	r9,zero,1007354 <__alt_data_end+0xff807354>
 10075b0:	027fffc4 	movi	r9,-1
 10075b4:	003f6706 	br	1007354 <__alt_data_end+0xff807354>
 10075b8:	8c402014 	ori	r17,r17,128
 10075bc:	1805883a 	mov	r2,r3
 10075c0:	1c000007 	ldb	r16,0(r3)
 10075c4:	003f6206 	br	1007350 <__alt_data_end+0xff807350>
 10075c8:	1805883a 	mov	r2,r3
 10075cc:	d8002e15 	stw	zero,184(sp)
 10075d0:	82fff404 	addi	r11,r16,-48
 10075d4:	0019883a 	mov	r12,zero
 10075d8:	14000007 	ldb	r16,0(r2)
 10075dc:	630002a4 	muli	r12,r12,10
 10075e0:	18c00044 	addi	r3,r3,1
 10075e4:	1805883a 	mov	r2,r3
 10075e8:	62d9883a 	add	r12,r12,r11
 10075ec:	82fff404 	addi	r11,r16,-48
 10075f0:	2afff92e 	bgeu	r5,r11,10075d8 <__alt_data_end+0xff8075d8>
 10075f4:	db002e15 	stw	r12,184(sp)
 10075f8:	003f5606 	br	1007354 <__alt_data_end+0xff807354>
 10075fc:	8c400414 	ori	r17,r17,16
 1007600:	d8c02915 	stw	r3,164(sp)
 1007604:	d9802785 	stb	r6,158(sp)
 1007608:	8880080c 	andi	r2,r17,32
 100760c:	d8c02d17 	ldw	r3,180(sp)
 1007610:	10017926 	beq	r2,zero,1007bf8 <___svfprintf_internal_r+0xa00>
 1007614:	db002d17 	ldw	r12,180(sp)
 1007618:	18800117 	ldw	r2,4(r3)
 100761c:	1cc00017 	ldw	r19,0(r3)
 1007620:	63000204 	addi	r12,r12,8
 1007624:	db002d15 	stw	r12,180(sp)
 1007628:	1039883a 	mov	fp,r2
 100762c:	10017d16 	blt	r2,zero,1007c24 <___svfprintf_internal_r+0xa2c>
 1007630:	dd402783 	ldbu	r21,158(sp)
 1007634:	da403215 	stw	r9,200(sp)
 1007638:	00800044 	movi	r2,1
 100763c:	9f06b03a 	or	r3,r19,fp
 1007640:	48000216 	blt	r9,zero,100764c <___svfprintf_internal_r+0x454>
 1007644:	013fdfc4 	movi	r4,-129
 1007648:	8922703a 	and	r17,r17,r4
 100764c:	1802371e 	bne	r3,zero,1007f2c <___svfprintf_internal_r+0xd34>
 1007650:	48034526 	beq	r9,zero,1008368 <___svfprintf_internal_r+0x1170>
 1007654:	10803fcc 	andi	r2,r2,255
 1007658:	00c00044 	movi	r3,1
 100765c:	10c25826 	beq	r2,r3,1007fc0 <___svfprintf_internal_r+0xdc8>
 1007660:	00c00084 	movi	r3,2
 1007664:	10c2db26 	beq	r2,r3,10081d4 <___svfprintf_internal_r+0xfdc>
 1007668:	b007883a 	mov	r3,r22
 100766c:	9808d0fa 	srli	r4,r19,3
 1007670:	e00a977a 	slli	r5,fp,29
 1007674:	e038d0fa 	srli	fp,fp,3
 1007678:	9cc001cc 	andi	r19,r19,7
 100767c:	98800c04 	addi	r2,r19,48
 1007680:	18ffffc4 	addi	r3,r3,-1
 1007684:	2926b03a 	or	r19,r5,r4
 1007688:	18800005 	stb	r2,0(r3)
 100768c:	9f08b03a 	or	r4,r19,fp
 1007690:	203ff61e 	bne	r4,zero,100766c <__alt_data_end+0xff80766c>
 1007694:	8900004c 	andi	r4,r17,1
 1007698:	d8c03115 	stw	r3,196(sp)
 100769c:	2002db26 	beq	r4,zero,100820c <___svfprintf_internal_r+0x1014>
 10076a0:	10803fcc 	andi	r2,r2,255
 10076a4:	1080201c 	xori	r2,r2,128
 10076a8:	10bfe004 	addi	r2,r2,-128
 10076ac:	01000c04 	movi	r4,48
 10076b0:	11056626 	beq	r2,r4,1008c4c <___svfprintf_internal_r+0x1a54>
 10076b4:	dac03117 	ldw	r11,196(sp)
 10076b8:	193fffc5 	stb	r4,-1(r3)
 10076bc:	5affffc4 	addi	r11,r11,-1
 10076c0:	dac03115 	stw	r11,196(sp)
 10076c4:	b2e5c83a 	sub	r18,r22,r11
 10076c8:	9005883a 	mov	r2,r18
 10076cc:	9240010e 	bge	r18,r9,10076d4 <___svfprintf_internal_r+0x4dc>
 10076d0:	4805883a 	mov	r2,r9
 10076d4:	d8802a15 	stw	r2,168(sp)
 10076d8:	d8003415 	stw	zero,208(sp)
 10076dc:	a8803fcc 	andi	r2,r21,255
 10076e0:	1080201c 	xori	r2,r2,128
 10076e4:	10bfe004 	addi	r2,r2,-128
 10076e8:	10000326 	beq	r2,zero,10076f8 <___svfprintf_internal_r+0x500>
 10076ec:	d8c02a17 	ldw	r3,168(sp)
 10076f0:	18c00044 	addi	r3,r3,1
 10076f4:	d8c02a15 	stw	r3,168(sp)
 10076f8:	8ac0008c 	andi	r11,r17,2
 10076fc:	dac02b15 	stw	r11,172(sp)
 1007700:	58000326 	beq	r11,zero,1007710 <___svfprintf_internal_r+0x518>
 1007704:	db002a17 	ldw	r12,168(sp)
 1007708:	63000084 	addi	r12,r12,2
 100770c:	db002a15 	stw	r12,168(sp)
 1007710:	88c0210c 	andi	r3,r17,132
 1007714:	d8c02c15 	stw	r3,176(sp)
 1007718:	1802021e 	bne	r3,zero,1007f24 <___svfprintf_internal_r+0xd2c>
 100771c:	dac02e17 	ldw	r11,184(sp)
 1007720:	db002a17 	ldw	r12,168(sp)
 1007724:	5b39c83a 	sub	fp,r11,r12
 1007728:	0701fe0e 	bge	zero,fp,1007f24 <___svfprintf_internal_r+0xd2c>
 100772c:	02400404 	movi	r9,16
 1007730:	d8c02017 	ldw	r3,128(sp)
 1007734:	d8801f17 	ldw	r2,124(sp)
 1007738:	4f057d0e 	bge	r9,fp,1008d30 <___svfprintf_internal_r+0x1b38>
 100773c:	014040b4 	movhi	r5,258
 1007740:	e009883a 	mov	r4,fp
 1007744:	2965df84 	addi	r5,r5,-26754
 1007748:	dc003c15 	stw	r16,240(sp)
 100774c:	9039883a 	mov	fp,r18
 1007750:	d9403615 	stw	r5,216(sp)
 1007754:	8825883a 	mov	r18,r17
 1007758:	482b883a 	mov	r21,r9
 100775c:	04c001c4 	movi	r19,7
 1007760:	dc002f17 	ldw	r16,188(sp)
 1007764:	2023883a 	mov	r17,r4
 1007768:	00000306 	br	1007778 <___svfprintf_internal_r+0x580>
 100776c:	8c7ffc04 	addi	r17,r17,-16
 1007770:	42000204 	addi	r8,r8,8
 1007774:	ac40130e 	bge	r21,r17,10077c4 <___svfprintf_internal_r+0x5cc>
 1007778:	02c040b4 	movhi	r11,258
 100777c:	18c00404 	addi	r3,r3,16
 1007780:	10800044 	addi	r2,r2,1
 1007784:	5ae5df84 	addi	r11,r11,-26754
 1007788:	42c00015 	stw	r11,0(r8)
 100778c:	45400115 	stw	r21,4(r8)
 1007790:	d8c02015 	stw	r3,128(sp)
 1007794:	d8801f15 	stw	r2,124(sp)
 1007798:	98bff40e 	bge	r19,r2,100776c <__alt_data_end+0xff80776c>
 100779c:	8009883a 	mov	r4,r16
 10077a0:	b80b883a 	mov	r5,r23
 10077a4:	b00d883a 	mov	r6,r22
 10077a8:	1010fd00 	call	1010fd0 <__ssprint_r>
 10077ac:	103f5a1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10077b0:	8c7ffc04 	addi	r17,r17,-16
 10077b4:	d8c02017 	ldw	r3,128(sp)
 10077b8:	d8801f17 	ldw	r2,124(sp)
 10077bc:	da000404 	addi	r8,sp,16
 10077c0:	ac7fed16 	blt	r21,r17,1007778 <__alt_data_end+0xff807778>
 10077c4:	dc003c17 	ldw	r16,240(sp)
 10077c8:	8809883a 	mov	r4,r17
 10077cc:	9023883a 	mov	r17,r18
 10077d0:	e025883a 	mov	r18,fp
 10077d4:	2039883a 	mov	fp,r4
 10077d8:	db003617 	ldw	r12,216(sp)
 10077dc:	e0c7883a 	add	r3,fp,r3
 10077e0:	10800044 	addi	r2,r2,1
 10077e4:	43000015 	stw	r12,0(r8)
 10077e8:	47000115 	stw	fp,4(r8)
 10077ec:	d8c02015 	stw	r3,128(sp)
 10077f0:	d8801f15 	stw	r2,124(sp)
 10077f4:	010001c4 	movi	r4,7
 10077f8:	20833516 	blt	r4,r2,10084d0 <___svfprintf_internal_r+0x12d8>
 10077fc:	d8802787 	ldb	r2,158(sp)
 1007800:	42000204 	addi	r8,r8,8
 1007804:	10000c26 	beq	r2,zero,1007838 <___svfprintf_internal_r+0x640>
 1007808:	d8801f17 	ldw	r2,124(sp)
 100780c:	d9002784 	addi	r4,sp,158
 1007810:	18c00044 	addi	r3,r3,1
 1007814:	10800044 	addi	r2,r2,1
 1007818:	41000015 	stw	r4,0(r8)
 100781c:	01000044 	movi	r4,1
 1007820:	41000115 	stw	r4,4(r8)
 1007824:	d8c02015 	stw	r3,128(sp)
 1007828:	d8801f15 	stw	r2,124(sp)
 100782c:	010001c4 	movi	r4,7
 1007830:	2082df16 	blt	r4,r2,10083b0 <___svfprintf_internal_r+0x11b8>
 1007834:	42000204 	addi	r8,r8,8
 1007838:	dac02b17 	ldw	r11,172(sp)
 100783c:	58000c26 	beq	r11,zero,1007870 <___svfprintf_internal_r+0x678>
 1007840:	d8801f17 	ldw	r2,124(sp)
 1007844:	d9002704 	addi	r4,sp,156
 1007848:	18c00084 	addi	r3,r3,2
 100784c:	10800044 	addi	r2,r2,1
 1007850:	41000015 	stw	r4,0(r8)
 1007854:	01000084 	movi	r4,2
 1007858:	41000115 	stw	r4,4(r8)
 100785c:	d8c02015 	stw	r3,128(sp)
 1007860:	d8801f15 	stw	r2,124(sp)
 1007864:	010001c4 	movi	r4,7
 1007868:	2082d916 	blt	r4,r2,10083d0 <___svfprintf_internal_r+0x11d8>
 100786c:	42000204 	addi	r8,r8,8
 1007870:	db002c17 	ldw	r12,176(sp)
 1007874:	00802004 	movi	r2,128
 1007878:	60822026 	beq	r12,r2,10080fc <___svfprintf_internal_r+0xf04>
 100787c:	db003217 	ldw	r12,200(sp)
 1007880:	64abc83a 	sub	r21,r12,r18
 1007884:	0540310e 	bge	zero,r21,100794c <___svfprintf_internal_r+0x754>
 1007888:	07000404 	movi	fp,16
 100788c:	d8801f17 	ldw	r2,124(sp)
 1007890:	e544180e 	bge	fp,r21,10088f4 <___svfprintf_internal_r+0x16fc>
 1007894:	014040b4 	movhi	r5,258
 1007898:	a809883a 	mov	r4,r21
 100789c:	2965db84 	addi	r5,r5,-26770
 10078a0:	dc002c15 	stw	r16,176(sp)
 10078a4:	902b883a 	mov	r21,r18
 10078a8:	d9402b15 	stw	r5,172(sp)
 10078ac:	8825883a 	mov	r18,r17
 10078b0:	04c001c4 	movi	r19,7
 10078b4:	dc002f17 	ldw	r16,188(sp)
 10078b8:	2023883a 	mov	r17,r4
 10078bc:	00000306 	br	10078cc <___svfprintf_internal_r+0x6d4>
 10078c0:	8c7ffc04 	addi	r17,r17,-16
 10078c4:	42000204 	addi	r8,r8,8
 10078c8:	e440110e 	bge	fp,r17,1007910 <___svfprintf_internal_r+0x718>
 10078cc:	18c00404 	addi	r3,r3,16
 10078d0:	10800044 	addi	r2,r2,1
 10078d4:	45000015 	stw	r20,0(r8)
 10078d8:	47000115 	stw	fp,4(r8)
 10078dc:	d8c02015 	stw	r3,128(sp)
 10078e0:	d8801f15 	stw	r2,124(sp)
 10078e4:	98bff60e 	bge	r19,r2,10078c0 <__alt_data_end+0xff8078c0>
 10078e8:	8009883a 	mov	r4,r16
 10078ec:	b80b883a 	mov	r5,r23
 10078f0:	b00d883a 	mov	r6,r22
 10078f4:	1010fd00 	call	1010fd0 <__ssprint_r>
 10078f8:	103f071e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10078fc:	8c7ffc04 	addi	r17,r17,-16
 1007900:	d8c02017 	ldw	r3,128(sp)
 1007904:	d8801f17 	ldw	r2,124(sp)
 1007908:	da000404 	addi	r8,sp,16
 100790c:	e47fef16 	blt	fp,r17,10078cc <__alt_data_end+0xff8078cc>
 1007910:	dc002c17 	ldw	r16,176(sp)
 1007914:	8809883a 	mov	r4,r17
 1007918:	9023883a 	mov	r17,r18
 100791c:	a825883a 	mov	r18,r21
 1007920:	202b883a 	mov	r21,r4
 1007924:	dac02b17 	ldw	r11,172(sp)
 1007928:	1d47883a 	add	r3,r3,r21
 100792c:	10800044 	addi	r2,r2,1
 1007930:	42c00015 	stw	r11,0(r8)
 1007934:	45400115 	stw	r21,4(r8)
 1007938:	d8c02015 	stw	r3,128(sp)
 100793c:	d8801f15 	stw	r2,124(sp)
 1007940:	010001c4 	movi	r4,7
 1007944:	20829216 	blt	r4,r2,1008390 <___svfprintf_internal_r+0x1198>
 1007948:	42000204 	addi	r8,r8,8
 100794c:	8880400c 	andi	r2,r17,256
 1007950:	1001a11e 	bne	r2,zero,1007fd8 <___svfprintf_internal_r+0xde0>
 1007954:	d8801f17 	ldw	r2,124(sp)
 1007958:	db003117 	ldw	r12,196(sp)
 100795c:	1c87883a 	add	r3,r3,r18
 1007960:	10800044 	addi	r2,r2,1
 1007964:	43000015 	stw	r12,0(r8)
 1007968:	44800115 	stw	r18,4(r8)
 100796c:	d8c02015 	stw	r3,128(sp)
 1007970:	d8801f15 	stw	r2,124(sp)
 1007974:	010001c4 	movi	r4,7
 1007978:	20826d16 	blt	r4,r2,1008330 <___svfprintf_internal_r+0x1138>
 100797c:	42000204 	addi	r8,r8,8
 1007980:	8c40010c 	andi	r17,r17,4
 1007984:	88003226 	beq	r17,zero,1007a50 <___svfprintf_internal_r+0x858>
 1007988:	db002e17 	ldw	r12,184(sp)
 100798c:	dac02a17 	ldw	r11,168(sp)
 1007990:	62e1c83a 	sub	r16,r12,r11
 1007994:	04002e0e 	bge	zero,r16,1007a50 <___svfprintf_internal_r+0x858>
 1007998:	04400404 	movi	r17,16
 100799c:	d8801f17 	ldw	r2,124(sp)
 10079a0:	8c05240e 	bge	r17,r16,1008e34 <___svfprintf_internal_r+0x1c3c>
 10079a4:	010040b4 	movhi	r4,258
 10079a8:	2125df84 	addi	r4,r4,-26754
 10079ac:	d9003615 	stw	r4,216(sp)
 10079b0:	048001c4 	movi	r18,7
 10079b4:	dcc02f17 	ldw	r19,188(sp)
 10079b8:	00000306 	br	10079c8 <___svfprintf_internal_r+0x7d0>
 10079bc:	843ffc04 	addi	r16,r16,-16
 10079c0:	42000204 	addi	r8,r8,8
 10079c4:	8c00130e 	bge	r17,r16,1007a14 <___svfprintf_internal_r+0x81c>
 10079c8:	014040b4 	movhi	r5,258
 10079cc:	18c00404 	addi	r3,r3,16
 10079d0:	10800044 	addi	r2,r2,1
 10079d4:	2965df84 	addi	r5,r5,-26754
 10079d8:	41400015 	stw	r5,0(r8)
 10079dc:	44400115 	stw	r17,4(r8)
 10079e0:	d8c02015 	stw	r3,128(sp)
 10079e4:	d8801f15 	stw	r2,124(sp)
 10079e8:	90bff40e 	bge	r18,r2,10079bc <__alt_data_end+0xff8079bc>
 10079ec:	9809883a 	mov	r4,r19
 10079f0:	b80b883a 	mov	r5,r23
 10079f4:	b00d883a 	mov	r6,r22
 10079f8:	1010fd00 	call	1010fd0 <__ssprint_r>
 10079fc:	103ec61e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1007a00:	843ffc04 	addi	r16,r16,-16
 1007a04:	d8c02017 	ldw	r3,128(sp)
 1007a08:	d8801f17 	ldw	r2,124(sp)
 1007a0c:	da000404 	addi	r8,sp,16
 1007a10:	8c3fed16 	blt	r17,r16,10079c8 <__alt_data_end+0xff8079c8>
 1007a14:	dac03617 	ldw	r11,216(sp)
 1007a18:	1c07883a 	add	r3,r3,r16
 1007a1c:	10800044 	addi	r2,r2,1
 1007a20:	42c00015 	stw	r11,0(r8)
 1007a24:	44000115 	stw	r16,4(r8)
 1007a28:	d8c02015 	stw	r3,128(sp)
 1007a2c:	d8801f15 	stw	r2,124(sp)
 1007a30:	010001c4 	movi	r4,7
 1007a34:	2080060e 	bge	r4,r2,1007a50 <___svfprintf_internal_r+0x858>
 1007a38:	d9002f17 	ldw	r4,188(sp)
 1007a3c:	b80b883a 	mov	r5,r23
 1007a40:	b00d883a 	mov	r6,r22
 1007a44:	1010fd00 	call	1010fd0 <__ssprint_r>
 1007a48:	103eb31e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1007a4c:	d8c02017 	ldw	r3,128(sp)
 1007a50:	d8802a17 	ldw	r2,168(sp)
 1007a54:	db002e17 	ldw	r12,184(sp)
 1007a58:	1300010e 	bge	r2,r12,1007a60 <___svfprintf_internal_r+0x868>
 1007a5c:	6005883a 	mov	r2,r12
 1007a60:	dac03017 	ldw	r11,192(sp)
 1007a64:	5897883a 	add	r11,r11,r2
 1007a68:	dac03015 	stw	r11,192(sp)
 1007a6c:	1802381e 	bne	r3,zero,1008350 <___svfprintf_internal_r+0x1158>
 1007a70:	d8001f15 	stw	zero,124(sp)
 1007a74:	da000404 	addi	r8,sp,16
 1007a78:	003e0b06 	br	10072a8 <__alt_data_end+0xff8072a8>
 1007a7c:	8c400414 	ori	r17,r17,16
 1007a80:	d8c02915 	stw	r3,164(sp)
 1007a84:	8880080c 	andi	r2,r17,32
 1007a88:	10010c26 	beq	r2,zero,1007ebc <___svfprintf_internal_r+0xcc4>
 1007a8c:	db002d17 	ldw	r12,180(sp)
 1007a90:	0005883a 	mov	r2,zero
 1007a94:	64c00017 	ldw	r19,0(r12)
 1007a98:	67000117 	ldw	fp,4(r12)
 1007a9c:	63000204 	addi	r12,r12,8
 1007aa0:	db002d15 	stw	r12,180(sp)
 1007aa4:	9f06b03a 	or	r3,r19,fp
 1007aa8:	d8002785 	stb	zero,158(sp)
 1007aac:	da403215 	stw	r9,200(sp)
 1007ab0:	002b883a 	mov	r21,zero
 1007ab4:	003ee206 	br	1007640 <__alt_data_end+0xff807640>
 1007ab8:	8c400414 	ori	r17,r17,16
 1007abc:	d8c02915 	stw	r3,164(sp)
 1007ac0:	8880080c 	andi	r2,r17,32
 1007ac4:	1000ee26 	beq	r2,zero,1007e80 <___svfprintf_internal_r+0xc88>
 1007ac8:	dac02d17 	ldw	r11,180(sp)
 1007acc:	00800044 	movi	r2,1
 1007ad0:	5cc00017 	ldw	r19,0(r11)
 1007ad4:	5f000117 	ldw	fp,4(r11)
 1007ad8:	5ac00204 	addi	r11,r11,8
 1007adc:	dac02d15 	stw	r11,180(sp)
 1007ae0:	9f06b03a 	or	r3,r19,fp
 1007ae4:	003ff006 	br	1007aa8 <__alt_data_end+0xff807aa8>
 1007ae8:	db002d17 	ldw	r12,180(sp)
 1007aec:	dac02d17 	ldw	r11,180(sp)
 1007af0:	d8c02915 	stw	r3,164(sp)
 1007af4:	63000017 	ldw	r12,0(r12)
 1007af8:	5ac00117 	ldw	r11,4(r11)
 1007afc:	d9802785 	stb	r6,158(sp)
 1007b00:	6009883a 	mov	r4,r12
 1007b04:	580b883a 	mov	r5,r11
 1007b08:	db003715 	stw	r12,220(sp)
 1007b0c:	da004015 	stw	r8,256(sp)
 1007b10:	da403f15 	stw	r9,252(sp)
 1007b14:	dac03815 	stw	r11,224(sp)
 1007b18:	10022580 	call	1002258 <__fpclassifyd>
 1007b1c:	db002d17 	ldw	r12,180(sp)
 1007b20:	04800044 	movi	r18,1
 1007b24:	da004017 	ldw	r8,256(sp)
 1007b28:	64c00204 	addi	r19,r12,8
 1007b2c:	da403f17 	ldw	r9,252(sp)
 1007b30:	d9003717 	ldw	r4,220(sp)
 1007b34:	d9403817 	ldw	r5,224(sp)
 1007b38:	14832c1e 	bne	r2,r18,10087ec <___svfprintf_internal_r+0x15f4>
 1007b3c:	000d883a 	mov	r6,zero
 1007b40:	000f883a 	mov	r7,zero
 1007b44:	10156f00 	call	10156f0 <__ledf2>
 1007b48:	da004017 	ldw	r8,256(sp)
 1007b4c:	1004c416 	blt	r2,zero,1008e60 <___svfprintf_internal_r+0x1c68>
 1007b50:	dd402783 	ldbu	r21,158(sp)
 1007b54:	008011c4 	movi	r2,71
 1007b58:	14041a0e 	bge	r2,r16,1008bc4 <___svfprintf_internal_r+0x19cc>
 1007b5c:	00c040b4 	movhi	r3,258
 1007b60:	18e5cc04 	addi	r3,r3,-26832
 1007b64:	d8c03115 	stw	r3,196(sp)
 1007b68:	02c000c4 	movi	r11,3
 1007b6c:	00bfdfc4 	movi	r2,-129
 1007b70:	dac02a15 	stw	r11,168(sp)
 1007b74:	88a2703a 	and	r17,r17,r2
 1007b78:	dcc02d15 	stw	r19,180(sp)
 1007b7c:	5825883a 	mov	r18,r11
 1007b80:	d8003215 	stw	zero,200(sp)
 1007b84:	d8003415 	stw	zero,208(sp)
 1007b88:	003ed406 	br	10076dc <__alt_data_end+0xff8076dc>
 1007b8c:	db002d17 	ldw	r12,180(sp)
 1007b90:	00800c04 	movi	r2,48
 1007b94:	d8802705 	stb	r2,156(sp)
 1007b98:	64c00017 	ldw	r19,0(r12)
 1007b9c:	00801e04 	movi	r2,120
 1007ba0:	d8802745 	stb	r2,157(sp)
 1007ba4:	008040b4 	movhi	r2,258
 1007ba8:	10a5d404 	addi	r2,r2,-26800
 1007bac:	63000104 	addi	r12,r12,4
 1007bb0:	d8c02915 	stw	r3,164(sp)
 1007bb4:	d8803b15 	stw	r2,236(sp)
 1007bb8:	0039883a 	mov	fp,zero
 1007bbc:	8c400094 	ori	r17,r17,2
 1007bc0:	db002d15 	stw	r12,180(sp)
 1007bc4:	00800084 	movi	r2,2
 1007bc8:	04001e04 	movi	r16,120
 1007bcc:	9807883a 	mov	r3,r19
 1007bd0:	003fb506 	br	1007aa8 <__alt_data_end+0xff807aa8>
 1007bd4:	8c400214 	ori	r17,r17,8
 1007bd8:	1805883a 	mov	r2,r3
 1007bdc:	1c000007 	ldb	r16,0(r3)
 1007be0:	003ddb06 	br	1007350 <__alt_data_end+0xff807350>
 1007be4:	d8c02915 	stw	r3,164(sp)
 1007be8:	d9802785 	stb	r6,158(sp)
 1007bec:	8880080c 	andi	r2,r17,32
 1007bf0:	d8c02d17 	ldw	r3,180(sp)
 1007bf4:	103e871e 	bne	r2,zero,1007614 <__alt_data_end+0xff807614>
 1007bf8:	8880040c 	andi	r2,r17,16
 1007bfc:	10027a1e 	bne	r2,zero,10085e8 <___svfprintf_internal_r+0x13f0>
 1007c00:	8880100c 	andi	r2,r17,64
 1007c04:	10027826 	beq	r2,zero,10085e8 <___svfprintf_internal_r+0x13f0>
 1007c08:	1cc0000f 	ldh	r19,0(r3)
 1007c0c:	db002d17 	ldw	r12,180(sp)
 1007c10:	9839d7fa 	srai	fp,r19,31
 1007c14:	63000104 	addi	r12,r12,4
 1007c18:	db002d15 	stw	r12,180(sp)
 1007c1c:	e005883a 	mov	r2,fp
 1007c20:	103e830e 	bge	r2,zero,1007630 <__alt_data_end+0xff807630>
 1007c24:	04e7c83a 	sub	r19,zero,r19
 1007c28:	9804c03a 	cmpne	r2,r19,zero
 1007c2c:	0739c83a 	sub	fp,zero,fp
 1007c30:	e0b9c83a 	sub	fp,fp,r2
 1007c34:	05400b44 	movi	r21,45
 1007c38:	dd402785 	stb	r21,158(sp)
 1007c3c:	da403215 	stw	r9,200(sp)
 1007c40:	00800044 	movi	r2,1
 1007c44:	9f06b03a 	or	r3,r19,fp
 1007c48:	003e7d06 	br	1007640 <__alt_data_end+0xff807640>
 1007c4c:	8c401014 	ori	r17,r17,64
 1007c50:	1805883a 	mov	r2,r3
 1007c54:	1c000007 	ldb	r16,0(r3)
 1007c58:	003dbd06 	br	1007350 <__alt_data_end+0xff807350>
 1007c5c:	1c000007 	ldb	r16,0(r3)
 1007c60:	81c37126 	beq	r16,r7,1008a28 <___svfprintf_internal_r+0x1830>
 1007c64:	8c400414 	ori	r17,r17,16
 1007c68:	1805883a 	mov	r2,r3
 1007c6c:	003db806 	br	1007350 <__alt_data_end+0xff807350>
 1007c70:	d8c02915 	stw	r3,164(sp)
 1007c74:	d9802785 	stb	r6,158(sp)
 1007c78:	8880080c 	andi	r2,r17,32
 1007c7c:	1002f026 	beq	r2,zero,1008840 <___svfprintf_internal_r+0x1648>
 1007c80:	db002d17 	ldw	r12,180(sp)
 1007c84:	dac03017 	ldw	r11,192(sp)
 1007c88:	60800017 	ldw	r2,0(r12)
 1007c8c:	5807d7fa 	srai	r3,r11,31
 1007c90:	63000104 	addi	r12,r12,4
 1007c94:	db002d15 	stw	r12,180(sp)
 1007c98:	12c00015 	stw	r11,0(r2)
 1007c9c:	10c00115 	stw	r3,4(r2)
 1007ca0:	003d8106 	br	10072a8 <__alt_data_end+0xff8072a8>
 1007ca4:	30803fcc 	andi	r2,r6,255
 1007ca8:	1080201c 	xori	r2,r2,128
 1007cac:	10bfe004 	addi	r2,r2,-128
 1007cb0:	1002fd1e 	bne	r2,zero,10088a8 <___svfprintf_internal_r+0x16b0>
 1007cb4:	1805883a 	mov	r2,r3
 1007cb8:	01800804 	movi	r6,32
 1007cbc:	1c000007 	ldb	r16,0(r3)
 1007cc0:	003da306 	br	1007350 <__alt_data_end+0xff807350>
 1007cc4:	030040b4 	movhi	r12,258
 1007cc8:	6325cf04 	addi	r12,r12,-26820
 1007ccc:	d8c02915 	stw	r3,164(sp)
 1007cd0:	d9802785 	stb	r6,158(sp)
 1007cd4:	db003b15 	stw	r12,236(sp)
 1007cd8:	88c0080c 	andi	r3,r17,32
 1007cdc:	d8802d17 	ldw	r2,180(sp)
 1007ce0:	18005c26 	beq	r3,zero,1007e54 <___svfprintf_internal_r+0xc5c>
 1007ce4:	dac02d17 	ldw	r11,180(sp)
 1007ce8:	14c00017 	ldw	r19,0(r2)
 1007cec:	17000117 	ldw	fp,4(r2)
 1007cf0:	5ac00204 	addi	r11,r11,8
 1007cf4:	dac02d15 	stw	r11,180(sp)
 1007cf8:	8880004c 	andi	r2,r17,1
 1007cfc:	10022f26 	beq	r2,zero,10085bc <___svfprintf_internal_r+0x13c4>
 1007d00:	9f06b03a 	or	r3,r19,fp
 1007d04:	1802eb26 	beq	r3,zero,10088b4 <___svfprintf_internal_r+0x16bc>
 1007d08:	00800c04 	movi	r2,48
 1007d0c:	d8802705 	stb	r2,156(sp)
 1007d10:	dc002745 	stb	r16,157(sp)
 1007d14:	8c400094 	ori	r17,r17,2
 1007d18:	00800084 	movi	r2,2
 1007d1c:	003f6206 	br	1007aa8 <__alt_data_end+0xff807aa8>
 1007d20:	dac02d17 	ldw	r11,180(sp)
 1007d24:	db002d17 	ldw	r12,180(sp)
 1007d28:	d8c02915 	stw	r3,164(sp)
 1007d2c:	5ac00017 	ldw	r11,0(r11)
 1007d30:	d8002785 	stb	zero,158(sp)
 1007d34:	64c00104 	addi	r19,r12,4
 1007d38:	dac03115 	stw	r11,196(sp)
 1007d3c:	58042e26 	beq	r11,zero,1008df8 <___svfprintf_internal_r+0x1c00>
 1007d40:	d9003117 	ldw	r4,196(sp)
 1007d44:	4803c416 	blt	r9,zero,1008c58 <___svfprintf_internal_r+0x1a60>
 1007d48:	480d883a 	mov	r6,r9
 1007d4c:	000b883a 	mov	r5,zero
 1007d50:	da004015 	stw	r8,256(sp)
 1007d54:	da403f15 	stw	r9,252(sp)
 1007d58:	100f2940 	call	100f294 <memchr>
 1007d5c:	da004017 	ldw	r8,256(sp)
 1007d60:	da403f17 	ldw	r9,252(sp)
 1007d64:	10048a26 	beq	r2,zero,1008f90 <___svfprintf_internal_r+0x1d98>
 1007d68:	d8c03117 	ldw	r3,196(sp)
 1007d6c:	10e5c83a 	sub	r18,r2,r3
 1007d70:	4c80010e 	bge	r9,r18,1007d78 <___svfprintf_internal_r+0xb80>
 1007d74:	4825883a 	mov	r18,r9
 1007d78:	9005883a 	mov	r2,r18
 1007d7c:	9003bb16 	blt	r18,zero,1008c6c <___svfprintf_internal_r+0x1a74>
 1007d80:	dd402783 	ldbu	r21,158(sp)
 1007d84:	d8802a15 	stw	r2,168(sp)
 1007d88:	dcc02d15 	stw	r19,180(sp)
 1007d8c:	d8003215 	stw	zero,200(sp)
 1007d90:	d8003415 	stw	zero,208(sp)
 1007d94:	003e5106 	br	10076dc <__alt_data_end+0xff8076dc>
 1007d98:	8c400814 	ori	r17,r17,32
 1007d9c:	1805883a 	mov	r2,r3
 1007da0:	1c000007 	ldb	r16,0(r3)
 1007da4:	003d6a06 	br	1007350 <__alt_data_end+0xff807350>
 1007da8:	db002d17 	ldw	r12,180(sp)
 1007dac:	d8c02915 	stw	r3,164(sp)
 1007db0:	dac01404 	addi	r11,sp,80
 1007db4:	60800017 	ldw	r2,0(r12)
 1007db8:	00c00044 	movi	r3,1
 1007dbc:	63000104 	addi	r12,r12,4
 1007dc0:	d8801405 	stb	r2,80(sp)
 1007dc4:	d8c02a15 	stw	r3,168(sp)
 1007dc8:	d8002785 	stb	zero,158(sp)
 1007dcc:	db002d15 	stw	r12,180(sp)
 1007dd0:	1825883a 	mov	r18,r3
 1007dd4:	d8003215 	stw	zero,200(sp)
 1007dd8:	d8003415 	stw	zero,208(sp)
 1007ddc:	dac03115 	stw	r11,196(sp)
 1007de0:	0005883a 	mov	r2,zero
 1007de4:	003e4406 	br	10076f8 <__alt_data_end+0xff8076f8>
 1007de8:	dac02d17 	ldw	r11,180(sp)
 1007dec:	db002d17 	ldw	r12,180(sp)
 1007df0:	5ac00017 	ldw	r11,0(r11)
 1007df4:	dac02e15 	stw	r11,184(sp)
 1007df8:	62c00104 	addi	r11,r12,4
 1007dfc:	db002e17 	ldw	r12,184(sp)
 1007e00:	60030316 	blt	r12,zero,1008a10 <___svfprintf_internal_r+0x1818>
 1007e04:	dac02d15 	stw	r11,180(sp)
 1007e08:	1805883a 	mov	r2,r3
 1007e0c:	1c000007 	ldb	r16,0(r3)
 1007e10:	003d4f06 	br	1007350 <__alt_data_end+0xff807350>
 1007e14:	1805883a 	mov	r2,r3
 1007e18:	01800ac4 	movi	r6,43
 1007e1c:	1c000007 	ldb	r16,0(r3)
 1007e20:	003d4b06 	br	1007350 <__alt_data_end+0xff807350>
 1007e24:	8c400054 	ori	r17,r17,1
 1007e28:	1805883a 	mov	r2,r3
 1007e2c:	1c000007 	ldb	r16,0(r3)
 1007e30:	003d4706 	br	1007350 <__alt_data_end+0xff807350>
 1007e34:	008040b4 	movhi	r2,258
 1007e38:	10a5d404 	addi	r2,r2,-26800
 1007e3c:	d8c02915 	stw	r3,164(sp)
 1007e40:	d8803b15 	stw	r2,236(sp)
 1007e44:	d9802785 	stb	r6,158(sp)
 1007e48:	88c0080c 	andi	r3,r17,32
 1007e4c:	d8802d17 	ldw	r2,180(sp)
 1007e50:	183fa41e 	bne	r3,zero,1007ce4 <__alt_data_end+0xff807ce4>
 1007e54:	88c0040c 	andi	r3,r17,16
 1007e58:	18028b26 	beq	r3,zero,1008888 <___svfprintf_internal_r+0x1690>
 1007e5c:	db002d17 	ldw	r12,180(sp)
 1007e60:	14c00017 	ldw	r19,0(r2)
 1007e64:	0039883a 	mov	fp,zero
 1007e68:	63000104 	addi	r12,r12,4
 1007e6c:	db002d15 	stw	r12,180(sp)
 1007e70:	003fa106 	br	1007cf8 <__alt_data_end+0xff807cf8>
 1007e74:	d8c02915 	stw	r3,164(sp)
 1007e78:	8880080c 	andi	r2,r17,32
 1007e7c:	103f121e 	bne	r2,zero,1007ac8 <__alt_data_end+0xff807ac8>
 1007e80:	8880040c 	andi	r2,r17,16
 1007e84:	1001df1e 	bne	r2,zero,1008604 <___svfprintf_internal_r+0x140c>
 1007e88:	8880100c 	andi	r2,r17,64
 1007e8c:	1001dd26 	beq	r2,zero,1008604 <___svfprintf_internal_r+0x140c>
 1007e90:	dac02d17 	ldw	r11,180(sp)
 1007e94:	0039883a 	mov	fp,zero
 1007e98:	00800044 	movi	r2,1
 1007e9c:	5cc0000b 	ldhu	r19,0(r11)
 1007ea0:	5ac00104 	addi	r11,r11,4
 1007ea4:	dac02d15 	stw	r11,180(sp)
 1007ea8:	9807883a 	mov	r3,r19
 1007eac:	003efe06 	br	1007aa8 <__alt_data_end+0xff807aa8>
 1007eb0:	d8c02915 	stw	r3,164(sp)
 1007eb4:	8880080c 	andi	r2,r17,32
 1007eb8:	103ef41e 	bne	r2,zero,1007a8c <__alt_data_end+0xff807a8c>
 1007ebc:	8880040c 	andi	r2,r17,16
 1007ec0:	1001c11e 	bne	r2,zero,10085c8 <___svfprintf_internal_r+0x13d0>
 1007ec4:	8880100c 	andi	r2,r17,64
 1007ec8:	1001bf26 	beq	r2,zero,10085c8 <___svfprintf_internal_r+0x13d0>
 1007ecc:	db002d17 	ldw	r12,180(sp)
 1007ed0:	0039883a 	mov	fp,zero
 1007ed4:	0005883a 	mov	r2,zero
 1007ed8:	64c0000b 	ldhu	r19,0(r12)
 1007edc:	63000104 	addi	r12,r12,4
 1007ee0:	db002d15 	stw	r12,180(sp)
 1007ee4:	9807883a 	mov	r3,r19
 1007ee8:	003eef06 	br	1007aa8 <__alt_data_end+0xff807aa8>
 1007eec:	d8c02915 	stw	r3,164(sp)
 1007ef0:	d9802785 	stb	r6,158(sp)
 1007ef4:	803d8226 	beq	r16,zero,1007500 <__alt_data_end+0xff807500>
 1007ef8:	02c00044 	movi	r11,1
 1007efc:	db001404 	addi	r12,sp,80
 1007f00:	dac02a15 	stw	r11,168(sp)
 1007f04:	dc001405 	stb	r16,80(sp)
 1007f08:	d8002785 	stb	zero,158(sp)
 1007f0c:	5825883a 	mov	r18,r11
 1007f10:	d8003215 	stw	zero,200(sp)
 1007f14:	d8003415 	stw	zero,208(sp)
 1007f18:	db003115 	stw	r12,196(sp)
 1007f1c:	0005883a 	mov	r2,zero
 1007f20:	003df506 	br	10076f8 <__alt_data_end+0xff8076f8>
 1007f24:	d8c02017 	ldw	r3,128(sp)
 1007f28:	003e3606 	br	1007804 <__alt_data_end+0xff807804>
 1007f2c:	10803fcc 	andi	r2,r2,255
 1007f30:	00c00044 	movi	r3,1
 1007f34:	10fdca1e 	bne	r2,r3,1007660 <__alt_data_end+0xff807660>
 1007f38:	e000021e 	bne	fp,zero,1007f44 <___svfprintf_internal_r+0xd4c>
 1007f3c:	00800244 	movi	r2,9
 1007f40:	14c01f2e 	bgeu	r2,r19,1007fc0 <___svfprintf_internal_r+0xdc8>
 1007f44:	dc002a15 	stw	r16,168(sp)
 1007f48:	dc402b15 	stw	r17,172(sp)
 1007f4c:	9821883a 	mov	r16,r19
 1007f50:	e023883a 	mov	r17,fp
 1007f54:	b025883a 	mov	r18,r22
 1007f58:	4027883a 	mov	r19,r8
 1007f5c:	4839883a 	mov	fp,r9
 1007f60:	8009883a 	mov	r4,r16
 1007f64:	880b883a 	mov	r5,r17
 1007f68:	01800284 	movi	r6,10
 1007f6c:	000f883a 	mov	r7,zero
 1007f70:	10146000 	call	1014600 <__umoddi3>
 1007f74:	10800c04 	addi	r2,r2,48
 1007f78:	94bfffc4 	addi	r18,r18,-1
 1007f7c:	8009883a 	mov	r4,r16
 1007f80:	880b883a 	mov	r5,r17
 1007f84:	01800284 	movi	r6,10
 1007f88:	000f883a 	mov	r7,zero
 1007f8c:	90800005 	stb	r2,0(r18)
 1007f90:	10140400 	call	1014040 <__udivdi3>
 1007f94:	1021883a 	mov	r16,r2
 1007f98:	10c4b03a 	or	r2,r2,r3
 1007f9c:	1823883a 	mov	r17,r3
 1007fa0:	103fef1e 	bne	r2,zero,1007f60 <__alt_data_end+0xff807f60>
 1007fa4:	dc803115 	stw	r18,196(sp)
 1007fa8:	dc002a17 	ldw	r16,168(sp)
 1007fac:	9811883a 	mov	r8,r19
 1007fb0:	dc402b17 	ldw	r17,172(sp)
 1007fb4:	e013883a 	mov	r9,fp
 1007fb8:	b4a5c83a 	sub	r18,r22,r18
 1007fbc:	003dc206 	br	10076c8 <__alt_data_end+0xff8076c8>
 1007fc0:	9cc00c04 	addi	r19,r19,48
 1007fc4:	db001dc4 	addi	r12,sp,119
 1007fc8:	dcc01dc5 	stb	r19,119(sp)
 1007fcc:	dc803d17 	ldw	r18,244(sp)
 1007fd0:	db003115 	stw	r12,196(sp)
 1007fd4:	003dbc06 	br	10076c8 <__alt_data_end+0xff8076c8>
 1007fd8:	00801944 	movi	r2,101
 1007fdc:	14008d0e 	bge	r2,r16,1008214 <___svfprintf_internal_r+0x101c>
 1007fe0:	d9003717 	ldw	r4,220(sp)
 1007fe4:	d9403817 	ldw	r5,224(sp)
 1007fe8:	000d883a 	mov	r6,zero
 1007fec:	000f883a 	mov	r7,zero
 1007ff0:	d8c03e15 	stw	r3,248(sp)
 1007ff4:	da004015 	stw	r8,256(sp)
 1007ff8:	1003f9c0 	call	1003f9c <__eqdf2>
 1007ffc:	d8c03e17 	ldw	r3,248(sp)
 1008000:	da004017 	ldw	r8,256(sp)
 1008004:	1000fd1e 	bne	r2,zero,10083fc <___svfprintf_internal_r+0x1204>
 1008008:	d8801f17 	ldw	r2,124(sp)
 100800c:	010040b4 	movhi	r4,258
 1008010:	2125db04 	addi	r4,r4,-26772
 1008014:	18c00044 	addi	r3,r3,1
 1008018:	10800044 	addi	r2,r2,1
 100801c:	41000015 	stw	r4,0(r8)
 1008020:	01000044 	movi	r4,1
 1008024:	41000115 	stw	r4,4(r8)
 1008028:	d8c02015 	stw	r3,128(sp)
 100802c:	d8801f15 	stw	r2,124(sp)
 1008030:	010001c4 	movi	r4,7
 1008034:	20823316 	blt	r4,r2,1008904 <___svfprintf_internal_r+0x170c>
 1008038:	42000204 	addi	r8,r8,8
 100803c:	d8802617 	ldw	r2,152(sp)
 1008040:	dac03317 	ldw	r11,204(sp)
 1008044:	12c00216 	blt	r2,r11,1008050 <___svfprintf_internal_r+0xe58>
 1008048:	8880004c 	andi	r2,r17,1
 100804c:	103e4c26 	beq	r2,zero,1007980 <__alt_data_end+0xff807980>
 1008050:	db003917 	ldw	r12,228(sp)
 1008054:	d8801f17 	ldw	r2,124(sp)
 1008058:	dac03517 	ldw	r11,212(sp)
 100805c:	1b07883a 	add	r3,r3,r12
 1008060:	10800044 	addi	r2,r2,1
 1008064:	42c00015 	stw	r11,0(r8)
 1008068:	43000115 	stw	r12,4(r8)
 100806c:	d8c02015 	stw	r3,128(sp)
 1008070:	d8801f15 	stw	r2,124(sp)
 1008074:	010001c4 	movi	r4,7
 1008078:	20826f16 	blt	r4,r2,1008a38 <___svfprintf_internal_r+0x1840>
 100807c:	42000204 	addi	r8,r8,8
 1008080:	db003317 	ldw	r12,204(sp)
 1008084:	643fffc4 	addi	r16,r12,-1
 1008088:	043e3d0e 	bge	zero,r16,1007980 <__alt_data_end+0xff807980>
 100808c:	04800404 	movi	r18,16
 1008090:	d8801f17 	ldw	r2,124(sp)
 1008094:	94009a0e 	bge	r18,r16,1008300 <___svfprintf_internal_r+0x1108>
 1008098:	014040b4 	movhi	r5,258
 100809c:	2965db84 	addi	r5,r5,-26770
 10080a0:	d9402b15 	stw	r5,172(sp)
 10080a4:	054001c4 	movi	r21,7
 10080a8:	dcc02f17 	ldw	r19,188(sp)
 10080ac:	00000306 	br	10080bc <___svfprintf_internal_r+0xec4>
 10080b0:	42000204 	addi	r8,r8,8
 10080b4:	843ffc04 	addi	r16,r16,-16
 10080b8:	9400940e 	bge	r18,r16,100830c <___svfprintf_internal_r+0x1114>
 10080bc:	18c00404 	addi	r3,r3,16
 10080c0:	10800044 	addi	r2,r2,1
 10080c4:	45000015 	stw	r20,0(r8)
 10080c8:	44800115 	stw	r18,4(r8)
 10080cc:	d8c02015 	stw	r3,128(sp)
 10080d0:	d8801f15 	stw	r2,124(sp)
 10080d4:	a8bff60e 	bge	r21,r2,10080b0 <__alt_data_end+0xff8080b0>
 10080d8:	9809883a 	mov	r4,r19
 10080dc:	b80b883a 	mov	r5,r23
 10080e0:	b00d883a 	mov	r6,r22
 10080e4:	1010fd00 	call	1010fd0 <__ssprint_r>
 10080e8:	103d0b1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10080ec:	d8c02017 	ldw	r3,128(sp)
 10080f0:	d8801f17 	ldw	r2,124(sp)
 10080f4:	da000404 	addi	r8,sp,16
 10080f8:	003fee06 	br	10080b4 <__alt_data_end+0xff8080b4>
 10080fc:	dac02e17 	ldw	r11,184(sp)
 1008100:	db002a17 	ldw	r12,168(sp)
 1008104:	5b2bc83a 	sub	r21,r11,r12
 1008108:	057ddc0e 	bge	zero,r21,100787c <__alt_data_end+0xff80787c>
 100810c:	07000404 	movi	fp,16
 1008110:	d8801f17 	ldw	r2,124(sp)
 1008114:	e5435d0e 	bge	fp,r21,1008e8c <___svfprintf_internal_r+0x1c94>
 1008118:	014040b4 	movhi	r5,258
 100811c:	a809883a 	mov	r4,r21
 1008120:	2965db84 	addi	r5,r5,-26770
 1008124:	dc002c15 	stw	r16,176(sp)
 1008128:	902b883a 	mov	r21,r18
 100812c:	d9402b15 	stw	r5,172(sp)
 1008130:	8825883a 	mov	r18,r17
 1008134:	04c001c4 	movi	r19,7
 1008138:	dc002f17 	ldw	r16,188(sp)
 100813c:	2023883a 	mov	r17,r4
 1008140:	00000306 	br	1008150 <___svfprintf_internal_r+0xf58>
 1008144:	8c7ffc04 	addi	r17,r17,-16
 1008148:	42000204 	addi	r8,r8,8
 100814c:	e440110e 	bge	fp,r17,1008194 <___svfprintf_internal_r+0xf9c>
 1008150:	18c00404 	addi	r3,r3,16
 1008154:	10800044 	addi	r2,r2,1
 1008158:	45000015 	stw	r20,0(r8)
 100815c:	47000115 	stw	fp,4(r8)
 1008160:	d8c02015 	stw	r3,128(sp)
 1008164:	d8801f15 	stw	r2,124(sp)
 1008168:	98bff60e 	bge	r19,r2,1008144 <__alt_data_end+0xff808144>
 100816c:	8009883a 	mov	r4,r16
 1008170:	b80b883a 	mov	r5,r23
 1008174:	b00d883a 	mov	r6,r22
 1008178:	1010fd00 	call	1010fd0 <__ssprint_r>
 100817c:	103ce61e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008180:	8c7ffc04 	addi	r17,r17,-16
 1008184:	d8c02017 	ldw	r3,128(sp)
 1008188:	d8801f17 	ldw	r2,124(sp)
 100818c:	da000404 	addi	r8,sp,16
 1008190:	e47fef16 	blt	fp,r17,1008150 <__alt_data_end+0xff808150>
 1008194:	dc002c17 	ldw	r16,176(sp)
 1008198:	8809883a 	mov	r4,r17
 100819c:	9023883a 	mov	r17,r18
 10081a0:	a825883a 	mov	r18,r21
 10081a4:	202b883a 	mov	r21,r4
 10081a8:	dac02b17 	ldw	r11,172(sp)
 10081ac:	1d47883a 	add	r3,r3,r21
 10081b0:	10800044 	addi	r2,r2,1
 10081b4:	42c00015 	stw	r11,0(r8)
 10081b8:	45400115 	stw	r21,4(r8)
 10081bc:	d8c02015 	stw	r3,128(sp)
 10081c0:	d8801f15 	stw	r2,124(sp)
 10081c4:	010001c4 	movi	r4,7
 10081c8:	20818016 	blt	r4,r2,10087cc <___svfprintf_internal_r+0x15d4>
 10081cc:	42000204 	addi	r8,r8,8
 10081d0:	003daa06 	br	100787c <__alt_data_end+0xff80787c>
 10081d4:	d9403b17 	ldw	r5,236(sp)
 10081d8:	b007883a 	mov	r3,r22
 10081dc:	988003cc 	andi	r2,r19,15
 10081e0:	e008973a 	slli	r4,fp,28
 10081e4:	2885883a 	add	r2,r5,r2
 10081e8:	9826d13a 	srli	r19,r19,4
 10081ec:	10800003 	ldbu	r2,0(r2)
 10081f0:	e038d13a 	srli	fp,fp,4
 10081f4:	18ffffc4 	addi	r3,r3,-1
 10081f8:	24e6b03a 	or	r19,r4,r19
 10081fc:	18800005 	stb	r2,0(r3)
 1008200:	9f04b03a 	or	r2,r19,fp
 1008204:	103ff51e 	bne	r2,zero,10081dc <__alt_data_end+0xff8081dc>
 1008208:	d8c03115 	stw	r3,196(sp)
 100820c:	b0e5c83a 	sub	r18,r22,r3
 1008210:	003d2d06 	br	10076c8 <__alt_data_end+0xff8076c8>
 1008214:	db003317 	ldw	r12,204(sp)
 1008218:	00800044 	movi	r2,1
 100821c:	18c00044 	addi	r3,r3,1
 1008220:	13014b0e 	bge	r2,r12,1008750 <___svfprintf_internal_r+0x1558>
 1008224:	dc001f17 	ldw	r16,124(sp)
 1008228:	dac03117 	ldw	r11,196(sp)
 100822c:	00800044 	movi	r2,1
 1008230:	84000044 	addi	r16,r16,1
 1008234:	40800115 	stw	r2,4(r8)
 1008238:	42c00015 	stw	r11,0(r8)
 100823c:	d8c02015 	stw	r3,128(sp)
 1008240:	dc001f15 	stw	r16,124(sp)
 1008244:	008001c4 	movi	r2,7
 1008248:	14014e16 	blt	r2,r16,1008784 <___svfprintf_internal_r+0x158c>
 100824c:	42000204 	addi	r8,r8,8
 1008250:	db003917 	ldw	r12,228(sp)
 1008254:	dac03517 	ldw	r11,212(sp)
 1008258:	84000044 	addi	r16,r16,1
 100825c:	1b07883a 	add	r3,r3,r12
 1008260:	42c00015 	stw	r11,0(r8)
 1008264:	43000115 	stw	r12,4(r8)
 1008268:	d8c02015 	stw	r3,128(sp)
 100826c:	dc001f15 	stw	r16,124(sp)
 1008270:	008001c4 	movi	r2,7
 1008274:	14014c16 	blt	r2,r16,10087a8 <___svfprintf_internal_r+0x15b0>
 1008278:	44800204 	addi	r18,r8,8
 100827c:	d9003717 	ldw	r4,220(sp)
 1008280:	d9403817 	ldw	r5,224(sp)
 1008284:	000d883a 	mov	r6,zero
 1008288:	000f883a 	mov	r7,zero
 100828c:	d8c03e15 	stw	r3,248(sp)
 1008290:	1003f9c0 	call	1003f9c <__eqdf2>
 1008294:	d8c03e17 	ldw	r3,248(sp)
 1008298:	db003317 	ldw	r12,204(sp)
 100829c:	10009526 	beq	r2,zero,10084f4 <___svfprintf_internal_r+0x12fc>
 10082a0:	dac03117 	ldw	r11,196(sp)
 10082a4:	60bfffc4 	addi	r2,r12,-1
 10082a8:	1887883a 	add	r3,r3,r2
 10082ac:	59000044 	addi	r4,r11,1
 10082b0:	84000044 	addi	r16,r16,1
 10082b4:	90800115 	stw	r2,4(r18)
 10082b8:	91000015 	stw	r4,0(r18)
 10082bc:	d8c02015 	stw	r3,128(sp)
 10082c0:	dc001f15 	stw	r16,124(sp)
 10082c4:	008001c4 	movi	r2,7
 10082c8:	1400b316 	blt	r2,r16,1008598 <___svfprintf_internal_r+0x13a0>
 10082cc:	94800204 	addi	r18,r18,8
 10082d0:	dac03a17 	ldw	r11,232(sp)
 10082d4:	dd4022c4 	addi	r21,sp,139
 10082d8:	84000044 	addi	r16,r16,1
 10082dc:	58c7883a 	add	r3,r11,r3
 10082e0:	95400015 	stw	r21,0(r18)
 10082e4:	92c00115 	stw	r11,4(r18)
 10082e8:	d8c02015 	stw	r3,128(sp)
 10082ec:	dc001f15 	stw	r16,124(sp)
 10082f0:	008001c4 	movi	r2,7
 10082f4:	14000e16 	blt	r2,r16,1008330 <___svfprintf_internal_r+0x1138>
 10082f8:	92000204 	addi	r8,r18,8
 10082fc:	003da006 	br	1007980 <__alt_data_end+0xff807980>
 1008300:	010040b4 	movhi	r4,258
 1008304:	2125db84 	addi	r4,r4,-26770
 1008308:	d9002b15 	stw	r4,172(sp)
 100830c:	dac02b17 	ldw	r11,172(sp)
 1008310:	1c07883a 	add	r3,r3,r16
 1008314:	44000115 	stw	r16,4(r8)
 1008318:	42c00015 	stw	r11,0(r8)
 100831c:	10800044 	addi	r2,r2,1
 1008320:	d8c02015 	stw	r3,128(sp)
 1008324:	d8801f15 	stw	r2,124(sp)
 1008328:	010001c4 	movi	r4,7
 100832c:	20bd930e 	bge	r4,r2,100797c <__alt_data_end+0xff80797c>
 1008330:	d9002f17 	ldw	r4,188(sp)
 1008334:	b80b883a 	mov	r5,r23
 1008338:	b00d883a 	mov	r6,r22
 100833c:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008340:	103c751e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008344:	d8c02017 	ldw	r3,128(sp)
 1008348:	da000404 	addi	r8,sp,16
 100834c:	003d8c06 	br	1007980 <__alt_data_end+0xff807980>
 1008350:	d9002f17 	ldw	r4,188(sp)
 1008354:	b80b883a 	mov	r5,r23
 1008358:	b00d883a 	mov	r6,r22
 100835c:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008360:	103dc326 	beq	r2,zero,1007a70 <__alt_data_end+0xff807a70>
 1008364:	003c6c06 	br	1007518 <__alt_data_end+0xff807518>
 1008368:	10803fcc 	andi	r2,r2,255
 100836c:	1000201e 	bne	r2,zero,10083f0 <___svfprintf_internal_r+0x11f8>
 1008370:	8880004c 	andi	r2,r17,1
 1008374:	10001e26 	beq	r2,zero,10083f0 <___svfprintf_internal_r+0x11f8>
 1008378:	00800c04 	movi	r2,48
 100837c:	d8c01dc4 	addi	r3,sp,119
 1008380:	d8801dc5 	stb	r2,119(sp)
 1008384:	dc803d17 	ldw	r18,244(sp)
 1008388:	d8c03115 	stw	r3,196(sp)
 100838c:	003cce06 	br	10076c8 <__alt_data_end+0xff8076c8>
 1008390:	d9002f17 	ldw	r4,188(sp)
 1008394:	b80b883a 	mov	r5,r23
 1008398:	b00d883a 	mov	r6,r22
 100839c:	1010fd00 	call	1010fd0 <__ssprint_r>
 10083a0:	103c5d1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10083a4:	d8c02017 	ldw	r3,128(sp)
 10083a8:	da000404 	addi	r8,sp,16
 10083ac:	003d6706 	br	100794c <__alt_data_end+0xff80794c>
 10083b0:	d9002f17 	ldw	r4,188(sp)
 10083b4:	b80b883a 	mov	r5,r23
 10083b8:	b00d883a 	mov	r6,r22
 10083bc:	1010fd00 	call	1010fd0 <__ssprint_r>
 10083c0:	103c551e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10083c4:	d8c02017 	ldw	r3,128(sp)
 10083c8:	da000404 	addi	r8,sp,16
 10083cc:	003d1a06 	br	1007838 <__alt_data_end+0xff807838>
 10083d0:	d9002f17 	ldw	r4,188(sp)
 10083d4:	b80b883a 	mov	r5,r23
 10083d8:	b00d883a 	mov	r6,r22
 10083dc:	1010fd00 	call	1010fd0 <__ssprint_r>
 10083e0:	103c4d1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10083e4:	d8c02017 	ldw	r3,128(sp)
 10083e8:	da000404 	addi	r8,sp,16
 10083ec:	003d2006 	br	1007870 <__alt_data_end+0xff807870>
 10083f0:	0025883a 	mov	r18,zero
 10083f4:	dd803115 	stw	r22,196(sp)
 10083f8:	003cb306 	br	10076c8 <__alt_data_end+0xff8076c8>
 10083fc:	dc002617 	ldw	r16,152(sp)
 1008400:	0401480e 	bge	zero,r16,1008924 <___svfprintf_internal_r+0x172c>
 1008404:	db003117 	ldw	r12,196(sp)
 1008408:	dac03317 	ldw	r11,204(sp)
 100840c:	62e1883a 	add	r16,r12,r11
 1008410:	db003417 	ldw	r12,208(sp)
 1008414:	5825883a 	mov	r18,r11
 1008418:	62c0010e 	bge	r12,r11,1008420 <___svfprintf_internal_r+0x1228>
 100841c:	6025883a 	mov	r18,r12
 1008420:	04800b0e 	bge	zero,r18,1008450 <___svfprintf_internal_r+0x1258>
 1008424:	d8801f17 	ldw	r2,124(sp)
 1008428:	dac03117 	ldw	r11,196(sp)
 100842c:	1c87883a 	add	r3,r3,r18
 1008430:	10800044 	addi	r2,r2,1
 1008434:	42c00015 	stw	r11,0(r8)
 1008438:	44800115 	stw	r18,4(r8)
 100843c:	d8c02015 	stw	r3,128(sp)
 1008440:	d8801f15 	stw	r2,124(sp)
 1008444:	010001c4 	movi	r4,7
 1008448:	20823f16 	blt	r4,r2,1008d48 <___svfprintf_internal_r+0x1b50>
 100844c:	42000204 	addi	r8,r8,8
 1008450:	90023b16 	blt	r18,zero,1008d40 <___svfprintf_internal_r+0x1b48>
 1008454:	db003417 	ldw	r12,208(sp)
 1008458:	64a5c83a 	sub	r18,r12,r18
 100845c:	0480780e 	bge	zero,r18,1008640 <___svfprintf_internal_r+0x1448>
 1008460:	05400404 	movi	r21,16
 1008464:	d8801f17 	ldw	r2,124(sp)
 1008468:	ac81140e 	bge	r21,r18,10088bc <___svfprintf_internal_r+0x16c4>
 100846c:	014040b4 	movhi	r5,258
 1008470:	2965db84 	addi	r5,r5,-26770
 1008474:	d9402b15 	stw	r5,172(sp)
 1008478:	070001c4 	movi	fp,7
 100847c:	dcc02f17 	ldw	r19,188(sp)
 1008480:	00000306 	br	1008490 <___svfprintf_internal_r+0x1298>
 1008484:	42000204 	addi	r8,r8,8
 1008488:	94bffc04 	addi	r18,r18,-16
 100848c:	ac810e0e 	bge	r21,r18,10088c8 <___svfprintf_internal_r+0x16d0>
 1008490:	18c00404 	addi	r3,r3,16
 1008494:	10800044 	addi	r2,r2,1
 1008498:	45000015 	stw	r20,0(r8)
 100849c:	45400115 	stw	r21,4(r8)
 10084a0:	d8c02015 	stw	r3,128(sp)
 10084a4:	d8801f15 	stw	r2,124(sp)
 10084a8:	e0bff60e 	bge	fp,r2,1008484 <__alt_data_end+0xff808484>
 10084ac:	9809883a 	mov	r4,r19
 10084b0:	b80b883a 	mov	r5,r23
 10084b4:	b00d883a 	mov	r6,r22
 10084b8:	1010fd00 	call	1010fd0 <__ssprint_r>
 10084bc:	103c161e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10084c0:	d8c02017 	ldw	r3,128(sp)
 10084c4:	d8801f17 	ldw	r2,124(sp)
 10084c8:	da000404 	addi	r8,sp,16
 10084cc:	003fee06 	br	1008488 <__alt_data_end+0xff808488>
 10084d0:	d9002f17 	ldw	r4,188(sp)
 10084d4:	b80b883a 	mov	r5,r23
 10084d8:	b00d883a 	mov	r6,r22
 10084dc:	1010fd00 	call	1010fd0 <__ssprint_r>
 10084e0:	103c0d1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10084e4:	d8c02017 	ldw	r3,128(sp)
 10084e8:	d8802787 	ldb	r2,158(sp)
 10084ec:	da000404 	addi	r8,sp,16
 10084f0:	003cc406 	br	1007804 <__alt_data_end+0xff807804>
 10084f4:	657fffc4 	addi	r21,r12,-1
 10084f8:	057f750e 	bge	zero,r21,10082d0 <__alt_data_end+0xff8082d0>
 10084fc:	07000404 	movi	fp,16
 1008500:	e542ef0e 	bge	fp,r21,10090c0 <___svfprintf_internal_r+0x1ec8>
 1008504:	010040b4 	movhi	r4,258
 1008508:	2125db84 	addi	r4,r4,-26770
 100850c:	d9002b15 	stw	r4,172(sp)
 1008510:	01c001c4 	movi	r7,7
 1008514:	dcc02f17 	ldw	r19,188(sp)
 1008518:	00000306 	br	1008528 <___svfprintf_internal_r+0x1330>
 100851c:	ad7ffc04 	addi	r21,r21,-16
 1008520:	94800204 	addi	r18,r18,8
 1008524:	e540130e 	bge	fp,r21,1008574 <___svfprintf_internal_r+0x137c>
 1008528:	18c00404 	addi	r3,r3,16
 100852c:	84000044 	addi	r16,r16,1
 1008530:	95000015 	stw	r20,0(r18)
 1008534:	97000115 	stw	fp,4(r18)
 1008538:	d8c02015 	stw	r3,128(sp)
 100853c:	dc001f15 	stw	r16,124(sp)
 1008540:	3c3ff60e 	bge	r7,r16,100851c <__alt_data_end+0xff80851c>
 1008544:	9809883a 	mov	r4,r19
 1008548:	b80b883a 	mov	r5,r23
 100854c:	b00d883a 	mov	r6,r22
 1008550:	d9c03e15 	stw	r7,248(sp)
 1008554:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008558:	d9c03e17 	ldw	r7,248(sp)
 100855c:	103bee1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008560:	ad7ffc04 	addi	r21,r21,-16
 1008564:	d8c02017 	ldw	r3,128(sp)
 1008568:	dc001f17 	ldw	r16,124(sp)
 100856c:	dc800404 	addi	r18,sp,16
 1008570:	e57fed16 	blt	fp,r21,1008528 <__alt_data_end+0xff808528>
 1008574:	dac02b17 	ldw	r11,172(sp)
 1008578:	1d47883a 	add	r3,r3,r21
 100857c:	84000044 	addi	r16,r16,1
 1008580:	92c00015 	stw	r11,0(r18)
 1008584:	95400115 	stw	r21,4(r18)
 1008588:	d8c02015 	stw	r3,128(sp)
 100858c:	dc001f15 	stw	r16,124(sp)
 1008590:	008001c4 	movi	r2,7
 1008594:	143f4d0e 	bge	r2,r16,10082cc <__alt_data_end+0xff8082cc>
 1008598:	d9002f17 	ldw	r4,188(sp)
 100859c:	b80b883a 	mov	r5,r23
 10085a0:	b00d883a 	mov	r6,r22
 10085a4:	1010fd00 	call	1010fd0 <__ssprint_r>
 10085a8:	103bdb1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10085ac:	d8c02017 	ldw	r3,128(sp)
 10085b0:	dc001f17 	ldw	r16,124(sp)
 10085b4:	dc800404 	addi	r18,sp,16
 10085b8:	003f4506 	br	10082d0 <__alt_data_end+0xff8082d0>
 10085bc:	00800084 	movi	r2,2
 10085c0:	9f06b03a 	or	r3,r19,fp
 10085c4:	003d3806 	br	1007aa8 <__alt_data_end+0xff807aa8>
 10085c8:	dac02d17 	ldw	r11,180(sp)
 10085cc:	0039883a 	mov	fp,zero
 10085d0:	0005883a 	mov	r2,zero
 10085d4:	5cc00017 	ldw	r19,0(r11)
 10085d8:	5ac00104 	addi	r11,r11,4
 10085dc:	dac02d15 	stw	r11,180(sp)
 10085e0:	9807883a 	mov	r3,r19
 10085e4:	003d3006 	br	1007aa8 <__alt_data_end+0xff807aa8>
 10085e8:	1cc00017 	ldw	r19,0(r3)
 10085ec:	dac02d17 	ldw	r11,180(sp)
 10085f0:	9839d7fa 	srai	fp,r19,31
 10085f4:	5ac00104 	addi	r11,r11,4
 10085f8:	dac02d15 	stw	r11,180(sp)
 10085fc:	e005883a 	mov	r2,fp
 1008600:	003c0a06 	br	100762c <__alt_data_end+0xff80762c>
 1008604:	db002d17 	ldw	r12,180(sp)
 1008608:	0039883a 	mov	fp,zero
 100860c:	00800044 	movi	r2,1
 1008610:	64c00017 	ldw	r19,0(r12)
 1008614:	63000104 	addi	r12,r12,4
 1008618:	db002d15 	stw	r12,180(sp)
 100861c:	9807883a 	mov	r3,r19
 1008620:	003d2106 	br	1007aa8 <__alt_data_end+0xff807aa8>
 1008624:	d9002f17 	ldw	r4,188(sp)
 1008628:	b80b883a 	mov	r5,r23
 100862c:	b00d883a 	mov	r6,r22
 1008630:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008634:	103bb81e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008638:	d8c02017 	ldw	r3,128(sp)
 100863c:	da000404 	addi	r8,sp,16
 1008640:	db003117 	ldw	r12,196(sp)
 1008644:	dac03417 	ldw	r11,208(sp)
 1008648:	d8802617 	ldw	r2,152(sp)
 100864c:	62e5883a 	add	r18,r12,r11
 1008650:	db003317 	ldw	r12,204(sp)
 1008654:	13000216 	blt	r2,r12,1008660 <___svfprintf_internal_r+0x1468>
 1008658:	8900004c 	andi	r4,r17,1
 100865c:	20000c26 	beq	r4,zero,1008690 <___svfprintf_internal_r+0x1498>
 1008660:	dac03917 	ldw	r11,228(sp)
 1008664:	d9001f17 	ldw	r4,124(sp)
 1008668:	db003517 	ldw	r12,212(sp)
 100866c:	1ac7883a 	add	r3,r3,r11
 1008670:	21000044 	addi	r4,r4,1
 1008674:	43000015 	stw	r12,0(r8)
 1008678:	42c00115 	stw	r11,4(r8)
 100867c:	d8c02015 	stw	r3,128(sp)
 1008680:	d9001f15 	stw	r4,124(sp)
 1008684:	014001c4 	movi	r5,7
 1008688:	2901b716 	blt	r5,r4,1008d68 <___svfprintf_internal_r+0x1b70>
 100868c:	42000204 	addi	r8,r8,8
 1008690:	dac03317 	ldw	r11,204(sp)
 1008694:	8489c83a 	sub	r4,r16,r18
 1008698:	5885c83a 	sub	r2,r11,r2
 100869c:	1021883a 	mov	r16,r2
 10086a0:	2080010e 	bge	r4,r2,10086a8 <___svfprintf_internal_r+0x14b0>
 10086a4:	2021883a 	mov	r16,r4
 10086a8:	04000a0e 	bge	zero,r16,10086d4 <___svfprintf_internal_r+0x14dc>
 10086ac:	d9001f17 	ldw	r4,124(sp)
 10086b0:	1c07883a 	add	r3,r3,r16
 10086b4:	44800015 	stw	r18,0(r8)
 10086b8:	21000044 	addi	r4,r4,1
 10086bc:	44000115 	stw	r16,4(r8)
 10086c0:	d8c02015 	stw	r3,128(sp)
 10086c4:	d9001f15 	stw	r4,124(sp)
 10086c8:	014001c4 	movi	r5,7
 10086cc:	2901bf16 	blt	r5,r4,1008dcc <___svfprintf_internal_r+0x1bd4>
 10086d0:	42000204 	addi	r8,r8,8
 10086d4:	8001bb16 	blt	r16,zero,1008dc4 <___svfprintf_internal_r+0x1bcc>
 10086d8:	1421c83a 	sub	r16,r2,r16
 10086dc:	043ca80e 	bge	zero,r16,1007980 <__alt_data_end+0xff807980>
 10086e0:	04800404 	movi	r18,16
 10086e4:	d8801f17 	ldw	r2,124(sp)
 10086e8:	943f050e 	bge	r18,r16,1008300 <__alt_data_end+0xff808300>
 10086ec:	014040b4 	movhi	r5,258
 10086f0:	2965db84 	addi	r5,r5,-26770
 10086f4:	d9402b15 	stw	r5,172(sp)
 10086f8:	054001c4 	movi	r21,7
 10086fc:	dcc02f17 	ldw	r19,188(sp)
 1008700:	00000306 	br	1008710 <___svfprintf_internal_r+0x1518>
 1008704:	42000204 	addi	r8,r8,8
 1008708:	843ffc04 	addi	r16,r16,-16
 100870c:	943eff0e 	bge	r18,r16,100830c <__alt_data_end+0xff80830c>
 1008710:	18c00404 	addi	r3,r3,16
 1008714:	10800044 	addi	r2,r2,1
 1008718:	45000015 	stw	r20,0(r8)
 100871c:	44800115 	stw	r18,4(r8)
 1008720:	d8c02015 	stw	r3,128(sp)
 1008724:	d8801f15 	stw	r2,124(sp)
 1008728:	a8bff60e 	bge	r21,r2,1008704 <__alt_data_end+0xff808704>
 100872c:	9809883a 	mov	r4,r19
 1008730:	b80b883a 	mov	r5,r23
 1008734:	b00d883a 	mov	r6,r22
 1008738:	1010fd00 	call	1010fd0 <__ssprint_r>
 100873c:	103b761e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008740:	d8c02017 	ldw	r3,128(sp)
 1008744:	d8801f17 	ldw	r2,124(sp)
 1008748:	da000404 	addi	r8,sp,16
 100874c:	003fee06 	br	1008708 <__alt_data_end+0xff808708>
 1008750:	8888703a 	and	r4,r17,r2
 1008754:	203eb31e 	bne	r4,zero,1008224 <__alt_data_end+0xff808224>
 1008758:	dc001f17 	ldw	r16,124(sp)
 100875c:	db003117 	ldw	r12,196(sp)
 1008760:	40800115 	stw	r2,4(r8)
 1008764:	84000044 	addi	r16,r16,1
 1008768:	43000015 	stw	r12,0(r8)
 100876c:	d8c02015 	stw	r3,128(sp)
 1008770:	dc001f15 	stw	r16,124(sp)
 1008774:	008001c4 	movi	r2,7
 1008778:	143f8716 	blt	r2,r16,1008598 <__alt_data_end+0xff808598>
 100877c:	44800204 	addi	r18,r8,8
 1008780:	003ed306 	br	10082d0 <__alt_data_end+0xff8082d0>
 1008784:	d9002f17 	ldw	r4,188(sp)
 1008788:	b80b883a 	mov	r5,r23
 100878c:	b00d883a 	mov	r6,r22
 1008790:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008794:	103b601e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008798:	d8c02017 	ldw	r3,128(sp)
 100879c:	dc001f17 	ldw	r16,124(sp)
 10087a0:	da000404 	addi	r8,sp,16
 10087a4:	003eaa06 	br	1008250 <__alt_data_end+0xff808250>
 10087a8:	d9002f17 	ldw	r4,188(sp)
 10087ac:	b80b883a 	mov	r5,r23
 10087b0:	b00d883a 	mov	r6,r22
 10087b4:	1010fd00 	call	1010fd0 <__ssprint_r>
 10087b8:	103b571e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10087bc:	d8c02017 	ldw	r3,128(sp)
 10087c0:	dc001f17 	ldw	r16,124(sp)
 10087c4:	dc800404 	addi	r18,sp,16
 10087c8:	003eac06 	br	100827c <__alt_data_end+0xff80827c>
 10087cc:	d9002f17 	ldw	r4,188(sp)
 10087d0:	b80b883a 	mov	r5,r23
 10087d4:	b00d883a 	mov	r6,r22
 10087d8:	1010fd00 	call	1010fd0 <__ssprint_r>
 10087dc:	103b4e1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 10087e0:	d8c02017 	ldw	r3,128(sp)
 10087e4:	da000404 	addi	r8,sp,16
 10087e8:	003c2406 	br	100787c <__alt_data_end+0xff80787c>
 10087ec:	da004015 	stw	r8,256(sp)
 10087f0:	da403f15 	stw	r9,252(sp)
 10087f4:	10022580 	call	1002258 <__fpclassifyd>
 10087f8:	da004017 	ldw	r8,256(sp)
 10087fc:	da403f17 	ldw	r9,252(sp)
 1008800:	1000951e 	bne	r2,zero,1008a58 <___svfprintf_internal_r+0x1860>
 1008804:	008011c4 	movi	r2,71
 1008808:	1400fb16 	blt	r2,r16,1008bf8 <___svfprintf_internal_r+0x1a00>
 100880c:	030040b4 	movhi	r12,258
 1008810:	6325cd04 	addi	r12,r12,-26828
 1008814:	db003115 	stw	r12,196(sp)
 1008818:	00c000c4 	movi	r3,3
 100881c:	00bfdfc4 	movi	r2,-129
 1008820:	d8c02a15 	stw	r3,168(sp)
 1008824:	88a2703a 	and	r17,r17,r2
 1008828:	dd402783 	ldbu	r21,158(sp)
 100882c:	dcc02d15 	stw	r19,180(sp)
 1008830:	1825883a 	mov	r18,r3
 1008834:	d8003215 	stw	zero,200(sp)
 1008838:	d8003415 	stw	zero,208(sp)
 100883c:	003ba706 	br	10076dc <__alt_data_end+0xff8076dc>
 1008840:	8880040c 	andi	r2,r17,16
 1008844:	1000091e 	bne	r2,zero,100886c <___svfprintf_internal_r+0x1674>
 1008848:	8c40100c 	andi	r17,r17,64
 100884c:	88000726 	beq	r17,zero,100886c <___svfprintf_internal_r+0x1674>
 1008850:	db002d17 	ldw	r12,180(sp)
 1008854:	dac03017 	ldw	r11,192(sp)
 1008858:	60800017 	ldw	r2,0(r12)
 100885c:	63000104 	addi	r12,r12,4
 1008860:	db002d15 	stw	r12,180(sp)
 1008864:	12c0000d 	sth	r11,0(r2)
 1008868:	003a8f06 	br	10072a8 <__alt_data_end+0xff8072a8>
 100886c:	db002d17 	ldw	r12,180(sp)
 1008870:	dac03017 	ldw	r11,192(sp)
 1008874:	60800017 	ldw	r2,0(r12)
 1008878:	63000104 	addi	r12,r12,4
 100887c:	db002d15 	stw	r12,180(sp)
 1008880:	12c00015 	stw	r11,0(r2)
 1008884:	003a8806 	br	10072a8 <__alt_data_end+0xff8072a8>
 1008888:	88c0100c 	andi	r3,r17,64
 100888c:	1800e926 	beq	r3,zero,1008c34 <___svfprintf_internal_r+0x1a3c>
 1008890:	dac02d17 	ldw	r11,180(sp)
 1008894:	14c0000b 	ldhu	r19,0(r2)
 1008898:	0039883a 	mov	fp,zero
 100889c:	5ac00104 	addi	r11,r11,4
 10088a0:	dac02d15 	stw	r11,180(sp)
 10088a4:	003d1406 	br	1007cf8 <__alt_data_end+0xff807cf8>
 10088a8:	1c000007 	ldb	r16,0(r3)
 10088ac:	1805883a 	mov	r2,r3
 10088b0:	003aa706 	br	1007350 <__alt_data_end+0xff807350>
 10088b4:	00800084 	movi	r2,2
 10088b8:	003c7b06 	br	1007aa8 <__alt_data_end+0xff807aa8>
 10088bc:	010040b4 	movhi	r4,258
 10088c0:	2125db84 	addi	r4,r4,-26770
 10088c4:	d9002b15 	stw	r4,172(sp)
 10088c8:	dac02b17 	ldw	r11,172(sp)
 10088cc:	1c87883a 	add	r3,r3,r18
 10088d0:	10800044 	addi	r2,r2,1
 10088d4:	42c00015 	stw	r11,0(r8)
 10088d8:	44800115 	stw	r18,4(r8)
 10088dc:	d8c02015 	stw	r3,128(sp)
 10088e0:	d8801f15 	stw	r2,124(sp)
 10088e4:	010001c4 	movi	r4,7
 10088e8:	20bf4e16 	blt	r4,r2,1008624 <__alt_data_end+0xff808624>
 10088ec:	42000204 	addi	r8,r8,8
 10088f0:	003f5306 	br	1008640 <__alt_data_end+0xff808640>
 10088f4:	010040b4 	movhi	r4,258
 10088f8:	2125db84 	addi	r4,r4,-26770
 10088fc:	d9002b15 	stw	r4,172(sp)
 1008900:	003c0806 	br	1007924 <__alt_data_end+0xff807924>
 1008904:	d9002f17 	ldw	r4,188(sp)
 1008908:	b80b883a 	mov	r5,r23
 100890c:	b00d883a 	mov	r6,r22
 1008910:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008914:	103b001e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008918:	d8c02017 	ldw	r3,128(sp)
 100891c:	da000404 	addi	r8,sp,16
 1008920:	003dc606 	br	100803c <__alt_data_end+0xff80803c>
 1008924:	d8801f17 	ldw	r2,124(sp)
 1008928:	030040b4 	movhi	r12,258
 100892c:	01000044 	movi	r4,1
 1008930:	18c00044 	addi	r3,r3,1
 1008934:	10800044 	addi	r2,r2,1
 1008938:	6325db04 	addi	r12,r12,-26772
 100893c:	41000115 	stw	r4,4(r8)
 1008940:	43000015 	stw	r12,0(r8)
 1008944:	d8c02015 	stw	r3,128(sp)
 1008948:	d8801f15 	stw	r2,124(sp)
 100894c:	010001c4 	movi	r4,7
 1008950:	2080ad16 	blt	r4,r2,1008c08 <___svfprintf_internal_r+0x1a10>
 1008954:	42000204 	addi	r8,r8,8
 1008958:	8000041e 	bne	r16,zero,100896c <___svfprintf_internal_r+0x1774>
 100895c:	dac03317 	ldw	r11,204(sp)
 1008960:	5800021e 	bne	r11,zero,100896c <___svfprintf_internal_r+0x1774>
 1008964:	8880004c 	andi	r2,r17,1
 1008968:	103c0526 	beq	r2,zero,1007980 <__alt_data_end+0xff807980>
 100896c:	db003917 	ldw	r12,228(sp)
 1008970:	d8801f17 	ldw	r2,124(sp)
 1008974:	dac03517 	ldw	r11,212(sp)
 1008978:	1b07883a 	add	r3,r3,r12
 100897c:	10800044 	addi	r2,r2,1
 1008980:	42c00015 	stw	r11,0(r8)
 1008984:	43000115 	stw	r12,4(r8)
 1008988:	d8c02015 	stw	r3,128(sp)
 100898c:	d8801f15 	stw	r2,124(sp)
 1008990:	010001c4 	movi	r4,7
 1008994:	20818816 	blt	r4,r2,1008fb8 <___svfprintf_internal_r+0x1dc0>
 1008998:	42000204 	addi	r8,r8,8
 100899c:	0421c83a 	sub	r16,zero,r16
 10089a0:	0400bc0e 	bge	zero,r16,1008c94 <___svfprintf_internal_r+0x1a9c>
 10089a4:	04800404 	movi	r18,16
 10089a8:	9400f80e 	bge	r18,r16,1008d8c <___svfprintf_internal_r+0x1b94>
 10089ac:	010040b4 	movhi	r4,258
 10089b0:	2125db84 	addi	r4,r4,-26770
 10089b4:	d9002b15 	stw	r4,172(sp)
 10089b8:	054001c4 	movi	r21,7
 10089bc:	dcc02f17 	ldw	r19,188(sp)
 10089c0:	00000306 	br	10089d0 <___svfprintf_internal_r+0x17d8>
 10089c4:	42000204 	addi	r8,r8,8
 10089c8:	843ffc04 	addi	r16,r16,-16
 10089cc:	9400f20e 	bge	r18,r16,1008d98 <___svfprintf_internal_r+0x1ba0>
 10089d0:	18c00404 	addi	r3,r3,16
 10089d4:	10800044 	addi	r2,r2,1
 10089d8:	45000015 	stw	r20,0(r8)
 10089dc:	44800115 	stw	r18,4(r8)
 10089e0:	d8c02015 	stw	r3,128(sp)
 10089e4:	d8801f15 	stw	r2,124(sp)
 10089e8:	a8bff60e 	bge	r21,r2,10089c4 <__alt_data_end+0xff8089c4>
 10089ec:	9809883a 	mov	r4,r19
 10089f0:	b80b883a 	mov	r5,r23
 10089f4:	b00d883a 	mov	r6,r22
 10089f8:	1010fd00 	call	1010fd0 <__ssprint_r>
 10089fc:	103ac61e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008a00:	d8c02017 	ldw	r3,128(sp)
 1008a04:	d8801f17 	ldw	r2,124(sp)
 1008a08:	da000404 	addi	r8,sp,16
 1008a0c:	003fee06 	br	10089c8 <__alt_data_end+0xff8089c8>
 1008a10:	db002e17 	ldw	r12,184(sp)
 1008a14:	1805883a 	mov	r2,r3
 1008a18:	dac02d15 	stw	r11,180(sp)
 1008a1c:	0319c83a 	sub	r12,zero,r12
 1008a20:	db002e15 	stw	r12,184(sp)
 1008a24:	003ad106 	br	100756c <__alt_data_end+0xff80756c>
 1008a28:	18800044 	addi	r2,r3,1
 1008a2c:	8c400814 	ori	r17,r17,32
 1008a30:	1c000047 	ldb	r16,1(r3)
 1008a34:	003a4606 	br	1007350 <__alt_data_end+0xff807350>
 1008a38:	d9002f17 	ldw	r4,188(sp)
 1008a3c:	b80b883a 	mov	r5,r23
 1008a40:	b00d883a 	mov	r6,r22
 1008a44:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008a48:	103ab31e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008a4c:	d8c02017 	ldw	r3,128(sp)
 1008a50:	da000404 	addi	r8,sp,16
 1008a54:	003d8a06 	br	1008080 <__alt_data_end+0xff808080>
 1008a58:	057ff7c4 	movi	r21,-33
 1008a5c:	00bfffc4 	movi	r2,-1
 1008a60:	856a703a 	and	r21,r16,r21
 1008a64:	48807126 	beq	r9,r2,1008c2c <___svfprintf_internal_r+0x1a34>
 1008a68:	008011c4 	movi	r2,71
 1008a6c:	a8814f26 	beq	r21,r2,1008fac <___svfprintf_internal_r+0x1db4>
 1008a70:	db003817 	ldw	r12,224(sp)
 1008a74:	8ac04014 	ori	r11,r17,256
 1008a78:	dac02d15 	stw	r11,180(sp)
 1008a7c:	60015816 	blt	r12,zero,1008fe0 <___svfprintf_internal_r+0x1de8>
 1008a80:	dc803817 	ldw	r18,224(sp)
 1008a84:	d8002a05 	stb	zero,168(sp)
 1008a88:	00801984 	movi	r2,102
 1008a8c:	80808c26 	beq	r16,r2,1008cc0 <___svfprintf_internal_r+0x1ac8>
 1008a90:	00801184 	movi	r2,70
 1008a94:	80808a26 	beq	r16,r2,1008cc0 <___svfprintf_internal_r+0x1ac8>
 1008a98:	00801144 	movi	r2,69
 1008a9c:	a8815426 	beq	r21,r2,1008ff0 <___svfprintf_internal_r+0x1df8>
 1008aa0:	4839883a 	mov	fp,r9
 1008aa4:	d8802604 	addi	r2,sp,152
 1008aa8:	d8800115 	stw	r2,4(sp)
 1008aac:	d9002f17 	ldw	r4,188(sp)
 1008ab0:	d8802504 	addi	r2,sp,148
 1008ab4:	d9403717 	ldw	r5,220(sp)
 1008ab8:	d8800215 	stw	r2,8(sp)
 1008abc:	d8802104 	addi	r2,sp,132
 1008ac0:	df000015 	stw	fp,0(sp)
 1008ac4:	d8800315 	stw	r2,12(sp)
 1008ac8:	900d883a 	mov	r6,r18
 1008acc:	01c00084 	movi	r7,2
 1008ad0:	da004015 	stw	r8,256(sp)
 1008ad4:	da403f15 	stw	r9,252(sp)
 1008ad8:	100b4d80 	call	100b4d8 <_dtoa_r>
 1008adc:	d8803115 	stw	r2,196(sp)
 1008ae0:	008019c4 	movi	r2,103
 1008ae4:	da004017 	ldw	r8,256(sp)
 1008ae8:	da403f17 	ldw	r9,252(sp)
 1008aec:	80800226 	beq	r16,r2,1008af8 <___svfprintf_internal_r+0x1900>
 1008af0:	008011c4 	movi	r2,71
 1008af4:	8080841e 	bne	r16,r2,1008d08 <___svfprintf_internal_r+0x1b10>
 1008af8:	8880004c 	andi	r2,r17,1
 1008afc:	10015126 	beq	r2,zero,1009044 <___svfprintf_internal_r+0x1e4c>
 1008b00:	db003117 	ldw	r12,196(sp)
 1008b04:	6715883a 	add	r10,r12,fp
 1008b08:	d9003717 	ldw	r4,220(sp)
 1008b0c:	900b883a 	mov	r5,r18
 1008b10:	000d883a 	mov	r6,zero
 1008b14:	000f883a 	mov	r7,zero
 1008b18:	da004015 	stw	r8,256(sp)
 1008b1c:	da403f15 	stw	r9,252(sp)
 1008b20:	da803e15 	stw	r10,248(sp)
 1008b24:	1003f9c0 	call	1003f9c <__eqdf2>
 1008b28:	da004017 	ldw	r8,256(sp)
 1008b2c:	da403f17 	ldw	r9,252(sp)
 1008b30:	da803e17 	ldw	r10,248(sp)
 1008b34:	1000d926 	beq	r2,zero,1008e9c <___svfprintf_internal_r+0x1ca4>
 1008b38:	d8802117 	ldw	r2,132(sp)
 1008b3c:	1280062e 	bgeu	r2,r10,1008b58 <___svfprintf_internal_r+0x1960>
 1008b40:	01000c04 	movi	r4,48
 1008b44:	10c00044 	addi	r3,r2,1
 1008b48:	d8c02115 	stw	r3,132(sp)
 1008b4c:	11000005 	stb	r4,0(r2)
 1008b50:	d8802117 	ldw	r2,132(sp)
 1008b54:	12bffb36 	bltu	r2,r10,1008b44 <__alt_data_end+0xff808b44>
 1008b58:	db003117 	ldw	r12,196(sp)
 1008b5c:	1305c83a 	sub	r2,r2,r12
 1008b60:	d8803315 	stw	r2,204(sp)
 1008b64:	008011c4 	movi	r2,71
 1008b68:	a880b626 	beq	r21,r2,1008e44 <___svfprintf_internal_r+0x1c4c>
 1008b6c:	00801944 	movi	r2,101
 1008b70:	14017e0e 	bge	r2,r16,100916c <___svfprintf_internal_r+0x1f74>
 1008b74:	00801984 	movi	r2,102
 1008b78:	80812826 	beq	r16,r2,100901c <___svfprintf_internal_r+0x1e24>
 1008b7c:	db002617 	ldw	r12,152(sp)
 1008b80:	db003415 	stw	r12,208(sp)
 1008b84:	db003417 	ldw	r12,208(sp)
 1008b88:	dac03317 	ldw	r11,204(sp)
 1008b8c:	62c11a16 	blt	r12,r11,1008ff8 <___svfprintf_internal_r+0x1e00>
 1008b90:	8c40004c 	andi	r17,r17,1
 1008b94:	88013d1e 	bne	r17,zero,100908c <___svfprintf_internal_r+0x1e94>
 1008b98:	6005883a 	mov	r2,r12
 1008b9c:	60012716 	blt	r12,zero,100903c <___svfprintf_internal_r+0x1e44>
 1008ba0:	dc803417 	ldw	r18,208(sp)
 1008ba4:	df002a07 	ldb	fp,168(sp)
 1008ba8:	e000b01e 	bne	fp,zero,1008e6c <___svfprintf_internal_r+0x1c74>
 1008bac:	dc402d17 	ldw	r17,180(sp)
 1008bb0:	dd402783 	ldbu	r21,158(sp)
 1008bb4:	d8802a15 	stw	r2,168(sp)
 1008bb8:	dcc02d15 	stw	r19,180(sp)
 1008bbc:	d8003215 	stw	zero,200(sp)
 1008bc0:	003ac606 	br	10076dc <__alt_data_end+0xff8076dc>
 1008bc4:	008040b4 	movhi	r2,258
 1008bc8:	10a5cb04 	addi	r2,r2,-26836
 1008bcc:	d8803115 	stw	r2,196(sp)
 1008bd0:	003be506 	br	1007b68 <__alt_data_end+0xff807b68>
 1008bd4:	d9002f17 	ldw	r4,188(sp)
 1008bd8:	04001004 	movi	r16,64
 1008bdc:	800b883a 	mov	r5,r16
 1008be0:	100eaec0 	call	100eaec <_malloc_r>
 1008be4:	b8800015 	stw	r2,0(r23)
 1008be8:	b8800415 	stw	r2,16(r23)
 1008bec:	10016126 	beq	r2,zero,1009174 <___svfprintf_internal_r+0x1f7c>
 1008bf0:	bc000515 	stw	r16,20(r23)
 1008bf4:	00399a06 	br	1007260 <__alt_data_end+0xff807260>
 1008bf8:	008040b4 	movhi	r2,258
 1008bfc:	10a5ce04 	addi	r2,r2,-26824
 1008c00:	d8803115 	stw	r2,196(sp)
 1008c04:	003f0406 	br	1008818 <__alt_data_end+0xff808818>
 1008c08:	d9002f17 	ldw	r4,188(sp)
 1008c0c:	b80b883a 	mov	r5,r23
 1008c10:	b00d883a 	mov	r6,r22
 1008c14:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008c18:	103a3f1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008c1c:	dc002617 	ldw	r16,152(sp)
 1008c20:	d8c02017 	ldw	r3,128(sp)
 1008c24:	da000404 	addi	r8,sp,16
 1008c28:	003f4b06 	br	1008958 <__alt_data_end+0xff808958>
 1008c2c:	02400184 	movi	r9,6
 1008c30:	003f8f06 	br	1008a70 <__alt_data_end+0xff808a70>
 1008c34:	db002d17 	ldw	r12,180(sp)
 1008c38:	14c00017 	ldw	r19,0(r2)
 1008c3c:	0039883a 	mov	fp,zero
 1008c40:	63000104 	addi	r12,r12,4
 1008c44:	db002d15 	stw	r12,180(sp)
 1008c48:	003c2b06 	br	1007cf8 <__alt_data_end+0xff807cf8>
 1008c4c:	d8c03117 	ldw	r3,196(sp)
 1008c50:	b0e5c83a 	sub	r18,r22,r3
 1008c54:	003a9c06 	br	10076c8 <__alt_data_end+0xff8076c8>
 1008c58:	da004015 	stw	r8,256(sp)
 1008c5c:	1004fa80 	call	1004fa8 <strlen>
 1008c60:	1025883a 	mov	r18,r2
 1008c64:	da004017 	ldw	r8,256(sp)
 1008c68:	903c450e 	bge	r18,zero,1007d80 <__alt_data_end+0xff807d80>
 1008c6c:	0005883a 	mov	r2,zero
 1008c70:	003c4306 	br	1007d80 <__alt_data_end+0xff807d80>
 1008c74:	d9002f17 	ldw	r4,188(sp)
 1008c78:	b80b883a 	mov	r5,r23
 1008c7c:	b00d883a 	mov	r6,r22
 1008c80:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008c84:	103a241e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008c88:	d8c02017 	ldw	r3,128(sp)
 1008c8c:	d8801f17 	ldw	r2,124(sp)
 1008c90:	da000404 	addi	r8,sp,16
 1008c94:	db003317 	ldw	r12,204(sp)
 1008c98:	dac03117 	ldw	r11,196(sp)
 1008c9c:	10800044 	addi	r2,r2,1
 1008ca0:	60c7883a 	add	r3,r12,r3
 1008ca4:	42c00015 	stw	r11,0(r8)
 1008ca8:	43000115 	stw	r12,4(r8)
 1008cac:	d8c02015 	stw	r3,128(sp)
 1008cb0:	d8801f15 	stw	r2,124(sp)
 1008cb4:	010001c4 	movi	r4,7
 1008cb8:	20bb300e 	bge	r4,r2,100797c <__alt_data_end+0xff80797c>
 1008cbc:	003d9c06 	br	1008330 <__alt_data_end+0xff808330>
 1008cc0:	d8802604 	addi	r2,sp,152
 1008cc4:	d8800115 	stw	r2,4(sp)
 1008cc8:	d9002f17 	ldw	r4,188(sp)
 1008ccc:	d8802504 	addi	r2,sp,148
 1008cd0:	d9403717 	ldw	r5,220(sp)
 1008cd4:	d8800215 	stw	r2,8(sp)
 1008cd8:	d8802104 	addi	r2,sp,132
 1008cdc:	da400015 	stw	r9,0(sp)
 1008ce0:	d8800315 	stw	r2,12(sp)
 1008ce4:	900d883a 	mov	r6,r18
 1008ce8:	01c000c4 	movi	r7,3
 1008cec:	da004015 	stw	r8,256(sp)
 1008cf0:	da403f15 	stw	r9,252(sp)
 1008cf4:	100b4d80 	call	100b4d8 <_dtoa_r>
 1008cf8:	da403f17 	ldw	r9,252(sp)
 1008cfc:	da004017 	ldw	r8,256(sp)
 1008d00:	d8803115 	stw	r2,196(sp)
 1008d04:	4839883a 	mov	fp,r9
 1008d08:	dac03117 	ldw	r11,196(sp)
 1008d0c:	00801184 	movi	r2,70
 1008d10:	5f15883a 	add	r10,r11,fp
 1008d14:	a8bf7c1e 	bne	r21,r2,1008b08 <__alt_data_end+0xff808b08>
 1008d18:	59000007 	ldb	r4,0(r11)
 1008d1c:	00800c04 	movi	r2,48
 1008d20:	2080ca26 	beq	r4,r2,100904c <___svfprintf_internal_r+0x1e54>
 1008d24:	d8c02617 	ldw	r3,152(sp)
 1008d28:	50d5883a 	add	r10,r10,r3
 1008d2c:	003f7606 	br	1008b08 <__alt_data_end+0xff808b08>
 1008d30:	010040b4 	movhi	r4,258
 1008d34:	2125df84 	addi	r4,r4,-26754
 1008d38:	d9003615 	stw	r4,216(sp)
 1008d3c:	003aa606 	br	10077d8 <__alt_data_end+0xff8077d8>
 1008d40:	0025883a 	mov	r18,zero
 1008d44:	003dc306 	br	1008454 <__alt_data_end+0xff808454>
 1008d48:	d9002f17 	ldw	r4,188(sp)
 1008d4c:	b80b883a 	mov	r5,r23
 1008d50:	b00d883a 	mov	r6,r22
 1008d54:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008d58:	1039ef1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008d5c:	d8c02017 	ldw	r3,128(sp)
 1008d60:	da000404 	addi	r8,sp,16
 1008d64:	003dba06 	br	1008450 <__alt_data_end+0xff808450>
 1008d68:	d9002f17 	ldw	r4,188(sp)
 1008d6c:	b80b883a 	mov	r5,r23
 1008d70:	b00d883a 	mov	r6,r22
 1008d74:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008d78:	1039e71e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008d7c:	d8802617 	ldw	r2,152(sp)
 1008d80:	d8c02017 	ldw	r3,128(sp)
 1008d84:	da000404 	addi	r8,sp,16
 1008d88:	003e4106 	br	1008690 <__alt_data_end+0xff808690>
 1008d8c:	030040b4 	movhi	r12,258
 1008d90:	6325db84 	addi	r12,r12,-26770
 1008d94:	db002b15 	stw	r12,172(sp)
 1008d98:	dac02b17 	ldw	r11,172(sp)
 1008d9c:	1c07883a 	add	r3,r3,r16
 1008da0:	10800044 	addi	r2,r2,1
 1008da4:	42c00015 	stw	r11,0(r8)
 1008da8:	44000115 	stw	r16,4(r8)
 1008dac:	d8c02015 	stw	r3,128(sp)
 1008db0:	d8801f15 	stw	r2,124(sp)
 1008db4:	010001c4 	movi	r4,7
 1008db8:	20bfae16 	blt	r4,r2,1008c74 <__alt_data_end+0xff808c74>
 1008dbc:	42000204 	addi	r8,r8,8
 1008dc0:	003fb406 	br	1008c94 <__alt_data_end+0xff808c94>
 1008dc4:	0021883a 	mov	r16,zero
 1008dc8:	003e4306 	br	10086d8 <__alt_data_end+0xff8086d8>
 1008dcc:	d9002f17 	ldw	r4,188(sp)
 1008dd0:	b80b883a 	mov	r5,r23
 1008dd4:	b00d883a 	mov	r6,r22
 1008dd8:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008ddc:	1039ce1e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008de0:	d8802617 	ldw	r2,152(sp)
 1008de4:	db003317 	ldw	r12,204(sp)
 1008de8:	d8c02017 	ldw	r3,128(sp)
 1008dec:	da000404 	addi	r8,sp,16
 1008df0:	6085c83a 	sub	r2,r12,r2
 1008df4:	003e3706 	br	10086d4 <__alt_data_end+0xff8086d4>
 1008df8:	00800184 	movi	r2,6
 1008dfc:	1240012e 	bgeu	r2,r9,1008e04 <___svfprintf_internal_r+0x1c0c>
 1008e00:	1013883a 	mov	r9,r2
 1008e04:	4825883a 	mov	r18,r9
 1008e08:	4805883a 	mov	r2,r9
 1008e0c:	4800a416 	blt	r9,zero,10090a0 <___svfprintf_internal_r+0x1ea8>
 1008e10:	d8802a15 	stw	r2,168(sp)
 1008e14:	008040b4 	movhi	r2,258
 1008e18:	10a5d904 	addi	r2,r2,-26780
 1008e1c:	d8803115 	stw	r2,196(sp)
 1008e20:	dcc02d15 	stw	r19,180(sp)
 1008e24:	d8003215 	stw	zero,200(sp)
 1008e28:	d8003415 	stw	zero,208(sp)
 1008e2c:	0005883a 	mov	r2,zero
 1008e30:	003a3106 	br	10076f8 <__alt_data_end+0xff8076f8>
 1008e34:	030040b4 	movhi	r12,258
 1008e38:	6325df84 	addi	r12,r12,-26754
 1008e3c:	db003615 	stw	r12,216(sp)
 1008e40:	003af406 	br	1007a14 <__alt_data_end+0xff807a14>
 1008e44:	d8c02617 	ldw	r3,152(sp)
 1008e48:	00bfff44 	movi	r2,-3
 1008e4c:	18801516 	blt	r3,r2,1008ea4 <___svfprintf_internal_r+0x1cac>
 1008e50:	48c01416 	blt	r9,r3,1008ea4 <___svfprintf_internal_r+0x1cac>
 1008e54:	d8c03415 	stw	r3,208(sp)
 1008e58:	040019c4 	movi	r16,103
 1008e5c:	003f4906 	br	1008b84 <__alt_data_end+0xff808b84>
 1008e60:	05400b44 	movi	r21,45
 1008e64:	dd402785 	stb	r21,158(sp)
 1008e68:	003b3a06 	br	1007b54 <__alt_data_end+0xff807b54>
 1008e6c:	00c00b44 	movi	r3,45
 1008e70:	d8802a15 	stw	r2,168(sp)
 1008e74:	dc402d17 	ldw	r17,180(sp)
 1008e78:	d8c02785 	stb	r3,158(sp)
 1008e7c:	dcc02d15 	stw	r19,180(sp)
 1008e80:	d8003215 	stw	zero,200(sp)
 1008e84:	00800b44 	movi	r2,45
 1008e88:	003a1806 	br	10076ec <__alt_data_end+0xff8076ec>
 1008e8c:	010040b4 	movhi	r4,258
 1008e90:	2125db84 	addi	r4,r4,-26770
 1008e94:	d9002b15 	stw	r4,172(sp)
 1008e98:	003cc306 	br	10081a8 <__alt_data_end+0xff8081a8>
 1008e9c:	5005883a 	mov	r2,r10
 1008ea0:	003f2d06 	br	1008b58 <__alt_data_end+0xff808b58>
 1008ea4:	843fff84 	addi	r16,r16,-2
 1008ea8:	1f3fffc4 	addi	fp,r3,-1
 1008eac:	df002615 	stw	fp,152(sp)
 1008eb0:	dc0022c5 	stb	r16,139(sp)
 1008eb4:	e000a216 	blt	fp,zero,1009140 <___svfprintf_internal_r+0x1f48>
 1008eb8:	00800ac4 	movi	r2,43
 1008ebc:	d8802305 	stb	r2,140(sp)
 1008ec0:	00800244 	movi	r2,9
 1008ec4:	1700820e 	bge	r2,fp,10090d0 <___svfprintf_internal_r+0x1ed8>
 1008ec8:	dd4022c4 	addi	r21,sp,139
 1008ecc:	dc002b15 	stw	r16,172(sp)
 1008ed0:	8825883a 	mov	r18,r17
 1008ed4:	a821883a 	mov	r16,r21
 1008ed8:	4023883a 	mov	r17,r8
 1008edc:	e009883a 	mov	r4,fp
 1008ee0:	01400284 	movi	r5,10
 1008ee4:	1004b980 	call	1004b98 <__modsi3>
 1008ee8:	10800c04 	addi	r2,r2,48
 1008eec:	843fffc4 	addi	r16,r16,-1
 1008ef0:	e009883a 	mov	r4,fp
 1008ef4:	01400284 	movi	r5,10
 1008ef8:	80800005 	stb	r2,0(r16)
 1008efc:	1004b440 	call	1004b44 <__divsi3>
 1008f00:	1039883a 	mov	fp,r2
 1008f04:	00800244 	movi	r2,9
 1008f08:	173ff416 	blt	r2,fp,1008edc <__alt_data_end+0xff808edc>
 1008f0c:	8811883a 	mov	r8,r17
 1008f10:	e0800c04 	addi	r2,fp,48
 1008f14:	9023883a 	mov	r17,r18
 1008f18:	8025883a 	mov	r18,r16
 1008f1c:	913fffc4 	addi	r4,r18,-1
 1008f20:	90bfffc5 	stb	r2,-1(r18)
 1008f24:	dc002b17 	ldw	r16,172(sp)
 1008f28:	25408e2e 	bgeu	r4,r21,1009164 <___svfprintf_internal_r+0x1f6c>
 1008f2c:	d9402384 	addi	r5,sp,142
 1008f30:	2c8bc83a 	sub	r5,r5,r18
 1008f34:	d8c02344 	addi	r3,sp,141
 1008f38:	a94b883a 	add	r5,r21,r5
 1008f3c:	00000106 	br	1008f44 <___svfprintf_internal_r+0x1d4c>
 1008f40:	20800003 	ldbu	r2,0(r4)
 1008f44:	18800005 	stb	r2,0(r3)
 1008f48:	18c00044 	addi	r3,r3,1
 1008f4c:	21000044 	addi	r4,r4,1
 1008f50:	197ffb1e 	bne	r3,r5,1008f40 <__alt_data_end+0xff808f40>
 1008f54:	d8802304 	addi	r2,sp,140
 1008f58:	1485c83a 	sub	r2,r2,r18
 1008f5c:	d8c02344 	addi	r3,sp,141
 1008f60:	1885883a 	add	r2,r3,r2
 1008f64:	dac03317 	ldw	r11,204(sp)
 1008f68:	156bc83a 	sub	r21,r2,r21
 1008f6c:	dd403a15 	stw	r21,232(sp)
 1008f70:	00800044 	movi	r2,1
 1008f74:	5d65883a 	add	r18,r11,r21
 1008f78:	12c0770e 	bge	r2,r11,1009158 <___svfprintf_internal_r+0x1f60>
 1008f7c:	94800044 	addi	r18,r18,1
 1008f80:	9005883a 	mov	r2,r18
 1008f84:	90007216 	blt	r18,zero,1009150 <___svfprintf_internal_r+0x1f58>
 1008f88:	d8003415 	stw	zero,208(sp)
 1008f8c:	003f0506 	br	1008ba4 <__alt_data_end+0xff808ba4>
 1008f90:	da402a15 	stw	r9,168(sp)
 1008f94:	dd402783 	ldbu	r21,158(sp)
 1008f98:	4825883a 	mov	r18,r9
 1008f9c:	dcc02d15 	stw	r19,180(sp)
 1008fa0:	d8003215 	stw	zero,200(sp)
 1008fa4:	d8003415 	stw	zero,208(sp)
 1008fa8:	0039cc06 	br	10076dc <__alt_data_end+0xff8076dc>
 1008fac:	483eb01e 	bne	r9,zero,1008a70 <__alt_data_end+0xff808a70>
 1008fb0:	9013883a 	mov	r9,r18
 1008fb4:	003eae06 	br	1008a70 <__alt_data_end+0xff808a70>
 1008fb8:	d9002f17 	ldw	r4,188(sp)
 1008fbc:	b80b883a 	mov	r5,r23
 1008fc0:	b00d883a 	mov	r6,r22
 1008fc4:	1010fd00 	call	1010fd0 <__ssprint_r>
 1008fc8:	1039531e 	bne	r2,zero,1007518 <__alt_data_end+0xff807518>
 1008fcc:	dc002617 	ldw	r16,152(sp)
 1008fd0:	d8c02017 	ldw	r3,128(sp)
 1008fd4:	d8801f17 	ldw	r2,124(sp)
 1008fd8:	da000404 	addi	r8,sp,16
 1008fdc:	003e6f06 	br	100899c <__alt_data_end+0xff80899c>
 1008fe0:	00c00b44 	movi	r3,45
 1008fe4:	64a0003c 	xorhi	r18,r12,32768
 1008fe8:	d8c02a05 	stb	r3,168(sp)
 1008fec:	003ea606 	br	1008a88 <__alt_data_end+0xff808a88>
 1008ff0:	4f000044 	addi	fp,r9,1
 1008ff4:	003eab06 	br	1008aa4 <__alt_data_end+0xff808aa4>
 1008ff8:	d8c03417 	ldw	r3,208(sp)
 1008ffc:	00c0410e 	bge	zero,r3,1009104 <___svfprintf_internal_r+0x1f0c>
 1009000:	04800044 	movi	r18,1
 1009004:	dac03317 	ldw	r11,204(sp)
 1009008:	92e5883a 	add	r18,r18,r11
 100900c:	9005883a 	mov	r2,r18
 1009010:	903ee40e 	bge	r18,zero,1008ba4 <__alt_data_end+0xff808ba4>
 1009014:	0005883a 	mov	r2,zero
 1009018:	003ee206 	br	1008ba4 <__alt_data_end+0xff808ba4>
 100901c:	d8c02617 	ldw	r3,152(sp)
 1009020:	d8c03415 	stw	r3,208(sp)
 1009024:	00c0310e 	bge	zero,r3,10090ec <___svfprintf_internal_r+0x1ef4>
 1009028:	48001f1e 	bne	r9,zero,10090a8 <___svfprintf_internal_r+0x1eb0>
 100902c:	8c40004c 	andi	r17,r17,1
 1009030:	88001d1e 	bne	r17,zero,10090a8 <___svfprintf_internal_r+0x1eb0>
 1009034:	1805883a 	mov	r2,r3
 1009038:	183ed90e 	bge	r3,zero,1008ba0 <__alt_data_end+0xff808ba0>
 100903c:	0005883a 	mov	r2,zero
 1009040:	003ed706 	br	1008ba0 <__alt_data_end+0xff808ba0>
 1009044:	d8802117 	ldw	r2,132(sp)
 1009048:	003ec306 	br	1008b58 <__alt_data_end+0xff808b58>
 100904c:	d9003717 	ldw	r4,220(sp)
 1009050:	900b883a 	mov	r5,r18
 1009054:	000d883a 	mov	r6,zero
 1009058:	000f883a 	mov	r7,zero
 100905c:	da004015 	stw	r8,256(sp)
 1009060:	da403f15 	stw	r9,252(sp)
 1009064:	da803e15 	stw	r10,248(sp)
 1009068:	1003f9c0 	call	1003f9c <__eqdf2>
 100906c:	da004017 	ldw	r8,256(sp)
 1009070:	da403f17 	ldw	r9,252(sp)
 1009074:	da803e17 	ldw	r10,248(sp)
 1009078:	103f2a26 	beq	r2,zero,1008d24 <__alt_data_end+0xff808d24>
 100907c:	00800044 	movi	r2,1
 1009080:	1707c83a 	sub	r3,r2,fp
 1009084:	d8c02615 	stw	r3,152(sp)
 1009088:	003f2706 	br	1008d28 <__alt_data_end+0xff808d28>
 100908c:	db003417 	ldw	r12,208(sp)
 1009090:	64800044 	addi	r18,r12,1
 1009094:	9005883a 	mov	r2,r18
 1009098:	903ec20e 	bge	r18,zero,1008ba4 <__alt_data_end+0xff808ba4>
 100909c:	003fdd06 	br	1009014 <__alt_data_end+0xff809014>
 10090a0:	0005883a 	mov	r2,zero
 10090a4:	003f5a06 	br	1008e10 <__alt_data_end+0xff808e10>
 10090a8:	dac03417 	ldw	r11,208(sp)
 10090ac:	4a400044 	addi	r9,r9,1
 10090b0:	5a65883a 	add	r18,r11,r9
 10090b4:	9005883a 	mov	r2,r18
 10090b8:	903eba0e 	bge	r18,zero,1008ba4 <__alt_data_end+0xff808ba4>
 10090bc:	003fd506 	br	1009014 <__alt_data_end+0xff809014>
 10090c0:	008040b4 	movhi	r2,258
 10090c4:	10a5db84 	addi	r2,r2,-26770
 10090c8:	d8802b15 	stw	r2,172(sp)
 10090cc:	003d2906 	br	1008574 <__alt_data_end+0xff808574>
 10090d0:	00800c04 	movi	r2,48
 10090d4:	e0c00c04 	addi	r3,fp,48
 10090d8:	d8802345 	stb	r2,141(sp)
 10090dc:	d8c02385 	stb	r3,142(sp)
 10090e0:	d88023c4 	addi	r2,sp,143
 10090e4:	dd4022c4 	addi	r21,sp,139
 10090e8:	003f9e06 	br	1008f64 <__alt_data_end+0xff808f64>
 10090ec:	4800081e 	bne	r9,zero,1009110 <___svfprintf_internal_r+0x1f18>
 10090f0:	8c40004c 	andi	r17,r17,1
 10090f4:	8800061e 	bne	r17,zero,1009110 <___svfprintf_internal_r+0x1f18>
 10090f8:	00800044 	movi	r2,1
 10090fc:	1025883a 	mov	r18,r2
 1009100:	003ea806 	br	1008ba4 <__alt_data_end+0xff808ba4>
 1009104:	04800084 	movi	r18,2
 1009108:	90e5c83a 	sub	r18,r18,r3
 100910c:	003fbd06 	br	1009004 <__alt_data_end+0xff809004>
 1009110:	4c800084 	addi	r18,r9,2
 1009114:	9005883a 	mov	r2,r18
 1009118:	903ea20e 	bge	r18,zero,1008ba4 <__alt_data_end+0xff808ba4>
 100911c:	003fbd06 	br	1009014 <__alt_data_end+0xff809014>
 1009120:	dac02d17 	ldw	r11,180(sp)
 1009124:	5a400017 	ldw	r9,0(r11)
 1009128:	5ac00104 	addi	r11,r11,4
 100912c:	dac02d15 	stw	r11,180(sp)
 1009130:	483e3f0e 	bge	r9,zero,1008a30 <__alt_data_end+0xff808a30>
 1009134:	027fffc4 	movi	r9,-1
 1009138:	1c000047 	ldb	r16,1(r3)
 100913c:	00388406 	br	1007350 <__alt_data_end+0xff807350>
 1009140:	00800b44 	movi	r2,45
 1009144:	0739c83a 	sub	fp,zero,fp
 1009148:	d8802305 	stb	r2,140(sp)
 100914c:	003f5c06 	br	1008ec0 <__alt_data_end+0xff808ec0>
 1009150:	0005883a 	mov	r2,zero
 1009154:	003f8c06 	br	1008f88 <__alt_data_end+0xff808f88>
 1009158:	88a2703a 	and	r17,r17,r2
 100915c:	883f8826 	beq	r17,zero,1008f80 <__alt_data_end+0xff808f80>
 1009160:	003f8606 	br	1008f7c <__alt_data_end+0xff808f7c>
 1009164:	d8802344 	addi	r2,sp,141
 1009168:	003f7e06 	br	1008f64 <__alt_data_end+0xff808f64>
 100916c:	d8c02617 	ldw	r3,152(sp)
 1009170:	003f4d06 	br	1008ea8 <__alt_data_end+0xff808ea8>
 1009174:	dac02f17 	ldw	r11,188(sp)
 1009178:	00800304 	movi	r2,12
 100917c:	58800015 	stw	r2,0(r11)
 1009180:	00bfffc4 	movi	r2,-1
 1009184:	0038e806 	br	1007528 <__alt_data_end+0xff807528>

01009188 <___vfprintf_internal_r>:
 1009188:	defeb604 	addi	sp,sp,-1320
 100918c:	dfc14915 	stw	ra,1316(sp)
 1009190:	ddc14715 	stw	r23,1308(sp)
 1009194:	dd814615 	stw	r22,1304(sp)
 1009198:	282f883a 	mov	r23,r5
 100919c:	202d883a 	mov	r22,r4
 10091a0:	d9812a15 	stw	r6,1192(sp)
 10091a4:	d9c12d15 	stw	r7,1204(sp)
 10091a8:	df014815 	stw	fp,1312(sp)
 10091ac:	dd414515 	stw	r21,1300(sp)
 10091b0:	dd014415 	stw	r20,1296(sp)
 10091b4:	dcc14315 	stw	r19,1292(sp)
 10091b8:	dc814215 	stw	r18,1288(sp)
 10091bc:	dc414115 	stw	r17,1284(sp)
 10091c0:	dc014015 	stw	r16,1280(sp)
 10091c4:	100e9000 	call	100e900 <_localeconv_r>
 10091c8:	10800017 	ldw	r2,0(r2)
 10091cc:	1009883a 	mov	r4,r2
 10091d0:	d8813515 	stw	r2,1236(sp)
 10091d4:	1004fa80 	call	1004fa8 <strlen>
 10091d8:	d8813815 	stw	r2,1248(sp)
 10091dc:	b0000226 	beq	r22,zero,10091e8 <___vfprintf_internal_r+0x60>
 10091e0:	b0800e17 	ldw	r2,56(r22)
 10091e4:	10010426 	beq	r2,zero,10095f8 <___vfprintf_internal_r+0x470>
 10091e8:	b8c0030b 	ldhu	r3,12(r23)
 10091ec:	1908000c 	andi	r4,r3,8192
 10091f0:	1805883a 	mov	r2,r3
 10091f4:	2000071e 	bne	r4,zero,1009214 <___vfprintf_internal_r+0x8c>
 10091f8:	b9001917 	ldw	r4,100(r23)
 10091fc:	18880014 	ori	r2,r3,8192
 1009200:	00f7ffc4 	movi	r3,-8193
 1009204:	20c8703a 	and	r4,r4,r3
 1009208:	b880030d 	sth	r2,12(r23)
 100920c:	1007883a 	mov	r3,r2
 1009210:	b9001915 	stw	r4,100(r23)
 1009214:	1100020c 	andi	r4,r2,8
 1009218:	2000a726 	beq	r4,zero,10094b8 <___vfprintf_internal_r+0x330>
 100921c:	b9000417 	ldw	r4,16(r23)
 1009220:	2000a526 	beq	r4,zero,10094b8 <___vfprintf_internal_r+0x330>
 1009224:	1080068c 	andi	r2,r2,26
 1009228:	01000284 	movi	r4,10
 100922c:	1100ab26 	beq	r2,r4,10094dc <___vfprintf_internal_r+0x354>
 1009230:	dac10e04 	addi	r11,sp,1080
 1009234:	db010dc4 	addi	r12,sp,1079
 1009238:	d8800404 	addi	r2,sp,16
 100923c:	050040b4 	movhi	r20,258
 1009240:	dac12815 	stw	r11,1184(sp)
 1009244:	5b17c83a 	sub	r11,r11,r12
 1009248:	a525e384 	addi	r20,r20,-26738
 100924c:	db012915 	stw	r12,1188(sp)
 1009250:	d8811e15 	stw	r2,1144(sp)
 1009254:	d8012015 	stw	zero,1152(sp)
 1009258:	d8011f15 	stw	zero,1148(sp)
 100925c:	d8013315 	stw	zero,1228(sp)
 1009260:	d8013715 	stw	zero,1244(sp)
 1009264:	d8013915 	stw	zero,1252(sp)
 1009268:	d8013b15 	stw	zero,1260(sp)
 100926c:	d8013a15 	stw	zero,1256(sp)
 1009270:	d8012f15 	stw	zero,1212(sp)
 1009274:	1011883a 	mov	r8,r2
 1009278:	dac13c15 	stw	r11,1264(sp)
 100927c:	db012a17 	ldw	r12,1192(sp)
 1009280:	60800007 	ldb	r2,0(r12)
 1009284:	1000df26 	beq	r2,zero,1009604 <___vfprintf_internal_r+0x47c>
 1009288:	00c00944 	movi	r3,37
 100928c:	10c0dd26 	beq	r2,r3,1009604 <___vfprintf_internal_r+0x47c>
 1009290:	6021883a 	mov	r16,r12
 1009294:	00000106 	br	100929c <___vfprintf_internal_r+0x114>
 1009298:	10c08426 	beq	r2,r3,10094ac <___vfprintf_internal_r+0x324>
 100929c:	84000044 	addi	r16,r16,1
 10092a0:	80800007 	ldb	r2,0(r16)
 10092a4:	103ffc1e 	bne	r2,zero,1009298 <__alt_data_end+0xff809298>
 10092a8:	dac12a17 	ldw	r11,1192(sp)
 10092ac:	82e3c83a 	sub	r17,r16,r11
 10092b0:	88000f26 	beq	r17,zero,10092f0 <___vfprintf_internal_r+0x168>
 10092b4:	d8c12017 	ldw	r3,1152(sp)
 10092b8:	d8811f17 	ldw	r2,1148(sp)
 10092bc:	dac12a17 	ldw	r11,1192(sp)
 10092c0:	1c47883a 	add	r3,r3,r17
 10092c4:	10800044 	addi	r2,r2,1
 10092c8:	d8c12015 	stw	r3,1152(sp)
 10092cc:	42c00015 	stw	r11,0(r8)
 10092d0:	44400115 	stw	r17,4(r8)
 10092d4:	d8811f15 	stw	r2,1148(sp)
 10092d8:	00c001c4 	movi	r3,7
 10092dc:	1880b416 	blt	r3,r2,10095b0 <___vfprintf_internal_r+0x428>
 10092e0:	42000204 	addi	r8,r8,8
 10092e4:	db012f17 	ldw	r12,1212(sp)
 10092e8:	6459883a 	add	r12,r12,r17
 10092ec:	db012f15 	stw	r12,1212(sp)
 10092f0:	80800007 	ldb	r2,0(r16)
 10092f4:	1000b526 	beq	r2,zero,10095cc <___vfprintf_internal_r+0x444>
 10092f8:	80800044 	addi	r2,r16,1
 10092fc:	84000047 	ldb	r16,1(r16)
 1009300:	d8012785 	stb	zero,1182(sp)
 1009304:	000d883a 	mov	r6,zero
 1009308:	027fffc4 	movi	r9,-1
 100930c:	d8012e15 	stw	zero,1208(sp)
 1009310:	0023883a 	mov	r17,zero
 1009314:	01001604 	movi	r4,88
 1009318:	01400244 	movi	r5,9
 100931c:	02800a84 	movi	r10,42
 1009320:	01c01b04 	movi	r7,108
 1009324:	10c00044 	addi	r3,r2,1
 1009328:	80bff804 	addi	r2,r16,-32
 100932c:	2082f236 	bltu	r4,r2,1009ef8 <___vfprintf_internal_r+0xd70>
 1009330:	100490ba 	slli	r2,r2,2
 1009334:	02c04074 	movhi	r11,257
 1009338:	5ae4d204 	addi	r11,r11,-27832
 100933c:	12c5883a 	add	r2,r2,r11
 1009340:	10800017 	ldw	r2,0(r2)
 1009344:	1000683a 	jmp	r2
 1009348:	01009d40 	call	1009d4 <__alt_mem_onchip_memory2_0+0x1009d4>
 100934c:	01009ef8 	rdprs	r4,zero,635
 1009350:	01009ef8 	rdprs	r4,zero,635
 1009354:	01009d60 	cmpeqi	r4,zero,629
 1009358:	01009ef8 	rdprs	r4,zero,635
 100935c:	01009ef8 	rdprs	r4,zero,635
 1009360:	01009ef8 	rdprs	r4,zero,635
 1009364:	01009ef8 	rdprs	r4,zero,635
 1009368:	01009ef8 	rdprs	r4,zero,635
 100936c:	01009ef8 	rdprs	r4,zero,635
 1009370:	01009ebc 	xorhi	r4,zero,634
 1009374:	01009ee8 	cmpgeui	r4,zero,635
 1009378:	01009ef8 	rdprs	r4,zero,635
 100937c:	0100960c 	andi	r4,zero,600
 1009380:	0100961c 	xori	r4,zero,600
 1009384:	01009ef8 	rdprs	r4,zero,635
 1009388:	0100965c 	xori	r4,zero,601
 100938c:	01009b50 	cmplti	r4,zero,621
 1009390:	01009b50 	cmplti	r4,zero,621
 1009394:	01009b50 	cmplti	r4,zero,621
 1009398:	01009b50 	cmplti	r4,zero,621
 100939c:	01009b50 	cmplti	r4,zero,621
 10093a0:	01009b50 	cmplti	r4,zero,621
 10093a4:	01009b50 	cmplti	r4,zero,621
 10093a8:	01009b50 	cmplti	r4,zero,621
 10093ac:	01009b50 	cmplti	r4,zero,621
 10093b0:	01009ef8 	rdprs	r4,zero,635
 10093b4:	01009ef8 	rdprs	r4,zero,635
 10093b8:	01009ef8 	rdprs	r4,zero,635
 10093bc:	01009ef8 	rdprs	r4,zero,635
 10093c0:	01009ef8 	rdprs	r4,zero,635
 10093c4:	01009ef8 	rdprs	r4,zero,635
 10093c8:	01009ef8 	rdprs	r4,zero,635
 10093cc:	01009ef8 	rdprs	r4,zero,635
 10093d0:	01009ef8 	rdprs	r4,zero,635
 10093d4:	01009ef8 	rdprs	r4,zero,635
 10093d8:	01009b84 	movi	r4,622
 10093dc:	0100966c 	andhi	r4,zero,601
 10093e0:	01009ef8 	rdprs	r4,zero,635
 10093e4:	0100966c 	andhi	r4,zero,601
 10093e8:	01009ef8 	rdprs	r4,zero,635
 10093ec:	01009ef8 	rdprs	r4,zero,635
 10093f0:	01009ef8 	rdprs	r4,zero,635
 10093f4:	01009ef8 	rdprs	r4,zero,635
 10093f8:	01009710 	cmplti	r4,zero,604
 10093fc:	01009ef8 	rdprs	r4,zero,635
 1009400:	01009ef8 	rdprs	r4,zero,635
 1009404:	01009720 	cmpeqi	r4,zero,604
 1009408:	01009ef8 	rdprs	r4,zero,635
 100940c:	01009ef8 	rdprs	r4,zero,635
 1009410:	01009ef8 	rdprs	r4,zero,635
 1009414:	01009ef8 	rdprs	r4,zero,635
 1009418:	01009ef8 	rdprs	r4,zero,635
 100941c:	01009b1c 	xori	r4,zero,620
 1009420:	01009ef8 	rdprs	r4,zero,635
 1009424:	01009ef8 	rdprs	r4,zero,635
 1009428:	01009bcc 	andi	r4,zero,623
 100942c:	01009ef8 	rdprs	r4,zero,635
 1009430:	01009ef8 	rdprs	r4,zero,635
 1009434:	01009ef8 	rdprs	r4,zero,635
 1009438:	01009ef8 	rdprs	r4,zero,635
 100943c:	01009ef8 	rdprs	r4,zero,635
 1009440:	01009ef8 	rdprs	r4,zero,635
 1009444:	01009ef8 	rdprs	r4,zero,635
 1009448:	01009ef8 	rdprs	r4,zero,635
 100944c:	01009ef8 	rdprs	r4,zero,635
 1009450:	01009ef8 	rdprs	r4,zero,635
 1009454:	01009dc0 	call	1009dc <__alt_mem_onchip_memory2_0+0x1009dc>
 1009458:	01009d70 	cmpltui	r4,zero,629
 100945c:	0100966c 	andhi	r4,zero,601
 1009460:	0100966c 	andhi	r4,zero,601
 1009464:	0100966c 	andhi	r4,zero,601
 1009468:	01009db0 	cmpltui	r4,zero,630
 100946c:	01009d70 	cmpltui	r4,zero,629
 1009470:	01009ef8 	rdprs	r4,zero,635
 1009474:	01009ef8 	rdprs	r4,zero,635
 1009478:	01009cb8 	rdprs	r4,zero,626
 100947c:	01009ef8 	rdprs	r4,zero,635
 1009480:	01009ccc 	andi	r4,zero,627
 1009484:	01009d00 	call	1009d0 <__alt_mem_onchip_memory2_0+0x1009d0>
 1009488:	01009e00 	call	1009e0 <__alt_mem_onchip_memory2_0+0x1009e0>
 100948c:	01009c28 	cmpgeui	r4,zero,624
 1009490:	01009ef8 	rdprs	r4,zero,635
 1009494:	01009e48 	cmpgei	r4,zero,633
 1009498:	01009ef8 	rdprs	r4,zero,635
 100949c:	01009c38 	rdprs	r4,zero,624
 10094a0:	01009ef8 	rdprs	r4,zero,635
 10094a4:	01009ef8 	rdprs	r4,zero,635
 10094a8:	01009c78 	rdprs	r4,zero,625
 10094ac:	db012a17 	ldw	r12,1192(sp)
 10094b0:	8323c83a 	sub	r17,r16,r12
 10094b4:	003f7e06 	br	10092b0 <__alt_data_end+0xff8092b0>
 10094b8:	b009883a 	mov	r4,r22
 10094bc:	b80b883a 	mov	r5,r23
 10094c0:	100b1a80 	call	100b1a8 <__swsetup_r>
 10094c4:	10002d1e 	bne	r2,zero,100957c <___vfprintf_internal_r+0x3f4>
 10094c8:	b8c0030b 	ldhu	r3,12(r23)
 10094cc:	01000284 	movi	r4,10
 10094d0:	1805883a 	mov	r2,r3
 10094d4:	1080068c 	andi	r2,r2,26
 10094d8:	113f551e 	bne	r2,r4,1009230 <__alt_data_end+0xff809230>
 10094dc:	b880038b 	ldhu	r2,14(r23)
 10094e0:	113fffcc 	andi	r4,r2,65535
 10094e4:	2120001c 	xori	r4,r4,32768
 10094e8:	21200004 	addi	r4,r4,-32768
 10094ec:	203f5016 	blt	r4,zero,1009230 <__alt_data_end+0xff809230>
 10094f0:	bac01917 	ldw	r11,100(r23)
 10094f4:	ba800717 	ldw	r10,28(r23)
 10094f8:	ba400917 	ldw	r9,36(r23)
 10094fc:	d9812a17 	ldw	r6,1192(sp)
 1009500:	d9c12d17 	ldw	r7,1204(sp)
 1009504:	02010004 	movi	r8,1024
 1009508:	18ffff4c 	andi	r3,r3,65533
 100950c:	d881078d 	sth	r2,1054(sp)
 1009510:	b009883a 	mov	r4,r22
 1009514:	d8800404 	addi	r2,sp,16
 1009518:	d9410404 	addi	r5,sp,1040
 100951c:	d8c1070d 	sth	r3,1052(sp)
 1009520:	dac11d15 	stw	r11,1140(sp)
 1009524:	da810b15 	stw	r10,1068(sp)
 1009528:	da410d15 	stw	r9,1076(sp)
 100952c:	d8810415 	stw	r2,1040(sp)
 1009530:	d8810815 	stw	r2,1056(sp)
 1009534:	da010615 	stw	r8,1048(sp)
 1009538:	da010915 	stw	r8,1060(sp)
 100953c:	d8010a15 	stw	zero,1064(sp)
 1009540:	10091880 	call	1009188 <___vfprintf_internal_r>
 1009544:	1021883a 	mov	r16,r2
 1009548:	10000416 	blt	r2,zero,100955c <___vfprintf_internal_r+0x3d4>
 100954c:	b009883a 	mov	r4,r22
 1009550:	d9410404 	addi	r5,sp,1040
 1009554:	100cc000 	call	100cc00 <_fflush_r>
 1009558:	1006ee1e 	bne	r2,zero,100b114 <___vfprintf_internal_r+0x1f8c>
 100955c:	d881070b 	ldhu	r2,1052(sp)
 1009560:	1080100c 	andi	r2,r2,64
 1009564:	10000326 	beq	r2,zero,1009574 <___vfprintf_internal_r+0x3ec>
 1009568:	b880030b 	ldhu	r2,12(r23)
 100956c:	10801014 	ori	r2,r2,64
 1009570:	b880030d 	sth	r2,12(r23)
 1009574:	8005883a 	mov	r2,r16
 1009578:	00000106 	br	1009580 <___vfprintf_internal_r+0x3f8>
 100957c:	00bfffc4 	movi	r2,-1
 1009580:	dfc14917 	ldw	ra,1316(sp)
 1009584:	df014817 	ldw	fp,1312(sp)
 1009588:	ddc14717 	ldw	r23,1308(sp)
 100958c:	dd814617 	ldw	r22,1304(sp)
 1009590:	dd414517 	ldw	r21,1300(sp)
 1009594:	dd014417 	ldw	r20,1296(sp)
 1009598:	dcc14317 	ldw	r19,1292(sp)
 100959c:	dc814217 	ldw	r18,1288(sp)
 10095a0:	dc414117 	ldw	r17,1284(sp)
 10095a4:	dc014017 	ldw	r16,1280(sp)
 10095a8:	dec14a04 	addi	sp,sp,1320
 10095ac:	f800283a 	ret
 10095b0:	b009883a 	mov	r4,r22
 10095b4:	b80b883a 	mov	r5,r23
 10095b8:	d9811e04 	addi	r6,sp,1144
 10095bc:	10122fc0 	call	10122fc <__sprint_r>
 10095c0:	1000081e 	bne	r2,zero,10095e4 <___vfprintf_internal_r+0x45c>
 10095c4:	da000404 	addi	r8,sp,16
 10095c8:	003f4606 	br	10092e4 <__alt_data_end+0xff8092e4>
 10095cc:	d8812017 	ldw	r2,1152(sp)
 10095d0:	10000426 	beq	r2,zero,10095e4 <___vfprintf_internal_r+0x45c>
 10095d4:	b009883a 	mov	r4,r22
 10095d8:	b80b883a 	mov	r5,r23
 10095dc:	d9811e04 	addi	r6,sp,1144
 10095e0:	10122fc0 	call	10122fc <__sprint_r>
 10095e4:	b880030b 	ldhu	r2,12(r23)
 10095e8:	1080100c 	andi	r2,r2,64
 10095ec:	103fe31e 	bne	r2,zero,100957c <__alt_data_end+0xff80957c>
 10095f0:	d8812f17 	ldw	r2,1212(sp)
 10095f4:	003fe206 	br	1009580 <__alt_data_end+0xff809580>
 10095f8:	b009883a 	mov	r4,r22
 10095fc:	100d1a80 	call	100d1a8 <__sinit>
 1009600:	003ef906 	br	10091e8 <__alt_data_end+0xff8091e8>
 1009604:	dc012a17 	ldw	r16,1192(sp)
 1009608:	003f3906 	br	10092f0 <__alt_data_end+0xff8092f0>
 100960c:	1805883a 	mov	r2,r3
 1009610:	8c400114 	ori	r17,r17,4
 1009614:	1c000007 	ldb	r16,0(r3)
 1009618:	003f4206 	br	1009324 <__alt_data_end+0xff809324>
 100961c:	1c000007 	ldb	r16,0(r3)
 1009620:	18800044 	addi	r2,r3,1
 1009624:	8286b326 	beq	r16,r10,100b0f4 <___vfprintf_internal_r+0x1f6c>
 1009628:	82fff404 	addi	r11,r16,-48
 100962c:	1007883a 	mov	r3,r2
 1009630:	0013883a 	mov	r9,zero
 1009634:	2aff3c36 	bltu	r5,r11,1009328 <__alt_data_end+0xff809328>
 1009638:	1c000007 	ldb	r16,0(r3)
 100963c:	4a4002a4 	muli	r9,r9,10
 1009640:	18c00044 	addi	r3,r3,1
 1009644:	5a53883a 	add	r9,r11,r9
 1009648:	82fff404 	addi	r11,r16,-48
 100964c:	2afffa2e 	bgeu	r5,r11,1009638 <__alt_data_end+0xff809638>
 1009650:	483f350e 	bge	r9,zero,1009328 <__alt_data_end+0xff809328>
 1009654:	027fffc4 	movi	r9,-1
 1009658:	003f3306 	br	1009328 <__alt_data_end+0xff809328>
 100965c:	8c402014 	ori	r17,r17,128
 1009660:	1805883a 	mov	r2,r3
 1009664:	1c000007 	ldb	r16,0(r3)
 1009668:	003f2e06 	br	1009324 <__alt_data_end+0xff809324>
 100966c:	db012d17 	ldw	r12,1204(sp)
 1009670:	dac12d17 	ldw	r11,1204(sp)
 1009674:	d8c12a15 	stw	r3,1192(sp)
 1009678:	63000017 	ldw	r12,0(r12)
 100967c:	5ac00117 	ldw	r11,4(r11)
 1009680:	d9812785 	stb	r6,1182(sp)
 1009684:	6009883a 	mov	r4,r12
 1009688:	580b883a 	mov	r5,r11
 100968c:	db013715 	stw	r12,1244(sp)
 1009690:	da013f15 	stw	r8,1276(sp)
 1009694:	da413e15 	stw	r9,1272(sp)
 1009698:	dac13915 	stw	r11,1252(sp)
 100969c:	10022580 	call	1002258 <__fpclassifyd>
 10096a0:	db012d17 	ldw	r12,1204(sp)
 10096a4:	04800044 	movi	r18,1
 10096a8:	da013f17 	ldw	r8,1276(sp)
 10096ac:	64c00204 	addi	r19,r12,8
 10096b0:	da413e17 	ldw	r9,1272(sp)
 10096b4:	d9013717 	ldw	r4,1244(sp)
 10096b8:	d9413917 	ldw	r5,1252(sp)
 10096bc:	1484581e 	bne	r2,r18,100a820 <___vfprintf_internal_r+0x1698>
 10096c0:	000d883a 	mov	r6,zero
 10096c4:	000f883a 	mov	r7,zero
 10096c8:	10156f00 	call	10156f0 <__ledf2>
 10096cc:	da013f17 	ldw	r8,1276(sp)
 10096d0:	1005ef16 	blt	r2,zero,100ae90 <___vfprintf_internal_r+0x1d08>
 10096d4:	dd412783 	ldbu	r21,1182(sp)
 10096d8:	008011c4 	movi	r2,71
 10096dc:	14053b0e 	bge	r2,r16,100abcc <___vfprintf_internal_r+0x1a44>
 10096e0:	00c040b4 	movhi	r3,258
 10096e4:	18e5cc04 	addi	r3,r3,-26832
 10096e8:	d8c13115 	stw	r3,1220(sp)
 10096ec:	02c000c4 	movi	r11,3
 10096f0:	00bfdfc4 	movi	r2,-129
 10096f4:	dac12b15 	stw	r11,1196(sp)
 10096f8:	88a2703a 	and	r17,r17,r2
 10096fc:	dcc12d15 	stw	r19,1204(sp)
 1009700:	5825883a 	mov	r18,r11
 1009704:	d8013215 	stw	zero,1224(sp)
 1009708:	d8013415 	stw	zero,1232(sp)
 100970c:	00003206 	br	10097d8 <___vfprintf_internal_r+0x650>
 1009710:	8c400214 	ori	r17,r17,8
 1009714:	1805883a 	mov	r2,r3
 1009718:	1c000007 	ldb	r16,0(r3)
 100971c:	003f0106 	br	1009324 <__alt_data_end+0xff809324>
 1009720:	8c400414 	ori	r17,r17,16
 1009724:	d8c12a15 	stw	r3,1192(sp)
 1009728:	88c0080c 	andi	r3,r17,32
 100972c:	d8812d17 	ldw	r2,1204(sp)
 1009730:	18017726 	beq	r3,zero,1009d10 <___vfprintf_internal_r+0xb88>
 1009734:	db012d17 	ldw	r12,1204(sp)
 1009738:	14c00017 	ldw	r19,0(r2)
 100973c:	17000117 	ldw	fp,4(r2)
 1009740:	63000204 	addi	r12,r12,8
 1009744:	db012d15 	stw	r12,1204(sp)
 1009748:	0005883a 	mov	r2,zero
 100974c:	9f06b03a 	or	r3,r19,fp
 1009750:	d8012785 	stb	zero,1182(sp)
 1009754:	da413215 	stw	r9,1224(sp)
 1009758:	002b883a 	mov	r21,zero
 100975c:	48000216 	blt	r9,zero,1009768 <___vfprintf_internal_r+0x5e0>
 1009760:	013fdfc4 	movi	r4,-129
 1009764:	8922703a 	and	r17,r17,r4
 1009768:	1801ed1e 	bne	r3,zero,1009f20 <___vfprintf_internal_r+0xd98>
 100976c:	4802e026 	beq	r9,zero,100a2f0 <___vfprintf_internal_r+0x1168>
 1009770:	10803fcc 	andi	r2,r2,255
 1009774:	00c00044 	movi	r3,1
 1009778:	10c20f26 	beq	r2,r3,1009fb8 <___vfprintf_internal_r+0xe30>
 100977c:	00c00084 	movi	r3,2
 1009780:	10c2fd26 	beq	r2,r3,100a378 <___vfprintf_internal_r+0x11f0>
 1009784:	d8c10e04 	addi	r3,sp,1080
 1009788:	9808d0fa 	srli	r4,r19,3
 100978c:	e00a977a 	slli	r5,fp,29
 1009790:	e038d0fa 	srli	fp,fp,3
 1009794:	9cc001cc 	andi	r19,r19,7
 1009798:	98800c04 	addi	r2,r19,48
 100979c:	18ffffc4 	addi	r3,r3,-1
 10097a0:	2926b03a 	or	r19,r5,r4
 10097a4:	18800005 	stb	r2,0(r3)
 10097a8:	9f08b03a 	or	r4,r19,fp
 10097ac:	203ff61e 	bne	r4,zero,1009788 <__alt_data_end+0xff809788>
 10097b0:	8900004c 	andi	r4,r17,1
 10097b4:	d8c13115 	stw	r3,1220(sp)
 10097b8:	2003791e 	bne	r4,zero,100a5a0 <___vfprintf_internal_r+0x1418>
 10097bc:	dac12817 	ldw	r11,1184(sp)
 10097c0:	58e5c83a 	sub	r18,r11,r3
 10097c4:	9005883a 	mov	r2,r18
 10097c8:	9240010e 	bge	r18,r9,10097d0 <___vfprintf_internal_r+0x648>
 10097cc:	4805883a 	mov	r2,r9
 10097d0:	d8812b15 	stw	r2,1196(sp)
 10097d4:	d8013415 	stw	zero,1232(sp)
 10097d8:	a8803fcc 	andi	r2,r21,255
 10097dc:	1080201c 	xori	r2,r2,128
 10097e0:	10bfe004 	addi	r2,r2,-128
 10097e4:	10000326 	beq	r2,zero,10097f4 <___vfprintf_internal_r+0x66c>
 10097e8:	db012b17 	ldw	r12,1196(sp)
 10097ec:	63000044 	addi	r12,r12,1
 10097f0:	db012b15 	stw	r12,1196(sp)
 10097f4:	88c0008c 	andi	r3,r17,2
 10097f8:	d8c12c15 	stw	r3,1200(sp)
 10097fc:	18000326 	beq	r3,zero,100980c <___vfprintf_internal_r+0x684>
 1009800:	dac12b17 	ldw	r11,1196(sp)
 1009804:	5ac00084 	addi	r11,r11,2
 1009808:	dac12b15 	stw	r11,1196(sp)
 100980c:	8b00210c 	andi	r12,r17,132
 1009810:	db013015 	stw	r12,1216(sp)
 1009814:	6001c01e 	bne	r12,zero,1009f18 <___vfprintf_internal_r+0xd90>
 1009818:	dac12e17 	ldw	r11,1208(sp)
 100981c:	db012b17 	ldw	r12,1196(sp)
 1009820:	5b39c83a 	sub	fp,r11,r12
 1009824:	0701bc0e 	bge	zero,fp,1009f18 <___vfprintf_internal_r+0xd90>
 1009828:	02400404 	movi	r9,16
 100982c:	d8c12017 	ldw	r3,1152(sp)
 1009830:	d8811f17 	ldw	r2,1148(sp)
 1009834:	4f05220e 	bge	r9,fp,100acc0 <___vfprintf_internal_r+0x1b38>
 1009838:	014040b4 	movhi	r5,258
 100983c:	2965e784 	addi	r5,r5,-26722
 1009840:	d9413615 	stw	r5,1240(sp)
 1009844:	482b883a 	mov	r21,r9
 1009848:	04c001c4 	movi	r19,7
 100984c:	00000306 	br	100985c <___vfprintf_internal_r+0x6d4>
 1009850:	e73ffc04 	addi	fp,fp,-16
 1009854:	42000204 	addi	r8,r8,8
 1009858:	af00130e 	bge	r21,fp,10098a8 <___vfprintf_internal_r+0x720>
 100985c:	02c040b4 	movhi	r11,258
 1009860:	18c00404 	addi	r3,r3,16
 1009864:	10800044 	addi	r2,r2,1
 1009868:	5ae5e784 	addi	r11,r11,-26722
 100986c:	42c00015 	stw	r11,0(r8)
 1009870:	45400115 	stw	r21,4(r8)
 1009874:	d8c12015 	stw	r3,1152(sp)
 1009878:	d8811f15 	stw	r2,1148(sp)
 100987c:	98bff40e 	bge	r19,r2,1009850 <__alt_data_end+0xff809850>
 1009880:	b009883a 	mov	r4,r22
 1009884:	b80b883a 	mov	r5,r23
 1009888:	d9811e04 	addi	r6,sp,1144
 100988c:	10122fc0 	call	10122fc <__sprint_r>
 1009890:	103f541e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 1009894:	e73ffc04 	addi	fp,fp,-16
 1009898:	d8c12017 	ldw	r3,1152(sp)
 100989c:	d8811f17 	ldw	r2,1148(sp)
 10098a0:	da000404 	addi	r8,sp,16
 10098a4:	af3fed16 	blt	r21,fp,100985c <__alt_data_end+0xff80985c>
 10098a8:	db013617 	ldw	r12,1240(sp)
 10098ac:	e0c7883a 	add	r3,fp,r3
 10098b0:	10800044 	addi	r2,r2,1
 10098b4:	43000015 	stw	r12,0(r8)
 10098b8:	47000115 	stw	fp,4(r8)
 10098bc:	d8c12015 	stw	r3,1152(sp)
 10098c0:	d8811f15 	stw	r2,1148(sp)
 10098c4:	010001c4 	movi	r4,7
 10098c8:	2082f416 	blt	r4,r2,100a49c <___vfprintf_internal_r+0x1314>
 10098cc:	d8812787 	ldb	r2,1182(sp)
 10098d0:	42000204 	addi	r8,r8,8
 10098d4:	10000c26 	beq	r2,zero,1009908 <___vfprintf_internal_r+0x780>
 10098d8:	d8811f17 	ldw	r2,1148(sp)
 10098dc:	d9012784 	addi	r4,sp,1182
 10098e0:	18c00044 	addi	r3,r3,1
 10098e4:	10800044 	addi	r2,r2,1
 10098e8:	41000015 	stw	r4,0(r8)
 10098ec:	01000044 	movi	r4,1
 10098f0:	41000115 	stw	r4,4(r8)
 10098f4:	d8c12015 	stw	r3,1152(sp)
 10098f8:	d8811f15 	stw	r2,1148(sp)
 10098fc:	010001c4 	movi	r4,7
 1009900:	20828d16 	blt	r4,r2,100a338 <___vfprintf_internal_r+0x11b0>
 1009904:	42000204 	addi	r8,r8,8
 1009908:	dac12c17 	ldw	r11,1200(sp)
 100990c:	58000c26 	beq	r11,zero,1009940 <___vfprintf_internal_r+0x7b8>
 1009910:	d8811f17 	ldw	r2,1148(sp)
 1009914:	d9012704 	addi	r4,sp,1180
 1009918:	18c00084 	addi	r3,r3,2
 100991c:	10800044 	addi	r2,r2,1
 1009920:	41000015 	stw	r4,0(r8)
 1009924:	01000084 	movi	r4,2
 1009928:	41000115 	stw	r4,4(r8)
 100992c:	d8c12015 	stw	r3,1152(sp)
 1009930:	d8811f15 	stw	r2,1148(sp)
 1009934:	010001c4 	movi	r4,7
 1009938:	20828716 	blt	r4,r2,100a358 <___vfprintf_internal_r+0x11d0>
 100993c:	42000204 	addi	r8,r8,8
 1009940:	db013017 	ldw	r12,1216(sp)
 1009944:	00802004 	movi	r2,128
 1009948:	6081e926 	beq	r12,r2,100a0f0 <___vfprintf_internal_r+0xf68>
 100994c:	db013217 	ldw	r12,1224(sp)
 1009950:	64abc83a 	sub	r21,r12,r18
 1009954:	0540260e 	bge	zero,r21,10099f0 <___vfprintf_internal_r+0x868>
 1009958:	07000404 	movi	fp,16
 100995c:	d8811f17 	ldw	r2,1148(sp)
 1009960:	e5443d0e 	bge	fp,r21,100aa58 <___vfprintf_internal_r+0x18d0>
 1009964:	014040b4 	movhi	r5,258
 1009968:	2965e384 	addi	r5,r5,-26738
 100996c:	d9412c15 	stw	r5,1200(sp)
 1009970:	04c001c4 	movi	r19,7
 1009974:	00000306 	br	1009984 <___vfprintf_internal_r+0x7fc>
 1009978:	ad7ffc04 	addi	r21,r21,-16
 100997c:	42000204 	addi	r8,r8,8
 1009980:	e540110e 	bge	fp,r21,10099c8 <___vfprintf_internal_r+0x840>
 1009984:	18c00404 	addi	r3,r3,16
 1009988:	10800044 	addi	r2,r2,1
 100998c:	45000015 	stw	r20,0(r8)
 1009990:	47000115 	stw	fp,4(r8)
 1009994:	d8c12015 	stw	r3,1152(sp)
 1009998:	d8811f15 	stw	r2,1148(sp)
 100999c:	98bff60e 	bge	r19,r2,1009978 <__alt_data_end+0xff809978>
 10099a0:	b009883a 	mov	r4,r22
 10099a4:	b80b883a 	mov	r5,r23
 10099a8:	d9811e04 	addi	r6,sp,1144
 10099ac:	10122fc0 	call	10122fc <__sprint_r>
 10099b0:	103f0c1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 10099b4:	ad7ffc04 	addi	r21,r21,-16
 10099b8:	d8c12017 	ldw	r3,1152(sp)
 10099bc:	d8811f17 	ldw	r2,1148(sp)
 10099c0:	da000404 	addi	r8,sp,16
 10099c4:	e57fef16 	blt	fp,r21,1009984 <__alt_data_end+0xff809984>
 10099c8:	dac12c17 	ldw	r11,1200(sp)
 10099cc:	1d47883a 	add	r3,r3,r21
 10099d0:	10800044 	addi	r2,r2,1
 10099d4:	42c00015 	stw	r11,0(r8)
 10099d8:	45400115 	stw	r21,4(r8)
 10099dc:	d8c12015 	stw	r3,1152(sp)
 10099e0:	d8811f15 	stw	r2,1148(sp)
 10099e4:	010001c4 	movi	r4,7
 10099e8:	20824b16 	blt	r4,r2,100a318 <___vfprintf_internal_r+0x1190>
 10099ec:	42000204 	addi	r8,r8,8
 10099f0:	8880400c 	andi	r2,r17,256
 10099f4:	1001761e 	bne	r2,zero,1009fd0 <___vfprintf_internal_r+0xe48>
 10099f8:	d8811f17 	ldw	r2,1148(sp)
 10099fc:	db013117 	ldw	r12,1220(sp)
 1009a00:	1c87883a 	add	r3,r3,r18
 1009a04:	10800044 	addi	r2,r2,1
 1009a08:	43000015 	stw	r12,0(r8)
 1009a0c:	44800115 	stw	r18,4(r8)
 1009a10:	d8c12015 	stw	r3,1152(sp)
 1009a14:	d8811f15 	stw	r2,1148(sp)
 1009a18:	010001c4 	movi	r4,7
 1009a1c:	20822616 	blt	r4,r2,100a2b8 <___vfprintf_internal_r+0x1130>
 1009a20:	42000204 	addi	r8,r8,8
 1009a24:	8c40010c 	andi	r17,r17,4
 1009a28:	88003126 	beq	r17,zero,1009af0 <___vfprintf_internal_r+0x968>
 1009a2c:	db012e17 	ldw	r12,1208(sp)
 1009a30:	dac12b17 	ldw	r11,1196(sp)
 1009a34:	62e1c83a 	sub	r16,r12,r11
 1009a38:	04002d0e 	bge	zero,r16,1009af0 <___vfprintf_internal_r+0x968>
 1009a3c:	04400404 	movi	r17,16
 1009a40:	d8811f17 	ldw	r2,1148(sp)
 1009a44:	8c04df0e 	bge	r17,r16,100adc4 <___vfprintf_internal_r+0x1c3c>
 1009a48:	010040b4 	movhi	r4,258
 1009a4c:	2125e784 	addi	r4,r4,-26722
 1009a50:	d9013615 	stw	r4,1240(sp)
 1009a54:	048001c4 	movi	r18,7
 1009a58:	00000306 	br	1009a68 <___vfprintf_internal_r+0x8e0>
 1009a5c:	843ffc04 	addi	r16,r16,-16
 1009a60:	42000204 	addi	r8,r8,8
 1009a64:	8c00130e 	bge	r17,r16,1009ab4 <___vfprintf_internal_r+0x92c>
 1009a68:	014040b4 	movhi	r5,258
 1009a6c:	18c00404 	addi	r3,r3,16
 1009a70:	10800044 	addi	r2,r2,1
 1009a74:	2965e784 	addi	r5,r5,-26722
 1009a78:	41400015 	stw	r5,0(r8)
 1009a7c:	44400115 	stw	r17,4(r8)
 1009a80:	d8c12015 	stw	r3,1152(sp)
 1009a84:	d8811f15 	stw	r2,1148(sp)
 1009a88:	90bff40e 	bge	r18,r2,1009a5c <__alt_data_end+0xff809a5c>
 1009a8c:	b009883a 	mov	r4,r22
 1009a90:	b80b883a 	mov	r5,r23
 1009a94:	d9811e04 	addi	r6,sp,1144
 1009a98:	10122fc0 	call	10122fc <__sprint_r>
 1009a9c:	103ed11e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 1009aa0:	843ffc04 	addi	r16,r16,-16
 1009aa4:	d8c12017 	ldw	r3,1152(sp)
 1009aa8:	d8811f17 	ldw	r2,1148(sp)
 1009aac:	da000404 	addi	r8,sp,16
 1009ab0:	8c3fed16 	blt	r17,r16,1009a68 <__alt_data_end+0xff809a68>
 1009ab4:	dac13617 	ldw	r11,1240(sp)
 1009ab8:	1c07883a 	add	r3,r3,r16
 1009abc:	10800044 	addi	r2,r2,1
 1009ac0:	42c00015 	stw	r11,0(r8)
 1009ac4:	44000115 	stw	r16,4(r8)
 1009ac8:	d8c12015 	stw	r3,1152(sp)
 1009acc:	d8811f15 	stw	r2,1148(sp)
 1009ad0:	010001c4 	movi	r4,7
 1009ad4:	2080060e 	bge	r4,r2,1009af0 <___vfprintf_internal_r+0x968>
 1009ad8:	b009883a 	mov	r4,r22
 1009adc:	b80b883a 	mov	r5,r23
 1009ae0:	d9811e04 	addi	r6,sp,1144
 1009ae4:	10122fc0 	call	10122fc <__sprint_r>
 1009ae8:	103ebe1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 1009aec:	d8c12017 	ldw	r3,1152(sp)
 1009af0:	d8812b17 	ldw	r2,1196(sp)
 1009af4:	db012e17 	ldw	r12,1208(sp)
 1009af8:	1300010e 	bge	r2,r12,1009b00 <___vfprintf_internal_r+0x978>
 1009afc:	6005883a 	mov	r2,r12
 1009b00:	dac12f17 	ldw	r11,1212(sp)
 1009b04:	5897883a 	add	r11,r11,r2
 1009b08:	dac12f15 	stw	r11,1212(sp)
 1009b0c:	1801f21e 	bne	r3,zero,100a2d8 <___vfprintf_internal_r+0x1150>
 1009b10:	d8011f15 	stw	zero,1148(sp)
 1009b14:	da000404 	addi	r8,sp,16
 1009b18:	003dd806 	br	100927c <__alt_data_end+0xff80927c>
 1009b1c:	8c400414 	ori	r17,r17,16
 1009b20:	d8c12a15 	stw	r3,1192(sp)
 1009b24:	88c0080c 	andi	r3,r17,32
 1009b28:	d8812d17 	ldw	r2,1204(sp)
 1009b2c:	18004626 	beq	r3,zero,1009c48 <___vfprintf_internal_r+0xac0>
 1009b30:	dac12d17 	ldw	r11,1204(sp)
 1009b34:	14c00017 	ldw	r19,0(r2)
 1009b38:	17000117 	ldw	fp,4(r2)
 1009b3c:	5ac00204 	addi	r11,r11,8
 1009b40:	dac12d15 	stw	r11,1204(sp)
 1009b44:	00800044 	movi	r2,1
 1009b48:	9f06b03a 	or	r3,r19,fp
 1009b4c:	003f0006 	br	1009750 <__alt_data_end+0xff809750>
 1009b50:	1805883a 	mov	r2,r3
 1009b54:	d8012e15 	stw	zero,1208(sp)
 1009b58:	82fff404 	addi	r11,r16,-48
 1009b5c:	0019883a 	mov	r12,zero
 1009b60:	14000007 	ldb	r16,0(r2)
 1009b64:	630002a4 	muli	r12,r12,10
 1009b68:	18c00044 	addi	r3,r3,1
 1009b6c:	1805883a 	mov	r2,r3
 1009b70:	62d9883a 	add	r12,r12,r11
 1009b74:	82fff404 	addi	r11,r16,-48
 1009b78:	2afff92e 	bgeu	r5,r11,1009b60 <__alt_data_end+0xff809b60>
 1009b7c:	db012e15 	stw	r12,1208(sp)
 1009b80:	003de906 	br	1009328 <__alt_data_end+0xff809328>
 1009b84:	8c400414 	ori	r17,r17,16
 1009b88:	d8c12a15 	stw	r3,1192(sp)
 1009b8c:	d9812785 	stb	r6,1182(sp)
 1009b90:	8880080c 	andi	r2,r17,32
 1009b94:	d8c12d17 	ldw	r3,1204(sp)
 1009b98:	10007a26 	beq	r2,zero,1009d84 <___vfprintf_internal_r+0xbfc>
 1009b9c:	db012d17 	ldw	r12,1204(sp)
 1009ba0:	18800117 	ldw	r2,4(r3)
 1009ba4:	1cc00017 	ldw	r19,0(r3)
 1009ba8:	63000204 	addi	r12,r12,8
 1009bac:	db012d15 	stw	r12,1204(sp)
 1009bb0:	1039883a 	mov	fp,r2
 1009bb4:	10031016 	blt	r2,zero,100a7f8 <___vfprintf_internal_r+0x1670>
 1009bb8:	dd412783 	ldbu	r21,1182(sp)
 1009bbc:	da413215 	stw	r9,1224(sp)
 1009bc0:	00800044 	movi	r2,1
 1009bc4:	9f06b03a 	or	r3,r19,fp
 1009bc8:	003ee406 	br	100975c <__alt_data_end+0xff80975c>
 1009bcc:	030040b4 	movhi	r12,258
 1009bd0:	6325cf04 	addi	r12,r12,-26820
 1009bd4:	d8c12a15 	stw	r3,1192(sp)
 1009bd8:	d9812785 	stb	r6,1182(sp)
 1009bdc:	db013b15 	stw	r12,1260(sp)
 1009be0:	88c0080c 	andi	r3,r17,32
 1009be4:	d8812d17 	ldw	r2,1204(sp)
 1009be8:	18002b26 	beq	r3,zero,1009c98 <___vfprintf_internal_r+0xb10>
 1009bec:	dac12d17 	ldw	r11,1204(sp)
 1009bf0:	14c00017 	ldw	r19,0(r2)
 1009bf4:	17000117 	ldw	fp,4(r2)
 1009bf8:	5ac00204 	addi	r11,r11,8
 1009bfc:	dac12d15 	stw	r11,1204(sp)
 1009c00:	8880004c 	andi	r2,r17,1
 1009c04:	10025b26 	beq	r2,zero,100a574 <___vfprintf_internal_r+0x13ec>
 1009c08:	9f06b03a 	or	r3,r19,fp
 1009c0c:	18037026 	beq	r3,zero,100a9d0 <___vfprintf_internal_r+0x1848>
 1009c10:	00800c04 	movi	r2,48
 1009c14:	d8812705 	stb	r2,1180(sp)
 1009c18:	dc012745 	stb	r16,1181(sp)
 1009c1c:	8c400094 	ori	r17,r17,2
 1009c20:	00800084 	movi	r2,2
 1009c24:	003eca06 	br	1009750 <__alt_data_end+0xff809750>
 1009c28:	8c400814 	ori	r17,r17,32
 1009c2c:	1805883a 	mov	r2,r3
 1009c30:	1c000007 	ldb	r16,0(r3)
 1009c34:	003dbb06 	br	1009324 <__alt_data_end+0xff809324>
 1009c38:	d8c12a15 	stw	r3,1192(sp)
 1009c3c:	88c0080c 	andi	r3,r17,32
 1009c40:	d8812d17 	ldw	r2,1204(sp)
 1009c44:	183fba1e 	bne	r3,zero,1009b30 <__alt_data_end+0xff809b30>
 1009c48:	88c0040c 	andi	r3,r17,16
 1009c4c:	18024c1e 	bne	r3,zero,100a580 <___vfprintf_internal_r+0x13f8>
 1009c50:	88c0100c 	andi	r3,r17,64
 1009c54:	18024a26 	beq	r3,zero,100a580 <___vfprintf_internal_r+0x13f8>
 1009c58:	dac12d17 	ldw	r11,1204(sp)
 1009c5c:	14c0000b 	ldhu	r19,0(r2)
 1009c60:	0039883a 	mov	fp,zero
 1009c64:	5ac00104 	addi	r11,r11,4
 1009c68:	dac12d15 	stw	r11,1204(sp)
 1009c6c:	00800044 	movi	r2,1
 1009c70:	9807883a 	mov	r3,r19
 1009c74:	003eb606 	br	1009750 <__alt_data_end+0xff809750>
 1009c78:	008040b4 	movhi	r2,258
 1009c7c:	10a5d404 	addi	r2,r2,-26800
 1009c80:	d8c12a15 	stw	r3,1192(sp)
 1009c84:	d8813b15 	stw	r2,1260(sp)
 1009c88:	d9812785 	stb	r6,1182(sp)
 1009c8c:	88c0080c 	andi	r3,r17,32
 1009c90:	d8812d17 	ldw	r2,1204(sp)
 1009c94:	183fd51e 	bne	r3,zero,1009bec <__alt_data_end+0xff809bec>
 1009c98:	88c0040c 	andi	r3,r17,16
 1009c9c:	18034126 	beq	r3,zero,100a9a4 <___vfprintf_internal_r+0x181c>
 1009ca0:	db012d17 	ldw	r12,1204(sp)
 1009ca4:	14c00017 	ldw	r19,0(r2)
 1009ca8:	0039883a 	mov	fp,zero
 1009cac:	63000104 	addi	r12,r12,4
 1009cb0:	db012d15 	stw	r12,1204(sp)
 1009cb4:	003fd206 	br	1009c00 <__alt_data_end+0xff809c00>
 1009cb8:	1c000007 	ldb	r16,0(r3)
 1009cbc:	81c3d626 	beq	r16,r7,100ac18 <___vfprintf_internal_r+0x1a90>
 1009cc0:	8c400414 	ori	r17,r17,16
 1009cc4:	1805883a 	mov	r2,r3
 1009cc8:	003d9606 	br	1009324 <__alt_data_end+0xff809324>
 1009ccc:	d8c12a15 	stw	r3,1192(sp)
 1009cd0:	d9812785 	stb	r6,1182(sp)
 1009cd4:	8880080c 	andi	r2,r17,32
 1009cd8:	10033f26 	beq	r2,zero,100a9d8 <___vfprintf_internal_r+0x1850>
 1009cdc:	db012d17 	ldw	r12,1204(sp)
 1009ce0:	dac12f17 	ldw	r11,1212(sp)
 1009ce4:	60800017 	ldw	r2,0(r12)
 1009ce8:	5807d7fa 	srai	r3,r11,31
 1009cec:	63000104 	addi	r12,r12,4
 1009cf0:	db012d15 	stw	r12,1204(sp)
 1009cf4:	12c00015 	stw	r11,0(r2)
 1009cf8:	10c00115 	stw	r3,4(r2)
 1009cfc:	003d5f06 	br	100927c <__alt_data_end+0xff80927c>
 1009d00:	d8c12a15 	stw	r3,1192(sp)
 1009d04:	88c0080c 	andi	r3,r17,32
 1009d08:	d8812d17 	ldw	r2,1204(sp)
 1009d0c:	183e891e 	bne	r3,zero,1009734 <__alt_data_end+0xff809734>
 1009d10:	88c0040c 	andi	r3,r17,16
 1009d14:	1801ea1e 	bne	r3,zero,100a4c0 <___vfprintf_internal_r+0x1338>
 1009d18:	88c0100c 	andi	r3,r17,64
 1009d1c:	1801e826 	beq	r3,zero,100a4c0 <___vfprintf_internal_r+0x1338>
 1009d20:	db012d17 	ldw	r12,1204(sp)
 1009d24:	14c0000b 	ldhu	r19,0(r2)
 1009d28:	0039883a 	mov	fp,zero
 1009d2c:	63000104 	addi	r12,r12,4
 1009d30:	db012d15 	stw	r12,1204(sp)
 1009d34:	0005883a 	mov	r2,zero
 1009d38:	9807883a 	mov	r3,r19
 1009d3c:	003e8406 	br	1009750 <__alt_data_end+0xff809750>
 1009d40:	30803fcc 	andi	r2,r6,255
 1009d44:	1080201c 	xori	r2,r2,128
 1009d48:	10bfe004 	addi	r2,r2,-128
 1009d4c:	10031d1e 	bne	r2,zero,100a9c4 <___vfprintf_internal_r+0x183c>
 1009d50:	1805883a 	mov	r2,r3
 1009d54:	01800804 	movi	r6,32
 1009d58:	1c000007 	ldb	r16,0(r3)
 1009d5c:	003d7106 	br	1009324 <__alt_data_end+0xff809324>
 1009d60:	8c400054 	ori	r17,r17,1
 1009d64:	1805883a 	mov	r2,r3
 1009d68:	1c000007 	ldb	r16,0(r3)
 1009d6c:	003d6d06 	br	1009324 <__alt_data_end+0xff809324>
 1009d70:	d8c12a15 	stw	r3,1192(sp)
 1009d74:	d9812785 	stb	r6,1182(sp)
 1009d78:	8880080c 	andi	r2,r17,32
 1009d7c:	d8c12d17 	ldw	r3,1204(sp)
 1009d80:	103f861e 	bne	r2,zero,1009b9c <__alt_data_end+0xff809b9c>
 1009d84:	8880040c 	andi	r2,r17,16
 1009d88:	1001f31e 	bne	r2,zero,100a558 <___vfprintf_internal_r+0x13d0>
 1009d8c:	8880100c 	andi	r2,r17,64
 1009d90:	1001f126 	beq	r2,zero,100a558 <___vfprintf_internal_r+0x13d0>
 1009d94:	1cc0000f 	ldh	r19,0(r3)
 1009d98:	db012d17 	ldw	r12,1204(sp)
 1009d9c:	9839d7fa 	srai	fp,r19,31
 1009da0:	63000104 	addi	r12,r12,4
 1009da4:	db012d15 	stw	r12,1204(sp)
 1009da8:	e005883a 	mov	r2,fp
 1009dac:	003f8106 	br	1009bb4 <__alt_data_end+0xff809bb4>
 1009db0:	8c401014 	ori	r17,r17,64
 1009db4:	1805883a 	mov	r2,r3
 1009db8:	1c000007 	ldb	r16,0(r3)
 1009dbc:	003d5906 	br	1009324 <__alt_data_end+0xff809324>
 1009dc0:	db012d17 	ldw	r12,1204(sp)
 1009dc4:	d8c12a15 	stw	r3,1192(sp)
 1009dc8:	00c00044 	movi	r3,1
 1009dcc:	60800017 	ldw	r2,0(r12)
 1009dd0:	63000104 	addi	r12,r12,4
 1009dd4:	d8c12b15 	stw	r3,1196(sp)
 1009dd8:	d8012785 	stb	zero,1182(sp)
 1009ddc:	d8810405 	stb	r2,1040(sp)
 1009de0:	db012d15 	stw	r12,1204(sp)
 1009de4:	dac10404 	addi	r11,sp,1040
 1009de8:	1825883a 	mov	r18,r3
 1009dec:	d8013215 	stw	zero,1224(sp)
 1009df0:	d8013415 	stw	zero,1232(sp)
 1009df4:	dac13115 	stw	r11,1220(sp)
 1009df8:	0005883a 	mov	r2,zero
 1009dfc:	003e7d06 	br	10097f4 <__alt_data_end+0xff8097f4>
 1009e00:	db012d17 	ldw	r12,1204(sp)
 1009e04:	00800c04 	movi	r2,48
 1009e08:	d8812705 	stb	r2,1180(sp)
 1009e0c:	64c00017 	ldw	r19,0(r12)
 1009e10:	00801e04 	movi	r2,120
 1009e14:	d8812745 	stb	r2,1181(sp)
 1009e18:	008040b4 	movhi	r2,258
 1009e1c:	10a5d404 	addi	r2,r2,-26800
 1009e20:	63000104 	addi	r12,r12,4
 1009e24:	d8c12a15 	stw	r3,1192(sp)
 1009e28:	d8813b15 	stw	r2,1260(sp)
 1009e2c:	0039883a 	mov	fp,zero
 1009e30:	8c400094 	ori	r17,r17,2
 1009e34:	db012d15 	stw	r12,1204(sp)
 1009e38:	00800084 	movi	r2,2
 1009e3c:	04001e04 	movi	r16,120
 1009e40:	9807883a 	mov	r3,r19
 1009e44:	003e4206 	br	1009750 <__alt_data_end+0xff809750>
 1009e48:	dac12d17 	ldw	r11,1204(sp)
 1009e4c:	db012d17 	ldw	r12,1204(sp)
 1009e50:	d8c12a15 	stw	r3,1192(sp)
 1009e54:	5ac00017 	ldw	r11,0(r11)
 1009e58:	d8012785 	stb	zero,1182(sp)
 1009e5c:	64c00104 	addi	r19,r12,4
 1009e60:	dac13115 	stw	r11,1220(sp)
 1009e64:	5803e826 	beq	r11,zero,100ae08 <___vfprintf_internal_r+0x1c80>
 1009e68:	d9013117 	ldw	r4,1220(sp)
 1009e6c:	48037a16 	blt	r9,zero,100ac58 <___vfprintf_internal_r+0x1ad0>
 1009e70:	480d883a 	mov	r6,r9
 1009e74:	000b883a 	mov	r5,zero
 1009e78:	da013f15 	stw	r8,1276(sp)
 1009e7c:	da413e15 	stw	r9,1272(sp)
 1009e80:	100f2940 	call	100f294 <memchr>
 1009e84:	da013f17 	ldw	r8,1276(sp)
 1009e88:	da413e17 	ldw	r9,1272(sp)
 1009e8c:	10044426 	beq	r2,zero,100afa0 <___vfprintf_internal_r+0x1e18>
 1009e90:	d8c13117 	ldw	r3,1220(sp)
 1009e94:	10e5c83a 	sub	r18,r2,r3
 1009e98:	4c834416 	blt	r9,r18,100abac <___vfprintf_internal_r+0x1a24>
 1009e9c:	9005883a 	mov	r2,r18
 1009ea0:	90037216 	blt	r18,zero,100ac6c <___vfprintf_internal_r+0x1ae4>
 1009ea4:	dd412783 	ldbu	r21,1182(sp)
 1009ea8:	d8812b15 	stw	r2,1196(sp)
 1009eac:	dcc12d15 	stw	r19,1204(sp)
 1009eb0:	d8013215 	stw	zero,1224(sp)
 1009eb4:	d8013415 	stw	zero,1232(sp)
 1009eb8:	003e4706 	br	10097d8 <__alt_data_end+0xff8097d8>
 1009ebc:	dac12d17 	ldw	r11,1204(sp)
 1009ec0:	db012d17 	ldw	r12,1204(sp)
 1009ec4:	5ac00017 	ldw	r11,0(r11)
 1009ec8:	dac12e15 	stw	r11,1208(sp)
 1009ecc:	62c00104 	addi	r11,r12,4
 1009ed0:	db012e17 	ldw	r12,1208(sp)
 1009ed4:	60034a16 	blt	r12,zero,100ac00 <___vfprintf_internal_r+0x1a78>
 1009ed8:	dac12d15 	stw	r11,1204(sp)
 1009edc:	1805883a 	mov	r2,r3
 1009ee0:	1c000007 	ldb	r16,0(r3)
 1009ee4:	003d0f06 	br	1009324 <__alt_data_end+0xff809324>
 1009ee8:	1805883a 	mov	r2,r3
 1009eec:	01800ac4 	movi	r6,43
 1009ef0:	1c000007 	ldb	r16,0(r3)
 1009ef4:	003d0b06 	br	1009324 <__alt_data_end+0xff809324>
 1009ef8:	d8c12a15 	stw	r3,1192(sp)
 1009efc:	d9812785 	stb	r6,1182(sp)
 1009f00:	803db226 	beq	r16,zero,10095cc <__alt_data_end+0xff8095cc>
 1009f04:	00c00044 	movi	r3,1
 1009f08:	d8c12b15 	stw	r3,1196(sp)
 1009f0c:	dc010405 	stb	r16,1040(sp)
 1009f10:	d8012785 	stb	zero,1182(sp)
 1009f14:	003fb306 	br	1009de4 <__alt_data_end+0xff809de4>
 1009f18:	d8c12017 	ldw	r3,1152(sp)
 1009f1c:	003e6d06 	br	10098d4 <__alt_data_end+0xff8098d4>
 1009f20:	10803fcc 	andi	r2,r2,255
 1009f24:	00c00044 	movi	r3,1
 1009f28:	10fe141e 	bne	r2,r3,100977c <__alt_data_end+0xff80977c>
 1009f2c:	e000021e 	bne	fp,zero,1009f38 <___vfprintf_internal_r+0xdb0>
 1009f30:	00800244 	movi	r2,9
 1009f34:	14c0202e 	bgeu	r2,r19,1009fb8 <___vfprintf_internal_r+0xe30>
 1009f38:	dc012b15 	stw	r16,1196(sp)
 1009f3c:	dc412c15 	stw	r17,1200(sp)
 1009f40:	9821883a 	mov	r16,r19
 1009f44:	e023883a 	mov	r17,fp
 1009f48:	dc810e04 	addi	r18,sp,1080
 1009f4c:	4027883a 	mov	r19,r8
 1009f50:	4839883a 	mov	fp,r9
 1009f54:	8009883a 	mov	r4,r16
 1009f58:	880b883a 	mov	r5,r17
 1009f5c:	01800284 	movi	r6,10
 1009f60:	000f883a 	mov	r7,zero
 1009f64:	10146000 	call	1014600 <__umoddi3>
 1009f68:	10800c04 	addi	r2,r2,48
 1009f6c:	94bfffc4 	addi	r18,r18,-1
 1009f70:	8009883a 	mov	r4,r16
 1009f74:	880b883a 	mov	r5,r17
 1009f78:	01800284 	movi	r6,10
 1009f7c:	000f883a 	mov	r7,zero
 1009f80:	90800005 	stb	r2,0(r18)
 1009f84:	10140400 	call	1014040 <__udivdi3>
 1009f88:	1021883a 	mov	r16,r2
 1009f8c:	10c4b03a 	or	r2,r2,r3
 1009f90:	1823883a 	mov	r17,r3
 1009f94:	103fef1e 	bne	r2,zero,1009f54 <__alt_data_end+0xff809f54>
 1009f98:	dac12817 	ldw	r11,1184(sp)
 1009f9c:	dc813115 	stw	r18,1220(sp)
 1009fa0:	dc012b17 	ldw	r16,1196(sp)
 1009fa4:	9811883a 	mov	r8,r19
 1009fa8:	dc412c17 	ldw	r17,1200(sp)
 1009fac:	e013883a 	mov	r9,fp
 1009fb0:	5ca5c83a 	sub	r18,r11,r18
 1009fb4:	003e0306 	br	10097c4 <__alt_data_end+0xff8097c4>
 1009fb8:	9cc00c04 	addi	r19,r19,48
 1009fbc:	d8c10dc4 	addi	r3,sp,1079
 1009fc0:	dcc10dc5 	stb	r19,1079(sp)
 1009fc4:	dc813c17 	ldw	r18,1264(sp)
 1009fc8:	d8c13115 	stw	r3,1220(sp)
 1009fcc:	003dfd06 	br	10097c4 <__alt_data_end+0xff8097c4>
 1009fd0:	00801944 	movi	r2,101
 1009fd4:	1400710e 	bge	r2,r16,100a19c <___vfprintf_internal_r+0x1014>
 1009fd8:	d9013717 	ldw	r4,1244(sp)
 1009fdc:	d9413917 	ldw	r5,1252(sp)
 1009fe0:	000d883a 	mov	r6,zero
 1009fe4:	000f883a 	mov	r7,zero
 1009fe8:	d8c13d15 	stw	r3,1268(sp)
 1009fec:	da013f15 	stw	r8,1276(sp)
 1009ff0:	1003f9c0 	call	1003f9c <__eqdf2>
 1009ff4:	d8c13d17 	ldw	r3,1268(sp)
 1009ff8:	da013f17 	ldw	r8,1276(sp)
 1009ffc:	1000ef1e 	bne	r2,zero,100a3bc <___vfprintf_internal_r+0x1234>
 100a000:	d8811f17 	ldw	r2,1148(sp)
 100a004:	010040b4 	movhi	r4,258
 100a008:	2125db04 	addi	r4,r4,-26772
 100a00c:	18c00044 	addi	r3,r3,1
 100a010:	10800044 	addi	r2,r2,1
 100a014:	41000015 	stw	r4,0(r8)
 100a018:	01000044 	movi	r4,1
 100a01c:	41000115 	stw	r4,4(r8)
 100a020:	d8c12015 	stw	r3,1152(sp)
 100a024:	d8811f15 	stw	r2,1148(sp)
 100a028:	010001c4 	movi	r4,7
 100a02c:	20828e16 	blt	r4,r2,100aa68 <___vfprintf_internal_r+0x18e0>
 100a030:	42000204 	addi	r8,r8,8
 100a034:	d8812617 	ldw	r2,1176(sp)
 100a038:	dac13317 	ldw	r11,1228(sp)
 100a03c:	12c00216 	blt	r2,r11,100a048 <___vfprintf_internal_r+0xec0>
 100a040:	8880004c 	andi	r2,r17,1
 100a044:	103e7726 	beq	r2,zero,1009a24 <__alt_data_end+0xff809a24>
 100a048:	db013817 	ldw	r12,1248(sp)
 100a04c:	d8811f17 	ldw	r2,1148(sp)
 100a050:	dac13517 	ldw	r11,1236(sp)
 100a054:	1b07883a 	add	r3,r3,r12
 100a058:	10800044 	addi	r2,r2,1
 100a05c:	42c00015 	stw	r11,0(r8)
 100a060:	43000115 	stw	r12,4(r8)
 100a064:	d8c12015 	stw	r3,1152(sp)
 100a068:	d8811f15 	stw	r2,1148(sp)
 100a06c:	010001c4 	movi	r4,7
 100a070:	2082ed16 	blt	r4,r2,100ac28 <___vfprintf_internal_r+0x1aa0>
 100a074:	42000204 	addi	r8,r8,8
 100a078:	db013317 	ldw	r12,1228(sp)
 100a07c:	643fffc4 	addi	r16,r12,-1
 100a080:	043e680e 	bge	zero,r16,1009a24 <__alt_data_end+0xff809a24>
 100a084:	04800404 	movi	r18,16
 100a088:	d8811f17 	ldw	r2,1148(sp)
 100a08c:	94007e0e 	bge	r18,r16,100a288 <___vfprintf_internal_r+0x1100>
 100a090:	014040b4 	movhi	r5,258
 100a094:	2965e384 	addi	r5,r5,-26738
 100a098:	d9412c15 	stw	r5,1200(sp)
 100a09c:	054001c4 	movi	r21,7
 100a0a0:	00000306 	br	100a0b0 <___vfprintf_internal_r+0xf28>
 100a0a4:	42000204 	addi	r8,r8,8
 100a0a8:	843ffc04 	addi	r16,r16,-16
 100a0ac:	9400790e 	bge	r18,r16,100a294 <___vfprintf_internal_r+0x110c>
 100a0b0:	18c00404 	addi	r3,r3,16
 100a0b4:	10800044 	addi	r2,r2,1
 100a0b8:	45000015 	stw	r20,0(r8)
 100a0bc:	44800115 	stw	r18,4(r8)
 100a0c0:	d8c12015 	stw	r3,1152(sp)
 100a0c4:	d8811f15 	stw	r2,1148(sp)
 100a0c8:	a8bff60e 	bge	r21,r2,100a0a4 <__alt_data_end+0xff80a0a4>
 100a0cc:	b009883a 	mov	r4,r22
 100a0d0:	b80b883a 	mov	r5,r23
 100a0d4:	d9811e04 	addi	r6,sp,1144
 100a0d8:	10122fc0 	call	10122fc <__sprint_r>
 100a0dc:	103d411e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a0e0:	d8c12017 	ldw	r3,1152(sp)
 100a0e4:	d8811f17 	ldw	r2,1148(sp)
 100a0e8:	da000404 	addi	r8,sp,16
 100a0ec:	003fee06 	br	100a0a8 <__alt_data_end+0xff80a0a8>
 100a0f0:	dac12e17 	ldw	r11,1208(sp)
 100a0f4:	db012b17 	ldw	r12,1196(sp)
 100a0f8:	5b2bc83a 	sub	r21,r11,r12
 100a0fc:	057e130e 	bge	zero,r21,100994c <__alt_data_end+0xff80994c>
 100a100:	07000404 	movi	fp,16
 100a104:	d8811f17 	ldw	r2,1148(sp)
 100a108:	e543640e 	bge	fp,r21,100ae9c <___vfprintf_internal_r+0x1d14>
 100a10c:	014040b4 	movhi	r5,258
 100a110:	2965e384 	addi	r5,r5,-26738
 100a114:	d9412c15 	stw	r5,1200(sp)
 100a118:	04c001c4 	movi	r19,7
 100a11c:	00000306 	br	100a12c <___vfprintf_internal_r+0xfa4>
 100a120:	ad7ffc04 	addi	r21,r21,-16
 100a124:	42000204 	addi	r8,r8,8
 100a128:	e540110e 	bge	fp,r21,100a170 <___vfprintf_internal_r+0xfe8>
 100a12c:	18c00404 	addi	r3,r3,16
 100a130:	10800044 	addi	r2,r2,1
 100a134:	45000015 	stw	r20,0(r8)
 100a138:	47000115 	stw	fp,4(r8)
 100a13c:	d8c12015 	stw	r3,1152(sp)
 100a140:	d8811f15 	stw	r2,1148(sp)
 100a144:	98bff60e 	bge	r19,r2,100a120 <__alt_data_end+0xff80a120>
 100a148:	b009883a 	mov	r4,r22
 100a14c:	b80b883a 	mov	r5,r23
 100a150:	d9811e04 	addi	r6,sp,1144
 100a154:	10122fc0 	call	10122fc <__sprint_r>
 100a158:	103d221e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a15c:	ad7ffc04 	addi	r21,r21,-16
 100a160:	d8c12017 	ldw	r3,1152(sp)
 100a164:	d8811f17 	ldw	r2,1148(sp)
 100a168:	da000404 	addi	r8,sp,16
 100a16c:	e57fef16 	blt	fp,r21,100a12c <__alt_data_end+0xff80a12c>
 100a170:	dac12c17 	ldw	r11,1200(sp)
 100a174:	1d47883a 	add	r3,r3,r21
 100a178:	10800044 	addi	r2,r2,1
 100a17c:	42c00015 	stw	r11,0(r8)
 100a180:	45400115 	stw	r21,4(r8)
 100a184:	d8c12015 	stw	r3,1152(sp)
 100a188:	d8811f15 	stw	r2,1148(sp)
 100a18c:	010001c4 	movi	r4,7
 100a190:	20819116 	blt	r4,r2,100a7d8 <___vfprintf_internal_r+0x1650>
 100a194:	42000204 	addi	r8,r8,8
 100a198:	003dec06 	br	100994c <__alt_data_end+0xff80994c>
 100a19c:	db013317 	ldw	r12,1228(sp)
 100a1a0:	00800044 	movi	r2,1
 100a1a4:	18c00044 	addi	r3,r3,1
 100a1a8:	1301530e 	bge	r2,r12,100a6f8 <___vfprintf_internal_r+0x1570>
 100a1ac:	dc011f17 	ldw	r16,1148(sp)
 100a1b0:	dac13117 	ldw	r11,1220(sp)
 100a1b4:	00800044 	movi	r2,1
 100a1b8:	84000044 	addi	r16,r16,1
 100a1bc:	40800115 	stw	r2,4(r8)
 100a1c0:	42c00015 	stw	r11,0(r8)
 100a1c4:	d8c12015 	stw	r3,1152(sp)
 100a1c8:	dc011f15 	stw	r16,1148(sp)
 100a1cc:	008001c4 	movi	r2,7
 100a1d0:	14016b16 	blt	r2,r16,100a780 <___vfprintf_internal_r+0x15f8>
 100a1d4:	42000204 	addi	r8,r8,8
 100a1d8:	db013817 	ldw	r12,1248(sp)
 100a1dc:	dac13517 	ldw	r11,1236(sp)
 100a1e0:	84000044 	addi	r16,r16,1
 100a1e4:	1b07883a 	add	r3,r3,r12
 100a1e8:	42c00015 	stw	r11,0(r8)
 100a1ec:	43000115 	stw	r12,4(r8)
 100a1f0:	d8c12015 	stw	r3,1152(sp)
 100a1f4:	dc011f15 	stw	r16,1148(sp)
 100a1f8:	008001c4 	movi	r2,7
 100a1fc:	14016916 	blt	r2,r16,100a7a4 <___vfprintf_internal_r+0x161c>
 100a200:	44800204 	addi	r18,r8,8
 100a204:	d9013717 	ldw	r4,1244(sp)
 100a208:	d9413917 	ldw	r5,1252(sp)
 100a20c:	000d883a 	mov	r6,zero
 100a210:	000f883a 	mov	r7,zero
 100a214:	d8c13d15 	stw	r3,1268(sp)
 100a218:	1003f9c0 	call	1003f9c <__eqdf2>
 100a21c:	d8c13d17 	ldw	r3,1268(sp)
 100a220:	db013317 	ldw	r12,1228(sp)
 100a224:	1000ae26 	beq	r2,zero,100a4e0 <___vfprintf_internal_r+0x1358>
 100a228:	dac13117 	ldw	r11,1220(sp)
 100a22c:	60bfffc4 	addi	r2,r12,-1
 100a230:	1887883a 	add	r3,r3,r2
 100a234:	59000044 	addi	r4,r11,1
 100a238:	84000044 	addi	r16,r16,1
 100a23c:	90800115 	stw	r2,4(r18)
 100a240:	91000015 	stw	r4,0(r18)
 100a244:	d8c12015 	stw	r3,1152(sp)
 100a248:	dc011f15 	stw	r16,1148(sp)
 100a24c:	008001c4 	movi	r2,7
 100a250:	14014216 	blt	r2,r16,100a75c <___vfprintf_internal_r+0x15d4>
 100a254:	94800204 	addi	r18,r18,8
 100a258:	dac13a17 	ldw	r11,1256(sp)
 100a25c:	dd4122c4 	addi	r21,sp,1163
 100a260:	84000044 	addi	r16,r16,1
 100a264:	58c7883a 	add	r3,r11,r3
 100a268:	95400015 	stw	r21,0(r18)
 100a26c:	92c00115 	stw	r11,4(r18)
 100a270:	d8c12015 	stw	r3,1152(sp)
 100a274:	dc011f15 	stw	r16,1148(sp)
 100a278:	008001c4 	movi	r2,7
 100a27c:	14000e16 	blt	r2,r16,100a2b8 <___vfprintf_internal_r+0x1130>
 100a280:	92000204 	addi	r8,r18,8
 100a284:	003de706 	br	1009a24 <__alt_data_end+0xff809a24>
 100a288:	010040b4 	movhi	r4,258
 100a28c:	2125e384 	addi	r4,r4,-26738
 100a290:	d9012c15 	stw	r4,1200(sp)
 100a294:	dac12c17 	ldw	r11,1200(sp)
 100a298:	1c07883a 	add	r3,r3,r16
 100a29c:	44000115 	stw	r16,4(r8)
 100a2a0:	42c00015 	stw	r11,0(r8)
 100a2a4:	10800044 	addi	r2,r2,1
 100a2a8:	d8c12015 	stw	r3,1152(sp)
 100a2ac:	d8811f15 	stw	r2,1148(sp)
 100a2b0:	010001c4 	movi	r4,7
 100a2b4:	20bdda0e 	bge	r4,r2,1009a20 <__alt_data_end+0xff809a20>
 100a2b8:	b009883a 	mov	r4,r22
 100a2bc:	b80b883a 	mov	r5,r23
 100a2c0:	d9811e04 	addi	r6,sp,1144
 100a2c4:	10122fc0 	call	10122fc <__sprint_r>
 100a2c8:	103cc61e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a2cc:	d8c12017 	ldw	r3,1152(sp)
 100a2d0:	da000404 	addi	r8,sp,16
 100a2d4:	003dd306 	br	1009a24 <__alt_data_end+0xff809a24>
 100a2d8:	b009883a 	mov	r4,r22
 100a2dc:	b80b883a 	mov	r5,r23
 100a2e0:	d9811e04 	addi	r6,sp,1144
 100a2e4:	10122fc0 	call	10122fc <__sprint_r>
 100a2e8:	103e0926 	beq	r2,zero,1009b10 <__alt_data_end+0xff809b10>
 100a2ec:	003cbd06 	br	10095e4 <__alt_data_end+0xff8095e4>
 100a2f0:	10803fcc 	andi	r2,r2,255
 100a2f4:	1000651e 	bne	r2,zero,100a48c <___vfprintf_internal_r+0x1304>
 100a2f8:	8880004c 	andi	r2,r17,1
 100a2fc:	10013226 	beq	r2,zero,100a7c8 <___vfprintf_internal_r+0x1640>
 100a300:	00800c04 	movi	r2,48
 100a304:	d8c10dc4 	addi	r3,sp,1079
 100a308:	d8810dc5 	stb	r2,1079(sp)
 100a30c:	dc813c17 	ldw	r18,1264(sp)
 100a310:	d8c13115 	stw	r3,1220(sp)
 100a314:	003d2b06 	br	10097c4 <__alt_data_end+0xff8097c4>
 100a318:	b009883a 	mov	r4,r22
 100a31c:	b80b883a 	mov	r5,r23
 100a320:	d9811e04 	addi	r6,sp,1144
 100a324:	10122fc0 	call	10122fc <__sprint_r>
 100a328:	103cae1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a32c:	d8c12017 	ldw	r3,1152(sp)
 100a330:	da000404 	addi	r8,sp,16
 100a334:	003dae06 	br	10099f0 <__alt_data_end+0xff8099f0>
 100a338:	b009883a 	mov	r4,r22
 100a33c:	b80b883a 	mov	r5,r23
 100a340:	d9811e04 	addi	r6,sp,1144
 100a344:	10122fc0 	call	10122fc <__sprint_r>
 100a348:	103ca61e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a34c:	d8c12017 	ldw	r3,1152(sp)
 100a350:	da000404 	addi	r8,sp,16
 100a354:	003d6c06 	br	1009908 <__alt_data_end+0xff809908>
 100a358:	b009883a 	mov	r4,r22
 100a35c:	b80b883a 	mov	r5,r23
 100a360:	d9811e04 	addi	r6,sp,1144
 100a364:	10122fc0 	call	10122fc <__sprint_r>
 100a368:	103c9e1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a36c:	d8c12017 	ldw	r3,1152(sp)
 100a370:	da000404 	addi	r8,sp,16
 100a374:	003d7206 	br	1009940 <__alt_data_end+0xff809940>
 100a378:	d9413b17 	ldw	r5,1260(sp)
 100a37c:	d8c10e04 	addi	r3,sp,1080
 100a380:	988003cc 	andi	r2,r19,15
 100a384:	e008973a 	slli	r4,fp,28
 100a388:	2885883a 	add	r2,r5,r2
 100a38c:	9826d13a 	srli	r19,r19,4
 100a390:	10800003 	ldbu	r2,0(r2)
 100a394:	e038d13a 	srli	fp,fp,4
 100a398:	18ffffc4 	addi	r3,r3,-1
 100a39c:	24e6b03a 	or	r19,r4,r19
 100a3a0:	18800005 	stb	r2,0(r3)
 100a3a4:	9f04b03a 	or	r2,r19,fp
 100a3a8:	103ff51e 	bne	r2,zero,100a380 <__alt_data_end+0xff80a380>
 100a3ac:	db012817 	ldw	r12,1184(sp)
 100a3b0:	d8c13115 	stw	r3,1220(sp)
 100a3b4:	60e5c83a 	sub	r18,r12,r3
 100a3b8:	003d0206 	br	10097c4 <__alt_data_end+0xff8097c4>
 100a3bc:	dc012617 	ldw	r16,1176(sp)
 100a3c0:	0401b10e 	bge	zero,r16,100aa88 <___vfprintf_internal_r+0x1900>
 100a3c4:	db013117 	ldw	r12,1220(sp)
 100a3c8:	dac13317 	ldw	r11,1228(sp)
 100a3cc:	62e1883a 	add	r16,r12,r11
 100a3d0:	db013417 	ldw	r12,1232(sp)
 100a3d4:	5825883a 	mov	r18,r11
 100a3d8:	62c0010e 	bge	r12,r11,100a3e0 <___vfprintf_internal_r+0x1258>
 100a3dc:	6025883a 	mov	r18,r12
 100a3e0:	04800b0e 	bge	zero,r18,100a410 <___vfprintf_internal_r+0x1288>
 100a3e4:	d8811f17 	ldw	r2,1148(sp)
 100a3e8:	dac13117 	ldw	r11,1220(sp)
 100a3ec:	1c87883a 	add	r3,r3,r18
 100a3f0:	10800044 	addi	r2,r2,1
 100a3f4:	42c00015 	stw	r11,0(r8)
 100a3f8:	44800115 	stw	r18,4(r8)
 100a3fc:	d8c12015 	stw	r3,1152(sp)
 100a400:	d8811f15 	stw	r2,1148(sp)
 100a404:	010001c4 	movi	r4,7
 100a408:	20824f16 	blt	r4,r2,100ad48 <___vfprintf_internal_r+0x1bc0>
 100a40c:	42000204 	addi	r8,r8,8
 100a410:	90024b16 	blt	r18,zero,100ad40 <___vfprintf_internal_r+0x1bb8>
 100a414:	db013417 	ldw	r12,1232(sp)
 100a418:	64a5c83a 	sub	r18,r12,r18
 100a41c:	0480730e 	bge	zero,r18,100a5ec <___vfprintf_internal_r+0x1464>
 100a420:	05400404 	movi	r21,16
 100a424:	d8811f17 	ldw	r2,1148(sp)
 100a428:	ac817d0e 	bge	r21,r18,100aa20 <___vfprintf_internal_r+0x1898>
 100a42c:	014040b4 	movhi	r5,258
 100a430:	2965e384 	addi	r5,r5,-26738
 100a434:	d9412c15 	stw	r5,1200(sp)
 100a438:	070001c4 	movi	fp,7
 100a43c:	00000306 	br	100a44c <___vfprintf_internal_r+0x12c4>
 100a440:	42000204 	addi	r8,r8,8
 100a444:	94bffc04 	addi	r18,r18,-16
 100a448:	ac81780e 	bge	r21,r18,100aa2c <___vfprintf_internal_r+0x18a4>
 100a44c:	18c00404 	addi	r3,r3,16
 100a450:	10800044 	addi	r2,r2,1
 100a454:	45000015 	stw	r20,0(r8)
 100a458:	45400115 	stw	r21,4(r8)
 100a45c:	d8c12015 	stw	r3,1152(sp)
 100a460:	d8811f15 	stw	r2,1148(sp)
 100a464:	e0bff60e 	bge	fp,r2,100a440 <__alt_data_end+0xff80a440>
 100a468:	b009883a 	mov	r4,r22
 100a46c:	b80b883a 	mov	r5,r23
 100a470:	d9811e04 	addi	r6,sp,1144
 100a474:	10122fc0 	call	10122fc <__sprint_r>
 100a478:	103c5a1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a47c:	d8c12017 	ldw	r3,1152(sp)
 100a480:	d8811f17 	ldw	r2,1148(sp)
 100a484:	da000404 	addi	r8,sp,16
 100a488:	003fee06 	br	100a444 <__alt_data_end+0xff80a444>
 100a48c:	dac10e04 	addi	r11,sp,1080
 100a490:	0025883a 	mov	r18,zero
 100a494:	dac13115 	stw	r11,1220(sp)
 100a498:	003cca06 	br	10097c4 <__alt_data_end+0xff8097c4>
 100a49c:	b009883a 	mov	r4,r22
 100a4a0:	b80b883a 	mov	r5,r23
 100a4a4:	d9811e04 	addi	r6,sp,1144
 100a4a8:	10122fc0 	call	10122fc <__sprint_r>
 100a4ac:	103c4d1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a4b0:	d8c12017 	ldw	r3,1152(sp)
 100a4b4:	d8812787 	ldb	r2,1182(sp)
 100a4b8:	da000404 	addi	r8,sp,16
 100a4bc:	003d0506 	br	10098d4 <__alt_data_end+0xff8098d4>
 100a4c0:	dac12d17 	ldw	r11,1204(sp)
 100a4c4:	14c00017 	ldw	r19,0(r2)
 100a4c8:	0039883a 	mov	fp,zero
 100a4cc:	5ac00104 	addi	r11,r11,4
 100a4d0:	dac12d15 	stw	r11,1204(sp)
 100a4d4:	0005883a 	mov	r2,zero
 100a4d8:	9807883a 	mov	r3,r19
 100a4dc:	003c9c06 	br	1009750 <__alt_data_end+0xff809750>
 100a4e0:	657fffc4 	addi	r21,r12,-1
 100a4e4:	057f5c0e 	bge	zero,r21,100a258 <__alt_data_end+0xff80a258>
 100a4e8:	07000404 	movi	fp,16
 100a4ec:	e5408f0e 	bge	fp,r21,100a72c <___vfprintf_internal_r+0x15a4>
 100a4f0:	010040b4 	movhi	r4,258
 100a4f4:	2125e384 	addi	r4,r4,-26738
 100a4f8:	d9012c15 	stw	r4,1200(sp)
 100a4fc:	01c001c4 	movi	r7,7
 100a500:	00000306 	br	100a510 <___vfprintf_internal_r+0x1388>
 100a504:	94800204 	addi	r18,r18,8
 100a508:	ad7ffc04 	addi	r21,r21,-16
 100a50c:	e5408a0e 	bge	fp,r21,100a738 <___vfprintf_internal_r+0x15b0>
 100a510:	18c00404 	addi	r3,r3,16
 100a514:	84000044 	addi	r16,r16,1
 100a518:	95000015 	stw	r20,0(r18)
 100a51c:	97000115 	stw	fp,4(r18)
 100a520:	d8c12015 	stw	r3,1152(sp)
 100a524:	dc011f15 	stw	r16,1148(sp)
 100a528:	3c3ff60e 	bge	r7,r16,100a504 <__alt_data_end+0xff80a504>
 100a52c:	b009883a 	mov	r4,r22
 100a530:	b80b883a 	mov	r5,r23
 100a534:	d9811e04 	addi	r6,sp,1144
 100a538:	d9c13d15 	stw	r7,1268(sp)
 100a53c:	10122fc0 	call	10122fc <__sprint_r>
 100a540:	d9c13d17 	ldw	r7,1268(sp)
 100a544:	103c271e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a548:	d8c12017 	ldw	r3,1152(sp)
 100a54c:	dc011f17 	ldw	r16,1148(sp)
 100a550:	dc800404 	addi	r18,sp,16
 100a554:	003fec06 	br	100a508 <__alt_data_end+0xff80a508>
 100a558:	1cc00017 	ldw	r19,0(r3)
 100a55c:	dac12d17 	ldw	r11,1204(sp)
 100a560:	9839d7fa 	srai	fp,r19,31
 100a564:	5ac00104 	addi	r11,r11,4
 100a568:	dac12d15 	stw	r11,1204(sp)
 100a56c:	e005883a 	mov	r2,fp
 100a570:	003d9006 	br	1009bb4 <__alt_data_end+0xff809bb4>
 100a574:	00800084 	movi	r2,2
 100a578:	9f06b03a 	or	r3,r19,fp
 100a57c:	003c7406 	br	1009750 <__alt_data_end+0xff809750>
 100a580:	db012d17 	ldw	r12,1204(sp)
 100a584:	14c00017 	ldw	r19,0(r2)
 100a588:	0039883a 	mov	fp,zero
 100a58c:	63000104 	addi	r12,r12,4
 100a590:	db012d15 	stw	r12,1204(sp)
 100a594:	00800044 	movi	r2,1
 100a598:	9807883a 	mov	r3,r19
 100a59c:	003c6c06 	br	1009750 <__alt_data_end+0xff809750>
 100a5a0:	10803fcc 	andi	r2,r2,255
 100a5a4:	1080201c 	xori	r2,r2,128
 100a5a8:	10bfe004 	addi	r2,r2,-128
 100a5ac:	01000c04 	movi	r4,48
 100a5b0:	1101a526 	beq	r2,r4,100ac48 <___vfprintf_internal_r+0x1ac0>
 100a5b4:	dac13117 	ldw	r11,1220(sp)
 100a5b8:	db012817 	ldw	r12,1184(sp)
 100a5bc:	193fffc5 	stb	r4,-1(r3)
 100a5c0:	5affffc4 	addi	r11,r11,-1
 100a5c4:	dac13115 	stw	r11,1220(sp)
 100a5c8:	62e5c83a 	sub	r18,r12,r11
 100a5cc:	003c7d06 	br	10097c4 <__alt_data_end+0xff8097c4>
 100a5d0:	b009883a 	mov	r4,r22
 100a5d4:	b80b883a 	mov	r5,r23
 100a5d8:	d9811e04 	addi	r6,sp,1144
 100a5dc:	10122fc0 	call	10122fc <__sprint_r>
 100a5e0:	103c001e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a5e4:	d8c12017 	ldw	r3,1152(sp)
 100a5e8:	da000404 	addi	r8,sp,16
 100a5ec:	db013117 	ldw	r12,1220(sp)
 100a5f0:	dac13417 	ldw	r11,1232(sp)
 100a5f4:	d8812617 	ldw	r2,1176(sp)
 100a5f8:	62e5883a 	add	r18,r12,r11
 100a5fc:	db013317 	ldw	r12,1228(sp)
 100a600:	13000216 	blt	r2,r12,100a60c <___vfprintf_internal_r+0x1484>
 100a604:	8900004c 	andi	r4,r17,1
 100a608:	20000c26 	beq	r4,zero,100a63c <___vfprintf_internal_r+0x14b4>
 100a60c:	dac13817 	ldw	r11,1248(sp)
 100a610:	d9011f17 	ldw	r4,1148(sp)
 100a614:	db013517 	ldw	r12,1236(sp)
 100a618:	1ac7883a 	add	r3,r3,r11
 100a61c:	21000044 	addi	r4,r4,1
 100a620:	43000015 	stw	r12,0(r8)
 100a624:	42c00115 	stw	r11,4(r8)
 100a628:	d8c12015 	stw	r3,1152(sp)
 100a62c:	d9011f15 	stw	r4,1148(sp)
 100a630:	014001c4 	movi	r5,7
 100a634:	2901cc16 	blt	r5,r4,100ad68 <___vfprintf_internal_r+0x1be0>
 100a638:	42000204 	addi	r8,r8,8
 100a63c:	dac13317 	ldw	r11,1228(sp)
 100a640:	8489c83a 	sub	r4,r16,r18
 100a644:	5885c83a 	sub	r2,r11,r2
 100a648:	1021883a 	mov	r16,r2
 100a64c:	2080010e 	bge	r4,r2,100a654 <___vfprintf_internal_r+0x14cc>
 100a650:	2021883a 	mov	r16,r4
 100a654:	04000a0e 	bge	zero,r16,100a680 <___vfprintf_internal_r+0x14f8>
 100a658:	d9011f17 	ldw	r4,1148(sp)
 100a65c:	1c07883a 	add	r3,r3,r16
 100a660:	44800015 	stw	r18,0(r8)
 100a664:	21000044 	addi	r4,r4,1
 100a668:	44000115 	stw	r16,4(r8)
 100a66c:	d8c12015 	stw	r3,1152(sp)
 100a670:	d9011f15 	stw	r4,1148(sp)
 100a674:	014001c4 	movi	r5,7
 100a678:	2901d616 	blt	r5,r4,100add4 <___vfprintf_internal_r+0x1c4c>
 100a67c:	42000204 	addi	r8,r8,8
 100a680:	8001df16 	blt	r16,zero,100ae00 <___vfprintf_internal_r+0x1c78>
 100a684:	1421c83a 	sub	r16,r2,r16
 100a688:	043ce60e 	bge	zero,r16,1009a24 <__alt_data_end+0xff809a24>
 100a68c:	04800404 	movi	r18,16
 100a690:	d8811f17 	ldw	r2,1148(sp)
 100a694:	943efc0e 	bge	r18,r16,100a288 <__alt_data_end+0xff80a288>
 100a698:	014040b4 	movhi	r5,258
 100a69c:	2965e384 	addi	r5,r5,-26738
 100a6a0:	d9412c15 	stw	r5,1200(sp)
 100a6a4:	054001c4 	movi	r21,7
 100a6a8:	00000306 	br	100a6b8 <___vfprintf_internal_r+0x1530>
 100a6ac:	42000204 	addi	r8,r8,8
 100a6b0:	843ffc04 	addi	r16,r16,-16
 100a6b4:	943ef70e 	bge	r18,r16,100a294 <__alt_data_end+0xff80a294>
 100a6b8:	18c00404 	addi	r3,r3,16
 100a6bc:	10800044 	addi	r2,r2,1
 100a6c0:	45000015 	stw	r20,0(r8)
 100a6c4:	44800115 	stw	r18,4(r8)
 100a6c8:	d8c12015 	stw	r3,1152(sp)
 100a6cc:	d8811f15 	stw	r2,1148(sp)
 100a6d0:	a8bff60e 	bge	r21,r2,100a6ac <__alt_data_end+0xff80a6ac>
 100a6d4:	b009883a 	mov	r4,r22
 100a6d8:	b80b883a 	mov	r5,r23
 100a6dc:	d9811e04 	addi	r6,sp,1144
 100a6e0:	10122fc0 	call	10122fc <__sprint_r>
 100a6e4:	103bbf1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a6e8:	d8c12017 	ldw	r3,1152(sp)
 100a6ec:	d8811f17 	ldw	r2,1148(sp)
 100a6f0:	da000404 	addi	r8,sp,16
 100a6f4:	003fee06 	br	100a6b0 <__alt_data_end+0xff80a6b0>
 100a6f8:	8888703a 	and	r4,r17,r2
 100a6fc:	203eab1e 	bne	r4,zero,100a1ac <__alt_data_end+0xff80a1ac>
 100a700:	dc011f17 	ldw	r16,1148(sp)
 100a704:	db013117 	ldw	r12,1220(sp)
 100a708:	40800115 	stw	r2,4(r8)
 100a70c:	84000044 	addi	r16,r16,1
 100a710:	43000015 	stw	r12,0(r8)
 100a714:	d8c12015 	stw	r3,1152(sp)
 100a718:	dc011f15 	stw	r16,1148(sp)
 100a71c:	008001c4 	movi	r2,7
 100a720:	14000e16 	blt	r2,r16,100a75c <___vfprintf_internal_r+0x15d4>
 100a724:	44800204 	addi	r18,r8,8
 100a728:	003ecb06 	br	100a258 <__alt_data_end+0xff80a258>
 100a72c:	008040b4 	movhi	r2,258
 100a730:	10a5e384 	addi	r2,r2,-26738
 100a734:	d8812c15 	stw	r2,1200(sp)
 100a738:	dac12c17 	ldw	r11,1200(sp)
 100a73c:	1d47883a 	add	r3,r3,r21
 100a740:	84000044 	addi	r16,r16,1
 100a744:	92c00015 	stw	r11,0(r18)
 100a748:	95400115 	stw	r21,4(r18)
 100a74c:	d8c12015 	stw	r3,1152(sp)
 100a750:	dc011f15 	stw	r16,1148(sp)
 100a754:	008001c4 	movi	r2,7
 100a758:	143ebe0e 	bge	r2,r16,100a254 <__alt_data_end+0xff80a254>
 100a75c:	b009883a 	mov	r4,r22
 100a760:	b80b883a 	mov	r5,r23
 100a764:	d9811e04 	addi	r6,sp,1144
 100a768:	10122fc0 	call	10122fc <__sprint_r>
 100a76c:	103b9d1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a770:	d8c12017 	ldw	r3,1152(sp)
 100a774:	dc011f17 	ldw	r16,1148(sp)
 100a778:	dc800404 	addi	r18,sp,16
 100a77c:	003eb606 	br	100a258 <__alt_data_end+0xff80a258>
 100a780:	b009883a 	mov	r4,r22
 100a784:	b80b883a 	mov	r5,r23
 100a788:	d9811e04 	addi	r6,sp,1144
 100a78c:	10122fc0 	call	10122fc <__sprint_r>
 100a790:	103b941e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a794:	d8c12017 	ldw	r3,1152(sp)
 100a798:	dc011f17 	ldw	r16,1148(sp)
 100a79c:	da000404 	addi	r8,sp,16
 100a7a0:	003e8d06 	br	100a1d8 <__alt_data_end+0xff80a1d8>
 100a7a4:	b009883a 	mov	r4,r22
 100a7a8:	b80b883a 	mov	r5,r23
 100a7ac:	d9811e04 	addi	r6,sp,1144
 100a7b0:	10122fc0 	call	10122fc <__sprint_r>
 100a7b4:	103b8b1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a7b8:	d8c12017 	ldw	r3,1152(sp)
 100a7bc:	dc011f17 	ldw	r16,1148(sp)
 100a7c0:	dc800404 	addi	r18,sp,16
 100a7c4:	003e8f06 	br	100a204 <__alt_data_end+0xff80a204>
 100a7c8:	db010e04 	addi	r12,sp,1080
 100a7cc:	0025883a 	mov	r18,zero
 100a7d0:	db013115 	stw	r12,1220(sp)
 100a7d4:	003bfb06 	br	10097c4 <__alt_data_end+0xff8097c4>
 100a7d8:	b009883a 	mov	r4,r22
 100a7dc:	b80b883a 	mov	r5,r23
 100a7e0:	d9811e04 	addi	r6,sp,1144
 100a7e4:	10122fc0 	call	10122fc <__sprint_r>
 100a7e8:	103b7e1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100a7ec:	d8c12017 	ldw	r3,1152(sp)
 100a7f0:	da000404 	addi	r8,sp,16
 100a7f4:	003c5506 	br	100994c <__alt_data_end+0xff80994c>
 100a7f8:	04e7c83a 	sub	r19,zero,r19
 100a7fc:	9804c03a 	cmpne	r2,r19,zero
 100a800:	0739c83a 	sub	fp,zero,fp
 100a804:	e0b9c83a 	sub	fp,fp,r2
 100a808:	05400b44 	movi	r21,45
 100a80c:	dd412785 	stb	r21,1182(sp)
 100a810:	da413215 	stw	r9,1224(sp)
 100a814:	00800044 	movi	r2,1
 100a818:	9f06b03a 	or	r3,r19,fp
 100a81c:	003bcf06 	br	100975c <__alt_data_end+0xff80975c>
 100a820:	da013f15 	stw	r8,1276(sp)
 100a824:	da413e15 	stw	r9,1272(sp)
 100a828:	10022580 	call	1002258 <__fpclassifyd>
 100a82c:	da013f17 	ldw	r8,1276(sp)
 100a830:	da413e17 	ldw	r9,1272(sp)
 100a834:	1000ce26 	beq	r2,zero,100ab70 <___vfprintf_internal_r+0x19e8>
 100a838:	057ff7c4 	movi	r21,-33
 100a83c:	00bfffc4 	movi	r2,-1
 100a840:	856a703a 	and	r21,r16,r21
 100a844:	4881f026 	beq	r9,r2,100b008 <___vfprintf_internal_r+0x1e80>
 100a848:	008011c4 	movi	r2,71
 100a84c:	a881e526 	beq	r21,r2,100afe4 <___vfprintf_internal_r+0x1e5c>
 100a850:	db013917 	ldw	r12,1252(sp)
 100a854:	8ac04014 	ori	r11,r17,256
 100a858:	dac12d15 	stw	r11,1204(sp)
 100a85c:	6001e416 	blt	r12,zero,100aff0 <___vfprintf_internal_r+0x1e68>
 100a860:	dc813917 	ldw	r18,1252(sp)
 100a864:	d8012b05 	stb	zero,1196(sp)
 100a868:	00801984 	movi	r2,102
 100a86c:	80811826 	beq	r16,r2,100acd0 <___vfprintf_internal_r+0x1b48>
 100a870:	00801184 	movi	r2,70
 100a874:	80811626 	beq	r16,r2,100acd0 <___vfprintf_internal_r+0x1b48>
 100a878:	00801144 	movi	r2,69
 100a87c:	a881e026 	beq	r21,r2,100b000 <___vfprintf_internal_r+0x1e78>
 100a880:	4839883a 	mov	fp,r9
 100a884:	d8812604 	addi	r2,sp,1176
 100a888:	d8800115 	stw	r2,4(sp)
 100a88c:	d9413717 	ldw	r5,1244(sp)
 100a890:	d8812504 	addi	r2,sp,1172
 100a894:	d8800215 	stw	r2,8(sp)
 100a898:	d8812104 	addi	r2,sp,1156
 100a89c:	df000015 	stw	fp,0(sp)
 100a8a0:	d8800315 	stw	r2,12(sp)
 100a8a4:	b009883a 	mov	r4,r22
 100a8a8:	900d883a 	mov	r6,r18
 100a8ac:	01c00084 	movi	r7,2
 100a8b0:	da013f15 	stw	r8,1276(sp)
 100a8b4:	da413e15 	stw	r9,1272(sp)
 100a8b8:	100b4d80 	call	100b4d8 <_dtoa_r>
 100a8bc:	d8813115 	stw	r2,1220(sp)
 100a8c0:	008019c4 	movi	r2,103
 100a8c4:	da013f17 	ldw	r8,1276(sp)
 100a8c8:	da413e17 	ldw	r9,1272(sp)
 100a8cc:	80800226 	beq	r16,r2,100a8d8 <___vfprintf_internal_r+0x1750>
 100a8d0:	008011c4 	movi	r2,71
 100a8d4:	8081101e 	bne	r16,r2,100ad18 <___vfprintf_internal_r+0x1b90>
 100a8d8:	8880004c 	andi	r2,r17,1
 100a8dc:	1001df26 	beq	r2,zero,100b05c <___vfprintf_internal_r+0x1ed4>
 100a8e0:	db013117 	ldw	r12,1220(sp)
 100a8e4:	6715883a 	add	r10,r12,fp
 100a8e8:	d9013717 	ldw	r4,1244(sp)
 100a8ec:	900b883a 	mov	r5,r18
 100a8f0:	000d883a 	mov	r6,zero
 100a8f4:	000f883a 	mov	r7,zero
 100a8f8:	da013f15 	stw	r8,1276(sp)
 100a8fc:	da413e15 	stw	r9,1272(sp)
 100a900:	da813d15 	stw	r10,1268(sp)
 100a904:	1003f9c0 	call	1003f9c <__eqdf2>
 100a908:	da013f17 	ldw	r8,1276(sp)
 100a90c:	da413e17 	ldw	r9,1272(sp)
 100a910:	da813d17 	ldw	r10,1268(sp)
 100a914:	10016526 	beq	r2,zero,100aeac <___vfprintf_internal_r+0x1d24>
 100a918:	d8812117 	ldw	r2,1156(sp)
 100a91c:	1280062e 	bgeu	r2,r10,100a938 <___vfprintf_internal_r+0x17b0>
 100a920:	01000c04 	movi	r4,48
 100a924:	10c00044 	addi	r3,r2,1
 100a928:	d8c12115 	stw	r3,1156(sp)
 100a92c:	11000005 	stb	r4,0(r2)
 100a930:	d8812117 	ldw	r2,1156(sp)
 100a934:	12bffb36 	bltu	r2,r10,100a924 <__alt_data_end+0xff80a924>
 100a938:	db013117 	ldw	r12,1220(sp)
 100a93c:	1305c83a 	sub	r2,r2,r12
 100a940:	d8813315 	stw	r2,1228(sp)
 100a944:	008011c4 	movi	r2,71
 100a948:	a8814a26 	beq	r21,r2,100ae74 <___vfprintf_internal_r+0x1cec>
 100a94c:	00801944 	movi	r2,101
 100a950:	14020a0e 	bge	r2,r16,100b17c <___vfprintf_internal_r+0x1ff4>
 100a954:	00801984 	movi	r2,102
 100a958:	8081b626 	beq	r16,r2,100b034 <___vfprintf_internal_r+0x1eac>
 100a95c:	db012617 	ldw	r12,1176(sp)
 100a960:	db013415 	stw	r12,1232(sp)
 100a964:	db013417 	ldw	r12,1232(sp)
 100a968:	dac13317 	ldw	r11,1228(sp)
 100a96c:	62c1a816 	blt	r12,r11,100b010 <___vfprintf_internal_r+0x1e88>
 100a970:	8c40004c 	andi	r17,r17,1
 100a974:	8801ca1e 	bne	r17,zero,100b0a0 <___vfprintf_internal_r+0x1f18>
 100a978:	6005883a 	mov	r2,r12
 100a97c:	6001b516 	blt	r12,zero,100b054 <___vfprintf_internal_r+0x1ecc>
 100a980:	dc813417 	ldw	r18,1232(sp)
 100a984:	df012b07 	ldb	fp,1196(sp)
 100a988:	e001321e 	bne	fp,zero,100ae54 <___vfprintf_internal_r+0x1ccc>
 100a98c:	dc412d17 	ldw	r17,1204(sp)
 100a990:	dd412783 	ldbu	r21,1182(sp)
 100a994:	d8812b15 	stw	r2,1196(sp)
 100a998:	dcc12d15 	stw	r19,1204(sp)
 100a99c:	d8013215 	stw	zero,1224(sp)
 100a9a0:	003b8d06 	br	10097d8 <__alt_data_end+0xff8097d8>
 100a9a4:	88c0100c 	andi	r3,r17,64
 100a9a8:	18008226 	beq	r3,zero,100abb4 <___vfprintf_internal_r+0x1a2c>
 100a9ac:	dac12d17 	ldw	r11,1204(sp)
 100a9b0:	14c0000b 	ldhu	r19,0(r2)
 100a9b4:	0039883a 	mov	fp,zero
 100a9b8:	5ac00104 	addi	r11,r11,4
 100a9bc:	dac12d15 	stw	r11,1204(sp)
 100a9c0:	003c8f06 	br	1009c00 <__alt_data_end+0xff809c00>
 100a9c4:	1c000007 	ldb	r16,0(r3)
 100a9c8:	1805883a 	mov	r2,r3
 100a9cc:	003a5506 	br	1009324 <__alt_data_end+0xff809324>
 100a9d0:	00800084 	movi	r2,2
 100a9d4:	003b5e06 	br	1009750 <__alt_data_end+0xff809750>
 100a9d8:	8880040c 	andi	r2,r17,16
 100a9dc:	1000091e 	bne	r2,zero,100aa04 <___vfprintf_internal_r+0x187c>
 100a9e0:	8c40100c 	andi	r17,r17,64
 100a9e4:	88000726 	beq	r17,zero,100aa04 <___vfprintf_internal_r+0x187c>
 100a9e8:	db012d17 	ldw	r12,1204(sp)
 100a9ec:	dac12f17 	ldw	r11,1212(sp)
 100a9f0:	60800017 	ldw	r2,0(r12)
 100a9f4:	63000104 	addi	r12,r12,4
 100a9f8:	db012d15 	stw	r12,1204(sp)
 100a9fc:	12c0000d 	sth	r11,0(r2)
 100aa00:	003a1e06 	br	100927c <__alt_data_end+0xff80927c>
 100aa04:	db012d17 	ldw	r12,1204(sp)
 100aa08:	dac12f17 	ldw	r11,1212(sp)
 100aa0c:	60800017 	ldw	r2,0(r12)
 100aa10:	63000104 	addi	r12,r12,4
 100aa14:	db012d15 	stw	r12,1204(sp)
 100aa18:	12c00015 	stw	r11,0(r2)
 100aa1c:	003a1706 	br	100927c <__alt_data_end+0xff80927c>
 100aa20:	010040b4 	movhi	r4,258
 100aa24:	2125e384 	addi	r4,r4,-26738
 100aa28:	d9012c15 	stw	r4,1200(sp)
 100aa2c:	dac12c17 	ldw	r11,1200(sp)
 100aa30:	1c87883a 	add	r3,r3,r18
 100aa34:	10800044 	addi	r2,r2,1
 100aa38:	42c00015 	stw	r11,0(r8)
 100aa3c:	44800115 	stw	r18,4(r8)
 100aa40:	d8c12015 	stw	r3,1152(sp)
 100aa44:	d8811f15 	stw	r2,1148(sp)
 100aa48:	010001c4 	movi	r4,7
 100aa4c:	20bee016 	blt	r4,r2,100a5d0 <__alt_data_end+0xff80a5d0>
 100aa50:	42000204 	addi	r8,r8,8
 100aa54:	003ee506 	br	100a5ec <__alt_data_end+0xff80a5ec>
 100aa58:	010040b4 	movhi	r4,258
 100aa5c:	2125e384 	addi	r4,r4,-26738
 100aa60:	d9012c15 	stw	r4,1200(sp)
 100aa64:	003bd806 	br	10099c8 <__alt_data_end+0xff8099c8>
 100aa68:	b009883a 	mov	r4,r22
 100aa6c:	b80b883a 	mov	r5,r23
 100aa70:	d9811e04 	addi	r6,sp,1144
 100aa74:	10122fc0 	call	10122fc <__sprint_r>
 100aa78:	103ada1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100aa7c:	d8c12017 	ldw	r3,1152(sp)
 100aa80:	da000404 	addi	r8,sp,16
 100aa84:	003d6b06 	br	100a034 <__alt_data_end+0xff80a034>
 100aa88:	d8811f17 	ldw	r2,1148(sp)
 100aa8c:	030040b4 	movhi	r12,258
 100aa90:	01000044 	movi	r4,1
 100aa94:	18c00044 	addi	r3,r3,1
 100aa98:	10800044 	addi	r2,r2,1
 100aa9c:	6325db04 	addi	r12,r12,-26772
 100aaa0:	41000115 	stw	r4,4(r8)
 100aaa4:	43000015 	stw	r12,0(r8)
 100aaa8:	d8c12015 	stw	r3,1152(sp)
 100aaac:	d8811f15 	stw	r2,1148(sp)
 100aab0:	010001c4 	movi	r4,7
 100aab4:	20804916 	blt	r4,r2,100abdc <___vfprintf_internal_r+0x1a54>
 100aab8:	42000204 	addi	r8,r8,8
 100aabc:	8000041e 	bne	r16,zero,100aad0 <___vfprintf_internal_r+0x1948>
 100aac0:	dac13317 	ldw	r11,1228(sp)
 100aac4:	5800021e 	bne	r11,zero,100aad0 <___vfprintf_internal_r+0x1948>
 100aac8:	8880004c 	andi	r2,r17,1
 100aacc:	103bd526 	beq	r2,zero,1009a24 <__alt_data_end+0xff809a24>
 100aad0:	db013817 	ldw	r12,1248(sp)
 100aad4:	d8811f17 	ldw	r2,1148(sp)
 100aad8:	dac13517 	ldw	r11,1236(sp)
 100aadc:	1b07883a 	add	r3,r3,r12
 100aae0:	10800044 	addi	r2,r2,1
 100aae4:	42c00015 	stw	r11,0(r8)
 100aae8:	43000115 	stw	r12,4(r8)
 100aaec:	d8c12015 	stw	r3,1152(sp)
 100aaf0:	d8811f15 	stw	r2,1148(sp)
 100aaf4:	010001c4 	movi	r4,7
 100aaf8:	20813016 	blt	r4,r2,100afbc <___vfprintf_internal_r+0x1e34>
 100aafc:	42000204 	addi	r8,r8,8
 100ab00:	0421c83a 	sub	r16,zero,r16
 100ab04:	0400630e 	bge	zero,r16,100ac94 <___vfprintf_internal_r+0x1b0c>
 100ab08:	04800404 	movi	r18,16
 100ab0c:	94009f0e 	bge	r18,r16,100ad8c <___vfprintf_internal_r+0x1c04>
 100ab10:	010040b4 	movhi	r4,258
 100ab14:	2125e384 	addi	r4,r4,-26738
 100ab18:	d9012c15 	stw	r4,1200(sp)
 100ab1c:	054001c4 	movi	r21,7
 100ab20:	00000306 	br	100ab30 <___vfprintf_internal_r+0x19a8>
 100ab24:	42000204 	addi	r8,r8,8
 100ab28:	843ffc04 	addi	r16,r16,-16
 100ab2c:	94009a0e 	bge	r18,r16,100ad98 <___vfprintf_internal_r+0x1c10>
 100ab30:	18c00404 	addi	r3,r3,16
 100ab34:	10800044 	addi	r2,r2,1
 100ab38:	45000015 	stw	r20,0(r8)
 100ab3c:	44800115 	stw	r18,4(r8)
 100ab40:	d8c12015 	stw	r3,1152(sp)
 100ab44:	d8811f15 	stw	r2,1148(sp)
 100ab48:	a8bff60e 	bge	r21,r2,100ab24 <__alt_data_end+0xff80ab24>
 100ab4c:	b009883a 	mov	r4,r22
 100ab50:	b80b883a 	mov	r5,r23
 100ab54:	d9811e04 	addi	r6,sp,1144
 100ab58:	10122fc0 	call	10122fc <__sprint_r>
 100ab5c:	103aa11e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100ab60:	d8c12017 	ldw	r3,1152(sp)
 100ab64:	d8811f17 	ldw	r2,1148(sp)
 100ab68:	da000404 	addi	r8,sp,16
 100ab6c:	003fee06 	br	100ab28 <__alt_data_end+0xff80ab28>
 100ab70:	008011c4 	movi	r2,71
 100ab74:	1400b316 	blt	r2,r16,100ae44 <___vfprintf_internal_r+0x1cbc>
 100ab78:	030040b4 	movhi	r12,258
 100ab7c:	6325cd04 	addi	r12,r12,-26828
 100ab80:	db013115 	stw	r12,1220(sp)
 100ab84:	00c000c4 	movi	r3,3
 100ab88:	00bfdfc4 	movi	r2,-129
 100ab8c:	d8c12b15 	stw	r3,1196(sp)
 100ab90:	88a2703a 	and	r17,r17,r2
 100ab94:	dd412783 	ldbu	r21,1182(sp)
 100ab98:	dcc12d15 	stw	r19,1204(sp)
 100ab9c:	1825883a 	mov	r18,r3
 100aba0:	d8013215 	stw	zero,1224(sp)
 100aba4:	d8013415 	stw	zero,1232(sp)
 100aba8:	003b0b06 	br	10097d8 <__alt_data_end+0xff8097d8>
 100abac:	4825883a 	mov	r18,r9
 100abb0:	003cba06 	br	1009e9c <__alt_data_end+0xff809e9c>
 100abb4:	db012d17 	ldw	r12,1204(sp)
 100abb8:	14c00017 	ldw	r19,0(r2)
 100abbc:	0039883a 	mov	fp,zero
 100abc0:	63000104 	addi	r12,r12,4
 100abc4:	db012d15 	stw	r12,1204(sp)
 100abc8:	003c0d06 	br	1009c00 <__alt_data_end+0xff809c00>
 100abcc:	008040b4 	movhi	r2,258
 100abd0:	10a5cb04 	addi	r2,r2,-26836
 100abd4:	d8813115 	stw	r2,1220(sp)
 100abd8:	003ac406 	br	10096ec <__alt_data_end+0xff8096ec>
 100abdc:	b009883a 	mov	r4,r22
 100abe0:	b80b883a 	mov	r5,r23
 100abe4:	d9811e04 	addi	r6,sp,1144
 100abe8:	10122fc0 	call	10122fc <__sprint_r>
 100abec:	103a7d1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100abf0:	dc012617 	ldw	r16,1176(sp)
 100abf4:	d8c12017 	ldw	r3,1152(sp)
 100abf8:	da000404 	addi	r8,sp,16
 100abfc:	003faf06 	br	100aabc <__alt_data_end+0xff80aabc>
 100ac00:	db012e17 	ldw	r12,1208(sp)
 100ac04:	1805883a 	mov	r2,r3
 100ac08:	dac12d15 	stw	r11,1204(sp)
 100ac0c:	0319c83a 	sub	r12,zero,r12
 100ac10:	db012e15 	stw	r12,1208(sp)
 100ac14:	003a7e06 	br	1009610 <__alt_data_end+0xff809610>
 100ac18:	18800044 	addi	r2,r3,1
 100ac1c:	8c400814 	ori	r17,r17,32
 100ac20:	1c000047 	ldb	r16,1(r3)
 100ac24:	0039bf06 	br	1009324 <__alt_data_end+0xff809324>
 100ac28:	b009883a 	mov	r4,r22
 100ac2c:	b80b883a 	mov	r5,r23
 100ac30:	d9811e04 	addi	r6,sp,1144
 100ac34:	10122fc0 	call	10122fc <__sprint_r>
 100ac38:	103a6a1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100ac3c:	d8c12017 	ldw	r3,1152(sp)
 100ac40:	da000404 	addi	r8,sp,16
 100ac44:	003d0c06 	br	100a078 <__alt_data_end+0xff80a078>
 100ac48:	db012817 	ldw	r12,1184(sp)
 100ac4c:	d8c13117 	ldw	r3,1220(sp)
 100ac50:	60e5c83a 	sub	r18,r12,r3
 100ac54:	003adb06 	br	10097c4 <__alt_data_end+0xff8097c4>
 100ac58:	da013f15 	stw	r8,1276(sp)
 100ac5c:	1004fa80 	call	1004fa8 <strlen>
 100ac60:	1025883a 	mov	r18,r2
 100ac64:	da013f17 	ldw	r8,1276(sp)
 100ac68:	903c8e0e 	bge	r18,zero,1009ea4 <__alt_data_end+0xff809ea4>
 100ac6c:	0005883a 	mov	r2,zero
 100ac70:	003c8c06 	br	1009ea4 <__alt_data_end+0xff809ea4>
 100ac74:	b009883a 	mov	r4,r22
 100ac78:	b80b883a 	mov	r5,r23
 100ac7c:	d9811e04 	addi	r6,sp,1144
 100ac80:	10122fc0 	call	10122fc <__sprint_r>
 100ac84:	103a571e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100ac88:	d8c12017 	ldw	r3,1152(sp)
 100ac8c:	d8811f17 	ldw	r2,1148(sp)
 100ac90:	da000404 	addi	r8,sp,16
 100ac94:	db013317 	ldw	r12,1228(sp)
 100ac98:	dac13117 	ldw	r11,1220(sp)
 100ac9c:	10800044 	addi	r2,r2,1
 100aca0:	60c7883a 	add	r3,r12,r3
 100aca4:	42c00015 	stw	r11,0(r8)
 100aca8:	43000115 	stw	r12,4(r8)
 100acac:	d8c12015 	stw	r3,1152(sp)
 100acb0:	d8811f15 	stw	r2,1148(sp)
 100acb4:	010001c4 	movi	r4,7
 100acb8:	20bb590e 	bge	r4,r2,1009a20 <__alt_data_end+0xff809a20>
 100acbc:	003d7e06 	br	100a2b8 <__alt_data_end+0xff80a2b8>
 100acc0:	010040b4 	movhi	r4,258
 100acc4:	2125e784 	addi	r4,r4,-26722
 100acc8:	d9013615 	stw	r4,1240(sp)
 100accc:	003af606 	br	10098a8 <__alt_data_end+0xff8098a8>
 100acd0:	d8812604 	addi	r2,sp,1176
 100acd4:	d8800115 	stw	r2,4(sp)
 100acd8:	d9413717 	ldw	r5,1244(sp)
 100acdc:	d8812504 	addi	r2,sp,1172
 100ace0:	d8800215 	stw	r2,8(sp)
 100ace4:	d8812104 	addi	r2,sp,1156
 100ace8:	da400015 	stw	r9,0(sp)
 100acec:	d8800315 	stw	r2,12(sp)
 100acf0:	b009883a 	mov	r4,r22
 100acf4:	900d883a 	mov	r6,r18
 100acf8:	01c000c4 	movi	r7,3
 100acfc:	da013f15 	stw	r8,1276(sp)
 100ad00:	da413e15 	stw	r9,1272(sp)
 100ad04:	100b4d80 	call	100b4d8 <_dtoa_r>
 100ad08:	da413e17 	ldw	r9,1272(sp)
 100ad0c:	da013f17 	ldw	r8,1276(sp)
 100ad10:	d8813115 	stw	r2,1220(sp)
 100ad14:	4839883a 	mov	fp,r9
 100ad18:	dac13117 	ldw	r11,1220(sp)
 100ad1c:	00801184 	movi	r2,70
 100ad20:	5f15883a 	add	r10,r11,fp
 100ad24:	a8bef01e 	bne	r21,r2,100a8e8 <__alt_data_end+0xff80a8e8>
 100ad28:	59000007 	ldb	r4,0(r11)
 100ad2c:	00800c04 	movi	r2,48
 100ad30:	2080e026 	beq	r4,r2,100b0b4 <___vfprintf_internal_r+0x1f2c>
 100ad34:	d8c12617 	ldw	r3,1176(sp)
 100ad38:	50d5883a 	add	r10,r10,r3
 100ad3c:	003eea06 	br	100a8e8 <__alt_data_end+0xff80a8e8>
 100ad40:	0025883a 	mov	r18,zero
 100ad44:	003db306 	br	100a414 <__alt_data_end+0xff80a414>
 100ad48:	b009883a 	mov	r4,r22
 100ad4c:	b80b883a 	mov	r5,r23
 100ad50:	d9811e04 	addi	r6,sp,1144
 100ad54:	10122fc0 	call	10122fc <__sprint_r>
 100ad58:	103a221e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100ad5c:	d8c12017 	ldw	r3,1152(sp)
 100ad60:	da000404 	addi	r8,sp,16
 100ad64:	003daa06 	br	100a410 <__alt_data_end+0xff80a410>
 100ad68:	b009883a 	mov	r4,r22
 100ad6c:	b80b883a 	mov	r5,r23
 100ad70:	d9811e04 	addi	r6,sp,1144
 100ad74:	10122fc0 	call	10122fc <__sprint_r>
 100ad78:	103a1a1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100ad7c:	d8812617 	ldw	r2,1176(sp)
 100ad80:	d8c12017 	ldw	r3,1152(sp)
 100ad84:	da000404 	addi	r8,sp,16
 100ad88:	003e2c06 	br	100a63c <__alt_data_end+0xff80a63c>
 100ad8c:	030040b4 	movhi	r12,258
 100ad90:	6325e384 	addi	r12,r12,-26738
 100ad94:	db012c15 	stw	r12,1200(sp)
 100ad98:	dac12c17 	ldw	r11,1200(sp)
 100ad9c:	1c07883a 	add	r3,r3,r16
 100ada0:	10800044 	addi	r2,r2,1
 100ada4:	42c00015 	stw	r11,0(r8)
 100ada8:	44000115 	stw	r16,4(r8)
 100adac:	d8c12015 	stw	r3,1152(sp)
 100adb0:	d8811f15 	stw	r2,1148(sp)
 100adb4:	010001c4 	movi	r4,7
 100adb8:	20bfae16 	blt	r4,r2,100ac74 <__alt_data_end+0xff80ac74>
 100adbc:	42000204 	addi	r8,r8,8
 100adc0:	003fb406 	br	100ac94 <__alt_data_end+0xff80ac94>
 100adc4:	030040b4 	movhi	r12,258
 100adc8:	6325e784 	addi	r12,r12,-26722
 100adcc:	db013615 	stw	r12,1240(sp)
 100add0:	003b3806 	br	1009ab4 <__alt_data_end+0xff809ab4>
 100add4:	b009883a 	mov	r4,r22
 100add8:	b80b883a 	mov	r5,r23
 100addc:	d9811e04 	addi	r6,sp,1144
 100ade0:	10122fc0 	call	10122fc <__sprint_r>
 100ade4:	1039ff1e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100ade8:	d8812617 	ldw	r2,1176(sp)
 100adec:	db013317 	ldw	r12,1228(sp)
 100adf0:	d8c12017 	ldw	r3,1152(sp)
 100adf4:	da000404 	addi	r8,sp,16
 100adf8:	6085c83a 	sub	r2,r12,r2
 100adfc:	003e2006 	br	100a680 <__alt_data_end+0xff80a680>
 100ae00:	0021883a 	mov	r16,zero
 100ae04:	003e1f06 	br	100a684 <__alt_data_end+0xff80a684>
 100ae08:	00800184 	movi	r2,6
 100ae0c:	1240012e 	bgeu	r2,r9,100ae14 <___vfprintf_internal_r+0x1c8c>
 100ae10:	1013883a 	mov	r9,r2
 100ae14:	4825883a 	mov	r18,r9
 100ae18:	4805883a 	mov	r2,r9
 100ae1c:	48009e16 	blt	r9,zero,100b098 <___vfprintf_internal_r+0x1f10>
 100ae20:	d8812b15 	stw	r2,1196(sp)
 100ae24:	008040b4 	movhi	r2,258
 100ae28:	10a5d904 	addi	r2,r2,-26780
 100ae2c:	d8813115 	stw	r2,1220(sp)
 100ae30:	dcc12d15 	stw	r19,1204(sp)
 100ae34:	d8013215 	stw	zero,1224(sp)
 100ae38:	d8013415 	stw	zero,1232(sp)
 100ae3c:	0005883a 	mov	r2,zero
 100ae40:	003a6c06 	br	10097f4 <__alt_data_end+0xff8097f4>
 100ae44:	008040b4 	movhi	r2,258
 100ae48:	10a5ce04 	addi	r2,r2,-26824
 100ae4c:	d8813115 	stw	r2,1220(sp)
 100ae50:	003f4c06 	br	100ab84 <__alt_data_end+0xff80ab84>
 100ae54:	00c00b44 	movi	r3,45
 100ae58:	d8812b15 	stw	r2,1196(sp)
 100ae5c:	dc412d17 	ldw	r17,1204(sp)
 100ae60:	d8c12785 	stb	r3,1182(sp)
 100ae64:	dcc12d15 	stw	r19,1204(sp)
 100ae68:	d8013215 	stw	zero,1224(sp)
 100ae6c:	00800b44 	movi	r2,45
 100ae70:	003a5d06 	br	10097e8 <__alt_data_end+0xff8097e8>
 100ae74:	d8c12617 	ldw	r3,1176(sp)
 100ae78:	00bfff44 	movi	r2,-3
 100ae7c:	18800d16 	blt	r3,r2,100aeb4 <___vfprintf_internal_r+0x1d2c>
 100ae80:	48c00c16 	blt	r9,r3,100aeb4 <___vfprintf_internal_r+0x1d2c>
 100ae84:	d8c13415 	stw	r3,1232(sp)
 100ae88:	040019c4 	movi	r16,103
 100ae8c:	003eb506 	br	100a964 <__alt_data_end+0xff80a964>
 100ae90:	05400b44 	movi	r21,45
 100ae94:	dd412785 	stb	r21,1182(sp)
 100ae98:	003a0f06 	br	10096d8 <__alt_data_end+0xff8096d8>
 100ae9c:	010040b4 	movhi	r4,258
 100aea0:	2125e384 	addi	r4,r4,-26738
 100aea4:	d9012c15 	stw	r4,1200(sp)
 100aea8:	003cb106 	br	100a170 <__alt_data_end+0xff80a170>
 100aeac:	5005883a 	mov	r2,r10
 100aeb0:	003ea106 	br	100a938 <__alt_data_end+0xff80a938>
 100aeb4:	843fff84 	addi	r16,r16,-2
 100aeb8:	1f3fffc4 	addi	fp,r3,-1
 100aebc:	df012615 	stw	fp,1176(sp)
 100aec0:	dc0122c5 	stb	r16,1163(sp)
 100aec4:	e0009516 	blt	fp,zero,100b11c <___vfprintf_internal_r+0x1f94>
 100aec8:	00800ac4 	movi	r2,43
 100aecc:	d8812305 	stb	r2,1164(sp)
 100aed0:	00800244 	movi	r2,9
 100aed4:	1700690e 	bge	r2,fp,100b07c <___vfprintf_internal_r+0x1ef4>
 100aed8:	dd4122c4 	addi	r21,sp,1163
 100aedc:	dc012c15 	stw	r16,1200(sp)
 100aee0:	8825883a 	mov	r18,r17
 100aee4:	a821883a 	mov	r16,r21
 100aee8:	4023883a 	mov	r17,r8
 100aeec:	e009883a 	mov	r4,fp
 100aef0:	01400284 	movi	r5,10
 100aef4:	1004b980 	call	1004b98 <__modsi3>
 100aef8:	10800c04 	addi	r2,r2,48
 100aefc:	843fffc4 	addi	r16,r16,-1
 100af00:	e009883a 	mov	r4,fp
 100af04:	01400284 	movi	r5,10
 100af08:	80800005 	stb	r2,0(r16)
 100af0c:	1004b440 	call	1004b44 <__divsi3>
 100af10:	1039883a 	mov	fp,r2
 100af14:	00800244 	movi	r2,9
 100af18:	173ff416 	blt	r2,fp,100aeec <__alt_data_end+0xff80aeec>
 100af1c:	8811883a 	mov	r8,r17
 100af20:	e0800c04 	addi	r2,fp,48
 100af24:	9023883a 	mov	r17,r18
 100af28:	8025883a 	mov	r18,r16
 100af2c:	913fffc4 	addi	r4,r18,-1
 100af30:	90bfffc5 	stb	r2,-1(r18)
 100af34:	dc012c17 	ldw	r16,1200(sp)
 100af38:	25408e2e 	bgeu	r4,r21,100b174 <___vfprintf_internal_r+0x1fec>
 100af3c:	d9412384 	addi	r5,sp,1166
 100af40:	2c8bc83a 	sub	r5,r5,r18
 100af44:	d8c12344 	addi	r3,sp,1165
 100af48:	a94b883a 	add	r5,r21,r5
 100af4c:	00000106 	br	100af54 <___vfprintf_internal_r+0x1dcc>
 100af50:	20800003 	ldbu	r2,0(r4)
 100af54:	18800005 	stb	r2,0(r3)
 100af58:	18c00044 	addi	r3,r3,1
 100af5c:	21000044 	addi	r4,r4,1
 100af60:	197ffb1e 	bne	r3,r5,100af50 <__alt_data_end+0xff80af50>
 100af64:	d8812304 	addi	r2,sp,1164
 100af68:	1485c83a 	sub	r2,r2,r18
 100af6c:	d8c12344 	addi	r3,sp,1165
 100af70:	1885883a 	add	r2,r3,r2
 100af74:	dac13317 	ldw	r11,1228(sp)
 100af78:	156bc83a 	sub	r21,r2,r21
 100af7c:	dd413a15 	stw	r21,1256(sp)
 100af80:	00800044 	movi	r2,1
 100af84:	5d65883a 	add	r18,r11,r21
 100af88:	12c0770e 	bge	r2,r11,100b168 <___vfprintf_internal_r+0x1fe0>
 100af8c:	94800044 	addi	r18,r18,1
 100af90:	9005883a 	mov	r2,r18
 100af94:	90007216 	blt	r18,zero,100b160 <___vfprintf_internal_r+0x1fd8>
 100af98:	d8013415 	stw	zero,1232(sp)
 100af9c:	003e7906 	br	100a984 <__alt_data_end+0xff80a984>
 100afa0:	da412b15 	stw	r9,1196(sp)
 100afa4:	dd412783 	ldbu	r21,1182(sp)
 100afa8:	4825883a 	mov	r18,r9
 100afac:	dcc12d15 	stw	r19,1204(sp)
 100afb0:	d8013215 	stw	zero,1224(sp)
 100afb4:	d8013415 	stw	zero,1232(sp)
 100afb8:	003a0706 	br	10097d8 <__alt_data_end+0xff8097d8>
 100afbc:	b009883a 	mov	r4,r22
 100afc0:	b80b883a 	mov	r5,r23
 100afc4:	d9811e04 	addi	r6,sp,1144
 100afc8:	10122fc0 	call	10122fc <__sprint_r>
 100afcc:	1039851e 	bne	r2,zero,10095e4 <__alt_data_end+0xff8095e4>
 100afd0:	dc012617 	ldw	r16,1176(sp)
 100afd4:	d8c12017 	ldw	r3,1152(sp)
 100afd8:	d8811f17 	ldw	r2,1148(sp)
 100afdc:	da000404 	addi	r8,sp,16
 100afe0:	003ec706 	br	100ab00 <__alt_data_end+0xff80ab00>
 100afe4:	483e1a1e 	bne	r9,zero,100a850 <__alt_data_end+0xff80a850>
 100afe8:	9013883a 	mov	r9,r18
 100afec:	003e1806 	br	100a850 <__alt_data_end+0xff80a850>
 100aff0:	00c00b44 	movi	r3,45
 100aff4:	64a0003c 	xorhi	r18,r12,32768
 100aff8:	d8c12b05 	stb	r3,1196(sp)
 100affc:	003e1a06 	br	100a868 <__alt_data_end+0xff80a868>
 100b000:	4f000044 	addi	fp,r9,1
 100b004:	003e1f06 	br	100a884 <__alt_data_end+0xff80a884>
 100b008:	02400184 	movi	r9,6
 100b00c:	003e1006 	br	100a850 <__alt_data_end+0xff80a850>
 100b010:	d8c13417 	ldw	r3,1232(sp)
 100b014:	00c04b0e 	bge	zero,r3,100b144 <___vfprintf_internal_r+0x1fbc>
 100b018:	04800044 	movi	r18,1
 100b01c:	dac13317 	ldw	r11,1228(sp)
 100b020:	92e5883a 	add	r18,r18,r11
 100b024:	9005883a 	mov	r2,r18
 100b028:	903e560e 	bge	r18,zero,100a984 <__alt_data_end+0xff80a984>
 100b02c:	0005883a 	mov	r2,zero
 100b030:	003e5406 	br	100a984 <__alt_data_end+0xff80a984>
 100b034:	d8c12617 	ldw	r3,1176(sp)
 100b038:	d8c13415 	stw	r3,1232(sp)
 100b03c:	00c03b0e 	bge	zero,r3,100b12c <___vfprintf_internal_r+0x1fa4>
 100b040:	4800081e 	bne	r9,zero,100b064 <___vfprintf_internal_r+0x1edc>
 100b044:	8c40004c 	andi	r17,r17,1
 100b048:	8800061e 	bne	r17,zero,100b064 <___vfprintf_internal_r+0x1edc>
 100b04c:	1805883a 	mov	r2,r3
 100b050:	183e4b0e 	bge	r3,zero,100a980 <__alt_data_end+0xff80a980>
 100b054:	0005883a 	mov	r2,zero
 100b058:	003e4906 	br	100a980 <__alt_data_end+0xff80a980>
 100b05c:	d8812117 	ldw	r2,1156(sp)
 100b060:	003e3506 	br	100a938 <__alt_data_end+0xff80a938>
 100b064:	dac13417 	ldw	r11,1232(sp)
 100b068:	4a400044 	addi	r9,r9,1
 100b06c:	5a65883a 	add	r18,r11,r9
 100b070:	9005883a 	mov	r2,r18
 100b074:	903e430e 	bge	r18,zero,100a984 <__alt_data_end+0xff80a984>
 100b078:	003fec06 	br	100b02c <__alt_data_end+0xff80b02c>
 100b07c:	00800c04 	movi	r2,48
 100b080:	e0c00c04 	addi	r3,fp,48
 100b084:	d8812345 	stb	r2,1165(sp)
 100b088:	d8c12385 	stb	r3,1166(sp)
 100b08c:	d88123c4 	addi	r2,sp,1167
 100b090:	dd4122c4 	addi	r21,sp,1163
 100b094:	003fb706 	br	100af74 <__alt_data_end+0xff80af74>
 100b098:	0005883a 	mov	r2,zero
 100b09c:	003f6006 	br	100ae20 <__alt_data_end+0xff80ae20>
 100b0a0:	db013417 	ldw	r12,1232(sp)
 100b0a4:	64800044 	addi	r18,r12,1
 100b0a8:	9005883a 	mov	r2,r18
 100b0ac:	903e350e 	bge	r18,zero,100a984 <__alt_data_end+0xff80a984>
 100b0b0:	003fde06 	br	100b02c <__alt_data_end+0xff80b02c>
 100b0b4:	d9013717 	ldw	r4,1244(sp)
 100b0b8:	900b883a 	mov	r5,r18
 100b0bc:	000d883a 	mov	r6,zero
 100b0c0:	000f883a 	mov	r7,zero
 100b0c4:	da013f15 	stw	r8,1276(sp)
 100b0c8:	da413e15 	stw	r9,1272(sp)
 100b0cc:	da813d15 	stw	r10,1268(sp)
 100b0d0:	1003f9c0 	call	1003f9c <__eqdf2>
 100b0d4:	da013f17 	ldw	r8,1276(sp)
 100b0d8:	da413e17 	ldw	r9,1272(sp)
 100b0dc:	da813d17 	ldw	r10,1268(sp)
 100b0e0:	103f1426 	beq	r2,zero,100ad34 <__alt_data_end+0xff80ad34>
 100b0e4:	00800044 	movi	r2,1
 100b0e8:	1707c83a 	sub	r3,r2,fp
 100b0ec:	d8c12615 	stw	r3,1176(sp)
 100b0f0:	003f1106 	br	100ad38 <__alt_data_end+0xff80ad38>
 100b0f4:	dac12d17 	ldw	r11,1204(sp)
 100b0f8:	5a400017 	ldw	r9,0(r11)
 100b0fc:	5ac00104 	addi	r11,r11,4
 100b100:	dac12d15 	stw	r11,1204(sp)
 100b104:	483ec60e 	bge	r9,zero,100ac20 <__alt_data_end+0xff80ac20>
 100b108:	027fffc4 	movi	r9,-1
 100b10c:	1c000047 	ldb	r16,1(r3)
 100b110:	00388406 	br	1009324 <__alt_data_end+0xff809324>
 100b114:	043fffc4 	movi	r16,-1
 100b118:	00391006 	br	100955c <__alt_data_end+0xff80955c>
 100b11c:	00800b44 	movi	r2,45
 100b120:	0739c83a 	sub	fp,zero,fp
 100b124:	d8812305 	stb	r2,1164(sp)
 100b128:	003f6906 	br	100aed0 <__alt_data_end+0xff80aed0>
 100b12c:	4800081e 	bne	r9,zero,100b150 <___vfprintf_internal_r+0x1fc8>
 100b130:	8c40004c 	andi	r17,r17,1
 100b134:	8800061e 	bne	r17,zero,100b150 <___vfprintf_internal_r+0x1fc8>
 100b138:	00800044 	movi	r2,1
 100b13c:	1025883a 	mov	r18,r2
 100b140:	003e1006 	br	100a984 <__alt_data_end+0xff80a984>
 100b144:	04800084 	movi	r18,2
 100b148:	90e5c83a 	sub	r18,r18,r3
 100b14c:	003fb306 	br	100b01c <__alt_data_end+0xff80b01c>
 100b150:	4c800084 	addi	r18,r9,2
 100b154:	9005883a 	mov	r2,r18
 100b158:	903e0a0e 	bge	r18,zero,100a984 <__alt_data_end+0xff80a984>
 100b15c:	003fb306 	br	100b02c <__alt_data_end+0xff80b02c>
 100b160:	0005883a 	mov	r2,zero
 100b164:	003f8c06 	br	100af98 <__alt_data_end+0xff80af98>
 100b168:	88a2703a 	and	r17,r17,r2
 100b16c:	883f8826 	beq	r17,zero,100af90 <__alt_data_end+0xff80af90>
 100b170:	003f8606 	br	100af8c <__alt_data_end+0xff80af8c>
 100b174:	d8812344 	addi	r2,sp,1165
 100b178:	003f7e06 	br	100af74 <__alt_data_end+0xff80af74>
 100b17c:	d8c12617 	ldw	r3,1176(sp)
 100b180:	003f4d06 	br	100aeb8 <__alt_data_end+0xff80aeb8>

0100b184 <__vfprintf_internal>:
 100b184:	2007883a 	mov	r3,r4
 100b188:	010040b4 	movhi	r4,258
 100b18c:	212d3804 	addi	r4,r4,-19232
 100b190:	21000017 	ldw	r4,0(r4)
 100b194:	2805883a 	mov	r2,r5
 100b198:	300f883a 	mov	r7,r6
 100b19c:	180b883a 	mov	r5,r3
 100b1a0:	100d883a 	mov	r6,r2
 100b1a4:	10091881 	jmpi	1009188 <___vfprintf_internal_r>

0100b1a8 <__swsetup_r>:
 100b1a8:	008040b4 	movhi	r2,258
 100b1ac:	defffd04 	addi	sp,sp,-12
 100b1b0:	10ad3804 	addi	r2,r2,-19232
 100b1b4:	dc400115 	stw	r17,4(sp)
 100b1b8:	2023883a 	mov	r17,r4
 100b1bc:	11000017 	ldw	r4,0(r2)
 100b1c0:	dc000015 	stw	r16,0(sp)
 100b1c4:	dfc00215 	stw	ra,8(sp)
 100b1c8:	2821883a 	mov	r16,r5
 100b1cc:	20000226 	beq	r4,zero,100b1d8 <__swsetup_r+0x30>
 100b1d0:	20c00e17 	ldw	r3,56(r4)
 100b1d4:	18002e26 	beq	r3,zero,100b290 <__swsetup_r+0xe8>
 100b1d8:	8080030b 	ldhu	r2,12(r16)
 100b1dc:	10c0020c 	andi	r3,r2,8
 100b1e0:	100d883a 	mov	r6,r2
 100b1e4:	18000f26 	beq	r3,zero,100b224 <__swsetup_r+0x7c>
 100b1e8:	80c00417 	ldw	r3,16(r16)
 100b1ec:	18001526 	beq	r3,zero,100b244 <__swsetup_r+0x9c>
 100b1f0:	1100004c 	andi	r4,r2,1
 100b1f4:	20001c1e 	bne	r4,zero,100b268 <__swsetup_r+0xc0>
 100b1f8:	1080008c 	andi	r2,r2,2
 100b1fc:	1000261e 	bne	r2,zero,100b298 <__swsetup_r+0xf0>
 100b200:	80800517 	ldw	r2,20(r16)
 100b204:	80800215 	stw	r2,8(r16)
 100b208:	18001c26 	beq	r3,zero,100b27c <__swsetup_r+0xd4>
 100b20c:	0005883a 	mov	r2,zero
 100b210:	dfc00217 	ldw	ra,8(sp)
 100b214:	dc400117 	ldw	r17,4(sp)
 100b218:	dc000017 	ldw	r16,0(sp)
 100b21c:	dec00304 	addi	sp,sp,12
 100b220:	f800283a 	ret
 100b224:	3080040c 	andi	r2,r6,16
 100b228:	10001726 	beq	r2,zero,100b288 <__swsetup_r+0xe0>
 100b22c:	3080010c 	andi	r2,r6,4
 100b230:	10001b1e 	bne	r2,zero,100b2a0 <__swsetup_r+0xf8>
 100b234:	80c00417 	ldw	r3,16(r16)
 100b238:	30800214 	ori	r2,r6,8
 100b23c:	8080030d 	sth	r2,12(r16)
 100b240:	183feb1e 	bne	r3,zero,100b1f0 <__alt_data_end+0xff80b1f0>
 100b244:	1140a00c 	andi	r5,r2,640
 100b248:	01008004 	movi	r4,512
 100b24c:	293fe826 	beq	r5,r4,100b1f0 <__alt_data_end+0xff80b1f0>
 100b250:	8809883a 	mov	r4,r17
 100b254:	800b883a 	mov	r5,r16
 100b258:	100e9340 	call	100e934 <__smakebuf_r>
 100b25c:	8080030b 	ldhu	r2,12(r16)
 100b260:	80c00417 	ldw	r3,16(r16)
 100b264:	003fe206 	br	100b1f0 <__alt_data_end+0xff80b1f0>
 100b268:	80800517 	ldw	r2,20(r16)
 100b26c:	80000215 	stw	zero,8(r16)
 100b270:	0085c83a 	sub	r2,zero,r2
 100b274:	80800615 	stw	r2,24(r16)
 100b278:	183fe41e 	bne	r3,zero,100b20c <__alt_data_end+0xff80b20c>
 100b27c:	8080030b 	ldhu	r2,12(r16)
 100b280:	1080200c 	andi	r2,r2,128
 100b284:	103fe226 	beq	r2,zero,100b210 <__alt_data_end+0xff80b210>
 100b288:	00bfffc4 	movi	r2,-1
 100b28c:	003fe006 	br	100b210 <__alt_data_end+0xff80b210>
 100b290:	100d1a80 	call	100d1a8 <__sinit>
 100b294:	003fd006 	br	100b1d8 <__alt_data_end+0xff80b1d8>
 100b298:	0005883a 	mov	r2,zero
 100b29c:	003fd906 	br	100b204 <__alt_data_end+0xff80b204>
 100b2a0:	81400c17 	ldw	r5,48(r16)
 100b2a4:	28000626 	beq	r5,zero,100b2c0 <__swsetup_r+0x118>
 100b2a8:	80801004 	addi	r2,r16,64
 100b2ac:	28800326 	beq	r5,r2,100b2bc <__swsetup_r+0x114>
 100b2b0:	8809883a 	mov	r4,r17
 100b2b4:	100d31c0 	call	100d31c <_free_r>
 100b2b8:	8180030b 	ldhu	r6,12(r16)
 100b2bc:	80000c15 	stw	zero,48(r16)
 100b2c0:	80c00417 	ldw	r3,16(r16)
 100b2c4:	00bff6c4 	movi	r2,-37
 100b2c8:	118c703a 	and	r6,r2,r6
 100b2cc:	80000115 	stw	zero,4(r16)
 100b2d0:	80c00015 	stw	r3,0(r16)
 100b2d4:	003fd806 	br	100b238 <__alt_data_end+0xff80b238>

0100b2d8 <quorem>:
 100b2d8:	defff704 	addi	sp,sp,-36
 100b2dc:	dc800215 	stw	r18,8(sp)
 100b2e0:	20800417 	ldw	r2,16(r4)
 100b2e4:	2c800417 	ldw	r18,16(r5)
 100b2e8:	dfc00815 	stw	ra,32(sp)
 100b2ec:	ddc00715 	stw	r23,28(sp)
 100b2f0:	dd800615 	stw	r22,24(sp)
 100b2f4:	dd400515 	stw	r21,20(sp)
 100b2f8:	dd000415 	stw	r20,16(sp)
 100b2fc:	dcc00315 	stw	r19,12(sp)
 100b300:	dc400115 	stw	r17,4(sp)
 100b304:	dc000015 	stw	r16,0(sp)
 100b308:	14807116 	blt	r2,r18,100b4d0 <quorem+0x1f8>
 100b30c:	94bfffc4 	addi	r18,r18,-1
 100b310:	94ad883a 	add	r22,r18,r18
 100b314:	b5ad883a 	add	r22,r22,r22
 100b318:	2c400504 	addi	r17,r5,20
 100b31c:	8da9883a 	add	r20,r17,r22
 100b320:	25400504 	addi	r21,r4,20
 100b324:	282f883a 	mov	r23,r5
 100b328:	adad883a 	add	r22,r21,r22
 100b32c:	a1400017 	ldw	r5,0(r20)
 100b330:	2021883a 	mov	r16,r4
 100b334:	b1000017 	ldw	r4,0(r22)
 100b338:	29400044 	addi	r5,r5,1
 100b33c:	1004bf40 	call	1004bf4 <__udivsi3>
 100b340:	1027883a 	mov	r19,r2
 100b344:	10002c26 	beq	r2,zero,100b3f8 <quorem+0x120>
 100b348:	a813883a 	mov	r9,r21
 100b34c:	8811883a 	mov	r8,r17
 100b350:	0009883a 	mov	r4,zero
 100b354:	000d883a 	mov	r6,zero
 100b358:	41c00017 	ldw	r7,0(r8)
 100b35c:	49400017 	ldw	r5,0(r9)
 100b360:	42000104 	addi	r8,r8,4
 100b364:	38bfffcc 	andi	r2,r7,65535
 100b368:	14c5383a 	mul	r2,r2,r19
 100b36c:	380ed43a 	srli	r7,r7,16
 100b370:	28ffffcc 	andi	r3,r5,65535
 100b374:	2085883a 	add	r2,r4,r2
 100b378:	1008d43a 	srli	r4,r2,16
 100b37c:	3ccf383a 	mul	r7,r7,r19
 100b380:	198d883a 	add	r6,r3,r6
 100b384:	10ffffcc 	andi	r3,r2,65535
 100b388:	30c7c83a 	sub	r3,r6,r3
 100b38c:	280ad43a 	srli	r5,r5,16
 100b390:	21c9883a 	add	r4,r4,r7
 100b394:	180dd43a 	srai	r6,r3,16
 100b398:	20bfffcc 	andi	r2,r4,65535
 100b39c:	288bc83a 	sub	r5,r5,r2
 100b3a0:	298b883a 	add	r5,r5,r6
 100b3a4:	280e943a 	slli	r7,r5,16
 100b3a8:	18ffffcc 	andi	r3,r3,65535
 100b3ac:	2008d43a 	srli	r4,r4,16
 100b3b0:	38ceb03a 	or	r7,r7,r3
 100b3b4:	49c00015 	stw	r7,0(r9)
 100b3b8:	280dd43a 	srai	r6,r5,16
 100b3bc:	4a400104 	addi	r9,r9,4
 100b3c0:	a23fe52e 	bgeu	r20,r8,100b358 <__alt_data_end+0xff80b358>
 100b3c4:	b0800017 	ldw	r2,0(r22)
 100b3c8:	10000b1e 	bne	r2,zero,100b3f8 <quorem+0x120>
 100b3cc:	b0bfff04 	addi	r2,r22,-4
 100b3d0:	a880082e 	bgeu	r21,r2,100b3f4 <quorem+0x11c>
 100b3d4:	b0ffff17 	ldw	r3,-4(r22)
 100b3d8:	18000326 	beq	r3,zero,100b3e8 <quorem+0x110>
 100b3dc:	00000506 	br	100b3f4 <quorem+0x11c>
 100b3e0:	10c00017 	ldw	r3,0(r2)
 100b3e4:	1800031e 	bne	r3,zero,100b3f4 <quorem+0x11c>
 100b3e8:	10bfff04 	addi	r2,r2,-4
 100b3ec:	94bfffc4 	addi	r18,r18,-1
 100b3f0:	a8bffb36 	bltu	r21,r2,100b3e0 <__alt_data_end+0xff80b3e0>
 100b3f4:	84800415 	stw	r18,16(r16)
 100b3f8:	8009883a 	mov	r4,r16
 100b3fc:	b80b883a 	mov	r5,r23
 100b400:	10100700 	call	1010070 <__mcmp>
 100b404:	10002616 	blt	r2,zero,100b4a0 <quorem+0x1c8>
 100b408:	9cc00044 	addi	r19,r19,1
 100b40c:	a80d883a 	mov	r6,r21
 100b410:	000b883a 	mov	r5,zero
 100b414:	31000017 	ldw	r4,0(r6)
 100b418:	88800017 	ldw	r2,0(r17)
 100b41c:	31800104 	addi	r6,r6,4
 100b420:	20ffffcc 	andi	r3,r4,65535
 100b424:	194b883a 	add	r5,r3,r5
 100b428:	10ffffcc 	andi	r3,r2,65535
 100b42c:	28c7c83a 	sub	r3,r5,r3
 100b430:	1004d43a 	srli	r2,r2,16
 100b434:	2008d43a 	srli	r4,r4,16
 100b438:	180bd43a 	srai	r5,r3,16
 100b43c:	18ffffcc 	andi	r3,r3,65535
 100b440:	2089c83a 	sub	r4,r4,r2
 100b444:	2149883a 	add	r4,r4,r5
 100b448:	2004943a 	slli	r2,r4,16
 100b44c:	8c400104 	addi	r17,r17,4
 100b450:	200bd43a 	srai	r5,r4,16
 100b454:	10c6b03a 	or	r3,r2,r3
 100b458:	30ffff15 	stw	r3,-4(r6)
 100b45c:	a47fed2e 	bgeu	r20,r17,100b414 <__alt_data_end+0xff80b414>
 100b460:	9485883a 	add	r2,r18,r18
 100b464:	1085883a 	add	r2,r2,r2
 100b468:	a887883a 	add	r3,r21,r2
 100b46c:	18800017 	ldw	r2,0(r3)
 100b470:	10000b1e 	bne	r2,zero,100b4a0 <quorem+0x1c8>
 100b474:	18bfff04 	addi	r2,r3,-4
 100b478:	a880082e 	bgeu	r21,r2,100b49c <quorem+0x1c4>
 100b47c:	18ffff17 	ldw	r3,-4(r3)
 100b480:	18000326 	beq	r3,zero,100b490 <quorem+0x1b8>
 100b484:	00000506 	br	100b49c <quorem+0x1c4>
 100b488:	10c00017 	ldw	r3,0(r2)
 100b48c:	1800031e 	bne	r3,zero,100b49c <quorem+0x1c4>
 100b490:	10bfff04 	addi	r2,r2,-4
 100b494:	94bfffc4 	addi	r18,r18,-1
 100b498:	a8bffb36 	bltu	r21,r2,100b488 <__alt_data_end+0xff80b488>
 100b49c:	84800415 	stw	r18,16(r16)
 100b4a0:	9805883a 	mov	r2,r19
 100b4a4:	dfc00817 	ldw	ra,32(sp)
 100b4a8:	ddc00717 	ldw	r23,28(sp)
 100b4ac:	dd800617 	ldw	r22,24(sp)
 100b4b0:	dd400517 	ldw	r21,20(sp)
 100b4b4:	dd000417 	ldw	r20,16(sp)
 100b4b8:	dcc00317 	ldw	r19,12(sp)
 100b4bc:	dc800217 	ldw	r18,8(sp)
 100b4c0:	dc400117 	ldw	r17,4(sp)
 100b4c4:	dc000017 	ldw	r16,0(sp)
 100b4c8:	dec00904 	addi	sp,sp,36
 100b4cc:	f800283a 	ret
 100b4d0:	0005883a 	mov	r2,zero
 100b4d4:	003ff306 	br	100b4a4 <__alt_data_end+0xff80b4a4>

0100b4d8 <_dtoa_r>:
 100b4d8:	20801017 	ldw	r2,64(r4)
 100b4dc:	deffde04 	addi	sp,sp,-136
 100b4e0:	dd401d15 	stw	r21,116(sp)
 100b4e4:	dcc01b15 	stw	r19,108(sp)
 100b4e8:	dc801a15 	stw	r18,104(sp)
 100b4ec:	dc401915 	stw	r17,100(sp)
 100b4f0:	dc001815 	stw	r16,96(sp)
 100b4f4:	dfc02115 	stw	ra,132(sp)
 100b4f8:	df002015 	stw	fp,128(sp)
 100b4fc:	ddc01f15 	stw	r23,124(sp)
 100b500:	dd801e15 	stw	r22,120(sp)
 100b504:	dd001c15 	stw	r20,112(sp)
 100b508:	d9c00315 	stw	r7,12(sp)
 100b50c:	2021883a 	mov	r16,r4
 100b510:	302b883a 	mov	r21,r6
 100b514:	2825883a 	mov	r18,r5
 100b518:	dc402417 	ldw	r17,144(sp)
 100b51c:	3027883a 	mov	r19,r6
 100b520:	10000826 	beq	r2,zero,100b544 <_dtoa_r+0x6c>
 100b524:	21801117 	ldw	r6,68(r4)
 100b528:	00c00044 	movi	r3,1
 100b52c:	100b883a 	mov	r5,r2
 100b530:	1986983a 	sll	r3,r3,r6
 100b534:	11800115 	stw	r6,4(r2)
 100b538:	10c00215 	stw	r3,8(r2)
 100b53c:	100f8580 	call	100f858 <_Bfree>
 100b540:	80001015 	stw	zero,64(r16)
 100b544:	a8002d16 	blt	r21,zero,100b5fc <_dtoa_r+0x124>
 100b548:	88000015 	stw	zero,0(r17)
 100b54c:	a8dffc2c 	andhi	r3,r21,32752
 100b550:	009ffc34 	movhi	r2,32752
 100b554:	18801b26 	beq	r3,r2,100b5c4 <_dtoa_r+0xec>
 100b558:	9009883a 	mov	r4,r18
 100b55c:	980b883a 	mov	r5,r19
 100b560:	000d883a 	mov	r6,zero
 100b564:	000f883a 	mov	r7,zero
 100b568:	1003f9c0 	call	1003f9c <__eqdf2>
 100b56c:	10002a1e 	bne	r2,zero,100b618 <_dtoa_r+0x140>
 100b570:	d8c02317 	ldw	r3,140(sp)
 100b574:	d9002517 	ldw	r4,148(sp)
 100b578:	00800044 	movi	r2,1
 100b57c:	18800015 	stw	r2,0(r3)
 100b580:	2001a226 	beq	r4,zero,100bc0c <_dtoa_r+0x734>
 100b584:	008040b4 	movhi	r2,258
 100b588:	10a5db44 	addi	r2,r2,-26771
 100b58c:	20800015 	stw	r2,0(r4)
 100b590:	10bfffc4 	addi	r2,r2,-1
 100b594:	dfc02117 	ldw	ra,132(sp)
 100b598:	df002017 	ldw	fp,128(sp)
 100b59c:	ddc01f17 	ldw	r23,124(sp)
 100b5a0:	dd801e17 	ldw	r22,120(sp)
 100b5a4:	dd401d17 	ldw	r21,116(sp)
 100b5a8:	dd001c17 	ldw	r20,112(sp)
 100b5ac:	dcc01b17 	ldw	r19,108(sp)
 100b5b0:	dc801a17 	ldw	r18,104(sp)
 100b5b4:	dc401917 	ldw	r17,100(sp)
 100b5b8:	dc001817 	ldw	r16,96(sp)
 100b5bc:	dec02204 	addi	sp,sp,136
 100b5c0:	f800283a 	ret
 100b5c4:	d8c02317 	ldw	r3,140(sp)
 100b5c8:	0089c3c4 	movi	r2,9999
 100b5cc:	18800015 	stw	r2,0(r3)
 100b5d0:	90017c26 	beq	r18,zero,100bbc4 <_dtoa_r+0x6ec>
 100b5d4:	008040b4 	movhi	r2,258
 100b5d8:	10a5ef04 	addi	r2,r2,-26692
 100b5dc:	d9002517 	ldw	r4,148(sp)
 100b5e0:	203fec26 	beq	r4,zero,100b594 <__alt_data_end+0xff80b594>
 100b5e4:	10c000c7 	ldb	r3,3(r2)
 100b5e8:	18017d1e 	bne	r3,zero,100bbe0 <_dtoa_r+0x708>
 100b5ec:	10c000c4 	addi	r3,r2,3
 100b5f0:	d9802517 	ldw	r6,148(sp)
 100b5f4:	30c00015 	stw	r3,0(r6)
 100b5f8:	003fe606 	br	100b594 <__alt_data_end+0xff80b594>
 100b5fc:	04e00034 	movhi	r19,32768
 100b600:	9cffffc4 	addi	r19,r19,-1
 100b604:	00800044 	movi	r2,1
 100b608:	ace6703a 	and	r19,r21,r19
 100b60c:	88800015 	stw	r2,0(r17)
 100b610:	982b883a 	mov	r21,r19
 100b614:	003fcd06 	br	100b54c <__alt_data_end+0xff80b54c>
 100b618:	d8800204 	addi	r2,sp,8
 100b61c:	a822d53a 	srli	r17,r21,20
 100b620:	d8800015 	stw	r2,0(sp)
 100b624:	8009883a 	mov	r4,r16
 100b628:	900b883a 	mov	r5,r18
 100b62c:	980d883a 	mov	r6,r19
 100b630:	d9c00104 	addi	r7,sp,4
 100b634:	10103e40 	call	10103e4 <__d2b>
 100b638:	1039883a 	mov	fp,r2
 100b63c:	88016a1e 	bne	r17,zero,100bbe8 <_dtoa_r+0x710>
 100b640:	dd000217 	ldw	r20,8(sp)
 100b644:	dc400117 	ldw	r17,4(sp)
 100b648:	00befbc4 	movi	r2,-1041
 100b64c:	a463883a 	add	r17,r20,r17
 100b650:	8882ea16 	blt	r17,r2,100c1fc <_dtoa_r+0xd24>
 100b654:	00bf0384 	movi	r2,-1010
 100b658:	1445c83a 	sub	r2,r2,r17
 100b65c:	89010484 	addi	r4,r17,1042
 100b660:	a8aa983a 	sll	r21,r21,r2
 100b664:	9108d83a 	srl	r4,r18,r4
 100b668:	a908b03a 	or	r4,r21,r4
 100b66c:	10161700 	call	1016170 <__floatunsidf>
 100b670:	017f8434 	movhi	r5,65040
 100b674:	01800044 	movi	r6,1
 100b678:	1009883a 	mov	r4,r2
 100b67c:	194b883a 	add	r5,r3,r5
 100b680:	8c7fffc4 	addi	r17,r17,-1
 100b684:	d9800f15 	stw	r6,60(sp)
 100b688:	000d883a 	mov	r6,zero
 100b68c:	01cffe34 	movhi	r7,16376
 100b690:	10157d00 	call	10157d0 <__subdf3>
 100b694:	0198dbf4 	movhi	r6,25455
 100b698:	01cff4f4 	movhi	r7,16339
 100b69c:	1009883a 	mov	r4,r2
 100b6a0:	180b883a 	mov	r5,r3
 100b6a4:	3190d844 	addi	r6,r6,17249
 100b6a8:	39e1e9c4 	addi	r7,r7,-30809
 100b6ac:	10040200 	call	1004020 <__muldf3>
 100b6b0:	01a2d874 	movhi	r6,35681
 100b6b4:	01cff1f4 	movhi	r7,16327
 100b6b8:	180b883a 	mov	r5,r3
 100b6bc:	31b22cc4 	addi	r6,r6,-14157
 100b6c0:	39e28a04 	addi	r7,r7,-30168
 100b6c4:	1009883a 	mov	r4,r2
 100b6c8:	1014d740 	call	1014d74 <__adddf3>
 100b6cc:	8809883a 	mov	r4,r17
 100b6d0:	102d883a 	mov	r22,r2
 100b6d4:	182b883a 	mov	r21,r3
 100b6d8:	10160a00 	call	10160a0 <__floatsidf>
 100b6dc:	019427f4 	movhi	r6,20639
 100b6e0:	01cff4f4 	movhi	r7,16339
 100b6e4:	1009883a 	mov	r4,r2
 100b6e8:	180b883a 	mov	r5,r3
 100b6ec:	319e7ec4 	addi	r6,r6,31227
 100b6f0:	39d104c4 	addi	r7,r7,17427
 100b6f4:	10040200 	call	1004020 <__muldf3>
 100b6f8:	b009883a 	mov	r4,r22
 100b6fc:	a80b883a 	mov	r5,r21
 100b700:	100d883a 	mov	r6,r2
 100b704:	180f883a 	mov	r7,r3
 100b708:	1014d740 	call	1014d74 <__adddf3>
 100b70c:	1009883a 	mov	r4,r2
 100b710:	180b883a 	mov	r5,r3
 100b714:	102d883a 	mov	r22,r2
 100b718:	182b883a 	mov	r21,r3
 100b71c:	10047440 	call	1004744 <__fixdfsi>
 100b720:	b009883a 	mov	r4,r22
 100b724:	a80b883a 	mov	r5,r21
 100b728:	000d883a 	mov	r6,zero
 100b72c:	000f883a 	mov	r7,zero
 100b730:	d8800515 	stw	r2,20(sp)
 100b734:	10156f00 	call	10156f0 <__ledf2>
 100b738:	10023116 	blt	r2,zero,100c000 <_dtoa_r+0xb28>
 100b73c:	d8c00517 	ldw	r3,20(sp)
 100b740:	00800584 	movi	r2,22
 100b744:	10c21f36 	bltu	r2,r3,100bfc4 <_dtoa_r+0xaec>
 100b748:	180490fa 	slli	r2,r3,3
 100b74c:	00c040b4 	movhi	r3,258
 100b750:	18e61104 	addi	r3,r3,-26556
 100b754:	1885883a 	add	r2,r3,r2
 100b758:	11000017 	ldw	r4,0(r2)
 100b75c:	11400117 	ldw	r5,4(r2)
 100b760:	900d883a 	mov	r6,r18
 100b764:	980f883a 	mov	r7,r19
 100b768:	10156100 	call	1015610 <__gedf2>
 100b76c:	0082a70e 	bge	zero,r2,100c20c <_dtoa_r+0xd34>
 100b770:	d9000517 	ldw	r4,20(sp)
 100b774:	d8000c15 	stw	zero,48(sp)
 100b778:	213fffc4 	addi	r4,r4,-1
 100b77c:	d9000515 	stw	r4,20(sp)
 100b780:	a463c83a 	sub	r17,r20,r17
 100b784:	8dbfffc4 	addi	r22,r17,-1
 100b788:	b0021916 	blt	r22,zero,100bff0 <_dtoa_r+0xb18>
 100b78c:	d8000815 	stw	zero,32(sp)
 100b790:	d8800517 	ldw	r2,20(sp)
 100b794:	10020e16 	blt	r2,zero,100bfd0 <_dtoa_r+0xaf8>
 100b798:	b0ad883a 	add	r22,r22,r2
 100b79c:	d8800a15 	stw	r2,40(sp)
 100b7a0:	d8000915 	stw	zero,36(sp)
 100b7a4:	d8c00317 	ldw	r3,12(sp)
 100b7a8:	00800244 	movi	r2,9
 100b7ac:	10c11a36 	bltu	r2,r3,100bc18 <_dtoa_r+0x740>
 100b7b0:	00800144 	movi	r2,5
 100b7b4:	10c4fc0e 	bge	r2,r3,100cba8 <_dtoa_r+0x16d0>
 100b7b8:	18ffff04 	addi	r3,r3,-4
 100b7bc:	d8c00315 	stw	r3,12(sp)
 100b7c0:	0029883a 	mov	r20,zero
 100b7c4:	d9800317 	ldw	r6,12(sp)
 100b7c8:	008000c4 	movi	r2,3
 100b7cc:	3083bd26 	beq	r6,r2,100c6c4 <_dtoa_r+0x11ec>
 100b7d0:	1183670e 	bge	r2,r6,100c570 <_dtoa_r+0x1098>
 100b7d4:	d8c00317 	ldw	r3,12(sp)
 100b7d8:	00800104 	movi	r2,4
 100b7dc:	1882e726 	beq	r3,r2,100c37c <_dtoa_r+0xea4>
 100b7e0:	00800144 	movi	r2,5
 100b7e4:	1884f21e 	bne	r3,r2,100cbb0 <_dtoa_r+0x16d8>
 100b7e8:	00800044 	movi	r2,1
 100b7ec:	d8800b15 	stw	r2,44(sp)
 100b7f0:	d8c02217 	ldw	r3,136(sp)
 100b7f4:	d9000517 	ldw	r4,20(sp)
 100b7f8:	1907883a 	add	r3,r3,r4
 100b7fc:	19800044 	addi	r6,r3,1
 100b800:	d8c00d15 	stw	r3,52(sp)
 100b804:	d9800615 	stw	r6,24(sp)
 100b808:	0183c30e 	bge	zero,r6,100c718 <_dtoa_r+0x1240>
 100b80c:	d9800617 	ldw	r6,24(sp)
 100b810:	3023883a 	mov	r17,r6
 100b814:	80001115 	stw	zero,68(r16)
 100b818:	008005c4 	movi	r2,23
 100b81c:	1184f62e 	bgeu	r2,r6,100cbf8 <_dtoa_r+0x1720>
 100b820:	00c00044 	movi	r3,1
 100b824:	00800104 	movi	r2,4
 100b828:	1085883a 	add	r2,r2,r2
 100b82c:	11000504 	addi	r4,r2,20
 100b830:	180b883a 	mov	r5,r3
 100b834:	18c00044 	addi	r3,r3,1
 100b838:	313ffb2e 	bgeu	r6,r4,100b828 <__alt_data_end+0xff80b828>
 100b83c:	81401115 	stw	r5,68(r16)
 100b840:	8009883a 	mov	r4,r16
 100b844:	100f7b00 	call	100f7b0 <_Balloc>
 100b848:	d8800715 	stw	r2,28(sp)
 100b84c:	80801015 	stw	r2,64(r16)
 100b850:	00800384 	movi	r2,14
 100b854:	1440fd36 	bltu	r2,r17,100bc4c <_dtoa_r+0x774>
 100b858:	a000fc26 	beq	r20,zero,100bc4c <_dtoa_r+0x774>
 100b85c:	d8800517 	ldw	r2,20(sp)
 100b860:	0083b90e 	bge	zero,r2,100c748 <_dtoa_r+0x1270>
 100b864:	d8c00517 	ldw	r3,20(sp)
 100b868:	108003cc 	andi	r2,r2,15
 100b86c:	100490fa 	slli	r2,r2,3
 100b870:	182fd13a 	srai	r23,r3,4
 100b874:	00c040b4 	movhi	r3,258
 100b878:	18e61104 	addi	r3,r3,-26556
 100b87c:	1885883a 	add	r2,r3,r2
 100b880:	b8c0040c 	andi	r3,r23,16
 100b884:	12c00017 	ldw	r11,0(r2)
 100b888:	12800117 	ldw	r10,4(r2)
 100b88c:	18039726 	beq	r3,zero,100c6ec <_dtoa_r+0x1214>
 100b890:	008040b4 	movhi	r2,258
 100b894:	10a60704 	addi	r2,r2,-26596
 100b898:	11800817 	ldw	r6,32(r2)
 100b89c:	11c00917 	ldw	r7,36(r2)
 100b8a0:	9009883a 	mov	r4,r18
 100b8a4:	980b883a 	mov	r5,r19
 100b8a8:	da801615 	stw	r10,88(sp)
 100b8ac:	dac01515 	stw	r11,84(sp)
 100b8b0:	10036d00 	call	10036d0 <__divdf3>
 100b8b4:	da801617 	ldw	r10,88(sp)
 100b8b8:	dac01517 	ldw	r11,84(sp)
 100b8bc:	bdc003cc 	andi	r23,r23,15
 100b8c0:	044000c4 	movi	r17,3
 100b8c4:	d8800e15 	stw	r2,56(sp)
 100b8c8:	182b883a 	mov	r21,r3
 100b8cc:	b8001126 	beq	r23,zero,100b914 <_dtoa_r+0x43c>
 100b8d0:	050040b4 	movhi	r20,258
 100b8d4:	a5260704 	addi	r20,r20,-26596
 100b8d8:	5805883a 	mov	r2,r11
 100b8dc:	5007883a 	mov	r3,r10
 100b8e0:	b980004c 	andi	r6,r23,1
 100b8e4:	1009883a 	mov	r4,r2
 100b8e8:	b82fd07a 	srai	r23,r23,1
 100b8ec:	180b883a 	mov	r5,r3
 100b8f0:	30000426 	beq	r6,zero,100b904 <_dtoa_r+0x42c>
 100b8f4:	a1800017 	ldw	r6,0(r20)
 100b8f8:	a1c00117 	ldw	r7,4(r20)
 100b8fc:	8c400044 	addi	r17,r17,1
 100b900:	10040200 	call	1004020 <__muldf3>
 100b904:	a5000204 	addi	r20,r20,8
 100b908:	b83ff51e 	bne	r23,zero,100b8e0 <__alt_data_end+0xff80b8e0>
 100b90c:	1017883a 	mov	r11,r2
 100b910:	1815883a 	mov	r10,r3
 100b914:	d9000e17 	ldw	r4,56(sp)
 100b918:	a80b883a 	mov	r5,r21
 100b91c:	580d883a 	mov	r6,r11
 100b920:	500f883a 	mov	r7,r10
 100b924:	10036d00 	call	10036d0 <__divdf3>
 100b928:	1029883a 	mov	r20,r2
 100b92c:	182b883a 	mov	r21,r3
 100b930:	d9800c17 	ldw	r6,48(sp)
 100b934:	30000626 	beq	r6,zero,100b950 <_dtoa_r+0x478>
 100b938:	a009883a 	mov	r4,r20
 100b93c:	a80b883a 	mov	r5,r21
 100b940:	000d883a 	mov	r6,zero
 100b944:	01cffc34 	movhi	r7,16368
 100b948:	10156f00 	call	10156f0 <__ledf2>
 100b94c:	10043216 	blt	r2,zero,100ca18 <_dtoa_r+0x1540>
 100b950:	8809883a 	mov	r4,r17
 100b954:	10160a00 	call	10160a0 <__floatsidf>
 100b958:	1009883a 	mov	r4,r2
 100b95c:	180b883a 	mov	r5,r3
 100b960:	a00d883a 	mov	r6,r20
 100b964:	a80f883a 	mov	r7,r21
 100b968:	10040200 	call	1004020 <__muldf3>
 100b96c:	000d883a 	mov	r6,zero
 100b970:	1009883a 	mov	r4,r2
 100b974:	180b883a 	mov	r5,r3
 100b978:	01d00734 	movhi	r7,16412
 100b97c:	1014d740 	call	1014d74 <__adddf3>
 100b980:	1023883a 	mov	r17,r2
 100b984:	d9800617 	ldw	r6,24(sp)
 100b988:	00bf3034 	movhi	r2,64704
 100b98c:	1885883a 	add	r2,r3,r2
 100b990:	d8800e15 	stw	r2,56(sp)
 100b994:	30032e26 	beq	r6,zero,100c650 <_dtoa_r+0x1178>
 100b998:	d8c00517 	ldw	r3,20(sp)
 100b99c:	da800617 	ldw	r10,24(sp)
 100b9a0:	d8c01215 	stw	r3,72(sp)
 100b9a4:	d9000b17 	ldw	r4,44(sp)
 100b9a8:	2003b026 	beq	r4,zero,100c86c <_dtoa_r+0x1394>
 100b9ac:	50bfffc4 	addi	r2,r10,-1
 100b9b0:	100490fa 	slli	r2,r2,3
 100b9b4:	00c040b4 	movhi	r3,258
 100b9b8:	18e61104 	addi	r3,r3,-26556
 100b9bc:	1885883a 	add	r2,r3,r2
 100b9c0:	11800017 	ldw	r6,0(r2)
 100b9c4:	11c00117 	ldw	r7,4(r2)
 100b9c8:	d8800717 	ldw	r2,28(sp)
 100b9cc:	0009883a 	mov	r4,zero
 100b9d0:	014ff834 	movhi	r5,16352
 100b9d4:	da801615 	stw	r10,88(sp)
 100b9d8:	15c00044 	addi	r23,r2,1
 100b9dc:	10036d00 	call	10036d0 <__divdf3>
 100b9e0:	d9c00e17 	ldw	r7,56(sp)
 100b9e4:	880d883a 	mov	r6,r17
 100b9e8:	1009883a 	mov	r4,r2
 100b9ec:	180b883a 	mov	r5,r3
 100b9f0:	10157d00 	call	10157d0 <__subdf3>
 100b9f4:	a80b883a 	mov	r5,r21
 100b9f8:	a009883a 	mov	r4,r20
 100b9fc:	d8c01015 	stw	r3,64(sp)
 100ba00:	d8800e15 	stw	r2,56(sp)
 100ba04:	10047440 	call	1004744 <__fixdfsi>
 100ba08:	1009883a 	mov	r4,r2
 100ba0c:	d8801715 	stw	r2,92(sp)
 100ba10:	10160a00 	call	10160a0 <__floatsidf>
 100ba14:	a009883a 	mov	r4,r20
 100ba18:	a80b883a 	mov	r5,r21
 100ba1c:	100d883a 	mov	r6,r2
 100ba20:	180f883a 	mov	r7,r3
 100ba24:	10157d00 	call	10157d0 <__subdf3>
 100ba28:	da001717 	ldw	r8,92(sp)
 100ba2c:	1829883a 	mov	r20,r3
 100ba30:	d8c00717 	ldw	r3,28(sp)
 100ba34:	d9000e17 	ldw	r4,56(sp)
 100ba38:	d9401017 	ldw	r5,64(sp)
 100ba3c:	42000c04 	addi	r8,r8,48
 100ba40:	1023883a 	mov	r17,r2
 100ba44:	1a000005 	stb	r8,0(r3)
 100ba48:	880d883a 	mov	r6,r17
 100ba4c:	a00f883a 	mov	r7,r20
 100ba50:	402b883a 	mov	r21,r8
 100ba54:	10156100 	call	1015610 <__gedf2>
 100ba58:	00844516 	blt	zero,r2,100cb70 <_dtoa_r+0x1698>
 100ba5c:	0009883a 	mov	r4,zero
 100ba60:	014ffc34 	movhi	r5,16368
 100ba64:	880d883a 	mov	r6,r17
 100ba68:	a00f883a 	mov	r7,r20
 100ba6c:	10157d00 	call	10157d0 <__subdf3>
 100ba70:	d9000e17 	ldw	r4,56(sp)
 100ba74:	d9401017 	ldw	r5,64(sp)
 100ba78:	100d883a 	mov	r6,r2
 100ba7c:	180f883a 	mov	r7,r3
 100ba80:	10156100 	call	1015610 <__gedf2>
 100ba84:	da801617 	ldw	r10,88(sp)
 100ba88:	00843616 	blt	zero,r2,100cb64 <_dtoa_r+0x168c>
 100ba8c:	00800044 	movi	r2,1
 100ba90:	12806e0e 	bge	r2,r10,100bc4c <_dtoa_r+0x774>
 100ba94:	d9000717 	ldw	r4,28(sp)
 100ba98:	dd801315 	stw	r22,76(sp)
 100ba9c:	dc001115 	stw	r16,68(sp)
 100baa0:	2295883a 	add	r10,r4,r10
 100baa4:	dcc01415 	stw	r19,80(sp)
 100baa8:	502d883a 	mov	r22,r10
 100baac:	dcc01017 	ldw	r19,64(sp)
 100bab0:	b821883a 	mov	r16,r23
 100bab4:	dc801015 	stw	r18,64(sp)
 100bab8:	dc800e17 	ldw	r18,56(sp)
 100babc:	00000906 	br	100bae4 <_dtoa_r+0x60c>
 100bac0:	10157d00 	call	10157d0 <__subdf3>
 100bac4:	1009883a 	mov	r4,r2
 100bac8:	180b883a 	mov	r5,r3
 100bacc:	900d883a 	mov	r6,r18
 100bad0:	980f883a 	mov	r7,r19
 100bad4:	10156f00 	call	10156f0 <__ledf2>
 100bad8:	10040e16 	blt	r2,zero,100cb14 <_dtoa_r+0x163c>
 100badc:	b821883a 	mov	r16,r23
 100bae0:	bd841026 	beq	r23,r22,100cb24 <_dtoa_r+0x164c>
 100bae4:	9009883a 	mov	r4,r18
 100bae8:	980b883a 	mov	r5,r19
 100baec:	000d883a 	mov	r6,zero
 100baf0:	01d00934 	movhi	r7,16420
 100baf4:	10040200 	call	1004020 <__muldf3>
 100baf8:	000d883a 	mov	r6,zero
 100bafc:	01d00934 	movhi	r7,16420
 100bb00:	8809883a 	mov	r4,r17
 100bb04:	a00b883a 	mov	r5,r20
 100bb08:	1025883a 	mov	r18,r2
 100bb0c:	1827883a 	mov	r19,r3
 100bb10:	10040200 	call	1004020 <__muldf3>
 100bb14:	180b883a 	mov	r5,r3
 100bb18:	1009883a 	mov	r4,r2
 100bb1c:	1823883a 	mov	r17,r3
 100bb20:	1029883a 	mov	r20,r2
 100bb24:	10047440 	call	1004744 <__fixdfsi>
 100bb28:	1009883a 	mov	r4,r2
 100bb2c:	102b883a 	mov	r21,r2
 100bb30:	10160a00 	call	10160a0 <__floatsidf>
 100bb34:	a009883a 	mov	r4,r20
 100bb38:	880b883a 	mov	r5,r17
 100bb3c:	100d883a 	mov	r6,r2
 100bb40:	180f883a 	mov	r7,r3
 100bb44:	10157d00 	call	10157d0 <__subdf3>
 100bb48:	ad400c04 	addi	r21,r21,48
 100bb4c:	1009883a 	mov	r4,r2
 100bb50:	180b883a 	mov	r5,r3
 100bb54:	900d883a 	mov	r6,r18
 100bb58:	980f883a 	mov	r7,r19
 100bb5c:	85400005 	stb	r21,0(r16)
 100bb60:	1023883a 	mov	r17,r2
 100bb64:	1829883a 	mov	r20,r3
 100bb68:	10156f00 	call	10156f0 <__ledf2>
 100bb6c:	bdc00044 	addi	r23,r23,1
 100bb70:	0009883a 	mov	r4,zero
 100bb74:	014ffc34 	movhi	r5,16368
 100bb78:	880d883a 	mov	r6,r17
 100bb7c:	a00f883a 	mov	r7,r20
 100bb80:	103fcf0e 	bge	r2,zero,100bac0 <__alt_data_end+0xff80bac0>
 100bb84:	d9801217 	ldw	r6,72(sp)
 100bb88:	dc001117 	ldw	r16,68(sp)
 100bb8c:	d9800515 	stw	r6,20(sp)
 100bb90:	8009883a 	mov	r4,r16
 100bb94:	e00b883a 	mov	r5,fp
 100bb98:	100f8580 	call	100f858 <_Bfree>
 100bb9c:	d8c00517 	ldw	r3,20(sp)
 100bba0:	d9002317 	ldw	r4,140(sp)
 100bba4:	d9802517 	ldw	r6,148(sp)
 100bba8:	b8000005 	stb	zero,0(r23)
 100bbac:	18800044 	addi	r2,r3,1
 100bbb0:	20800015 	stw	r2,0(r4)
 100bbb4:	30027226 	beq	r6,zero,100c580 <_dtoa_r+0x10a8>
 100bbb8:	35c00015 	stw	r23,0(r6)
 100bbbc:	d8800717 	ldw	r2,28(sp)
 100bbc0:	003e7406 	br	100b594 <__alt_data_end+0xff80b594>
 100bbc4:	00800434 	movhi	r2,16
 100bbc8:	10bfffc4 	addi	r2,r2,-1
 100bbcc:	a8aa703a 	and	r21,r21,r2
 100bbd0:	a83e801e 	bne	r21,zero,100b5d4 <__alt_data_end+0xff80b5d4>
 100bbd4:	008040b4 	movhi	r2,258
 100bbd8:	10a5ec04 	addi	r2,r2,-26704
 100bbdc:	003e7f06 	br	100b5dc <__alt_data_end+0xff80b5dc>
 100bbe0:	10c00204 	addi	r3,r2,8
 100bbe4:	003e8206 	br	100b5f0 <__alt_data_end+0xff80b5f0>
 100bbe8:	01400434 	movhi	r5,16
 100bbec:	297fffc4 	addi	r5,r5,-1
 100bbf0:	994a703a 	and	r5,r19,r5
 100bbf4:	9009883a 	mov	r4,r18
 100bbf8:	8c7f0044 	addi	r17,r17,-1023
 100bbfc:	294ffc34 	orhi	r5,r5,16368
 100bc00:	dd000217 	ldw	r20,8(sp)
 100bc04:	d8000f15 	stw	zero,60(sp)
 100bc08:	003e9f06 	br	100b688 <__alt_data_end+0xff80b688>
 100bc0c:	008040b4 	movhi	r2,258
 100bc10:	10a5db04 	addi	r2,r2,-26772
 100bc14:	003e5f06 	br	100b594 <__alt_data_end+0xff80b594>
 100bc18:	80001115 	stw	zero,68(r16)
 100bc1c:	8009883a 	mov	r4,r16
 100bc20:	000b883a 	mov	r5,zero
 100bc24:	100f7b00 	call	100f7b0 <_Balloc>
 100bc28:	01bfffc4 	movi	r6,-1
 100bc2c:	d8800715 	stw	r2,28(sp)
 100bc30:	80801015 	stw	r2,64(r16)
 100bc34:	00800044 	movi	r2,1
 100bc38:	d9800615 	stw	r6,24(sp)
 100bc3c:	d8800b15 	stw	r2,44(sp)
 100bc40:	d8002215 	stw	zero,136(sp)
 100bc44:	d9800d15 	stw	r6,52(sp)
 100bc48:	d8000315 	stw	zero,12(sp)
 100bc4c:	d8800117 	ldw	r2,4(sp)
 100bc50:	10008e16 	blt	r2,zero,100be8c <_dtoa_r+0x9b4>
 100bc54:	d9000517 	ldw	r4,20(sp)
 100bc58:	00c00384 	movi	r3,14
 100bc5c:	19008b16 	blt	r3,r4,100be8c <_dtoa_r+0x9b4>
 100bc60:	200490fa 	slli	r2,r4,3
 100bc64:	00c040b4 	movhi	r3,258
 100bc68:	d9802217 	ldw	r6,136(sp)
 100bc6c:	18e61104 	addi	r3,r3,-26556
 100bc70:	1885883a 	add	r2,r3,r2
 100bc74:	14400017 	ldw	r17,0(r2)
 100bc78:	15000117 	ldw	r20,4(r2)
 100bc7c:	3001c716 	blt	r6,zero,100c39c <_dtoa_r+0xec4>
 100bc80:	880d883a 	mov	r6,r17
 100bc84:	a00f883a 	mov	r7,r20
 100bc88:	9009883a 	mov	r4,r18
 100bc8c:	980b883a 	mov	r5,r19
 100bc90:	10036d00 	call	10036d0 <__divdf3>
 100bc94:	180b883a 	mov	r5,r3
 100bc98:	1009883a 	mov	r4,r2
 100bc9c:	10047440 	call	1004744 <__fixdfsi>
 100bca0:	1009883a 	mov	r4,r2
 100bca4:	102d883a 	mov	r22,r2
 100bca8:	10160a00 	call	10160a0 <__floatsidf>
 100bcac:	1009883a 	mov	r4,r2
 100bcb0:	180b883a 	mov	r5,r3
 100bcb4:	880d883a 	mov	r6,r17
 100bcb8:	a00f883a 	mov	r7,r20
 100bcbc:	10040200 	call	1004020 <__muldf3>
 100bcc0:	9009883a 	mov	r4,r18
 100bcc4:	980b883a 	mov	r5,r19
 100bcc8:	100d883a 	mov	r6,r2
 100bccc:	180f883a 	mov	r7,r3
 100bcd0:	10157d00 	call	10157d0 <__subdf3>
 100bcd4:	d9000717 	ldw	r4,28(sp)
 100bcd8:	d9800617 	ldw	r6,24(sp)
 100bcdc:	180b883a 	mov	r5,r3
 100bce0:	b0c00c04 	addi	r3,r22,48
 100bce4:	20c00005 	stb	r3,0(r4)
 100bce8:	25c00044 	addi	r23,r4,1
 100bcec:	01000044 	movi	r4,1
 100bcf0:	1011883a 	mov	r8,r2
 100bcf4:	2807883a 	mov	r3,r5
 100bcf8:	31003d26 	beq	r6,r4,100bdf0 <_dtoa_r+0x918>
 100bcfc:	000d883a 	mov	r6,zero
 100bd00:	01d00934 	movhi	r7,16420
 100bd04:	1009883a 	mov	r4,r2
 100bd08:	10040200 	call	1004020 <__muldf3>
 100bd0c:	1009883a 	mov	r4,r2
 100bd10:	180b883a 	mov	r5,r3
 100bd14:	000d883a 	mov	r6,zero
 100bd18:	000f883a 	mov	r7,zero
 100bd1c:	1027883a 	mov	r19,r2
 100bd20:	182b883a 	mov	r21,r3
 100bd24:	1003f9c0 	call	1003f9c <__eqdf2>
 100bd28:	103f9926 	beq	r2,zero,100bb90 <__alt_data_end+0xff80bb90>
 100bd2c:	d8c00617 	ldw	r3,24(sp)
 100bd30:	d9000717 	ldw	r4,28(sp)
 100bd34:	b825883a 	mov	r18,r23
 100bd38:	18bfffc4 	addi	r2,r3,-1
 100bd3c:	20ad883a 	add	r22,r4,r2
 100bd40:	dc000315 	stw	r16,12(sp)
 100bd44:	00000a06 	br	100bd70 <_dtoa_r+0x898>
 100bd48:	10040200 	call	1004020 <__muldf3>
 100bd4c:	1009883a 	mov	r4,r2
 100bd50:	180b883a 	mov	r5,r3
 100bd54:	000d883a 	mov	r6,zero
 100bd58:	000f883a 	mov	r7,zero
 100bd5c:	1027883a 	mov	r19,r2
 100bd60:	182b883a 	mov	r21,r3
 100bd64:	b825883a 	mov	r18,r23
 100bd68:	1003f9c0 	call	1003f9c <__eqdf2>
 100bd6c:	10022626 	beq	r2,zero,100c608 <_dtoa_r+0x1130>
 100bd70:	880d883a 	mov	r6,r17
 100bd74:	a00f883a 	mov	r7,r20
 100bd78:	9809883a 	mov	r4,r19
 100bd7c:	a80b883a 	mov	r5,r21
 100bd80:	10036d00 	call	10036d0 <__divdf3>
 100bd84:	180b883a 	mov	r5,r3
 100bd88:	1009883a 	mov	r4,r2
 100bd8c:	10047440 	call	1004744 <__fixdfsi>
 100bd90:	1009883a 	mov	r4,r2
 100bd94:	1021883a 	mov	r16,r2
 100bd98:	10160a00 	call	10160a0 <__floatsidf>
 100bd9c:	1009883a 	mov	r4,r2
 100bda0:	180b883a 	mov	r5,r3
 100bda4:	880d883a 	mov	r6,r17
 100bda8:	a00f883a 	mov	r7,r20
 100bdac:	10040200 	call	1004020 <__muldf3>
 100bdb0:	9809883a 	mov	r4,r19
 100bdb4:	a80b883a 	mov	r5,r21
 100bdb8:	100d883a 	mov	r6,r2
 100bdbc:	180f883a 	mov	r7,r3
 100bdc0:	10157d00 	call	10157d0 <__subdf3>
 100bdc4:	82000c04 	addi	r8,r16,48
 100bdc8:	92000005 	stb	r8,0(r18)
 100bdcc:	1009883a 	mov	r4,r2
 100bdd0:	180b883a 	mov	r5,r3
 100bdd4:	000d883a 	mov	r6,zero
 100bdd8:	01d00934 	movhi	r7,16420
 100bddc:	1011883a 	mov	r8,r2
 100bde0:	bdc00044 	addi	r23,r23,1
 100bde4:	95bfd81e 	bne	r18,r22,100bd48 <__alt_data_end+0xff80bd48>
 100bde8:	802d883a 	mov	r22,r16
 100bdec:	dc000317 	ldw	r16,12(sp)
 100bdf0:	4009883a 	mov	r4,r8
 100bdf4:	180b883a 	mov	r5,r3
 100bdf8:	400d883a 	mov	r6,r8
 100bdfc:	180f883a 	mov	r7,r3
 100be00:	1014d740 	call	1014d74 <__adddf3>
 100be04:	8809883a 	mov	r4,r17
 100be08:	a00b883a 	mov	r5,r20
 100be0c:	100d883a 	mov	r6,r2
 100be10:	180f883a 	mov	r7,r3
 100be14:	1027883a 	mov	r19,r2
 100be18:	1825883a 	mov	r18,r3
 100be1c:	10156f00 	call	10156f0 <__ledf2>
 100be20:	10000816 	blt	r2,zero,100be44 <_dtoa_r+0x96c>
 100be24:	8809883a 	mov	r4,r17
 100be28:	a00b883a 	mov	r5,r20
 100be2c:	980d883a 	mov	r6,r19
 100be30:	900f883a 	mov	r7,r18
 100be34:	1003f9c0 	call	1003f9c <__eqdf2>
 100be38:	103f551e 	bne	r2,zero,100bb90 <__alt_data_end+0xff80bb90>
 100be3c:	b580004c 	andi	r22,r22,1
 100be40:	b03f5326 	beq	r22,zero,100bb90 <__alt_data_end+0xff80bb90>
 100be44:	bd7fffc3 	ldbu	r21,-1(r23)
 100be48:	b8bfffc4 	addi	r2,r23,-1
 100be4c:	1007883a 	mov	r3,r2
 100be50:	01400e44 	movi	r5,57
 100be54:	d9800717 	ldw	r6,28(sp)
 100be58:	00000506 	br	100be70 <_dtoa_r+0x998>
 100be5c:	18ffffc4 	addi	r3,r3,-1
 100be60:	30825e26 	beq	r6,r2,100c7dc <_dtoa_r+0x1304>
 100be64:	1d400003 	ldbu	r21,0(r3)
 100be68:	102f883a 	mov	r23,r2
 100be6c:	10bfffc4 	addi	r2,r2,-1
 100be70:	a9003fcc 	andi	r4,r21,255
 100be74:	2100201c 	xori	r4,r4,128
 100be78:	213fe004 	addi	r4,r4,-128
 100be7c:	217ff726 	beq	r4,r5,100be5c <__alt_data_end+0xff80be5c>
 100be80:	aa000044 	addi	r8,r21,1
 100be84:	12000005 	stb	r8,0(r2)
 100be88:	003f4106 	br	100bb90 <__alt_data_end+0xff80bb90>
 100be8c:	d8c00b17 	ldw	r3,44(sp)
 100be90:	18006726 	beq	r3,zero,100c030 <_dtoa_r+0xb58>
 100be94:	d9000317 	ldw	r4,12(sp)
 100be98:	00c00044 	movi	r3,1
 100be9c:	19016a0e 	bge	r3,r4,100c448 <_dtoa_r+0xf70>
 100bea0:	d8800617 	ldw	r2,24(sp)
 100bea4:	d8c00917 	ldw	r3,36(sp)
 100bea8:	157fffc4 	addi	r21,r2,-1
 100beac:	1d420716 	blt	r3,r21,100c6cc <_dtoa_r+0x11f4>
 100beb0:	1d6bc83a 	sub	r21,r3,r21
 100beb4:	d8800617 	ldw	r2,24(sp)
 100beb8:	1002c716 	blt	r2,zero,100c9d8 <_dtoa_r+0x1500>
 100bebc:	dd000817 	ldw	r20,32(sp)
 100bec0:	d8800617 	ldw	r2,24(sp)
 100bec4:	d9800817 	ldw	r6,32(sp)
 100bec8:	8009883a 	mov	r4,r16
 100becc:	01400044 	movi	r5,1
 100bed0:	308d883a 	add	r6,r6,r2
 100bed4:	d9800815 	stw	r6,32(sp)
 100bed8:	b0ad883a 	add	r22,r22,r2
 100bedc:	100fbb00 	call	100fbb0 <__i2b>
 100bee0:	1023883a 	mov	r17,r2
 100bee4:	a0000826 	beq	r20,zero,100bf08 <_dtoa_r+0xa30>
 100bee8:	0580070e 	bge	zero,r22,100bf08 <_dtoa_r+0xa30>
 100beec:	b005883a 	mov	r2,r22
 100bef0:	a5812016 	blt	r20,r22,100c374 <_dtoa_r+0xe9c>
 100bef4:	d8c00817 	ldw	r3,32(sp)
 100bef8:	a0a9c83a 	sub	r20,r20,r2
 100befc:	b0adc83a 	sub	r22,r22,r2
 100bf00:	1887c83a 	sub	r3,r3,r2
 100bf04:	d8c00815 	stw	r3,32(sp)
 100bf08:	d9000917 	ldw	r4,36(sp)
 100bf0c:	0100140e 	bge	zero,r4,100bf60 <_dtoa_r+0xa88>
 100bf10:	d9800b17 	ldw	r6,44(sp)
 100bf14:	3001e526 	beq	r6,zero,100c6ac <_dtoa_r+0x11d4>
 100bf18:	05400e0e 	bge	zero,r21,100bf54 <_dtoa_r+0xa7c>
 100bf1c:	880b883a 	mov	r5,r17
 100bf20:	8009883a 	mov	r4,r16
 100bf24:	a80d883a 	mov	r6,r21
 100bf28:	100fde80 	call	100fde8 <__pow5mult>
 100bf2c:	e00d883a 	mov	r6,fp
 100bf30:	8009883a 	mov	r4,r16
 100bf34:	100b883a 	mov	r5,r2
 100bf38:	1023883a 	mov	r17,r2
 100bf3c:	100fbec0 	call	100fbec <__multiply>
 100bf40:	102f883a 	mov	r23,r2
 100bf44:	e00b883a 	mov	r5,fp
 100bf48:	8009883a 	mov	r4,r16
 100bf4c:	100f8580 	call	100f858 <_Bfree>
 100bf50:	b839883a 	mov	fp,r23
 100bf54:	d8800917 	ldw	r2,36(sp)
 100bf58:	154dc83a 	sub	r6,r2,r21
 100bf5c:	3001281e 	bne	r6,zero,100c400 <_dtoa_r+0xf28>
 100bf60:	05c00044 	movi	r23,1
 100bf64:	8009883a 	mov	r4,r16
 100bf68:	b80b883a 	mov	r5,r23
 100bf6c:	100fbb00 	call	100fbb0 <__i2b>
 100bf70:	d8c00a17 	ldw	r3,40(sp)
 100bf74:	102b883a 	mov	r21,r2
 100bf78:	00c0310e 	bge	zero,r3,100c040 <_dtoa_r+0xb68>
 100bf7c:	8009883a 	mov	r4,r16
 100bf80:	100b883a 	mov	r5,r2
 100bf84:	180d883a 	mov	r6,r3
 100bf88:	100fde80 	call	100fde8 <__pow5mult>
 100bf8c:	d9000317 	ldw	r4,12(sp)
 100bf90:	102b883a 	mov	r21,r2
 100bf94:	b9011f0e 	bge	r23,r4,100c414 <_dtoa_r+0xf3c>
 100bf98:	0027883a 	mov	r19,zero
 100bf9c:	a8800417 	ldw	r2,16(r21)
 100bfa0:	10800104 	addi	r2,r2,4
 100bfa4:	1085883a 	add	r2,r2,r2
 100bfa8:	1085883a 	add	r2,r2,r2
 100bfac:	a885883a 	add	r2,r21,r2
 100bfb0:	11000017 	ldw	r4,0(r2)
 100bfb4:	100fa980 	call	100fa98 <__hi0bits>
 100bfb8:	00c00804 	movi	r3,32
 100bfbc:	1885c83a 	sub	r2,r3,r2
 100bfc0:	00002506 	br	100c058 <_dtoa_r+0xb80>
 100bfc4:	01800044 	movi	r6,1
 100bfc8:	d9800c15 	stw	r6,48(sp)
 100bfcc:	003dec06 	br	100b780 <__alt_data_end+0xff80b780>
 100bfd0:	d8c00817 	ldw	r3,32(sp)
 100bfd4:	d9000517 	ldw	r4,20(sp)
 100bfd8:	d8000a15 	stw	zero,40(sp)
 100bfdc:	1907c83a 	sub	r3,r3,r4
 100bfe0:	010dc83a 	sub	r6,zero,r4
 100bfe4:	d8c00815 	stw	r3,32(sp)
 100bfe8:	d9800915 	stw	r6,36(sp)
 100bfec:	003ded06 	br	100b7a4 <__alt_data_end+0xff80b7a4>
 100bff0:	05adc83a 	sub	r22,zero,r22
 100bff4:	dd800815 	stw	r22,32(sp)
 100bff8:	002d883a 	mov	r22,zero
 100bffc:	003de406 	br	100b790 <__alt_data_end+0xff80b790>
 100c000:	d9000517 	ldw	r4,20(sp)
 100c004:	10160a00 	call	10160a0 <__floatsidf>
 100c008:	1009883a 	mov	r4,r2
 100c00c:	180b883a 	mov	r5,r3
 100c010:	b00d883a 	mov	r6,r22
 100c014:	a80f883a 	mov	r7,r21
 100c018:	1003f9c0 	call	1003f9c <__eqdf2>
 100c01c:	103dc726 	beq	r2,zero,100b73c <__alt_data_end+0xff80b73c>
 100c020:	d8800517 	ldw	r2,20(sp)
 100c024:	10bfffc4 	addi	r2,r2,-1
 100c028:	d8800515 	stw	r2,20(sp)
 100c02c:	003dc306 	br	100b73c <__alt_data_end+0xff80b73c>
 100c030:	dd400917 	ldw	r21,36(sp)
 100c034:	dd000817 	ldw	r20,32(sp)
 100c038:	0023883a 	mov	r17,zero
 100c03c:	003fa906 	br	100bee4 <__alt_data_end+0xff80bee4>
 100c040:	d9800317 	ldw	r6,12(sp)
 100c044:	b981670e 	bge	r23,r6,100c5e4 <_dtoa_r+0x110c>
 100c048:	0027883a 	mov	r19,zero
 100c04c:	d8c00a17 	ldw	r3,40(sp)
 100c050:	183fd21e 	bne	r3,zero,100bf9c <__alt_data_end+0xff80bf9c>
 100c054:	00800044 	movi	r2,1
 100c058:	1585883a 	add	r2,r2,r22
 100c05c:	108007cc 	andi	r2,r2,31
 100c060:	10005f26 	beq	r2,zero,100c1e0 <_dtoa_r+0xd08>
 100c064:	00c00804 	movi	r3,32
 100c068:	1887c83a 	sub	r3,r3,r2
 100c06c:	01000104 	movi	r4,4
 100c070:	20c2dd0e 	bge	r4,r3,100cbe8 <_dtoa_r+0x1710>
 100c074:	d9000817 	ldw	r4,32(sp)
 100c078:	00c00704 	movi	r3,28
 100c07c:	1885c83a 	sub	r2,r3,r2
 100c080:	2089883a 	add	r4,r4,r2
 100c084:	d9000815 	stw	r4,32(sp)
 100c088:	a0a9883a 	add	r20,r20,r2
 100c08c:	b0ad883a 	add	r22,r22,r2
 100c090:	d8800817 	ldw	r2,32(sp)
 100c094:	0080050e 	bge	zero,r2,100c0ac <_dtoa_r+0xbd4>
 100c098:	e00b883a 	mov	r5,fp
 100c09c:	8009883a 	mov	r4,r16
 100c0a0:	100d883a 	mov	r6,r2
 100c0a4:	100ff280 	call	100ff28 <__lshift>
 100c0a8:	1039883a 	mov	fp,r2
 100c0ac:	0580050e 	bge	zero,r22,100c0c4 <_dtoa_r+0xbec>
 100c0b0:	a80b883a 	mov	r5,r21
 100c0b4:	8009883a 	mov	r4,r16
 100c0b8:	b00d883a 	mov	r6,r22
 100c0bc:	100ff280 	call	100ff28 <__lshift>
 100c0c0:	102b883a 	mov	r21,r2
 100c0c4:	d8c00c17 	ldw	r3,48(sp)
 100c0c8:	1801161e 	bne	r3,zero,100c524 <_dtoa_r+0x104c>
 100c0cc:	d8c00617 	ldw	r3,24(sp)
 100c0d0:	00c12d0e 	bge	zero,r3,100c588 <_dtoa_r+0x10b0>
 100c0d4:	d8c00b17 	ldw	r3,44(sp)
 100c0d8:	1800571e 	bne	r3,zero,100c238 <_dtoa_r+0xd60>
 100c0dc:	dc800717 	ldw	r18,28(sp)
 100c0e0:	dcc00617 	ldw	r19,24(sp)
 100c0e4:	9029883a 	mov	r20,r18
 100c0e8:	00000206 	br	100c0f4 <_dtoa_r+0xc1c>
 100c0ec:	100f8800 	call	100f880 <__multadd>
 100c0f0:	1039883a 	mov	fp,r2
 100c0f4:	e009883a 	mov	r4,fp
 100c0f8:	a80b883a 	mov	r5,r21
 100c0fc:	100b2d80 	call	100b2d8 <quorem>
 100c100:	10800c04 	addi	r2,r2,48
 100c104:	90800005 	stb	r2,0(r18)
 100c108:	94800044 	addi	r18,r18,1
 100c10c:	9507c83a 	sub	r3,r18,r20
 100c110:	8009883a 	mov	r4,r16
 100c114:	e00b883a 	mov	r5,fp
 100c118:	01800284 	movi	r6,10
 100c11c:	000f883a 	mov	r7,zero
 100c120:	1cfff216 	blt	r3,r19,100c0ec <__alt_data_end+0xff80c0ec>
 100c124:	1011883a 	mov	r8,r2
 100c128:	d8800617 	ldw	r2,24(sp)
 100c12c:	00822e0e 	bge	zero,r2,100c9e8 <_dtoa_r+0x1510>
 100c130:	d9000717 	ldw	r4,28(sp)
 100c134:	0025883a 	mov	r18,zero
 100c138:	20af883a 	add	r23,r4,r2
 100c13c:	e00b883a 	mov	r5,fp
 100c140:	01800044 	movi	r6,1
 100c144:	8009883a 	mov	r4,r16
 100c148:	da001715 	stw	r8,92(sp)
 100c14c:	100ff280 	call	100ff28 <__lshift>
 100c150:	1009883a 	mov	r4,r2
 100c154:	a80b883a 	mov	r5,r21
 100c158:	1039883a 	mov	fp,r2
 100c15c:	10100700 	call	1010070 <__mcmp>
 100c160:	da001717 	ldw	r8,92(sp)
 100c164:	00816e0e 	bge	zero,r2,100c720 <_dtoa_r+0x1248>
 100c168:	b93fffc3 	ldbu	r4,-1(r23)
 100c16c:	b8bfffc4 	addi	r2,r23,-1
 100c170:	1007883a 	mov	r3,r2
 100c174:	01800e44 	movi	r6,57
 100c178:	d9c00717 	ldw	r7,28(sp)
 100c17c:	00000506 	br	100c194 <_dtoa_r+0xcbc>
 100c180:	18ffffc4 	addi	r3,r3,-1
 100c184:	38811926 	beq	r7,r2,100c5ec <_dtoa_r+0x1114>
 100c188:	19000003 	ldbu	r4,0(r3)
 100c18c:	102f883a 	mov	r23,r2
 100c190:	10bfffc4 	addi	r2,r2,-1
 100c194:	21403fcc 	andi	r5,r4,255
 100c198:	2940201c 	xori	r5,r5,128
 100c19c:	297fe004 	addi	r5,r5,-128
 100c1a0:	29bff726 	beq	r5,r6,100c180 <__alt_data_end+0xff80c180>
 100c1a4:	21000044 	addi	r4,r4,1
 100c1a8:	11000005 	stb	r4,0(r2)
 100c1ac:	8009883a 	mov	r4,r16
 100c1b0:	a80b883a 	mov	r5,r21
 100c1b4:	100f8580 	call	100f858 <_Bfree>
 100c1b8:	883e7526 	beq	r17,zero,100bb90 <__alt_data_end+0xff80bb90>
 100c1bc:	90000426 	beq	r18,zero,100c1d0 <_dtoa_r+0xcf8>
 100c1c0:	94400326 	beq	r18,r17,100c1d0 <_dtoa_r+0xcf8>
 100c1c4:	8009883a 	mov	r4,r16
 100c1c8:	900b883a 	mov	r5,r18
 100c1cc:	100f8580 	call	100f858 <_Bfree>
 100c1d0:	8009883a 	mov	r4,r16
 100c1d4:	880b883a 	mov	r5,r17
 100c1d8:	100f8580 	call	100f858 <_Bfree>
 100c1dc:	003e6c06 	br	100bb90 <__alt_data_end+0xff80bb90>
 100c1e0:	00800704 	movi	r2,28
 100c1e4:	d9800817 	ldw	r6,32(sp)
 100c1e8:	a0a9883a 	add	r20,r20,r2
 100c1ec:	b0ad883a 	add	r22,r22,r2
 100c1f0:	308d883a 	add	r6,r6,r2
 100c1f4:	d9800815 	stw	r6,32(sp)
 100c1f8:	003fa506 	br	100c090 <__alt_data_end+0xff80c090>
 100c1fc:	013efb84 	movi	r4,-1042
 100c200:	246bc83a 	sub	r21,r4,r17
 100c204:	9548983a 	sll	r4,r18,r21
 100c208:	003d1806 	br	100b66c <__alt_data_end+0xff80b66c>
 100c20c:	d8000c15 	stw	zero,48(sp)
 100c210:	003d5b06 	br	100b780 <__alt_data_end+0xff80b780>
 100c214:	880b883a 	mov	r5,r17
 100c218:	8009883a 	mov	r4,r16
 100c21c:	01800284 	movi	r6,10
 100c220:	000f883a 	mov	r7,zero
 100c224:	100f8800 	call	100f880 <__multadd>
 100c228:	1023883a 	mov	r17,r2
 100c22c:	d8800d17 	ldw	r2,52(sp)
 100c230:	0082550e 	bge	zero,r2,100cb88 <_dtoa_r+0x16b0>
 100c234:	d8800615 	stw	r2,24(sp)
 100c238:	0500050e 	bge	zero,r20,100c250 <_dtoa_r+0xd78>
 100c23c:	880b883a 	mov	r5,r17
 100c240:	8009883a 	mov	r4,r16
 100c244:	a00d883a 	mov	r6,r20
 100c248:	100ff280 	call	100ff28 <__lshift>
 100c24c:	1023883a 	mov	r17,r2
 100c250:	98016a1e 	bne	r19,zero,100c7fc <_dtoa_r+0x1324>
 100c254:	8829883a 	mov	r20,r17
 100c258:	d9000617 	ldw	r4,24(sp)
 100c25c:	dcc00717 	ldw	r19,28(sp)
 100c260:	9480004c 	andi	r18,r18,1
 100c264:	20bfffc4 	addi	r2,r4,-1
 100c268:	9885883a 	add	r2,r19,r2
 100c26c:	d8800415 	stw	r2,16(sp)
 100c270:	dc800615 	stw	r18,24(sp)
 100c274:	e009883a 	mov	r4,fp
 100c278:	a80b883a 	mov	r5,r21
 100c27c:	100b2d80 	call	100b2d8 <quorem>
 100c280:	e009883a 	mov	r4,fp
 100c284:	880b883a 	mov	r5,r17
 100c288:	102f883a 	mov	r23,r2
 100c28c:	10100700 	call	1010070 <__mcmp>
 100c290:	8009883a 	mov	r4,r16
 100c294:	a80b883a 	mov	r5,r21
 100c298:	a00d883a 	mov	r6,r20
 100c29c:	102d883a 	mov	r22,r2
 100c2a0:	10100d00 	call	10100d0 <__mdiff>
 100c2a4:	1007883a 	mov	r3,r2
 100c2a8:	10800317 	ldw	r2,12(r2)
 100c2ac:	bc800c04 	addi	r18,r23,48
 100c2b0:	1000971e 	bne	r2,zero,100c510 <_dtoa_r+0x1038>
 100c2b4:	180b883a 	mov	r5,r3
 100c2b8:	e009883a 	mov	r4,fp
 100c2bc:	d8c01515 	stw	r3,84(sp)
 100c2c0:	10100700 	call	1010070 <__mcmp>
 100c2c4:	d8c01517 	ldw	r3,84(sp)
 100c2c8:	8009883a 	mov	r4,r16
 100c2cc:	d8801515 	stw	r2,84(sp)
 100c2d0:	180b883a 	mov	r5,r3
 100c2d4:	100f8580 	call	100f858 <_Bfree>
 100c2d8:	d8801517 	ldw	r2,84(sp)
 100c2dc:	1000041e 	bne	r2,zero,100c2f0 <_dtoa_r+0xe18>
 100c2e0:	d9800317 	ldw	r6,12(sp)
 100c2e4:	3000021e 	bne	r6,zero,100c2f0 <_dtoa_r+0xe18>
 100c2e8:	d8c00617 	ldw	r3,24(sp)
 100c2ec:	18007626 	beq	r3,zero,100c4c8 <_dtoa_r+0xff0>
 100c2f0:	b0005b16 	blt	r22,zero,100c460 <_dtoa_r+0xf88>
 100c2f4:	b000041e 	bne	r22,zero,100c308 <_dtoa_r+0xe30>
 100c2f8:	d9000317 	ldw	r4,12(sp)
 100c2fc:	2000021e 	bne	r4,zero,100c308 <_dtoa_r+0xe30>
 100c300:	d8c00617 	ldw	r3,24(sp)
 100c304:	18005626 	beq	r3,zero,100c460 <_dtoa_r+0xf88>
 100c308:	00814d16 	blt	zero,r2,100c840 <_dtoa_r+0x1368>
 100c30c:	d8c00417 	ldw	r3,16(sp)
 100c310:	9d800044 	addi	r22,r19,1
 100c314:	9c800005 	stb	r18,0(r19)
 100c318:	b02f883a 	mov	r23,r22
 100c31c:	98c14c26 	beq	r19,r3,100c850 <_dtoa_r+0x1378>
 100c320:	e00b883a 	mov	r5,fp
 100c324:	8009883a 	mov	r4,r16
 100c328:	01800284 	movi	r6,10
 100c32c:	000f883a 	mov	r7,zero
 100c330:	100f8800 	call	100f880 <__multadd>
 100c334:	1039883a 	mov	fp,r2
 100c338:	8d006d26 	beq	r17,r20,100c4f0 <_dtoa_r+0x1018>
 100c33c:	880b883a 	mov	r5,r17
 100c340:	01800284 	movi	r6,10
 100c344:	000f883a 	mov	r7,zero
 100c348:	8009883a 	mov	r4,r16
 100c34c:	100f8800 	call	100f880 <__multadd>
 100c350:	a00b883a 	mov	r5,r20
 100c354:	8009883a 	mov	r4,r16
 100c358:	01800284 	movi	r6,10
 100c35c:	000f883a 	mov	r7,zero
 100c360:	1023883a 	mov	r17,r2
 100c364:	100f8800 	call	100f880 <__multadd>
 100c368:	1029883a 	mov	r20,r2
 100c36c:	b027883a 	mov	r19,r22
 100c370:	003fc006 	br	100c274 <__alt_data_end+0xff80c274>
 100c374:	a005883a 	mov	r2,r20
 100c378:	003ede06 	br	100bef4 <__alt_data_end+0xff80bef4>
 100c37c:	01000044 	movi	r4,1
 100c380:	d9000b15 	stw	r4,44(sp)
 100c384:	d9802217 	ldw	r6,136(sp)
 100c388:	0180dc0e 	bge	zero,r6,100c6fc <_dtoa_r+0x1224>
 100c38c:	3023883a 	mov	r17,r6
 100c390:	d9800d15 	stw	r6,52(sp)
 100c394:	d9800615 	stw	r6,24(sp)
 100c398:	003d1e06 	br	100b814 <__alt_data_end+0xff80b814>
 100c39c:	d8800617 	ldw	r2,24(sp)
 100c3a0:	00be3716 	blt	zero,r2,100bc80 <__alt_data_end+0xff80bc80>
 100c3a4:	1000be1e 	bne	r2,zero,100c6a0 <_dtoa_r+0x11c8>
 100c3a8:	8809883a 	mov	r4,r17
 100c3ac:	a00b883a 	mov	r5,r20
 100c3b0:	000d883a 	mov	r6,zero
 100c3b4:	01d00534 	movhi	r7,16404
 100c3b8:	10040200 	call	1004020 <__muldf3>
 100c3bc:	1009883a 	mov	r4,r2
 100c3c0:	180b883a 	mov	r5,r3
 100c3c4:	900d883a 	mov	r6,r18
 100c3c8:	980f883a 	mov	r7,r19
 100c3cc:	10156100 	call	1015610 <__gedf2>
 100c3d0:	002b883a 	mov	r21,zero
 100c3d4:	0023883a 	mov	r17,zero
 100c3d8:	10007a16 	blt	r2,zero,100c5c4 <_dtoa_r+0x10ec>
 100c3dc:	d9002217 	ldw	r4,136(sp)
 100c3e0:	ddc00717 	ldw	r23,28(sp)
 100c3e4:	0108303a 	nor	r4,zero,r4
 100c3e8:	d9000515 	stw	r4,20(sp)
 100c3ec:	8009883a 	mov	r4,r16
 100c3f0:	a80b883a 	mov	r5,r21
 100c3f4:	100f8580 	call	100f858 <_Bfree>
 100c3f8:	883f751e 	bne	r17,zero,100c1d0 <__alt_data_end+0xff80c1d0>
 100c3fc:	003de406 	br	100bb90 <__alt_data_end+0xff80bb90>
 100c400:	e00b883a 	mov	r5,fp
 100c404:	8009883a 	mov	r4,r16
 100c408:	100fde80 	call	100fde8 <__pow5mult>
 100c40c:	1039883a 	mov	fp,r2
 100c410:	003ed306 	br	100bf60 <__alt_data_end+0xff80bf60>
 100c414:	903ee01e 	bne	r18,zero,100bf98 <__alt_data_end+0xff80bf98>
 100c418:	00800434 	movhi	r2,16
 100c41c:	10bfffc4 	addi	r2,r2,-1
 100c420:	9884703a 	and	r2,r19,r2
 100c424:	103f081e 	bne	r2,zero,100c048 <__alt_data_end+0xff80c048>
 100c428:	9cdffc2c 	andhi	r19,r19,32752
 100c42c:	983f0626 	beq	r19,zero,100c048 <__alt_data_end+0xff80c048>
 100c430:	d8800817 	ldw	r2,32(sp)
 100c434:	b5800044 	addi	r22,r22,1
 100c438:	04c00044 	movi	r19,1
 100c43c:	10800044 	addi	r2,r2,1
 100c440:	d8800815 	stw	r2,32(sp)
 100c444:	003f0106 	br	100c04c <__alt_data_end+0xff80c04c>
 100c448:	d9800f17 	ldw	r6,60(sp)
 100c44c:	30016826 	beq	r6,zero,100c9f0 <_dtoa_r+0x1518>
 100c450:	10810cc4 	addi	r2,r2,1075
 100c454:	dd400917 	ldw	r21,36(sp)
 100c458:	dd000817 	ldw	r20,32(sp)
 100c45c:	003e9906 	br	100bec4 <__alt_data_end+0xff80bec4>
 100c460:	9011883a 	mov	r8,r18
 100c464:	4007883a 	mov	r3,r8
 100c468:	e02d883a 	mov	r22,fp
 100c46c:	0080100e 	bge	zero,r2,100c4b0 <_dtoa_r+0xfd8>
 100c470:	01800044 	movi	r6,1
 100c474:	8009883a 	mov	r4,r16
 100c478:	e00b883a 	mov	r5,fp
 100c47c:	da001515 	stw	r8,84(sp)
 100c480:	da001715 	stw	r8,92(sp)
 100c484:	100ff280 	call	100ff28 <__lshift>
 100c488:	1009883a 	mov	r4,r2
 100c48c:	a80b883a 	mov	r5,r21
 100c490:	102d883a 	mov	r22,r2
 100c494:	10100700 	call	1010070 <__mcmp>
 100c498:	d8c01517 	ldw	r3,84(sp)
 100c49c:	da001717 	ldw	r8,92(sp)
 100c4a0:	0081a50e 	bge	zero,r2,100cb38 <_dtoa_r+0x1660>
 100c4a4:	00800e44 	movi	r2,57
 100c4a8:	40817b26 	beq	r8,r2,100ca98 <_dtoa_r+0x15c0>
 100c4ac:	40c00044 	addi	r3,r8,1
 100c4b0:	8825883a 	mov	r18,r17
 100c4b4:	9dc00044 	addi	r23,r19,1
 100c4b8:	98c00005 	stb	r3,0(r19)
 100c4bc:	a023883a 	mov	r17,r20
 100c4c0:	b039883a 	mov	fp,r22
 100c4c4:	003f3906 	br	100c1ac <__alt_data_end+0xff80c1ac>
 100c4c8:	00800e44 	movi	r2,57
 100c4cc:	9011883a 	mov	r8,r18
 100c4d0:	90817226 	beq	r18,r2,100ca9c <_dtoa_r+0x15c4>
 100c4d4:	0580010e 	bge	zero,r22,100c4dc <_dtoa_r+0x1004>
 100c4d8:	ba000c44 	addi	r8,r23,49
 100c4dc:	8825883a 	mov	r18,r17
 100c4e0:	9dc00044 	addi	r23,r19,1
 100c4e4:	9a000005 	stb	r8,0(r19)
 100c4e8:	a023883a 	mov	r17,r20
 100c4ec:	003f2f06 	br	100c1ac <__alt_data_end+0xff80c1ac>
 100c4f0:	880b883a 	mov	r5,r17
 100c4f4:	8009883a 	mov	r4,r16
 100c4f8:	01800284 	movi	r6,10
 100c4fc:	000f883a 	mov	r7,zero
 100c500:	100f8800 	call	100f880 <__multadd>
 100c504:	1023883a 	mov	r17,r2
 100c508:	1029883a 	mov	r20,r2
 100c50c:	003f9706 	br	100c36c <__alt_data_end+0xff80c36c>
 100c510:	8009883a 	mov	r4,r16
 100c514:	180b883a 	mov	r5,r3
 100c518:	100f8580 	call	100f858 <_Bfree>
 100c51c:	00800044 	movi	r2,1
 100c520:	003f7306 	br	100c2f0 <__alt_data_end+0xff80c2f0>
 100c524:	e009883a 	mov	r4,fp
 100c528:	a80b883a 	mov	r5,r21
 100c52c:	10100700 	call	1010070 <__mcmp>
 100c530:	103ee60e 	bge	r2,zero,100c0cc <__alt_data_end+0xff80c0cc>
 100c534:	8009883a 	mov	r4,r16
 100c538:	e00b883a 	mov	r5,fp
 100c53c:	01800284 	movi	r6,10
 100c540:	000f883a 	mov	r7,zero
 100c544:	100f8800 	call	100f880 <__multadd>
 100c548:	d9000517 	ldw	r4,20(sp)
 100c54c:	d9800b17 	ldw	r6,44(sp)
 100c550:	1039883a 	mov	fp,r2
 100c554:	213fffc4 	addi	r4,r4,-1
 100c558:	d9000515 	stw	r4,20(sp)
 100c55c:	303f2d1e 	bne	r6,zero,100c214 <__alt_data_end+0xff80c214>
 100c560:	d9000d17 	ldw	r4,52(sp)
 100c564:	0101780e 	bge	zero,r4,100cb48 <_dtoa_r+0x1670>
 100c568:	d9000615 	stw	r4,24(sp)
 100c56c:	003edb06 	br	100c0dc <__alt_data_end+0xff80c0dc>
 100c570:	00800084 	movi	r2,2
 100c574:	30818e1e 	bne	r6,r2,100cbb0 <_dtoa_r+0x16d8>
 100c578:	d8000b15 	stw	zero,44(sp)
 100c57c:	003f8106 	br	100c384 <__alt_data_end+0xff80c384>
 100c580:	d8800717 	ldw	r2,28(sp)
 100c584:	003c0306 	br	100b594 <__alt_data_end+0xff80b594>
 100c588:	d9000317 	ldw	r4,12(sp)
 100c58c:	00800084 	movi	r2,2
 100c590:	113ed00e 	bge	r2,r4,100c0d4 <__alt_data_end+0xff80c0d4>
 100c594:	d8c00617 	ldw	r3,24(sp)
 100c598:	183f901e 	bne	r3,zero,100c3dc <__alt_data_end+0xff80c3dc>
 100c59c:	a80b883a 	mov	r5,r21
 100c5a0:	8009883a 	mov	r4,r16
 100c5a4:	01800144 	movi	r6,5
 100c5a8:	000f883a 	mov	r7,zero
 100c5ac:	100f8800 	call	100f880 <__multadd>
 100c5b0:	e009883a 	mov	r4,fp
 100c5b4:	100b883a 	mov	r5,r2
 100c5b8:	102b883a 	mov	r21,r2
 100c5bc:	10100700 	call	1010070 <__mcmp>
 100c5c0:	00bf860e 	bge	zero,r2,100c3dc <__alt_data_end+0xff80c3dc>
 100c5c4:	d9800717 	ldw	r6,28(sp)
 100c5c8:	00800c44 	movi	r2,49
 100c5cc:	30800005 	stb	r2,0(r6)
 100c5d0:	d8800517 	ldw	r2,20(sp)
 100c5d4:	35c00044 	addi	r23,r6,1
 100c5d8:	10800044 	addi	r2,r2,1
 100c5dc:	d8800515 	stw	r2,20(sp)
 100c5e0:	003f8206 	br	100c3ec <__alt_data_end+0xff80c3ec>
 100c5e4:	903e981e 	bne	r18,zero,100c048 <__alt_data_end+0xff80c048>
 100c5e8:	003f8b06 	br	100c418 <__alt_data_end+0xff80c418>
 100c5ec:	d9800517 	ldw	r6,20(sp)
 100c5f0:	d8c00717 	ldw	r3,28(sp)
 100c5f4:	00800c44 	movi	r2,49
 100c5f8:	31800044 	addi	r6,r6,1
 100c5fc:	d9800515 	stw	r6,20(sp)
 100c600:	18800005 	stb	r2,0(r3)
 100c604:	003ee906 	br	100c1ac <__alt_data_end+0xff80c1ac>
 100c608:	dc000317 	ldw	r16,12(sp)
 100c60c:	003d6006 	br	100bb90 <__alt_data_end+0xff80bb90>
 100c610:	8809883a 	mov	r4,r17
 100c614:	10160a00 	call	10160a0 <__floatsidf>
 100c618:	a009883a 	mov	r4,r20
 100c61c:	a80b883a 	mov	r5,r21
 100c620:	100d883a 	mov	r6,r2
 100c624:	180f883a 	mov	r7,r3
 100c628:	10040200 	call	1004020 <__muldf3>
 100c62c:	1009883a 	mov	r4,r2
 100c630:	180b883a 	mov	r5,r3
 100c634:	000d883a 	mov	r6,zero
 100c638:	01d00734 	movhi	r7,16412
 100c63c:	1014d740 	call	1014d74 <__adddf3>
 100c640:	1023883a 	mov	r17,r2
 100c644:	00bf3034 	movhi	r2,64704
 100c648:	1885883a 	add	r2,r3,r2
 100c64c:	d8800e15 	stw	r2,56(sp)
 100c650:	a009883a 	mov	r4,r20
 100c654:	a80b883a 	mov	r5,r21
 100c658:	000d883a 	mov	r6,zero
 100c65c:	01d00534 	movhi	r7,16404
 100c660:	10157d00 	call	10157d0 <__subdf3>
 100c664:	d9c00e17 	ldw	r7,56(sp)
 100c668:	1009883a 	mov	r4,r2
 100c66c:	180b883a 	mov	r5,r3
 100c670:	880d883a 	mov	r6,r17
 100c674:	102b883a 	mov	r21,r2
 100c678:	1829883a 	mov	r20,r3
 100c67c:	10156100 	call	1015610 <__gedf2>
 100c680:	00807716 	blt	zero,r2,100c860 <_dtoa_r+0x1388>
 100c684:	d8800e17 	ldw	r2,56(sp)
 100c688:	a809883a 	mov	r4,r21
 100c68c:	a00b883a 	mov	r5,r20
 100c690:	11e0003c 	xorhi	r7,r2,32768
 100c694:	880d883a 	mov	r6,r17
 100c698:	10156f00 	call	10156f0 <__ledf2>
 100c69c:	103d6b0e 	bge	r2,zero,100bc4c <__alt_data_end+0xff80bc4c>
 100c6a0:	002b883a 	mov	r21,zero
 100c6a4:	0023883a 	mov	r17,zero
 100c6a8:	003f4c06 	br	100c3dc <__alt_data_end+0xff80c3dc>
 100c6ac:	d9800917 	ldw	r6,36(sp)
 100c6b0:	e00b883a 	mov	r5,fp
 100c6b4:	8009883a 	mov	r4,r16
 100c6b8:	100fde80 	call	100fde8 <__pow5mult>
 100c6bc:	1039883a 	mov	fp,r2
 100c6c0:	003e2706 	br	100bf60 <__alt_data_end+0xff80bf60>
 100c6c4:	d8000b15 	stw	zero,44(sp)
 100c6c8:	003c4906 	br	100b7f0 <__alt_data_end+0xff80b7f0>
 100c6cc:	d9000917 	ldw	r4,36(sp)
 100c6d0:	d9800a17 	ldw	r6,40(sp)
 100c6d4:	dd400915 	stw	r21,36(sp)
 100c6d8:	a905c83a 	sub	r2,r21,r4
 100c6dc:	308d883a 	add	r6,r6,r2
 100c6e0:	d9800a15 	stw	r6,40(sp)
 100c6e4:	002b883a 	mov	r21,zero
 100c6e8:	003df206 	br	100beb4 <__alt_data_end+0xff80beb4>
 100c6ec:	dc800e15 	stw	r18,56(sp)
 100c6f0:	982b883a 	mov	r21,r19
 100c6f4:	04400084 	movi	r17,2
 100c6f8:	003c7406 	br	100b8cc <__alt_data_end+0xff80b8cc>
 100c6fc:	04400044 	movi	r17,1
 100c700:	dc400d15 	stw	r17,52(sp)
 100c704:	dc400615 	stw	r17,24(sp)
 100c708:	dc402215 	stw	r17,136(sp)
 100c70c:	80001115 	stw	zero,68(r16)
 100c710:	000b883a 	mov	r5,zero
 100c714:	003c4a06 	br	100b840 <__alt_data_end+0xff80b840>
 100c718:	3023883a 	mov	r17,r6
 100c71c:	003ffb06 	br	100c70c <__alt_data_end+0xff80c70c>
 100c720:	1000021e 	bne	r2,zero,100c72c <_dtoa_r+0x1254>
 100c724:	4200004c 	andi	r8,r8,1
 100c728:	403e8f1e 	bne	r8,zero,100c168 <__alt_data_end+0xff80c168>
 100c72c:	01000c04 	movi	r4,48
 100c730:	00000106 	br	100c738 <_dtoa_r+0x1260>
 100c734:	102f883a 	mov	r23,r2
 100c738:	b8bfffc4 	addi	r2,r23,-1
 100c73c:	10c00007 	ldb	r3,0(r2)
 100c740:	193ffc26 	beq	r3,r4,100c734 <__alt_data_end+0xff80c734>
 100c744:	003e9906 	br	100c1ac <__alt_data_end+0xff80c1ac>
 100c748:	d9000517 	ldw	r4,20(sp)
 100c74c:	012fc83a 	sub	r23,zero,r4
 100c750:	b800ad26 	beq	r23,zero,100ca08 <_dtoa_r+0x1530>
 100c754:	b88003cc 	andi	r2,r23,15
 100c758:	100490fa 	slli	r2,r2,3
 100c75c:	00c040b4 	movhi	r3,258
 100c760:	18e61104 	addi	r3,r3,-26556
 100c764:	1885883a 	add	r2,r3,r2
 100c768:	11800017 	ldw	r6,0(r2)
 100c76c:	11c00117 	ldw	r7,4(r2)
 100c770:	b82fd13a 	srai	r23,r23,4
 100c774:	9009883a 	mov	r4,r18
 100c778:	980b883a 	mov	r5,r19
 100c77c:	10040200 	call	1004020 <__muldf3>
 100c780:	1029883a 	mov	r20,r2
 100c784:	182b883a 	mov	r21,r3
 100c788:	b800f426 	beq	r23,zero,100cb5c <_dtoa_r+0x1684>
 100c78c:	020040b4 	movhi	r8,258
 100c790:	42260704 	addi	r8,r8,-26596
 100c794:	8029883a 	mov	r20,r16
 100c798:	04400084 	movi	r17,2
 100c79c:	4021883a 	mov	r16,r8
 100c7a0:	b980004c 	andi	r6,r23,1
 100c7a4:	1009883a 	mov	r4,r2
 100c7a8:	b82fd07a 	srai	r23,r23,1
 100c7ac:	180b883a 	mov	r5,r3
 100c7b0:	30000426 	beq	r6,zero,100c7c4 <_dtoa_r+0x12ec>
 100c7b4:	81800017 	ldw	r6,0(r16)
 100c7b8:	81c00117 	ldw	r7,4(r16)
 100c7bc:	8c400044 	addi	r17,r17,1
 100c7c0:	10040200 	call	1004020 <__muldf3>
 100c7c4:	84000204 	addi	r16,r16,8
 100c7c8:	b83ff51e 	bne	r23,zero,100c7a0 <__alt_data_end+0xff80c7a0>
 100c7cc:	a021883a 	mov	r16,r20
 100c7d0:	182b883a 	mov	r21,r3
 100c7d4:	1029883a 	mov	r20,r2
 100c7d8:	003c5506 	br	100b930 <__alt_data_end+0xff80b930>
 100c7dc:	d9800517 	ldw	r6,20(sp)
 100c7e0:	d9000717 	ldw	r4,28(sp)
 100c7e4:	00c00c04 	movi	r3,48
 100c7e8:	31800044 	addi	r6,r6,1
 100c7ec:	d9800515 	stw	r6,20(sp)
 100c7f0:	20c00005 	stb	r3,0(r4)
 100c7f4:	02000c44 	movi	r8,49
 100c7f8:	003da206 	br	100be84 <__alt_data_end+0xff80be84>
 100c7fc:	89400117 	ldw	r5,4(r17)
 100c800:	8009883a 	mov	r4,r16
 100c804:	100f7b00 	call	100f7b0 <_Balloc>
 100c808:	89800417 	ldw	r6,16(r17)
 100c80c:	11000304 	addi	r4,r2,12
 100c810:	89400304 	addi	r5,r17,12
 100c814:	31800084 	addi	r6,r6,2
 100c818:	318d883a 	add	r6,r6,r6
 100c81c:	318d883a 	add	r6,r6,r6
 100c820:	1027883a 	mov	r19,r2
 100c824:	100f3f80 	call	100f3f8 <memcpy>
 100c828:	8009883a 	mov	r4,r16
 100c82c:	980b883a 	mov	r5,r19
 100c830:	01800044 	movi	r6,1
 100c834:	100ff280 	call	100ff28 <__lshift>
 100c838:	1029883a 	mov	r20,r2
 100c83c:	003e8606 	br	100c258 <__alt_data_end+0xff80c258>
 100c840:	00800e44 	movi	r2,57
 100c844:	90809526 	beq	r18,r2,100ca9c <_dtoa_r+0x15c4>
 100c848:	92000044 	addi	r8,r18,1
 100c84c:	003f2306 	br	100c4dc <__alt_data_end+0xff80c4dc>
 100c850:	9011883a 	mov	r8,r18
 100c854:	8825883a 	mov	r18,r17
 100c858:	a023883a 	mov	r17,r20
 100c85c:	003e3706 	br	100c13c <__alt_data_end+0xff80c13c>
 100c860:	002b883a 	mov	r21,zero
 100c864:	0023883a 	mov	r17,zero
 100c868:	003f5606 	br	100c5c4 <__alt_data_end+0xff80c5c4>
 100c86c:	51bfffc4 	addi	r6,r10,-1
 100c870:	300490fa 	slli	r2,r6,3
 100c874:	00c040b4 	movhi	r3,258
 100c878:	18e61104 	addi	r3,r3,-26556
 100c87c:	1885883a 	add	r2,r3,r2
 100c880:	d9c00e17 	ldw	r7,56(sp)
 100c884:	11000017 	ldw	r4,0(r2)
 100c888:	11400117 	ldw	r5,4(r2)
 100c88c:	d8800717 	ldw	r2,28(sp)
 100c890:	d9801015 	stw	r6,64(sp)
 100c894:	880d883a 	mov	r6,r17
 100c898:	da801615 	stw	r10,88(sp)
 100c89c:	15c00044 	addi	r23,r2,1
 100c8a0:	10040200 	call	1004020 <__muldf3>
 100c8a4:	a80b883a 	mov	r5,r21
 100c8a8:	a009883a 	mov	r4,r20
 100c8ac:	d8c01115 	stw	r3,68(sp)
 100c8b0:	d8800e15 	stw	r2,56(sp)
 100c8b4:	10047440 	call	1004744 <__fixdfsi>
 100c8b8:	1009883a 	mov	r4,r2
 100c8bc:	1023883a 	mov	r17,r2
 100c8c0:	10160a00 	call	10160a0 <__floatsidf>
 100c8c4:	a009883a 	mov	r4,r20
 100c8c8:	a80b883a 	mov	r5,r21
 100c8cc:	100d883a 	mov	r6,r2
 100c8d0:	180f883a 	mov	r7,r3
 100c8d4:	10157d00 	call	10157d0 <__subdf3>
 100c8d8:	1813883a 	mov	r9,r3
 100c8dc:	d8c00717 	ldw	r3,28(sp)
 100c8e0:	8c400c04 	addi	r17,r17,48
 100c8e4:	1011883a 	mov	r8,r2
 100c8e8:	1c400005 	stb	r17,0(r3)
 100c8ec:	da801617 	ldw	r10,88(sp)
 100c8f0:	00800044 	movi	r2,1
 100c8f4:	50802326 	beq	r10,r2,100c984 <_dtoa_r+0x14ac>
 100c8f8:	d8800717 	ldw	r2,28(sp)
 100c8fc:	b82b883a 	mov	r21,r23
 100c900:	dc001315 	stw	r16,76(sp)
 100c904:	12a9883a 	add	r20,r2,r10
 100c908:	4807883a 	mov	r3,r9
 100c90c:	4005883a 	mov	r2,r8
 100c910:	dc801415 	stw	r18,80(sp)
 100c914:	000d883a 	mov	r6,zero
 100c918:	01d00934 	movhi	r7,16420
 100c91c:	1009883a 	mov	r4,r2
 100c920:	180b883a 	mov	r5,r3
 100c924:	10040200 	call	1004020 <__muldf3>
 100c928:	180b883a 	mov	r5,r3
 100c92c:	1009883a 	mov	r4,r2
 100c930:	1821883a 	mov	r16,r3
 100c934:	1025883a 	mov	r18,r2
 100c938:	10047440 	call	1004744 <__fixdfsi>
 100c93c:	1009883a 	mov	r4,r2
 100c940:	1023883a 	mov	r17,r2
 100c944:	10160a00 	call	10160a0 <__floatsidf>
 100c948:	9009883a 	mov	r4,r18
 100c94c:	800b883a 	mov	r5,r16
 100c950:	100d883a 	mov	r6,r2
 100c954:	180f883a 	mov	r7,r3
 100c958:	8c400c04 	addi	r17,r17,48
 100c95c:	10157d00 	call	10157d0 <__subdf3>
 100c960:	ad400044 	addi	r21,r21,1
 100c964:	ac7fffc5 	stb	r17,-1(r21)
 100c968:	ad3fea1e 	bne	r21,r20,100c914 <__alt_data_end+0xff80c914>
 100c96c:	1813883a 	mov	r9,r3
 100c970:	d8c01017 	ldw	r3,64(sp)
 100c974:	dc001317 	ldw	r16,76(sp)
 100c978:	dc801417 	ldw	r18,80(sp)
 100c97c:	1011883a 	mov	r8,r2
 100c980:	b8ef883a 	add	r23,r23,r3
 100c984:	d9000e17 	ldw	r4,56(sp)
 100c988:	d9401117 	ldw	r5,68(sp)
 100c98c:	000d883a 	mov	r6,zero
 100c990:	01cff834 	movhi	r7,16352
 100c994:	da001715 	stw	r8,92(sp)
 100c998:	da401515 	stw	r9,84(sp)
 100c99c:	1014d740 	call	1014d74 <__adddf3>
 100c9a0:	da001717 	ldw	r8,92(sp)
 100c9a4:	da401517 	ldw	r9,84(sp)
 100c9a8:	1009883a 	mov	r4,r2
 100c9ac:	400d883a 	mov	r6,r8
 100c9b0:	480f883a 	mov	r7,r9
 100c9b4:	180b883a 	mov	r5,r3
 100c9b8:	10156f00 	call	10156f0 <__ledf2>
 100c9bc:	da001717 	ldw	r8,92(sp)
 100c9c0:	da401517 	ldw	r9,84(sp)
 100c9c4:	10003b0e 	bge	r2,zero,100cab4 <_dtoa_r+0x15dc>
 100c9c8:	d9001217 	ldw	r4,72(sp)
 100c9cc:	bd7fffc3 	ldbu	r21,-1(r23)
 100c9d0:	d9000515 	stw	r4,20(sp)
 100c9d4:	003d1c06 	br	100be48 <__alt_data_end+0xff80be48>
 100c9d8:	d8c00817 	ldw	r3,32(sp)
 100c9dc:	18a9c83a 	sub	r20,r3,r2
 100c9e0:	0005883a 	mov	r2,zero
 100c9e4:	003d3706 	br	100bec4 <__alt_data_end+0xff80bec4>
 100c9e8:	00800044 	movi	r2,1
 100c9ec:	003dd006 	br	100c130 <__alt_data_end+0xff80c130>
 100c9f0:	d8c00217 	ldw	r3,8(sp)
 100c9f4:	00800d84 	movi	r2,54
 100c9f8:	dd400917 	ldw	r21,36(sp)
 100c9fc:	10c5c83a 	sub	r2,r2,r3
 100ca00:	dd000817 	ldw	r20,32(sp)
 100ca04:	003d2f06 	br	100bec4 <__alt_data_end+0xff80bec4>
 100ca08:	9029883a 	mov	r20,r18
 100ca0c:	982b883a 	mov	r21,r19
 100ca10:	04400084 	movi	r17,2
 100ca14:	003bc606 	br	100b930 <__alt_data_end+0xff80b930>
 100ca18:	d8800617 	ldw	r2,24(sp)
 100ca1c:	103efc26 	beq	r2,zero,100c610 <__alt_data_end+0xff80c610>
 100ca20:	d8c00d17 	ldw	r3,52(sp)
 100ca24:	00fc890e 	bge	zero,r3,100bc4c <__alt_data_end+0xff80bc4c>
 100ca28:	a80b883a 	mov	r5,r21
 100ca2c:	a009883a 	mov	r4,r20
 100ca30:	000d883a 	mov	r6,zero
 100ca34:	01d00934 	movhi	r7,16420
 100ca38:	10040200 	call	1004020 <__muldf3>
 100ca3c:	89000044 	addi	r4,r17,1
 100ca40:	1029883a 	mov	r20,r2
 100ca44:	182b883a 	mov	r21,r3
 100ca48:	10160a00 	call	10160a0 <__floatsidf>
 100ca4c:	a009883a 	mov	r4,r20
 100ca50:	a80b883a 	mov	r5,r21
 100ca54:	100d883a 	mov	r6,r2
 100ca58:	180f883a 	mov	r7,r3
 100ca5c:	10040200 	call	1004020 <__muldf3>
 100ca60:	1009883a 	mov	r4,r2
 100ca64:	180b883a 	mov	r5,r3
 100ca68:	000d883a 	mov	r6,zero
 100ca6c:	01d00734 	movhi	r7,16412
 100ca70:	1014d740 	call	1014d74 <__adddf3>
 100ca74:	d9000517 	ldw	r4,20(sp)
 100ca78:	1023883a 	mov	r17,r2
 100ca7c:	00bf3034 	movhi	r2,64704
 100ca80:	213fffc4 	addi	r4,r4,-1
 100ca84:	1885883a 	add	r2,r3,r2
 100ca88:	d9001215 	stw	r4,72(sp)
 100ca8c:	d8800e15 	stw	r2,56(sp)
 100ca90:	da800d17 	ldw	r10,52(sp)
 100ca94:	003bc306 	br	100b9a4 <__alt_data_end+0xff80b9a4>
 100ca98:	b039883a 	mov	fp,r22
 100ca9c:	01000e44 	movi	r4,57
 100caa0:	8825883a 	mov	r18,r17
 100caa4:	9dc00044 	addi	r23,r19,1
 100caa8:	99000005 	stb	r4,0(r19)
 100caac:	a023883a 	mov	r17,r20
 100cab0:	003dae06 	br	100c16c <__alt_data_end+0xff80c16c>
 100cab4:	d9800e17 	ldw	r6,56(sp)
 100cab8:	d9c01117 	ldw	r7,68(sp)
 100cabc:	0009883a 	mov	r4,zero
 100cac0:	014ff834 	movhi	r5,16352
 100cac4:	da001715 	stw	r8,92(sp)
 100cac8:	da401515 	stw	r9,84(sp)
 100cacc:	10157d00 	call	10157d0 <__subdf3>
 100cad0:	da001717 	ldw	r8,92(sp)
 100cad4:	da401517 	ldw	r9,84(sp)
 100cad8:	1009883a 	mov	r4,r2
 100cadc:	180b883a 	mov	r5,r3
 100cae0:	400d883a 	mov	r6,r8
 100cae4:	480f883a 	mov	r7,r9
 100cae8:	10156100 	call	1015610 <__gedf2>
 100caec:	00bc570e 	bge	zero,r2,100bc4c <__alt_data_end+0xff80bc4c>
 100caf0:	01000c04 	movi	r4,48
 100caf4:	00000106 	br	100cafc <_dtoa_r+0x1624>
 100caf8:	102f883a 	mov	r23,r2
 100cafc:	b8bfffc4 	addi	r2,r23,-1
 100cb00:	10c00007 	ldb	r3,0(r2)
 100cb04:	193ffc26 	beq	r3,r4,100caf8 <__alt_data_end+0xff80caf8>
 100cb08:	d9801217 	ldw	r6,72(sp)
 100cb0c:	d9800515 	stw	r6,20(sp)
 100cb10:	003c1f06 	br	100bb90 <__alt_data_end+0xff80bb90>
 100cb14:	d8801217 	ldw	r2,72(sp)
 100cb18:	dc001117 	ldw	r16,68(sp)
 100cb1c:	d8800515 	stw	r2,20(sp)
 100cb20:	003cc906 	br	100be48 <__alt_data_end+0xff80be48>
 100cb24:	dd801317 	ldw	r22,76(sp)
 100cb28:	dc001117 	ldw	r16,68(sp)
 100cb2c:	dcc01417 	ldw	r19,80(sp)
 100cb30:	dc801017 	ldw	r18,64(sp)
 100cb34:	003c4506 	br	100bc4c <__alt_data_end+0xff80bc4c>
 100cb38:	103e5d1e 	bne	r2,zero,100c4b0 <__alt_data_end+0xff80c4b0>
 100cb3c:	4080004c 	andi	r2,r8,1
 100cb40:	103e5b26 	beq	r2,zero,100c4b0 <__alt_data_end+0xff80c4b0>
 100cb44:	003e5706 	br	100c4a4 <__alt_data_end+0xff80c4a4>
 100cb48:	d8c00317 	ldw	r3,12(sp)
 100cb4c:	00800084 	movi	r2,2
 100cb50:	10c00a16 	blt	r2,r3,100cb7c <_dtoa_r+0x16a4>
 100cb54:	d9000d17 	ldw	r4,52(sp)
 100cb58:	003e8306 	br	100c568 <__alt_data_end+0xff80c568>
 100cb5c:	04400084 	movi	r17,2
 100cb60:	003b7306 	br	100b930 <__alt_data_end+0xff80b930>
 100cb64:	d9801217 	ldw	r6,72(sp)
 100cb68:	d9800515 	stw	r6,20(sp)
 100cb6c:	003cb606 	br	100be48 <__alt_data_end+0xff80be48>
 100cb70:	d9001217 	ldw	r4,72(sp)
 100cb74:	d9000515 	stw	r4,20(sp)
 100cb78:	003c0506 	br	100bb90 <__alt_data_end+0xff80bb90>
 100cb7c:	d9800d17 	ldw	r6,52(sp)
 100cb80:	d9800615 	stw	r6,24(sp)
 100cb84:	003e8306 	br	100c594 <__alt_data_end+0xff80c594>
 100cb88:	d9800317 	ldw	r6,12(sp)
 100cb8c:	00800084 	movi	r2,2
 100cb90:	11800216 	blt	r2,r6,100cb9c <_dtoa_r+0x16c4>
 100cb94:	d8800d17 	ldw	r2,52(sp)
 100cb98:	003da606 	br	100c234 <__alt_data_end+0xff80c234>
 100cb9c:	d8800d17 	ldw	r2,52(sp)
 100cba0:	d8800615 	stw	r2,24(sp)
 100cba4:	003e7b06 	br	100c594 <__alt_data_end+0xff80c594>
 100cba8:	05000044 	movi	r20,1
 100cbac:	003b0506 	br	100b7c4 <__alt_data_end+0xff80b7c4>
 100cbb0:	8009883a 	mov	r4,r16
 100cbb4:	80001115 	stw	zero,68(r16)
 100cbb8:	000b883a 	mov	r5,zero
 100cbbc:	100f7b00 	call	100f7b0 <_Balloc>
 100cbc0:	d8800715 	stw	r2,28(sp)
 100cbc4:	d8c00717 	ldw	r3,28(sp)
 100cbc8:	00bfffc4 	movi	r2,-1
 100cbcc:	01000044 	movi	r4,1
 100cbd0:	d8800615 	stw	r2,24(sp)
 100cbd4:	80c01015 	stw	r3,64(r16)
 100cbd8:	d9000b15 	stw	r4,44(sp)
 100cbdc:	d8002215 	stw	zero,136(sp)
 100cbe0:	d8800d15 	stw	r2,52(sp)
 100cbe4:	003c1906 	br	100bc4c <__alt_data_end+0xff80bc4c>
 100cbe8:	193d2926 	beq	r3,r4,100c090 <__alt_data_end+0xff80c090>
 100cbec:	00c00f04 	movi	r3,60
 100cbf0:	1885c83a 	sub	r2,r3,r2
 100cbf4:	003d7b06 	br	100c1e4 <__alt_data_end+0xff80c1e4>
 100cbf8:	000b883a 	mov	r5,zero
 100cbfc:	003b1006 	br	100b840 <__alt_data_end+0xff80b840>

0100cc00 <_fflush_r>:
 100cc00:	defffb04 	addi	sp,sp,-20
 100cc04:	dcc00315 	stw	r19,12(sp)
 100cc08:	dc000015 	stw	r16,0(sp)
 100cc0c:	dfc00415 	stw	ra,16(sp)
 100cc10:	dc800215 	stw	r18,8(sp)
 100cc14:	dc400115 	stw	r17,4(sp)
 100cc18:	2027883a 	mov	r19,r4
 100cc1c:	2821883a 	mov	r16,r5
 100cc20:	20000226 	beq	r4,zero,100cc2c <_fflush_r+0x2c>
 100cc24:	20800e17 	ldw	r2,56(r4)
 100cc28:	10005326 	beq	r2,zero,100cd78 <_fflush_r+0x178>
 100cc2c:	8080030b 	ldhu	r2,12(r16)
 100cc30:	10ffffcc 	andi	r3,r2,65535
 100cc34:	18e0001c 	xori	r3,r3,32768
 100cc38:	18e00004 	addi	r3,r3,-32768
 100cc3c:	18002c26 	beq	r3,zero,100ccf0 <_fflush_r+0xf0>
 100cc40:	10c0020c 	andi	r3,r2,8
 100cc44:	1800321e 	bne	r3,zero,100cd10 <_fflush_r+0x110>
 100cc48:	80c00117 	ldw	r3,4(r16)
 100cc4c:	10820014 	ori	r2,r2,2048
 100cc50:	8080030d 	sth	r2,12(r16)
 100cc54:	00c0570e 	bge	zero,r3,100cdb4 <_fflush_r+0x1b4>
 100cc58:	82000a17 	ldw	r8,40(r16)
 100cc5c:	40002426 	beq	r8,zero,100ccf0 <_fflush_r+0xf0>
 100cc60:	9c400017 	ldw	r17,0(r19)
 100cc64:	10c4000c 	andi	r3,r2,4096
 100cc68:	98000015 	stw	zero,0(r19)
 100cc6c:	18004626 	beq	r3,zero,100cd88 <_fflush_r+0x188>
 100cc70:	81801417 	ldw	r6,80(r16)
 100cc74:	10c0010c 	andi	r3,r2,4
 100cc78:	18000626 	beq	r3,zero,100cc94 <_fflush_r+0x94>
 100cc7c:	80c00117 	ldw	r3,4(r16)
 100cc80:	80800c17 	ldw	r2,48(r16)
 100cc84:	30cdc83a 	sub	r6,r6,r3
 100cc88:	10000226 	beq	r2,zero,100cc94 <_fflush_r+0x94>
 100cc8c:	80800f17 	ldw	r2,60(r16)
 100cc90:	308dc83a 	sub	r6,r6,r2
 100cc94:	81400717 	ldw	r5,28(r16)
 100cc98:	9809883a 	mov	r4,r19
 100cc9c:	000f883a 	mov	r7,zero
 100cca0:	403ee83a 	callr	r8
 100cca4:	00ffffc4 	movi	r3,-1
 100cca8:	10c04526 	beq	r2,r3,100cdc0 <_fflush_r+0x1c0>
 100ccac:	80c0030b 	ldhu	r3,12(r16)
 100ccb0:	81000417 	ldw	r4,16(r16)
 100ccb4:	80000115 	stw	zero,4(r16)
 100ccb8:	197dffcc 	andi	r5,r3,63487
 100ccbc:	8140030d 	sth	r5,12(r16)
 100ccc0:	81000015 	stw	r4,0(r16)
 100ccc4:	18c4000c 	andi	r3,r3,4096
 100ccc8:	18000126 	beq	r3,zero,100ccd0 <_fflush_r+0xd0>
 100cccc:	80801415 	stw	r2,80(r16)
 100ccd0:	81400c17 	ldw	r5,48(r16)
 100ccd4:	9c400015 	stw	r17,0(r19)
 100ccd8:	28000526 	beq	r5,zero,100ccf0 <_fflush_r+0xf0>
 100ccdc:	80801004 	addi	r2,r16,64
 100cce0:	28800226 	beq	r5,r2,100ccec <_fflush_r+0xec>
 100cce4:	9809883a 	mov	r4,r19
 100cce8:	100d31c0 	call	100d31c <_free_r>
 100ccec:	80000c15 	stw	zero,48(r16)
 100ccf0:	0005883a 	mov	r2,zero
 100ccf4:	dfc00417 	ldw	ra,16(sp)
 100ccf8:	dcc00317 	ldw	r19,12(sp)
 100ccfc:	dc800217 	ldw	r18,8(sp)
 100cd00:	dc400117 	ldw	r17,4(sp)
 100cd04:	dc000017 	ldw	r16,0(sp)
 100cd08:	dec00504 	addi	sp,sp,20
 100cd0c:	f800283a 	ret
 100cd10:	84800417 	ldw	r18,16(r16)
 100cd14:	903ff626 	beq	r18,zero,100ccf0 <__alt_data_end+0xff80ccf0>
 100cd18:	84400017 	ldw	r17,0(r16)
 100cd1c:	108000cc 	andi	r2,r2,3
 100cd20:	84800015 	stw	r18,0(r16)
 100cd24:	8ca3c83a 	sub	r17,r17,r18
 100cd28:	10001526 	beq	r2,zero,100cd80 <_fflush_r+0x180>
 100cd2c:	0005883a 	mov	r2,zero
 100cd30:	80800215 	stw	r2,8(r16)
 100cd34:	04400316 	blt	zero,r17,100cd44 <_fflush_r+0x144>
 100cd38:	003fed06 	br	100ccf0 <__alt_data_end+0xff80ccf0>
 100cd3c:	90a5883a 	add	r18,r18,r2
 100cd40:	047feb0e 	bge	zero,r17,100ccf0 <__alt_data_end+0xff80ccf0>
 100cd44:	80800917 	ldw	r2,36(r16)
 100cd48:	81400717 	ldw	r5,28(r16)
 100cd4c:	880f883a 	mov	r7,r17
 100cd50:	900d883a 	mov	r6,r18
 100cd54:	9809883a 	mov	r4,r19
 100cd58:	103ee83a 	callr	r2
 100cd5c:	88a3c83a 	sub	r17,r17,r2
 100cd60:	00bff616 	blt	zero,r2,100cd3c <__alt_data_end+0xff80cd3c>
 100cd64:	80c0030b 	ldhu	r3,12(r16)
 100cd68:	00bfffc4 	movi	r2,-1
 100cd6c:	18c01014 	ori	r3,r3,64
 100cd70:	80c0030d 	sth	r3,12(r16)
 100cd74:	003fdf06 	br	100ccf4 <__alt_data_end+0xff80ccf4>
 100cd78:	100d1a80 	call	100d1a8 <__sinit>
 100cd7c:	003fab06 	br	100cc2c <__alt_data_end+0xff80cc2c>
 100cd80:	80800517 	ldw	r2,20(r16)
 100cd84:	003fea06 	br	100cd30 <__alt_data_end+0xff80cd30>
 100cd88:	81400717 	ldw	r5,28(r16)
 100cd8c:	000d883a 	mov	r6,zero
 100cd90:	9809883a 	mov	r4,r19
 100cd94:	01c00044 	movi	r7,1
 100cd98:	403ee83a 	callr	r8
 100cd9c:	100d883a 	mov	r6,r2
 100cda0:	00bfffc4 	movi	r2,-1
 100cda4:	30801326 	beq	r6,r2,100cdf4 <_fflush_r+0x1f4>
 100cda8:	8080030b 	ldhu	r2,12(r16)
 100cdac:	82000a17 	ldw	r8,40(r16)
 100cdb0:	003fb006 	br	100cc74 <__alt_data_end+0xff80cc74>
 100cdb4:	80c00f17 	ldw	r3,60(r16)
 100cdb8:	00ffa716 	blt	zero,r3,100cc58 <__alt_data_end+0xff80cc58>
 100cdbc:	003fcc06 	br	100ccf0 <__alt_data_end+0xff80ccf0>
 100cdc0:	98c00017 	ldw	r3,0(r19)
 100cdc4:	183fb926 	beq	r3,zero,100ccac <__alt_data_end+0xff80ccac>
 100cdc8:	01000744 	movi	r4,29
 100cdcc:	19000226 	beq	r3,r4,100cdd8 <_fflush_r+0x1d8>
 100cdd0:	01000584 	movi	r4,22
 100cdd4:	1900101e 	bne	r3,r4,100ce18 <_fflush_r+0x218>
 100cdd8:	8080030b 	ldhu	r2,12(r16)
 100cddc:	80c00417 	ldw	r3,16(r16)
 100cde0:	80000115 	stw	zero,4(r16)
 100cde4:	10bdffcc 	andi	r2,r2,63487
 100cde8:	8080030d 	sth	r2,12(r16)
 100cdec:	80c00015 	stw	r3,0(r16)
 100cdf0:	003fb706 	br	100ccd0 <__alt_data_end+0xff80ccd0>
 100cdf4:	98800017 	ldw	r2,0(r19)
 100cdf8:	103feb26 	beq	r2,zero,100cda8 <__alt_data_end+0xff80cda8>
 100cdfc:	00c00744 	movi	r3,29
 100ce00:	10c00226 	beq	r2,r3,100ce0c <_fflush_r+0x20c>
 100ce04:	00c00584 	movi	r3,22
 100ce08:	10ffd61e 	bne	r2,r3,100cd64 <__alt_data_end+0xff80cd64>
 100ce0c:	9c400015 	stw	r17,0(r19)
 100ce10:	0005883a 	mov	r2,zero
 100ce14:	003fb706 	br	100ccf4 <__alt_data_end+0xff80ccf4>
 100ce18:	80c0030b 	ldhu	r3,12(r16)
 100ce1c:	18c01014 	ori	r3,r3,64
 100ce20:	80c0030d 	sth	r3,12(r16)
 100ce24:	003fb306 	br	100ccf4 <__alt_data_end+0xff80ccf4>

0100ce28 <fflush>:
 100ce28:	20000526 	beq	r4,zero,100ce40 <fflush+0x18>
 100ce2c:	008040b4 	movhi	r2,258
 100ce30:	10ad3804 	addi	r2,r2,-19232
 100ce34:	200b883a 	mov	r5,r4
 100ce38:	11000017 	ldw	r4,0(r2)
 100ce3c:	100cc001 	jmpi	100cc00 <_fflush_r>
 100ce40:	008040b4 	movhi	r2,258
 100ce44:	10ad3704 	addi	r2,r2,-19236
 100ce48:	11000017 	ldw	r4,0(r2)
 100ce4c:	01404074 	movhi	r5,257
 100ce50:	29730004 	addi	r5,r5,-13312
 100ce54:	100db681 	jmpi	100db68 <_fwalk_reent>

0100ce58 <__fp_lock>:
 100ce58:	0005883a 	mov	r2,zero
 100ce5c:	f800283a 	ret

0100ce60 <__fp_unlock>:
 100ce60:	0005883a 	mov	r2,zero
 100ce64:	f800283a 	ret

0100ce68 <_cleanup_r>:
 100ce68:	01404074 	movhi	r5,257
 100ce6c:	294e4204 	addi	r5,r5,14600
 100ce70:	100dab01 	jmpi	100dab0 <_fwalk>

0100ce74 <__sinit.part.1>:
 100ce74:	defff604 	addi	sp,sp,-40
 100ce78:	00c04074 	movhi	r3,257
 100ce7c:	dfc00915 	stw	ra,36(sp)
 100ce80:	df000815 	stw	fp,32(sp)
 100ce84:	ddc00715 	stw	r23,28(sp)
 100ce88:	dd800615 	stw	r22,24(sp)
 100ce8c:	dd400515 	stw	r21,20(sp)
 100ce90:	dd000415 	stw	r20,16(sp)
 100ce94:	dcc00315 	stw	r19,12(sp)
 100ce98:	dc800215 	stw	r18,8(sp)
 100ce9c:	dc400115 	stw	r17,4(sp)
 100cea0:	dc000015 	stw	r16,0(sp)
 100cea4:	18f39a04 	addi	r3,r3,-12696
 100cea8:	24000117 	ldw	r16,4(r4)
 100ceac:	20c00f15 	stw	r3,60(r4)
 100ceb0:	07000044 	movi	fp,1
 100ceb4:	00c000c4 	movi	r3,3
 100ceb8:	2080bb04 	addi	r2,r4,748
 100cebc:	20c0b915 	stw	r3,740(r4)
 100cec0:	27000e15 	stw	fp,56(r4)
 100cec4:	2080ba15 	stw	r2,744(r4)
 100cec8:	2000b815 	stw	zero,736(r4)
 100cecc:	05c00204 	movi	r23,8
 100ced0:	00800104 	movi	r2,4
 100ced4:	2025883a 	mov	r18,r4
 100ced8:	b80d883a 	mov	r6,r23
 100cedc:	81001704 	addi	r4,r16,92
 100cee0:	000b883a 	mov	r5,zero
 100cee4:	80000015 	stw	zero,0(r16)
 100cee8:	80000115 	stw	zero,4(r16)
 100ceec:	80000215 	stw	zero,8(r16)
 100cef0:	8080030d 	sth	r2,12(r16)
 100cef4:	80001915 	stw	zero,100(r16)
 100cef8:	8000038d 	sth	zero,14(r16)
 100cefc:	80000415 	stw	zero,16(r16)
 100cf00:	80000515 	stw	zero,20(r16)
 100cf04:	80000615 	stw	zero,24(r16)
 100cf08:	100f68c0 	call	100f68c <memset>
 100cf0c:	05804074 	movhi	r22,257
 100cf10:	94400217 	ldw	r17,8(r18)
 100cf14:	05404074 	movhi	r21,257
 100cf18:	05004074 	movhi	r20,257
 100cf1c:	04c04074 	movhi	r19,257
 100cf20:	b5834c04 	addi	r22,r22,3376
 100cf24:	ad436304 	addi	r21,r21,3468
 100cf28:	a5038204 	addi	r20,r20,3592
 100cf2c:	9cc39904 	addi	r19,r19,3684
 100cf30:	85800815 	stw	r22,32(r16)
 100cf34:	85400915 	stw	r21,36(r16)
 100cf38:	85000a15 	stw	r20,40(r16)
 100cf3c:	84c00b15 	stw	r19,44(r16)
 100cf40:	84000715 	stw	r16,28(r16)
 100cf44:	00800284 	movi	r2,10
 100cf48:	89001704 	addi	r4,r17,92
 100cf4c:	b80d883a 	mov	r6,r23
 100cf50:	000b883a 	mov	r5,zero
 100cf54:	88000015 	stw	zero,0(r17)
 100cf58:	88000115 	stw	zero,4(r17)
 100cf5c:	88000215 	stw	zero,8(r17)
 100cf60:	8880030d 	sth	r2,12(r17)
 100cf64:	88001915 	stw	zero,100(r17)
 100cf68:	8f00038d 	sth	fp,14(r17)
 100cf6c:	88000415 	stw	zero,16(r17)
 100cf70:	88000515 	stw	zero,20(r17)
 100cf74:	88000615 	stw	zero,24(r17)
 100cf78:	100f68c0 	call	100f68c <memset>
 100cf7c:	94000317 	ldw	r16,12(r18)
 100cf80:	00800484 	movi	r2,18
 100cf84:	8c400715 	stw	r17,28(r17)
 100cf88:	8d800815 	stw	r22,32(r17)
 100cf8c:	8d400915 	stw	r21,36(r17)
 100cf90:	8d000a15 	stw	r20,40(r17)
 100cf94:	8cc00b15 	stw	r19,44(r17)
 100cf98:	8080030d 	sth	r2,12(r16)
 100cf9c:	00800084 	movi	r2,2
 100cfa0:	80000015 	stw	zero,0(r16)
 100cfa4:	80000115 	stw	zero,4(r16)
 100cfa8:	80000215 	stw	zero,8(r16)
 100cfac:	80001915 	stw	zero,100(r16)
 100cfb0:	8080038d 	sth	r2,14(r16)
 100cfb4:	80000415 	stw	zero,16(r16)
 100cfb8:	80000515 	stw	zero,20(r16)
 100cfbc:	80000615 	stw	zero,24(r16)
 100cfc0:	81001704 	addi	r4,r16,92
 100cfc4:	000b883a 	mov	r5,zero
 100cfc8:	b80d883a 	mov	r6,r23
 100cfcc:	100f68c0 	call	100f68c <memset>
 100cfd0:	84000715 	stw	r16,28(r16)
 100cfd4:	85800815 	stw	r22,32(r16)
 100cfd8:	85400915 	stw	r21,36(r16)
 100cfdc:	85000a15 	stw	r20,40(r16)
 100cfe0:	84c00b15 	stw	r19,44(r16)
 100cfe4:	dfc00917 	ldw	ra,36(sp)
 100cfe8:	df000817 	ldw	fp,32(sp)
 100cfec:	ddc00717 	ldw	r23,28(sp)
 100cff0:	dd800617 	ldw	r22,24(sp)
 100cff4:	dd400517 	ldw	r21,20(sp)
 100cff8:	dd000417 	ldw	r20,16(sp)
 100cffc:	dcc00317 	ldw	r19,12(sp)
 100d000:	dc800217 	ldw	r18,8(sp)
 100d004:	dc400117 	ldw	r17,4(sp)
 100d008:	dc000017 	ldw	r16,0(sp)
 100d00c:	dec00a04 	addi	sp,sp,40
 100d010:	f800283a 	ret

0100d014 <__sfmoreglue>:
 100d014:	defffc04 	addi	sp,sp,-16
 100d018:	dc400115 	stw	r17,4(sp)
 100d01c:	2c401a24 	muli	r17,r5,104
 100d020:	dc800215 	stw	r18,8(sp)
 100d024:	2825883a 	mov	r18,r5
 100d028:	89400304 	addi	r5,r17,12
 100d02c:	dc000015 	stw	r16,0(sp)
 100d030:	dfc00315 	stw	ra,12(sp)
 100d034:	100eaec0 	call	100eaec <_malloc_r>
 100d038:	1021883a 	mov	r16,r2
 100d03c:	10000726 	beq	r2,zero,100d05c <__sfmoreglue+0x48>
 100d040:	11000304 	addi	r4,r2,12
 100d044:	10000015 	stw	zero,0(r2)
 100d048:	14800115 	stw	r18,4(r2)
 100d04c:	11000215 	stw	r4,8(r2)
 100d050:	000b883a 	mov	r5,zero
 100d054:	880d883a 	mov	r6,r17
 100d058:	100f68c0 	call	100f68c <memset>
 100d05c:	8005883a 	mov	r2,r16
 100d060:	dfc00317 	ldw	ra,12(sp)
 100d064:	dc800217 	ldw	r18,8(sp)
 100d068:	dc400117 	ldw	r17,4(sp)
 100d06c:	dc000017 	ldw	r16,0(sp)
 100d070:	dec00404 	addi	sp,sp,16
 100d074:	f800283a 	ret

0100d078 <__sfp>:
 100d078:	008040b4 	movhi	r2,258
 100d07c:	defffb04 	addi	sp,sp,-20
 100d080:	10ad3704 	addi	r2,r2,-19236
 100d084:	dc800215 	stw	r18,8(sp)
 100d088:	14800017 	ldw	r18,0(r2)
 100d08c:	dcc00315 	stw	r19,12(sp)
 100d090:	dfc00415 	stw	ra,16(sp)
 100d094:	90800e17 	ldw	r2,56(r18)
 100d098:	dc400115 	stw	r17,4(sp)
 100d09c:	dc000015 	stw	r16,0(sp)
 100d0a0:	2027883a 	mov	r19,r4
 100d0a4:	1000021e 	bne	r2,zero,100d0b0 <__sfp+0x38>
 100d0a8:	9009883a 	mov	r4,r18
 100d0ac:	100ce740 	call	100ce74 <__sinit.part.1>
 100d0b0:	9480b804 	addi	r18,r18,736
 100d0b4:	047fffc4 	movi	r17,-1
 100d0b8:	91400117 	ldw	r5,4(r18)
 100d0bc:	94000217 	ldw	r16,8(r18)
 100d0c0:	297fffc4 	addi	r5,r5,-1
 100d0c4:	28000a16 	blt	r5,zero,100d0f0 <__sfp+0x78>
 100d0c8:	8080030f 	ldh	r2,12(r16)
 100d0cc:	10000c26 	beq	r2,zero,100d100 <__sfp+0x88>
 100d0d0:	80c01d04 	addi	r3,r16,116
 100d0d4:	00000206 	br	100d0e0 <__sfp+0x68>
 100d0d8:	18bfe60f 	ldh	r2,-104(r3)
 100d0dc:	10000826 	beq	r2,zero,100d100 <__sfp+0x88>
 100d0e0:	297fffc4 	addi	r5,r5,-1
 100d0e4:	1c3ffd04 	addi	r16,r3,-12
 100d0e8:	18c01a04 	addi	r3,r3,104
 100d0ec:	2c7ffa1e 	bne	r5,r17,100d0d8 <__alt_data_end+0xff80d0d8>
 100d0f0:	90800017 	ldw	r2,0(r18)
 100d0f4:	10001d26 	beq	r2,zero,100d16c <__sfp+0xf4>
 100d0f8:	1025883a 	mov	r18,r2
 100d0fc:	003fee06 	br	100d0b8 <__alt_data_end+0xff80d0b8>
 100d100:	00bfffc4 	movi	r2,-1
 100d104:	8080038d 	sth	r2,14(r16)
 100d108:	00800044 	movi	r2,1
 100d10c:	8080030d 	sth	r2,12(r16)
 100d110:	80001915 	stw	zero,100(r16)
 100d114:	80000015 	stw	zero,0(r16)
 100d118:	80000215 	stw	zero,8(r16)
 100d11c:	80000115 	stw	zero,4(r16)
 100d120:	80000415 	stw	zero,16(r16)
 100d124:	80000515 	stw	zero,20(r16)
 100d128:	80000615 	stw	zero,24(r16)
 100d12c:	81001704 	addi	r4,r16,92
 100d130:	000b883a 	mov	r5,zero
 100d134:	01800204 	movi	r6,8
 100d138:	100f68c0 	call	100f68c <memset>
 100d13c:	8005883a 	mov	r2,r16
 100d140:	80000c15 	stw	zero,48(r16)
 100d144:	80000d15 	stw	zero,52(r16)
 100d148:	80001115 	stw	zero,68(r16)
 100d14c:	80001215 	stw	zero,72(r16)
 100d150:	dfc00417 	ldw	ra,16(sp)
 100d154:	dcc00317 	ldw	r19,12(sp)
 100d158:	dc800217 	ldw	r18,8(sp)
 100d15c:	dc400117 	ldw	r17,4(sp)
 100d160:	dc000017 	ldw	r16,0(sp)
 100d164:	dec00504 	addi	sp,sp,20
 100d168:	f800283a 	ret
 100d16c:	9809883a 	mov	r4,r19
 100d170:	01400104 	movi	r5,4
 100d174:	100d0140 	call	100d014 <__sfmoreglue>
 100d178:	90800015 	stw	r2,0(r18)
 100d17c:	103fde1e 	bne	r2,zero,100d0f8 <__alt_data_end+0xff80d0f8>
 100d180:	00800304 	movi	r2,12
 100d184:	98800015 	stw	r2,0(r19)
 100d188:	0005883a 	mov	r2,zero
 100d18c:	003ff006 	br	100d150 <__alt_data_end+0xff80d150>

0100d190 <_cleanup>:
 100d190:	008040b4 	movhi	r2,258
 100d194:	10ad3704 	addi	r2,r2,-19236
 100d198:	11000017 	ldw	r4,0(r2)
 100d19c:	01404074 	movhi	r5,257
 100d1a0:	294e4204 	addi	r5,r5,14600
 100d1a4:	100dab01 	jmpi	100dab0 <_fwalk>

0100d1a8 <__sinit>:
 100d1a8:	20800e17 	ldw	r2,56(r4)
 100d1ac:	10000126 	beq	r2,zero,100d1b4 <__sinit+0xc>
 100d1b0:	f800283a 	ret
 100d1b4:	100ce741 	jmpi	100ce74 <__sinit.part.1>

0100d1b8 <__sfp_lock_acquire>:
 100d1b8:	f800283a 	ret

0100d1bc <__sfp_lock_release>:
 100d1bc:	f800283a 	ret

0100d1c0 <__sinit_lock_acquire>:
 100d1c0:	f800283a 	ret

0100d1c4 <__sinit_lock_release>:
 100d1c4:	f800283a 	ret

0100d1c8 <__fp_lock_all>:
 100d1c8:	008040b4 	movhi	r2,258
 100d1cc:	10ad3804 	addi	r2,r2,-19232
 100d1d0:	11000017 	ldw	r4,0(r2)
 100d1d4:	01404074 	movhi	r5,257
 100d1d8:	29739604 	addi	r5,r5,-12712
 100d1dc:	100dab01 	jmpi	100dab0 <_fwalk>

0100d1e0 <__fp_unlock_all>:
 100d1e0:	008040b4 	movhi	r2,258
 100d1e4:	10ad3804 	addi	r2,r2,-19232
 100d1e8:	11000017 	ldw	r4,0(r2)
 100d1ec:	01404074 	movhi	r5,257
 100d1f0:	29739804 	addi	r5,r5,-12704
 100d1f4:	100dab01 	jmpi	100dab0 <_fwalk>

0100d1f8 <_malloc_trim_r>:
 100d1f8:	defffb04 	addi	sp,sp,-20
 100d1fc:	dcc00315 	stw	r19,12(sp)
 100d200:	04c040b4 	movhi	r19,258
 100d204:	dc800215 	stw	r18,8(sp)
 100d208:	dc400115 	stw	r17,4(sp)
 100d20c:	dc000015 	stw	r16,0(sp)
 100d210:	dfc00415 	stw	ra,16(sp)
 100d214:	2821883a 	mov	r16,r5
 100d218:	9ce79b04 	addi	r19,r19,-24980
 100d21c:	2025883a 	mov	r18,r4
 100d220:	10167d40 	call	10167d4 <__malloc_lock>
 100d224:	98800217 	ldw	r2,8(r19)
 100d228:	14400117 	ldw	r17,4(r2)
 100d22c:	00bfff04 	movi	r2,-4
 100d230:	88a2703a 	and	r17,r17,r2
 100d234:	8c21c83a 	sub	r16,r17,r16
 100d238:	8403fbc4 	addi	r16,r16,4079
 100d23c:	8020d33a 	srli	r16,r16,12
 100d240:	0083ffc4 	movi	r2,4095
 100d244:	843fffc4 	addi	r16,r16,-1
 100d248:	8020933a 	slli	r16,r16,12
 100d24c:	1400060e 	bge	r2,r16,100d268 <_malloc_trim_r+0x70>
 100d250:	9009883a 	mov	r4,r18
 100d254:	000b883a 	mov	r5,zero
 100d258:	1010cdc0 	call	1010cdc <_sbrk_r>
 100d25c:	98c00217 	ldw	r3,8(r19)
 100d260:	1c47883a 	add	r3,r3,r17
 100d264:	10c00a26 	beq	r2,r3,100d290 <_malloc_trim_r+0x98>
 100d268:	9009883a 	mov	r4,r18
 100d26c:	10167f40 	call	10167f4 <__malloc_unlock>
 100d270:	0005883a 	mov	r2,zero
 100d274:	dfc00417 	ldw	ra,16(sp)
 100d278:	dcc00317 	ldw	r19,12(sp)
 100d27c:	dc800217 	ldw	r18,8(sp)
 100d280:	dc400117 	ldw	r17,4(sp)
 100d284:	dc000017 	ldw	r16,0(sp)
 100d288:	dec00504 	addi	sp,sp,20
 100d28c:	f800283a 	ret
 100d290:	9009883a 	mov	r4,r18
 100d294:	040bc83a 	sub	r5,zero,r16
 100d298:	1010cdc0 	call	1010cdc <_sbrk_r>
 100d29c:	00ffffc4 	movi	r3,-1
 100d2a0:	10c00d26 	beq	r2,r3,100d2d8 <_malloc_trim_r+0xe0>
 100d2a4:	00c040b4 	movhi	r3,258
 100d2a8:	18f48b04 	addi	r3,r3,-11732
 100d2ac:	18800017 	ldw	r2,0(r3)
 100d2b0:	99000217 	ldw	r4,8(r19)
 100d2b4:	8c23c83a 	sub	r17,r17,r16
 100d2b8:	8c400054 	ori	r17,r17,1
 100d2bc:	1421c83a 	sub	r16,r2,r16
 100d2c0:	24400115 	stw	r17,4(r4)
 100d2c4:	9009883a 	mov	r4,r18
 100d2c8:	1c000015 	stw	r16,0(r3)
 100d2cc:	10167f40 	call	10167f4 <__malloc_unlock>
 100d2d0:	00800044 	movi	r2,1
 100d2d4:	003fe706 	br	100d274 <__alt_data_end+0xff80d274>
 100d2d8:	9009883a 	mov	r4,r18
 100d2dc:	000b883a 	mov	r5,zero
 100d2e0:	1010cdc0 	call	1010cdc <_sbrk_r>
 100d2e4:	99000217 	ldw	r4,8(r19)
 100d2e8:	014003c4 	movi	r5,15
 100d2ec:	1107c83a 	sub	r3,r2,r4
 100d2f0:	28ffdd0e 	bge	r5,r3,100d268 <__alt_data_end+0xff80d268>
 100d2f4:	014040b4 	movhi	r5,258
 100d2f8:	296d3a04 	addi	r5,r5,-19224
 100d2fc:	29400017 	ldw	r5,0(r5)
 100d300:	18c00054 	ori	r3,r3,1
 100d304:	20c00115 	stw	r3,4(r4)
 100d308:	00c040b4 	movhi	r3,258
 100d30c:	1145c83a 	sub	r2,r2,r5
 100d310:	18f48b04 	addi	r3,r3,-11732
 100d314:	18800015 	stw	r2,0(r3)
 100d318:	003fd306 	br	100d268 <__alt_data_end+0xff80d268>

0100d31c <_free_r>:
 100d31c:	28004c26 	beq	r5,zero,100d450 <_free_r+0x134>
 100d320:	defffd04 	addi	sp,sp,-12
 100d324:	dc400115 	stw	r17,4(sp)
 100d328:	dc000015 	stw	r16,0(sp)
 100d32c:	2023883a 	mov	r17,r4
 100d330:	2821883a 	mov	r16,r5
 100d334:	dfc00215 	stw	ra,8(sp)
 100d338:	10167d40 	call	10167d4 <__malloc_lock>
 100d33c:	813fff17 	ldw	r4,-4(r16)
 100d340:	00bfff84 	movi	r2,-2
 100d344:	024040b4 	movhi	r9,258
 100d348:	81bffe04 	addi	r6,r16,-8
 100d34c:	2084703a 	and	r2,r4,r2
 100d350:	4a679b04 	addi	r9,r9,-24980
 100d354:	308b883a 	add	r5,r6,r2
 100d358:	2a000117 	ldw	r8,4(r5)
 100d35c:	49c00217 	ldw	r7,8(r9)
 100d360:	00ffff04 	movi	r3,-4
 100d364:	40c6703a 	and	r3,r8,r3
 100d368:	39405326 	beq	r7,r5,100d4b8 <_free_r+0x19c>
 100d36c:	28c00115 	stw	r3,4(r5)
 100d370:	2100004c 	andi	r4,r4,1
 100d374:	2000091e 	bne	r4,zero,100d39c <_free_r+0x80>
 100d378:	81fffe17 	ldw	r7,-8(r16)
 100d37c:	4a000204 	addi	r8,r9,8
 100d380:	31cdc83a 	sub	r6,r6,r7
 100d384:	31000217 	ldw	r4,8(r6)
 100d388:	11c5883a 	add	r2,r2,r7
 100d38c:	22006126 	beq	r4,r8,100d514 <_free_r+0x1f8>
 100d390:	31c00317 	ldw	r7,12(r6)
 100d394:	21c00315 	stw	r7,12(r4)
 100d398:	39000215 	stw	r4,8(r7)
 100d39c:	28c9883a 	add	r4,r5,r3
 100d3a0:	21c00117 	ldw	r7,4(r4)
 100d3a4:	39c0004c 	andi	r7,r7,1
 100d3a8:	38000d1e 	bne	r7,zero,100d3e0 <_free_r+0xc4>
 100d3ac:	29000217 	ldw	r4,8(r5)
 100d3b0:	10c5883a 	add	r2,r2,r3
 100d3b4:	00c040b4 	movhi	r3,258
 100d3b8:	18e79d04 	addi	r3,r3,-24972
 100d3bc:	20c07526 	beq	r4,r3,100d594 <_free_r+0x278>
 100d3c0:	29c00317 	ldw	r7,12(r5)
 100d3c4:	11400054 	ori	r5,r2,1
 100d3c8:	3087883a 	add	r3,r6,r2
 100d3cc:	21c00315 	stw	r7,12(r4)
 100d3d0:	39000215 	stw	r4,8(r7)
 100d3d4:	31400115 	stw	r5,4(r6)
 100d3d8:	18800015 	stw	r2,0(r3)
 100d3dc:	00000406 	br	100d3f0 <_free_r+0xd4>
 100d3e0:	10c00054 	ori	r3,r2,1
 100d3e4:	30c00115 	stw	r3,4(r6)
 100d3e8:	3087883a 	add	r3,r6,r2
 100d3ec:	18800015 	stw	r2,0(r3)
 100d3f0:	00c07fc4 	movi	r3,511
 100d3f4:	18801736 	bltu	r3,r2,100d454 <_free_r+0x138>
 100d3f8:	1004d0fa 	srli	r2,r2,3
 100d3fc:	01400044 	movi	r5,1
 100d400:	49000117 	ldw	r4,4(r9)
 100d404:	1087883a 	add	r3,r2,r2
 100d408:	18c7883a 	add	r3,r3,r3
 100d40c:	1005d0ba 	srai	r2,r2,2
 100d410:	18c7883a 	add	r3,r3,r3
 100d414:	1a47883a 	add	r3,r3,r9
 100d418:	19c00217 	ldw	r7,8(r3)
 100d41c:	2884983a 	sll	r2,r5,r2
 100d420:	30c00315 	stw	r3,12(r6)
 100d424:	31c00215 	stw	r7,8(r6)
 100d428:	1104b03a 	or	r2,r2,r4
 100d42c:	19800215 	stw	r6,8(r3)
 100d430:	48800115 	stw	r2,4(r9)
 100d434:	39800315 	stw	r6,12(r7)
 100d438:	8809883a 	mov	r4,r17
 100d43c:	dfc00217 	ldw	ra,8(sp)
 100d440:	dc400117 	ldw	r17,4(sp)
 100d444:	dc000017 	ldw	r16,0(sp)
 100d448:	dec00304 	addi	sp,sp,12
 100d44c:	10167f41 	jmpi	10167f4 <__malloc_unlock>
 100d450:	f800283a 	ret
 100d454:	1006d27a 	srli	r3,r2,9
 100d458:	01000104 	movi	r4,4
 100d45c:	20c04036 	bltu	r4,r3,100d560 <_free_r+0x244>
 100d460:	1006d1ba 	srli	r3,r2,6
 100d464:	19400e04 	addi	r5,r3,56
 100d468:	2947883a 	add	r3,r5,r5
 100d46c:	18c7883a 	add	r3,r3,r3
 100d470:	18c7883a 	add	r3,r3,r3
 100d474:	1a49883a 	add	r4,r3,r9
 100d478:	20c00217 	ldw	r3,8(r4)
 100d47c:	01c040b4 	movhi	r7,258
 100d480:	39e79b04 	addi	r7,r7,-24980
 100d484:	19003b26 	beq	r3,r4,100d574 <_free_r+0x258>
 100d488:	01ffff04 	movi	r7,-4
 100d48c:	19400117 	ldw	r5,4(r3)
 100d490:	29ca703a 	and	r5,r5,r7
 100d494:	1140022e 	bgeu	r2,r5,100d4a0 <_free_r+0x184>
 100d498:	18c00217 	ldw	r3,8(r3)
 100d49c:	20fffb1e 	bne	r4,r3,100d48c <__alt_data_end+0xff80d48c>
 100d4a0:	18800317 	ldw	r2,12(r3)
 100d4a4:	30800315 	stw	r2,12(r6)
 100d4a8:	30c00215 	stw	r3,8(r6)
 100d4ac:	11800215 	stw	r6,8(r2)
 100d4b0:	19800315 	stw	r6,12(r3)
 100d4b4:	003fe006 	br	100d438 <__alt_data_end+0xff80d438>
 100d4b8:	2100004c 	andi	r4,r4,1
 100d4bc:	1885883a 	add	r2,r3,r2
 100d4c0:	2000071e 	bne	r4,zero,100d4e0 <_free_r+0x1c4>
 100d4c4:	817ffe17 	ldw	r5,-8(r16)
 100d4c8:	314dc83a 	sub	r6,r6,r5
 100d4cc:	30c00317 	ldw	r3,12(r6)
 100d4d0:	31000217 	ldw	r4,8(r6)
 100d4d4:	1145883a 	add	r2,r2,r5
 100d4d8:	20c00315 	stw	r3,12(r4)
 100d4dc:	19000215 	stw	r4,8(r3)
 100d4e0:	10c00054 	ori	r3,r2,1
 100d4e4:	30c00115 	stw	r3,4(r6)
 100d4e8:	00c040b4 	movhi	r3,258
 100d4ec:	18ed3b04 	addi	r3,r3,-19220
 100d4f0:	18c00017 	ldw	r3,0(r3)
 100d4f4:	49800215 	stw	r6,8(r9)
 100d4f8:	10ffcf36 	bltu	r2,r3,100d438 <__alt_data_end+0xff80d438>
 100d4fc:	008040b4 	movhi	r2,258
 100d500:	10b45104 	addi	r2,r2,-11964
 100d504:	11400017 	ldw	r5,0(r2)
 100d508:	8809883a 	mov	r4,r17
 100d50c:	100d1f80 	call	100d1f8 <_malloc_trim_r>
 100d510:	003fc906 	br	100d438 <__alt_data_end+0xff80d438>
 100d514:	28c9883a 	add	r4,r5,r3
 100d518:	21000117 	ldw	r4,4(r4)
 100d51c:	2100004c 	andi	r4,r4,1
 100d520:	20000a1e 	bne	r4,zero,100d54c <_free_r+0x230>
 100d524:	29000317 	ldw	r4,12(r5)
 100d528:	29400217 	ldw	r5,8(r5)
 100d52c:	10c5883a 	add	r2,r2,r3
 100d530:	10c00054 	ori	r3,r2,1
 100d534:	29000315 	stw	r4,12(r5)
 100d538:	21400215 	stw	r5,8(r4)
 100d53c:	30c00115 	stw	r3,4(r6)
 100d540:	308d883a 	add	r6,r6,r2
 100d544:	30800015 	stw	r2,0(r6)
 100d548:	003fbb06 	br	100d438 <__alt_data_end+0xff80d438>
 100d54c:	10c00054 	ori	r3,r2,1
 100d550:	30c00115 	stw	r3,4(r6)
 100d554:	308d883a 	add	r6,r6,r2
 100d558:	30800015 	stw	r2,0(r6)
 100d55c:	003fb606 	br	100d438 <__alt_data_end+0xff80d438>
 100d560:	01000504 	movi	r4,20
 100d564:	20c01436 	bltu	r4,r3,100d5b8 <_free_r+0x29c>
 100d568:	194016c4 	addi	r5,r3,91
 100d56c:	2947883a 	add	r3,r5,r5
 100d570:	003fbe06 	br	100d46c <__alt_data_end+0xff80d46c>
 100d574:	280bd0ba 	srai	r5,r5,2
 100d578:	00800044 	movi	r2,1
 100d57c:	39000117 	ldw	r4,4(r7)
 100d580:	114a983a 	sll	r5,r2,r5
 100d584:	1805883a 	mov	r2,r3
 100d588:	2908b03a 	or	r4,r5,r4
 100d58c:	39000115 	stw	r4,4(r7)
 100d590:	003fc406 	br	100d4a4 <__alt_data_end+0xff80d4a4>
 100d594:	49800515 	stw	r6,20(r9)
 100d598:	49800415 	stw	r6,16(r9)
 100d59c:	10c00054 	ori	r3,r2,1
 100d5a0:	31000315 	stw	r4,12(r6)
 100d5a4:	31000215 	stw	r4,8(r6)
 100d5a8:	30c00115 	stw	r3,4(r6)
 100d5ac:	308d883a 	add	r6,r6,r2
 100d5b0:	30800015 	stw	r2,0(r6)
 100d5b4:	003fa006 	br	100d438 <__alt_data_end+0xff80d438>
 100d5b8:	01001504 	movi	r4,84
 100d5bc:	20c00436 	bltu	r4,r3,100d5d0 <_free_r+0x2b4>
 100d5c0:	1006d33a 	srli	r3,r2,12
 100d5c4:	19401b84 	addi	r5,r3,110
 100d5c8:	2947883a 	add	r3,r5,r5
 100d5cc:	003fa706 	br	100d46c <__alt_data_end+0xff80d46c>
 100d5d0:	01005504 	movi	r4,340
 100d5d4:	20c00436 	bltu	r4,r3,100d5e8 <_free_r+0x2cc>
 100d5d8:	1006d3fa 	srli	r3,r2,15
 100d5dc:	19401dc4 	addi	r5,r3,119
 100d5e0:	2947883a 	add	r3,r5,r5
 100d5e4:	003fa106 	br	100d46c <__alt_data_end+0xff80d46c>
 100d5e8:	01015504 	movi	r4,1364
 100d5ec:	20c00436 	bltu	r4,r3,100d600 <_free_r+0x2e4>
 100d5f0:	1006d4ba 	srli	r3,r2,18
 100d5f4:	19401f04 	addi	r5,r3,124
 100d5f8:	2947883a 	add	r3,r5,r5
 100d5fc:	003f9b06 	br	100d46c <__alt_data_end+0xff80d46c>
 100d600:	00c03f04 	movi	r3,252
 100d604:	01401f84 	movi	r5,126
 100d608:	003f9806 	br	100d46c <__alt_data_end+0xff80d46c>

0100d60c <__sfvwrite_r>:
 100d60c:	30800217 	ldw	r2,8(r6)
 100d610:	10004526 	beq	r2,zero,100d728 <__sfvwrite_r+0x11c>
 100d614:	28c0030b 	ldhu	r3,12(r5)
 100d618:	defff404 	addi	sp,sp,-48
 100d61c:	dd400715 	stw	r21,28(sp)
 100d620:	dcc00515 	stw	r19,20(sp)
 100d624:	dc000215 	stw	r16,8(sp)
 100d628:	dfc00b15 	stw	ra,44(sp)
 100d62c:	df000a15 	stw	fp,40(sp)
 100d630:	ddc00915 	stw	r23,36(sp)
 100d634:	dd800815 	stw	r22,32(sp)
 100d638:	dd000615 	stw	r20,24(sp)
 100d63c:	dc800415 	stw	r18,16(sp)
 100d640:	dc400315 	stw	r17,12(sp)
 100d644:	1880020c 	andi	r2,r3,8
 100d648:	2821883a 	mov	r16,r5
 100d64c:	202b883a 	mov	r21,r4
 100d650:	3027883a 	mov	r19,r6
 100d654:	10002526 	beq	r2,zero,100d6ec <__sfvwrite_r+0xe0>
 100d658:	28800417 	ldw	r2,16(r5)
 100d65c:	10002326 	beq	r2,zero,100d6ec <__sfvwrite_r+0xe0>
 100d660:	1880008c 	andi	r2,r3,2
 100d664:	9c400017 	ldw	r17,0(r19)
 100d668:	10003126 	beq	r2,zero,100d730 <__sfvwrite_r+0x124>
 100d66c:	0029883a 	mov	r20,zero
 100d670:	0025883a 	mov	r18,zero
 100d674:	05810004 	movi	r22,1024
 100d678:	a00d883a 	mov	r6,r20
 100d67c:	a809883a 	mov	r4,r21
 100d680:	90002526 	beq	r18,zero,100d718 <__sfvwrite_r+0x10c>
 100d684:	900f883a 	mov	r7,r18
 100d688:	81400717 	ldw	r5,28(r16)
 100d68c:	b480012e 	bgeu	r22,r18,100d694 <__sfvwrite_r+0x88>
 100d690:	01c10004 	movi	r7,1024
 100d694:	80800917 	ldw	r2,36(r16)
 100d698:	103ee83a 	callr	r2
 100d69c:	0080510e 	bge	zero,r2,100d7e4 <__sfvwrite_r+0x1d8>
 100d6a0:	98c00217 	ldw	r3,8(r19)
 100d6a4:	a0a9883a 	add	r20,r20,r2
 100d6a8:	90a5c83a 	sub	r18,r18,r2
 100d6ac:	1885c83a 	sub	r2,r3,r2
 100d6b0:	98800215 	stw	r2,8(r19)
 100d6b4:	103ff01e 	bne	r2,zero,100d678 <__alt_data_end+0xff80d678>
 100d6b8:	0005883a 	mov	r2,zero
 100d6bc:	dfc00b17 	ldw	ra,44(sp)
 100d6c0:	df000a17 	ldw	fp,40(sp)
 100d6c4:	ddc00917 	ldw	r23,36(sp)
 100d6c8:	dd800817 	ldw	r22,32(sp)
 100d6cc:	dd400717 	ldw	r21,28(sp)
 100d6d0:	dd000617 	ldw	r20,24(sp)
 100d6d4:	dcc00517 	ldw	r19,20(sp)
 100d6d8:	dc800417 	ldw	r18,16(sp)
 100d6dc:	dc400317 	ldw	r17,12(sp)
 100d6e0:	dc000217 	ldw	r16,8(sp)
 100d6e4:	dec00c04 	addi	sp,sp,48
 100d6e8:	f800283a 	ret
 100d6ec:	a809883a 	mov	r4,r21
 100d6f0:	800b883a 	mov	r5,r16
 100d6f4:	100b1a80 	call	100b1a8 <__swsetup_r>
 100d6f8:	80c0030b 	ldhu	r3,12(r16)
 100d6fc:	103fd826 	beq	r2,zero,100d660 <__alt_data_end+0xff80d660>
 100d700:	18c01014 	ori	r3,r3,64
 100d704:	80c0030d 	sth	r3,12(r16)
 100d708:	00c00244 	movi	r3,9
 100d70c:	00bfffc4 	movi	r2,-1
 100d710:	a8c00015 	stw	r3,0(r21)
 100d714:	003fe906 	br	100d6bc <__alt_data_end+0xff80d6bc>
 100d718:	8d000017 	ldw	r20,0(r17)
 100d71c:	8c800117 	ldw	r18,4(r17)
 100d720:	8c400204 	addi	r17,r17,8
 100d724:	003fd406 	br	100d678 <__alt_data_end+0xff80d678>
 100d728:	0005883a 	mov	r2,zero
 100d72c:	f800283a 	ret
 100d730:	1880004c 	andi	r2,r3,1
 100d734:	1000301e 	bne	r2,zero,100d7f8 <__sfvwrite_r+0x1ec>
 100d738:	002f883a 	mov	r23,zero
 100d73c:	0025883a 	mov	r18,zero
 100d740:	90001c26 	beq	r18,zero,100d7b4 <__sfvwrite_r+0x1a8>
 100d744:	1880800c 	andi	r2,r3,512
 100d748:	85000217 	ldw	r20,8(r16)
 100d74c:	10006c26 	beq	r2,zero,100d900 <__sfvwrite_r+0x2f4>
 100d750:	a02d883a 	mov	r22,r20
 100d754:	95008536 	bltu	r18,r20,100d96c <__sfvwrite_r+0x360>
 100d758:	1881200c 	andi	r2,r3,1152
 100d75c:	10009d1e 	bne	r2,zero,100d9d4 <__sfvwrite_r+0x3c8>
 100d760:	81000017 	ldw	r4,0(r16)
 100d764:	a039883a 	mov	fp,r20
 100d768:	9029883a 	mov	r20,r18
 100d76c:	b80b883a 	mov	r5,r23
 100d770:	b00d883a 	mov	r6,r22
 100d774:	100f5300 	call	100f530 <memmove>
 100d778:	80c00217 	ldw	r3,8(r16)
 100d77c:	81000017 	ldw	r4,0(r16)
 100d780:	9005883a 	mov	r2,r18
 100d784:	1f39c83a 	sub	fp,r3,fp
 100d788:	258f883a 	add	r7,r4,r22
 100d78c:	87000215 	stw	fp,8(r16)
 100d790:	81c00015 	stw	r7,0(r16)
 100d794:	98c00217 	ldw	r3,8(r19)
 100d798:	b8af883a 	add	r23,r23,r2
 100d79c:	90a5c83a 	sub	r18,r18,r2
 100d7a0:	1d05c83a 	sub	r2,r3,r20
 100d7a4:	98800215 	stw	r2,8(r19)
 100d7a8:	103fc326 	beq	r2,zero,100d6b8 <__alt_data_end+0xff80d6b8>
 100d7ac:	80c0030b 	ldhu	r3,12(r16)
 100d7b0:	903fe41e 	bne	r18,zero,100d744 <__alt_data_end+0xff80d744>
 100d7b4:	8dc00017 	ldw	r23,0(r17)
 100d7b8:	8c800117 	ldw	r18,4(r17)
 100d7bc:	8c400204 	addi	r17,r17,8
 100d7c0:	003fdf06 	br	100d740 <__alt_data_end+0xff80d740>
 100d7c4:	101073c0 	call	101073c <_realloc_r>
 100d7c8:	102d883a 	mov	r22,r2
 100d7cc:	1000a01e 	bne	r2,zero,100da50 <__sfvwrite_r+0x444>
 100d7d0:	81400417 	ldw	r5,16(r16)
 100d7d4:	a809883a 	mov	r4,r21
 100d7d8:	100d31c0 	call	100d31c <_free_r>
 100d7dc:	00800304 	movi	r2,12
 100d7e0:	a8800015 	stw	r2,0(r21)
 100d7e4:	80c0030b 	ldhu	r3,12(r16)
 100d7e8:	00bfffc4 	movi	r2,-1
 100d7ec:	18c01014 	ori	r3,r3,64
 100d7f0:	80c0030d 	sth	r3,12(r16)
 100d7f4:	003fb106 	br	100d6bc <__alt_data_end+0xff80d6bc>
 100d7f8:	0029883a 	mov	r20,zero
 100d7fc:	0011883a 	mov	r8,zero
 100d800:	0039883a 	mov	fp,zero
 100d804:	0025883a 	mov	r18,zero
 100d808:	90001f26 	beq	r18,zero,100d888 <__sfvwrite_r+0x27c>
 100d80c:	40006826 	beq	r8,zero,100d9b0 <__sfvwrite_r+0x3a4>
 100d810:	a02f883a 	mov	r23,r20
 100d814:	9500012e 	bgeu	r18,r20,100d81c <__sfvwrite_r+0x210>
 100d818:	902f883a 	mov	r23,r18
 100d81c:	81000017 	ldw	r4,0(r16)
 100d820:	80800417 	ldw	r2,16(r16)
 100d824:	b82d883a 	mov	r22,r23
 100d828:	81800217 	ldw	r6,8(r16)
 100d82c:	81c00517 	ldw	r7,20(r16)
 100d830:	1100022e 	bgeu	r2,r4,100d83c <__sfvwrite_r+0x230>
 100d834:	31c7883a 	add	r3,r6,r7
 100d838:	1dc01816 	blt	r3,r23,100d89c <__sfvwrite_r+0x290>
 100d83c:	b9c03f16 	blt	r23,r7,100d93c <__sfvwrite_r+0x330>
 100d840:	80800917 	ldw	r2,36(r16)
 100d844:	81400717 	ldw	r5,28(r16)
 100d848:	a809883a 	mov	r4,r21
 100d84c:	da000115 	stw	r8,4(sp)
 100d850:	e00d883a 	mov	r6,fp
 100d854:	103ee83a 	callr	r2
 100d858:	102d883a 	mov	r22,r2
 100d85c:	da000117 	ldw	r8,4(sp)
 100d860:	00bfe00e 	bge	zero,r2,100d7e4 <__alt_data_end+0xff80d7e4>
 100d864:	a5a9c83a 	sub	r20,r20,r22
 100d868:	a0001f26 	beq	r20,zero,100d8e8 <__sfvwrite_r+0x2dc>
 100d86c:	98800217 	ldw	r2,8(r19)
 100d870:	e5b9883a 	add	fp,fp,r22
 100d874:	95a5c83a 	sub	r18,r18,r22
 100d878:	15adc83a 	sub	r22,r2,r22
 100d87c:	9d800215 	stw	r22,8(r19)
 100d880:	b03f8d26 	beq	r22,zero,100d6b8 <__alt_data_end+0xff80d6b8>
 100d884:	903fe11e 	bne	r18,zero,100d80c <__alt_data_end+0xff80d80c>
 100d888:	8f000017 	ldw	fp,0(r17)
 100d88c:	8c800117 	ldw	r18,4(r17)
 100d890:	0011883a 	mov	r8,zero
 100d894:	8c400204 	addi	r17,r17,8
 100d898:	003fdb06 	br	100d808 <__alt_data_end+0xff80d808>
 100d89c:	180d883a 	mov	r6,r3
 100d8a0:	e00b883a 	mov	r5,fp
 100d8a4:	da000115 	stw	r8,4(sp)
 100d8a8:	d8c00015 	stw	r3,0(sp)
 100d8ac:	100f5300 	call	100f530 <memmove>
 100d8b0:	d8c00017 	ldw	r3,0(sp)
 100d8b4:	80800017 	ldw	r2,0(r16)
 100d8b8:	a809883a 	mov	r4,r21
 100d8bc:	800b883a 	mov	r5,r16
 100d8c0:	10c5883a 	add	r2,r2,r3
 100d8c4:	80800015 	stw	r2,0(r16)
 100d8c8:	d8c00015 	stw	r3,0(sp)
 100d8cc:	100cc000 	call	100cc00 <_fflush_r>
 100d8d0:	d8c00017 	ldw	r3,0(sp)
 100d8d4:	da000117 	ldw	r8,4(sp)
 100d8d8:	103fc21e 	bne	r2,zero,100d7e4 <__alt_data_end+0xff80d7e4>
 100d8dc:	182d883a 	mov	r22,r3
 100d8e0:	a5a9c83a 	sub	r20,r20,r22
 100d8e4:	a03fe11e 	bne	r20,zero,100d86c <__alt_data_end+0xff80d86c>
 100d8e8:	a809883a 	mov	r4,r21
 100d8ec:	800b883a 	mov	r5,r16
 100d8f0:	100cc000 	call	100cc00 <_fflush_r>
 100d8f4:	103fbb1e 	bne	r2,zero,100d7e4 <__alt_data_end+0xff80d7e4>
 100d8f8:	0011883a 	mov	r8,zero
 100d8fc:	003fdb06 	br	100d86c <__alt_data_end+0xff80d86c>
 100d900:	81000017 	ldw	r4,0(r16)
 100d904:	80800417 	ldw	r2,16(r16)
 100d908:	1100012e 	bgeu	r2,r4,100d910 <__sfvwrite_r+0x304>
 100d90c:	a4805a36 	bltu	r20,r18,100da78 <__sfvwrite_r+0x46c>
 100d910:	81c00517 	ldw	r7,20(r16)
 100d914:	91c01a36 	bltu	r18,r7,100d980 <__sfvwrite_r+0x374>
 100d918:	80800917 	ldw	r2,36(r16)
 100d91c:	81400717 	ldw	r5,28(r16)
 100d920:	a809883a 	mov	r4,r21
 100d924:	b80d883a 	mov	r6,r23
 100d928:	103ee83a 	callr	r2
 100d92c:	1029883a 	mov	r20,r2
 100d930:	00bfac0e 	bge	zero,r2,100d7e4 <__alt_data_end+0xff80d7e4>
 100d934:	a005883a 	mov	r2,r20
 100d938:	003f9606 	br	100d794 <__alt_data_end+0xff80d794>
 100d93c:	b80d883a 	mov	r6,r23
 100d940:	e00b883a 	mov	r5,fp
 100d944:	da000115 	stw	r8,4(sp)
 100d948:	100f5300 	call	100f530 <memmove>
 100d94c:	80800217 	ldw	r2,8(r16)
 100d950:	80c00017 	ldw	r3,0(r16)
 100d954:	da000117 	ldw	r8,4(sp)
 100d958:	15c5c83a 	sub	r2,r2,r23
 100d95c:	1def883a 	add	r23,r3,r23
 100d960:	80800215 	stw	r2,8(r16)
 100d964:	85c00015 	stw	r23,0(r16)
 100d968:	003fbe06 	br	100d864 <__alt_data_end+0xff80d864>
 100d96c:	81000017 	ldw	r4,0(r16)
 100d970:	9039883a 	mov	fp,r18
 100d974:	9029883a 	mov	r20,r18
 100d978:	902d883a 	mov	r22,r18
 100d97c:	003f7b06 	br	100d76c <__alt_data_end+0xff80d76c>
 100d980:	b80b883a 	mov	r5,r23
 100d984:	900d883a 	mov	r6,r18
 100d988:	100f5300 	call	100f530 <memmove>
 100d98c:	80c00217 	ldw	r3,8(r16)
 100d990:	80800017 	ldw	r2,0(r16)
 100d994:	9029883a 	mov	r20,r18
 100d998:	1c87c83a 	sub	r3,r3,r18
 100d99c:	1485883a 	add	r2,r2,r18
 100d9a0:	80800015 	stw	r2,0(r16)
 100d9a4:	80c00215 	stw	r3,8(r16)
 100d9a8:	9005883a 	mov	r2,r18
 100d9ac:	003f7906 	br	100d794 <__alt_data_end+0xff80d794>
 100d9b0:	e009883a 	mov	r4,fp
 100d9b4:	01400284 	movi	r5,10
 100d9b8:	900d883a 	mov	r6,r18
 100d9bc:	100f2940 	call	100f294 <memchr>
 100d9c0:	10003826 	beq	r2,zero,100daa4 <__sfvwrite_r+0x498>
 100d9c4:	10800044 	addi	r2,r2,1
 100d9c8:	1729c83a 	sub	r20,r2,fp
 100d9cc:	02000044 	movi	r8,1
 100d9d0:	003f8f06 	br	100d810 <__alt_data_end+0xff80d810>
 100d9d4:	80800517 	ldw	r2,20(r16)
 100d9d8:	81400417 	ldw	r5,16(r16)
 100d9dc:	87000017 	ldw	fp,0(r16)
 100d9e0:	10a9883a 	add	r20,r2,r2
 100d9e4:	a085883a 	add	r2,r20,r2
 100d9e8:	1028d7fa 	srli	r20,r2,31
 100d9ec:	e179c83a 	sub	fp,fp,r5
 100d9f0:	e1000044 	addi	r4,fp,1
 100d9f4:	a085883a 	add	r2,r20,r2
 100d9f8:	1029d07a 	srai	r20,r2,1
 100d9fc:	2485883a 	add	r2,r4,r18
 100da00:	a00d883a 	mov	r6,r20
 100da04:	a080022e 	bgeu	r20,r2,100da10 <__sfvwrite_r+0x404>
 100da08:	1029883a 	mov	r20,r2
 100da0c:	100d883a 	mov	r6,r2
 100da10:	18c1000c 	andi	r3,r3,1024
 100da14:	a809883a 	mov	r4,r21
 100da18:	183f6a26 	beq	r3,zero,100d7c4 <__alt_data_end+0xff80d7c4>
 100da1c:	300b883a 	mov	r5,r6
 100da20:	100eaec0 	call	100eaec <_malloc_r>
 100da24:	102d883a 	mov	r22,r2
 100da28:	103f6c26 	beq	r2,zero,100d7dc <__alt_data_end+0xff80d7dc>
 100da2c:	81400417 	ldw	r5,16(r16)
 100da30:	1009883a 	mov	r4,r2
 100da34:	e00d883a 	mov	r6,fp
 100da38:	100f3f80 	call	100f3f8 <memcpy>
 100da3c:	8080030b 	ldhu	r2,12(r16)
 100da40:	00fedfc4 	movi	r3,-1153
 100da44:	10c4703a 	and	r2,r2,r3
 100da48:	10802014 	ori	r2,r2,128
 100da4c:	8080030d 	sth	r2,12(r16)
 100da50:	b709883a 	add	r4,r22,fp
 100da54:	a707c83a 	sub	r3,r20,fp
 100da58:	85800415 	stw	r22,16(r16)
 100da5c:	85000515 	stw	r20,20(r16)
 100da60:	81000015 	stw	r4,0(r16)
 100da64:	9039883a 	mov	fp,r18
 100da68:	80c00215 	stw	r3,8(r16)
 100da6c:	9029883a 	mov	r20,r18
 100da70:	902d883a 	mov	r22,r18
 100da74:	003f3d06 	br	100d76c <__alt_data_end+0xff80d76c>
 100da78:	b80b883a 	mov	r5,r23
 100da7c:	a00d883a 	mov	r6,r20
 100da80:	100f5300 	call	100f530 <memmove>
 100da84:	80800017 	ldw	r2,0(r16)
 100da88:	a809883a 	mov	r4,r21
 100da8c:	800b883a 	mov	r5,r16
 100da90:	1505883a 	add	r2,r2,r20
 100da94:	80800015 	stw	r2,0(r16)
 100da98:	100cc000 	call	100cc00 <_fflush_r>
 100da9c:	103fa526 	beq	r2,zero,100d934 <__alt_data_end+0xff80d934>
 100daa0:	003f5006 	br	100d7e4 <__alt_data_end+0xff80d7e4>
 100daa4:	95000044 	addi	r20,r18,1
 100daa8:	02000044 	movi	r8,1
 100daac:	003f5806 	br	100d810 <__alt_data_end+0xff80d810>

0100dab0 <_fwalk>:
 100dab0:	defff804 	addi	sp,sp,-32
 100dab4:	dd400515 	stw	r21,20(sp)
 100dab8:	2540b804 	addi	r21,r4,736
 100dabc:	dd800615 	stw	r22,24(sp)
 100dac0:	dd000415 	stw	r20,16(sp)
 100dac4:	dfc00715 	stw	ra,28(sp)
 100dac8:	dcc00315 	stw	r19,12(sp)
 100dacc:	dc800215 	stw	r18,8(sp)
 100dad0:	dc400115 	stw	r17,4(sp)
 100dad4:	dc000015 	stw	r16,0(sp)
 100dad8:	2829883a 	mov	r20,r5
 100dadc:	002d883a 	mov	r22,zero
 100dae0:	100d1b80 	call	100d1b8 <__sfp_lock_acquire>
 100dae4:	a8001426 	beq	r21,zero,100db38 <_fwalk+0x88>
 100dae8:	04ffffc4 	movi	r19,-1
 100daec:	ac400117 	ldw	r17,4(r21)
 100daf0:	ac800217 	ldw	r18,8(r21)
 100daf4:	8c7fffc4 	addi	r17,r17,-1
 100daf8:	88000d16 	blt	r17,zero,100db30 <_fwalk+0x80>
 100dafc:	94000304 	addi	r16,r18,12
 100db00:	94800384 	addi	r18,r18,14
 100db04:	80c0000f 	ldh	r3,0(r16)
 100db08:	8c7fffc4 	addi	r17,r17,-1
 100db0c:	813ffd04 	addi	r4,r16,-12
 100db10:	18000426 	beq	r3,zero,100db24 <_fwalk+0x74>
 100db14:	90c0000f 	ldh	r3,0(r18)
 100db18:	1cc00226 	beq	r3,r19,100db24 <_fwalk+0x74>
 100db1c:	a03ee83a 	callr	r20
 100db20:	b0acb03a 	or	r22,r22,r2
 100db24:	84001a04 	addi	r16,r16,104
 100db28:	94801a04 	addi	r18,r18,104
 100db2c:	8cfff51e 	bne	r17,r19,100db04 <__alt_data_end+0xff80db04>
 100db30:	ad400017 	ldw	r21,0(r21)
 100db34:	a83fed1e 	bne	r21,zero,100daec <__alt_data_end+0xff80daec>
 100db38:	100d1bc0 	call	100d1bc <__sfp_lock_release>
 100db3c:	b005883a 	mov	r2,r22
 100db40:	dfc00717 	ldw	ra,28(sp)
 100db44:	dd800617 	ldw	r22,24(sp)
 100db48:	dd400517 	ldw	r21,20(sp)
 100db4c:	dd000417 	ldw	r20,16(sp)
 100db50:	dcc00317 	ldw	r19,12(sp)
 100db54:	dc800217 	ldw	r18,8(sp)
 100db58:	dc400117 	ldw	r17,4(sp)
 100db5c:	dc000017 	ldw	r16,0(sp)
 100db60:	dec00804 	addi	sp,sp,32
 100db64:	f800283a 	ret

0100db68 <_fwalk_reent>:
 100db68:	defff804 	addi	sp,sp,-32
 100db6c:	dd400515 	stw	r21,20(sp)
 100db70:	2540b804 	addi	r21,r4,736
 100db74:	dd800615 	stw	r22,24(sp)
 100db78:	dd000415 	stw	r20,16(sp)
 100db7c:	dcc00315 	stw	r19,12(sp)
 100db80:	dfc00715 	stw	ra,28(sp)
 100db84:	dc800215 	stw	r18,8(sp)
 100db88:	dc400115 	stw	r17,4(sp)
 100db8c:	dc000015 	stw	r16,0(sp)
 100db90:	2027883a 	mov	r19,r4
 100db94:	2829883a 	mov	r20,r5
 100db98:	002d883a 	mov	r22,zero
 100db9c:	100d1b80 	call	100d1b8 <__sfp_lock_acquire>
 100dba0:	a8001326 	beq	r21,zero,100dbf0 <_fwalk_reent+0x88>
 100dba4:	04bfffc4 	movi	r18,-1
 100dba8:	ac400117 	ldw	r17,4(r21)
 100dbac:	ac000217 	ldw	r16,8(r21)
 100dbb0:	8c7fffc4 	addi	r17,r17,-1
 100dbb4:	88000c16 	blt	r17,zero,100dbe8 <_fwalk_reent+0x80>
 100dbb8:	84000304 	addi	r16,r16,12
 100dbbc:	80c0000f 	ldh	r3,0(r16)
 100dbc0:	8c7fffc4 	addi	r17,r17,-1
 100dbc4:	817ffd04 	addi	r5,r16,-12
 100dbc8:	18000526 	beq	r3,zero,100dbe0 <_fwalk_reent+0x78>
 100dbcc:	80c0008f 	ldh	r3,2(r16)
 100dbd0:	9809883a 	mov	r4,r19
 100dbd4:	1c800226 	beq	r3,r18,100dbe0 <_fwalk_reent+0x78>
 100dbd8:	a03ee83a 	callr	r20
 100dbdc:	b0acb03a 	or	r22,r22,r2
 100dbe0:	84001a04 	addi	r16,r16,104
 100dbe4:	8cbff51e 	bne	r17,r18,100dbbc <__alt_data_end+0xff80dbbc>
 100dbe8:	ad400017 	ldw	r21,0(r21)
 100dbec:	a83fee1e 	bne	r21,zero,100dba8 <__alt_data_end+0xff80dba8>
 100dbf0:	100d1bc0 	call	100d1bc <__sfp_lock_release>
 100dbf4:	b005883a 	mov	r2,r22
 100dbf8:	dfc00717 	ldw	ra,28(sp)
 100dbfc:	dd800617 	ldw	r22,24(sp)
 100dc00:	dd400517 	ldw	r21,20(sp)
 100dc04:	dd000417 	ldw	r20,16(sp)
 100dc08:	dcc00317 	ldw	r19,12(sp)
 100dc0c:	dc800217 	ldw	r18,8(sp)
 100dc10:	dc400117 	ldw	r17,4(sp)
 100dc14:	dc000017 	ldw	r16,0(sp)
 100dc18:	dec00804 	addi	sp,sp,32
 100dc1c:	f800283a 	ret

0100dc20 <rshift>:
 100dc20:	2807d17a 	srai	r3,r5,5
 100dc24:	20800417 	ldw	r2,16(r4)
 100dc28:	22400504 	addi	r9,r4,20
 100dc2c:	1880250e 	bge	r3,r2,100dcc4 <rshift+0xa4>
 100dc30:	1085883a 	add	r2,r2,r2
 100dc34:	18c7883a 	add	r3,r3,r3
 100dc38:	1085883a 	add	r2,r2,r2
 100dc3c:	18c7883a 	add	r3,r3,r3
 100dc40:	294007cc 	andi	r5,r5,31
 100dc44:	4885883a 	add	r2,r9,r2
 100dc48:	48c7883a 	add	r3,r9,r3
 100dc4c:	28002026 	beq	r5,zero,100dcd0 <rshift+0xb0>
 100dc50:	19800017 	ldw	r6,0(r3)
 100dc54:	02c00804 	movi	r11,32
 100dc58:	19c00104 	addi	r7,r3,4
 100dc5c:	5957c83a 	sub	r11,r11,r5
 100dc60:	3150d83a 	srl	r8,r6,r5
 100dc64:	38802c2e 	bgeu	r7,r2,100dd18 <rshift+0xf8>
 100dc68:	4815883a 	mov	r10,r9
 100dc6c:	39800017 	ldw	r6,0(r7)
 100dc70:	52800104 	addi	r10,r10,4
 100dc74:	39c00104 	addi	r7,r7,4
 100dc78:	32cc983a 	sll	r6,r6,r11
 100dc7c:	418cb03a 	or	r6,r8,r6
 100dc80:	51bfff15 	stw	r6,-4(r10)
 100dc84:	39bfff17 	ldw	r6,-4(r7)
 100dc88:	3150d83a 	srl	r8,r6,r5
 100dc8c:	38bff736 	bltu	r7,r2,100dc6c <__alt_data_end+0xff80dc6c>
 100dc90:	10c7c83a 	sub	r3,r2,r3
 100dc94:	18fffec4 	addi	r3,r3,-5
 100dc98:	1806d0ba 	srli	r3,r3,2
 100dc9c:	18c00044 	addi	r3,r3,1
 100dca0:	18c7883a 	add	r3,r3,r3
 100dca4:	18c7883a 	add	r3,r3,r3
 100dca8:	48c7883a 	add	r3,r9,r3
 100dcac:	1a000015 	stw	r8,0(r3)
 100dcb0:	40000126 	beq	r8,zero,100dcb8 <rshift+0x98>
 100dcb4:	18c00104 	addi	r3,r3,4
 100dcb8:	1a45c83a 	sub	r2,r3,r9
 100dcbc:	1005d0ba 	srai	r2,r2,2
 100dcc0:	00001206 	br	100dd0c <rshift+0xec>
 100dcc4:	20000415 	stw	zero,16(r4)
 100dcc8:	20000515 	stw	zero,20(r4)
 100dccc:	f800283a 	ret
 100dcd0:	18bffc2e 	bgeu	r3,r2,100dcc4 <__alt_data_end+0xff80dcc4>
 100dcd4:	180d883a 	mov	r6,r3
 100dcd8:	480b883a 	mov	r5,r9
 100dcdc:	31c00017 	ldw	r7,0(r6)
 100dce0:	29400104 	addi	r5,r5,4
 100dce4:	31800104 	addi	r6,r6,4
 100dce8:	29ffff15 	stw	r7,-4(r5)
 100dcec:	30bffb36 	bltu	r6,r2,100dcdc <__alt_data_end+0xff80dcdc>
 100dcf0:	00c6303a 	nor	r3,zero,r3
 100dcf4:	1885883a 	add	r2,r3,r2
 100dcf8:	1004d0ba 	srli	r2,r2,2
 100dcfc:	10800044 	addi	r2,r2,1
 100dd00:	1085883a 	add	r2,r2,r2
 100dd04:	1085883a 	add	r2,r2,r2
 100dd08:	1005d0ba 	srai	r2,r2,2
 100dd0c:	20800415 	stw	r2,16(r4)
 100dd10:	103fed26 	beq	r2,zero,100dcc8 <__alt_data_end+0xff80dcc8>
 100dd14:	f800283a 	ret
 100dd18:	4807883a 	mov	r3,r9
 100dd1c:	003fe306 	br	100dcac <__alt_data_end+0xff80dcac>

0100dd20 <__hexdig_init>:
 100dd20:	014040b4 	movhi	r5,258
 100dd24:	00c040b4 	movhi	r3,258
 100dd28:	2965f444 	addi	r5,r5,-26671
 100dd2c:	18f4d104 	addi	r3,r3,-11452
 100dd30:	01000404 	movi	r4,16
 100dd34:	00800c04 	movi	r2,48
 100dd38:	10c5883a 	add	r2,r2,r3
 100dd3c:	11000005 	stb	r4,0(r2)
 100dd40:	28800003 	ldbu	r2,0(r5)
 100dd44:	21000044 	addi	r4,r4,1
 100dd48:	29400044 	addi	r5,r5,1
 100dd4c:	103ffa1e 	bne	r2,zero,100dd38 <__alt_data_end+0xff80dd38>
 100dd50:	014040b4 	movhi	r5,258
 100dd54:	2965f244 	addi	r5,r5,-26679
 100dd58:	01000684 	movi	r4,26
 100dd5c:	00801844 	movi	r2,97
 100dd60:	10c5883a 	add	r2,r2,r3
 100dd64:	11000005 	stb	r4,0(r2)
 100dd68:	28800003 	ldbu	r2,0(r5)
 100dd6c:	21000044 	addi	r4,r4,1
 100dd70:	29400044 	addi	r5,r5,1
 100dd74:	103ffa1e 	bne	r2,zero,100dd60 <__alt_data_end+0xff80dd60>
 100dd78:	014040b4 	movhi	r5,258
 100dd7c:	2965f044 	addi	r5,r5,-26687
 100dd80:	01000684 	movi	r4,26
 100dd84:	00801044 	movi	r2,65
 100dd88:	10c5883a 	add	r2,r2,r3
 100dd8c:	11000005 	stb	r4,0(r2)
 100dd90:	28800003 	ldbu	r2,0(r5)
 100dd94:	21000044 	addi	r4,r4,1
 100dd98:	29400044 	addi	r5,r5,1
 100dd9c:	103ffa1e 	bne	r2,zero,100dd88 <__alt_data_end+0xff80dd88>
 100dda0:	f800283a 	ret

0100dda4 <__gethex>:
 100dda4:	deffeb04 	addi	sp,sp,-84
 100dda8:	dfc01415 	stw	ra,80(sp)
 100ddac:	dd401015 	stw	r21,64(sp)
 100ddb0:	dd000f15 	stw	r20,60(sp)
 100ddb4:	dcc00e15 	stw	r19,56(sp)
 100ddb8:	dc800d15 	stw	r18,52(sp)
 100ddbc:	d9000115 	stw	r4,4(sp)
 100ddc0:	2829883a 	mov	r20,r5
 100ddc4:	d9800015 	stw	r6,0(sp)
 100ddc8:	d9c00315 	stw	r7,12(sp)
 100ddcc:	df001315 	stw	fp,76(sp)
 100ddd0:	ddc01215 	stw	r23,72(sp)
 100ddd4:	dd801115 	stw	r22,68(sp)
 100ddd8:	dc400c15 	stw	r17,48(sp)
 100dddc:	dc000b15 	stw	r16,44(sp)
 100dde0:	100e9000 	call	100e900 <_localeconv_r>
 100dde4:	14800017 	ldw	r18,0(r2)
 100dde8:	054040b4 	movhi	r21,258
 100ddec:	ad74d104 	addi	r21,r21,-11452
 100ddf0:	9009883a 	mov	r4,r18
 100ddf4:	1004fa80 	call	1004fa8 <strlen>
 100ddf8:	1027883a 	mov	r19,r2
 100ddfc:	94c7883a 	add	r3,r18,r19
 100de00:	18ffffc3 	ldbu	r3,-1(r3)
 100de04:	a8800c03 	ldbu	r2,48(r21)
 100de08:	d8c00205 	stb	r3,8(sp)
 100de0c:	1000d726 	beq	r2,zero,100e16c <__gethex+0x3c8>
 100de10:	a2000017 	ldw	r8,0(r20)
 100de14:	00c00c04 	movi	r3,48
 100de18:	40800083 	ldbu	r2,2(r8)
 100de1c:	10c14a1e 	bne	r2,r3,100e348 <__gethex+0x5a4>
 100de20:	013fff84 	movi	r4,-2
 100de24:	40c000c4 	addi	r3,r8,3
 100de28:	2209c83a 	sub	r4,r4,r8
 100de2c:	100b883a 	mov	r5,r2
 100de30:	20ef883a 	add	r23,r4,r3
 100de34:	182d883a 	mov	r22,r3
 100de38:	18c00044 	addi	r3,r3,1
 100de3c:	18bfffc3 	ldbu	r2,-1(r3)
 100de40:	117ffb26 	beq	r2,r5,100de30 <__alt_data_end+0xff80de30>
 100de44:	a885883a 	add	r2,r21,r2
 100de48:	10800003 	ldbu	r2,0(r2)
 100de4c:	01c040b4 	movhi	r7,258
 100de50:	39f4d104 	addi	r7,r7,-11452
 100de54:	1000c726 	beq	r2,zero,100e174 <__gethex+0x3d0>
 100de58:	b0800003 	ldbu	r2,0(r22)
 100de5c:	0023883a 	mov	r17,zero
 100de60:	0039883a 	mov	fp,zero
 100de64:	3885883a 	add	r2,r7,r2
 100de68:	10800003 	ldbu	r2,0(r2)
 100de6c:	b021883a 	mov	r16,r22
 100de70:	10000526 	beq	r2,zero,100de88 <__gethex+0xe4>
 100de74:	84000044 	addi	r16,r16,1
 100de78:	80800003 	ldbu	r2,0(r16)
 100de7c:	a885883a 	add	r2,r21,r2
 100de80:	10800003 	ldbu	r2,0(r2)
 100de84:	103ffb1e 	bne	r2,zero,100de74 <__alt_data_end+0xff80de74>
 100de88:	8009883a 	mov	r4,r16
 100de8c:	900b883a 	mov	r5,r18
 100de90:	980d883a 	mov	r6,r19
 100de94:	1010f100 	call	1010f10 <strncmp>
 100de98:	10007c26 	beq	r2,zero,100e08c <__gethex+0x2e8>
 100de9c:	80800003 	ldbu	r2,0(r16)
 100dea0:	e0000426 	beq	fp,zero,100deb4 <__gethex+0x110>
 100dea4:	8739c83a 	sub	fp,r16,fp
 100dea8:	e739883a 	add	fp,fp,fp
 100deac:	e739883a 	add	fp,fp,fp
 100deb0:	0739c83a 	sub	fp,zero,fp
 100deb4:	10803fcc 	andi	r2,r2,255
 100deb8:	01001404 	movi	r4,80
 100debc:	11007e26 	beq	r2,r4,100e0b8 <__gethex+0x314>
 100dec0:	01001c04 	movi	r4,112
 100dec4:	11007c26 	beq	r2,r4,100e0b8 <__gethex+0x314>
 100dec8:	800f883a 	mov	r7,r16
 100decc:	a4000015 	stw	r16,0(r20)
 100ded0:	88000e26 	beq	r17,zero,100df0c <__gethex+0x168>
 100ded4:	b800b71e 	bne	r23,zero,100e1b4 <__gethex+0x410>
 100ded8:	00800184 	movi	r2,6
 100dedc:	dfc01417 	ldw	ra,80(sp)
 100dee0:	df001317 	ldw	fp,76(sp)
 100dee4:	ddc01217 	ldw	r23,72(sp)
 100dee8:	dd801117 	ldw	r22,68(sp)
 100deec:	dd401017 	ldw	r21,64(sp)
 100def0:	dd000f17 	ldw	r20,60(sp)
 100def4:	dcc00e17 	ldw	r19,56(sp)
 100def8:	dc800d17 	ldw	r18,52(sp)
 100defc:	dc400c17 	ldw	r17,48(sp)
 100df00:	dc000b17 	ldw	r16,44(sp)
 100df04:	dec01504 	addi	sp,sp,84
 100df08:	f800283a 	ret
 100df0c:	3d85c83a 	sub	r2,r7,r22
 100df10:	10bfffc4 	addi	r2,r2,-1
 100df14:	00c001c4 	movi	r3,7
 100df18:	000b883a 	mov	r5,zero
 100df1c:	1880030e 	bge	r3,r2,100df2c <__gethex+0x188>
 100df20:	1005d07a 	srai	r2,r2,1
 100df24:	29400044 	addi	r5,r5,1
 100df28:	18bffd16 	blt	r3,r2,100df20 <__alt_data_end+0xff80df20>
 100df2c:	d9000117 	ldw	r4,4(sp)
 100df30:	d9c00a15 	stw	r7,40(sp)
 100df34:	100f7b00 	call	100f7b0 <_Balloc>
 100df38:	d9c00a17 	ldw	r7,40(sp)
 100df3c:	14000504 	addi	r16,r2,20
 100df40:	102f883a 	mov	r23,r2
 100df44:	8017883a 	mov	r11,r16
 100df48:	0015883a 	mov	r10,zero
 100df4c:	b1c0132e 	bgeu	r22,r7,100df9c <__gethex+0x1f8>
 100df50:	dc400203 	ldbu	r17,8(sp)
 100df54:	03800044 	movi	r14,1
 100df58:	0029883a 	mov	r20,zero
 100df5c:	74ddc83a 	sub	r14,r14,r19
 100df60:	03000804 	movi	r12,32
 100df64:	38bfffc3 	ldbu	r2,-1(r7)
 100df68:	3bffffc4 	addi	r15,r7,-1
 100df6c:	14402f26 	beq	r2,r17,100e02c <__gethex+0x288>
 100df70:	a3004926 	beq	r20,r12,100e098 <__gethex+0x2f4>
 100df74:	a009883a 	mov	r4,r20
 100df78:	a5000104 	addi	r20,r20,4
 100df7c:	38bfffc3 	ldbu	r2,-1(r7)
 100df80:	780f883a 	mov	r7,r15
 100df84:	a885883a 	add	r2,r21,r2
 100df88:	10c00003 	ldbu	r3,0(r2)
 100df8c:	18c003cc 	andi	r3,r3,15
 100df90:	1906983a 	sll	r3,r3,r4
 100df94:	50d4b03a 	or	r10,r10,r3
 100df98:	b1fff236 	bltu	r22,r7,100df64 <__alt_data_end+0xff80df64>
 100df9c:	58800104 	addi	r2,r11,4
 100dfa0:	1405c83a 	sub	r2,r2,r16
 100dfa4:	1005d0ba 	srai	r2,r2,2
 100dfa8:	5a800015 	stw	r10,0(r11)
 100dfac:	5009883a 	mov	r4,r10
 100dfb0:	b8800415 	stw	r2,16(r23)
 100dfb4:	1022917a 	slli	r17,r2,5
 100dfb8:	100fa980 	call	100fa98 <__hi0bits>
 100dfbc:	d8c00017 	ldw	r3,0(sp)
 100dfc0:	8885c83a 	sub	r2,r17,r2
 100dfc4:	1c800017 	ldw	r18,0(r3)
 100dfc8:	9080ba16 	blt	r18,r2,100e2b4 <__gethex+0x510>
 100dfcc:	1480d416 	blt	r2,r18,100e320 <__gethex+0x57c>
 100dfd0:	0027883a 	mov	r19,zero
 100dfd4:	d8c00017 	ldw	r3,0(sp)
 100dfd8:	18800217 	ldw	r2,8(r3)
 100dfdc:	17008416 	blt	r2,fp,100e1f0 <__gethex+0x44c>
 100dfe0:	d8c00017 	ldw	r3,0(sp)
 100dfe4:	18800117 	ldw	r2,4(r3)
 100dfe8:	e0809f0e 	bge	fp,r2,100e268 <__gethex+0x4c4>
 100dfec:	1739c83a 	sub	fp,r2,fp
 100dff0:	e480dc16 	blt	fp,r18,100e364 <__gethex+0x5c0>
 100dff4:	18c00317 	ldw	r3,12(r3)
 100dff8:	01000084 	movi	r4,2
 100dffc:	19013c26 	beq	r3,r4,100e4f0 <__gethex+0x74c>
 100e000:	010000c4 	movi	r4,3
 100e004:	19011d26 	beq	r3,r4,100e47c <__gethex+0x6d8>
 100e008:	01000044 	movi	r4,1
 100e00c:	19012f26 	beq	r3,r4,100e4cc <__gethex+0x728>
 100e010:	d9000117 	ldw	r4,4(sp)
 100e014:	b80b883a 	mov	r5,r23
 100e018:	100f8580 	call	100f858 <_Bfree>
 100e01c:	d8801517 	ldw	r2,84(sp)
 100e020:	10000015 	stw	zero,0(r2)
 100e024:	00801404 	movi	r2,80
 100e028:	003fac06 	br	100dedc <__alt_data_end+0xff80dedc>
 100e02c:	7b87883a 	add	r3,r15,r14
 100e030:	1dbfcf36 	bltu	r3,r22,100df70 <__alt_data_end+0xff80df70>
 100e034:	1809883a 	mov	r4,r3
 100e038:	900b883a 	mov	r5,r18
 100e03c:	980d883a 	mov	r6,r19
 100e040:	d8c00515 	stw	r3,20(sp)
 100e044:	d9c00a15 	stw	r7,40(sp)
 100e048:	da800615 	stw	r10,24(sp)
 100e04c:	dac00715 	stw	r11,28(sp)
 100e050:	db000915 	stw	r12,36(sp)
 100e054:	db800815 	stw	r14,32(sp)
 100e058:	dbc00415 	stw	r15,16(sp)
 100e05c:	1010f100 	call	1010f10 <strncmp>
 100e060:	d8c00517 	ldw	r3,20(sp)
 100e064:	d9c00a17 	ldw	r7,40(sp)
 100e068:	da800617 	ldw	r10,24(sp)
 100e06c:	dac00717 	ldw	r11,28(sp)
 100e070:	db000917 	ldw	r12,36(sp)
 100e074:	db800817 	ldw	r14,32(sp)
 100e078:	dbc00417 	ldw	r15,16(sp)
 100e07c:	103fbc1e 	bne	r2,zero,100df70 <__alt_data_end+0xff80df70>
 100e080:	180f883a 	mov	r7,r3
 100e084:	b1ffb736 	bltu	r22,r7,100df64 <__alt_data_end+0xff80df64>
 100e088:	003fc406 	br	100df9c <__alt_data_end+0xff80df9c>
 100e08c:	e000cf26 	beq	fp,zero,100e3cc <__gethex+0x628>
 100e090:	80800003 	ldbu	r2,0(r16)
 100e094:	003f8306 	br	100dea4 <__alt_data_end+0xff80dea4>
 100e098:	05000104 	movi	r20,4
 100e09c:	5a800015 	stw	r10,0(r11)
 100e0a0:	0009883a 	mov	r4,zero
 100e0a4:	5d17883a 	add	r11,r11,r20
 100e0a8:	0015883a 	mov	r10,zero
 100e0ac:	003fb306 	br	100df7c <__alt_data_end+0xff80df7c>
 100e0b0:	0039883a 	mov	fp,zero
 100e0b4:	04400044 	movi	r17,1
 100e0b8:	80800043 	ldbu	r2,1(r16)
 100e0bc:	01400ac4 	movi	r5,43
 100e0c0:	11003fcc 	andi	r4,r2,255
 100e0c4:	21407926 	beq	r4,r5,100e2ac <__gethex+0x508>
 100e0c8:	01400b44 	movi	r5,45
 100e0cc:	21404f26 	beq	r4,r5,100e20c <__gethex+0x468>
 100e0d0:	81400044 	addi	r5,r16,1
 100e0d4:	000d883a 	mov	r6,zero
 100e0d8:	10803fcc 	andi	r2,r2,255
 100e0dc:	a885883a 	add	r2,r21,r2
 100e0e0:	11000003 	ldbu	r4,0(r2)
 100e0e4:	02c00604 	movi	r11,24
 100e0e8:	20bfffc4 	addi	r2,r4,-1
 100e0ec:	10803fcc 	andi	r2,r2,255
 100e0f0:	58bf7536 	bltu	r11,r2,100dec8 <__alt_data_end+0xff80dec8>
 100e0f4:	29c00043 	ldbu	r7,1(r5)
 100e0f8:	20803fcc 	andi	r2,r4,255
 100e0fc:	010040b4 	movhi	r4,258
 100e100:	2134d104 	addi	r4,r4,-11452
 100e104:	21c9883a 	add	r4,r4,r7
 100e108:	23000003 	ldbu	r12,0(r4)
 100e10c:	10bffc04 	addi	r2,r2,-16
 100e110:	29400044 	addi	r5,r5,1
 100e114:	613fffc4 	addi	r4,r12,-1
 100e118:	21003fcc 	andi	r4,r4,255
 100e11c:	63003fcc 	andi	r12,r12,255
 100e120:	59000b36 	bltu	r11,r4,100e150 <__gethex+0x3ac>
 100e124:	29400044 	addi	r5,r5,1
 100e128:	29000003 	ldbu	r4,0(r5)
 100e12c:	108002a4 	muli	r2,r2,10
 100e130:	a909883a 	add	r4,r21,r4
 100e134:	21c00003 	ldbu	r7,0(r4)
 100e138:	1305883a 	add	r2,r2,r12
 100e13c:	10bffc04 	addi	r2,r2,-16
 100e140:	393fffc4 	addi	r4,r7,-1
 100e144:	21003fcc 	andi	r4,r4,255
 100e148:	3b003fcc 	andi	r12,r7,255
 100e14c:	593ff52e 	bgeu	r11,r4,100e124 <__alt_data_end+0xff80e124>
 100e150:	0189c83a 	sub	r4,zero,r6
 100e154:	1104f03a 	xor	r2,r2,r4
 100e158:	118d883a 	add	r6,r2,r6
 100e15c:	800f883a 	mov	r7,r16
 100e160:	e1b9883a 	add	fp,fp,r6
 100e164:	2821883a 	mov	r16,r5
 100e168:	003f5806 	br	100decc <__alt_data_end+0xff80decc>
 100e16c:	100dd200 	call	100dd20 <__hexdig_init>
 100e170:	003f2706 	br	100de10 <__alt_data_end+0xff80de10>
 100e174:	b009883a 	mov	r4,r22
 100e178:	900b883a 	mov	r5,r18
 100e17c:	980d883a 	mov	r6,r19
 100e180:	d9c00a15 	stw	r7,40(sp)
 100e184:	1010f100 	call	1010f10 <strncmp>
 100e188:	d9c00a17 	ldw	r7,40(sp)
 100e18c:	10002326 	beq	r2,zero,100e21c <__gethex+0x478>
 100e190:	b0800003 	ldbu	r2,0(r22)
 100e194:	b021883a 	mov	r16,r22
 100e198:	10803fcc 	andi	r2,r2,255
 100e19c:	00c01404 	movi	r3,80
 100e1a0:	10ffc326 	beq	r2,r3,100e0b0 <__alt_data_end+0xff80e0b0>
 100e1a4:	00c01c04 	movi	r3,112
 100e1a8:	10ffc126 	beq	r2,r3,100e0b0 <__alt_data_end+0xff80e0b0>
 100e1ac:	a4000015 	stw	r16,0(r20)
 100e1b0:	b83f4926 	beq	r23,zero,100ded8 <__alt_data_end+0xff80ded8>
 100e1b4:	0005883a 	mov	r2,zero
 100e1b8:	003f4806 	br	100dedc <__alt_data_end+0xff80dedc>
 100e1bc:	84e7883a 	add	r19,r16,r19
 100e1c0:	993fff17 	ldw	r4,-4(r19)
 100e1c4:	100fa980 	call	100fa98 <__hi0bits>
 100e1c8:	00c00804 	movi	r3,32
 100e1cc:	1c63c83a 	sub	r17,r3,r17
 100e1d0:	1440a60e 	bge	r2,r17,100e46c <__gethex+0x6c8>
 100e1d4:	b809883a 	mov	r4,r23
 100e1d8:	01400044 	movi	r5,1
 100e1dc:	100dc200 	call	100dc20 <rshift>
 100e1e0:	d8c00017 	ldw	r3,0(sp)
 100e1e4:	e7000044 	addi	fp,fp,1
 100e1e8:	18800217 	ldw	r2,8(r3)
 100e1ec:	17009f0e 	bge	r2,fp,100e46c <__gethex+0x6c8>
 100e1f0:	d9000117 	ldw	r4,4(sp)
 100e1f4:	b80b883a 	mov	r5,r23
 100e1f8:	100f8580 	call	100f858 <_Bfree>
 100e1fc:	d9001517 	ldw	r4,84(sp)
 100e200:	008028c4 	movi	r2,163
 100e204:	20000015 	stw	zero,0(r4)
 100e208:	003f3406 	br	100dedc <__alt_data_end+0xff80dedc>
 100e20c:	01800044 	movi	r6,1
 100e210:	80800083 	ldbu	r2,2(r16)
 100e214:	81400084 	addi	r5,r16,2
 100e218:	003faf06 	br	100e0d8 <__alt_data_end+0xff80e0d8>
 100e21c:	b4e1883a 	add	r16,r22,r19
 100e220:	80c00003 	ldbu	r3,0(r16)
 100e224:	19003fcc 	andi	r4,r3,255
 100e228:	3905883a 	add	r2,r7,r4
 100e22c:	10800003 	ldbu	r2,0(r2)
 100e230:	10004826 	beq	r2,zero,100e354 <__gethex+0x5b0>
 100e234:	00c00c04 	movi	r3,48
 100e238:	802d883a 	mov	r22,r16
 100e23c:	20c0061e 	bne	r4,r3,100e258 <__gethex+0x4b4>
 100e240:	2007883a 	mov	r3,r4
 100e244:	b5800044 	addi	r22,r22,1
 100e248:	b0800003 	ldbu	r2,0(r22)
 100e24c:	10fffd26 	beq	r2,r3,100e244 <__alt_data_end+0xff80e244>
 100e250:	a885883a 	add	r2,r21,r2
 100e254:	10800003 	ldbu	r2,0(r2)
 100e258:	1023003a 	cmpeq	r17,r2,zero
 100e25c:	8039883a 	mov	fp,r16
 100e260:	05c00044 	movi	r23,1
 100e264:	003f0106 	br	100de6c <__alt_data_end+0xff80de6c>
 100e268:	04400044 	movi	r17,1
 100e26c:	98000926 	beq	r19,zero,100e294 <__gethex+0x4f0>
 100e270:	d8c00017 	ldw	r3,0(sp)
 100e274:	18800317 	ldw	r2,12(r3)
 100e278:	00c00084 	movi	r3,2
 100e27c:	10c06126 	beq	r2,r3,100e404 <__gethex+0x660>
 100e280:	00c000c4 	movi	r3,3
 100e284:	10c06326 	beq	r2,r3,100e414 <__gethex+0x670>
 100e288:	00c00044 	movi	r3,1
 100e28c:	10c08626 	beq	r2,r3,100e4a8 <__gethex+0x704>
 100e290:	8c400414 	ori	r17,r17,16
 100e294:	d9001517 	ldw	r4,84(sp)
 100e298:	d8c00317 	ldw	r3,12(sp)
 100e29c:	8805883a 	mov	r2,r17
 100e2a0:	25c00015 	stw	r23,0(r4)
 100e2a4:	1f000015 	stw	fp,0(r3)
 100e2a8:	003f0c06 	br	100dedc <__alt_data_end+0xff80dedc>
 100e2ac:	000d883a 	mov	r6,zero
 100e2b0:	003fd706 	br	100e210 <__alt_data_end+0xff80e210>
 100e2b4:	14a3c83a 	sub	r17,r2,r18
 100e2b8:	b809883a 	mov	r4,r23
 100e2bc:	880b883a 	mov	r5,r17
 100e2c0:	10106b00 	call	10106b0 <__any_on>
 100e2c4:	10002526 	beq	r2,zero,100e35c <__gethex+0x5b8>
 100e2c8:	897fffc4 	addi	r5,r17,-1
 100e2cc:	2807d17a 	srai	r3,r5,5
 100e2d0:	290007cc 	andi	r4,r5,31
 100e2d4:	04c00044 	movi	r19,1
 100e2d8:	18c7883a 	add	r3,r3,r3
 100e2dc:	18c7883a 	add	r3,r3,r3
 100e2e0:	80c7883a 	add	r3,r16,r3
 100e2e4:	9908983a 	sll	r4,r19,r4
 100e2e8:	18c00017 	ldw	r3,0(r3)
 100e2ec:	20c6703a 	and	r3,r4,r3
 100e2f0:	18000626 	beq	r3,zero,100e30c <__gethex+0x568>
 100e2f4:	9940730e 	bge	r19,r5,100e4c4 <__gethex+0x720>
 100e2f8:	b809883a 	mov	r4,r23
 100e2fc:	897fff84 	addi	r5,r17,-2
 100e300:	10106b00 	call	10106b0 <__any_on>
 100e304:	10006f26 	beq	r2,zero,100e4c4 <__gethex+0x720>
 100e308:	04c000c4 	movi	r19,3
 100e30c:	b809883a 	mov	r4,r23
 100e310:	880b883a 	mov	r5,r17
 100e314:	100dc200 	call	100dc20 <rshift>
 100e318:	e479883a 	add	fp,fp,r17
 100e31c:	003f2d06 	br	100dfd4 <__alt_data_end+0xff80dfd4>
 100e320:	d9000117 	ldw	r4,4(sp)
 100e324:	90a1c83a 	sub	r16,r18,r2
 100e328:	b80b883a 	mov	r5,r23
 100e32c:	800d883a 	mov	r6,r16
 100e330:	100ff280 	call	100ff28 <__lshift>
 100e334:	e439c83a 	sub	fp,fp,r16
 100e338:	102f883a 	mov	r23,r2
 100e33c:	14000504 	addi	r16,r2,20
 100e340:	0027883a 	mov	r19,zero
 100e344:	003f2306 	br	100dfd4 <__alt_data_end+0xff80dfd4>
 100e348:	45800084 	addi	r22,r8,2
 100e34c:	002f883a 	mov	r23,zero
 100e350:	003ebc06 	br	100de44 <__alt_data_end+0xff80de44>
 100e354:	1805883a 	mov	r2,r3
 100e358:	003f8f06 	br	100e198 <__alt_data_end+0xff80e198>
 100e35c:	0027883a 	mov	r19,zero
 100e360:	003fea06 	br	100e30c <__alt_data_end+0xff80e30c>
 100e364:	e47fffc4 	addi	r17,fp,-1
 100e368:	9800421e 	bne	r19,zero,100e474 <__gethex+0x6d0>
 100e36c:	0440040e 	bge	zero,r17,100e380 <__gethex+0x5dc>
 100e370:	b809883a 	mov	r4,r23
 100e374:	880b883a 	mov	r5,r17
 100e378:	10106b00 	call	10106b0 <__any_on>
 100e37c:	1027883a 	mov	r19,r2
 100e380:	8805d17a 	srai	r2,r17,5
 100e384:	00c00044 	movi	r3,1
 100e388:	8c4007cc 	andi	r17,r17,31
 100e38c:	1085883a 	add	r2,r2,r2
 100e390:	1085883a 	add	r2,r2,r2
 100e394:	8085883a 	add	r2,r16,r2
 100e398:	1c62983a 	sll	r17,r3,r17
 100e39c:	10800017 	ldw	r2,0(r2)
 100e3a0:	8884703a 	and	r2,r17,r2
 100e3a4:	10000126 	beq	r2,zero,100e3ac <__gethex+0x608>
 100e3a8:	9cc00094 	ori	r19,r19,2
 100e3ac:	e00b883a 	mov	r5,fp
 100e3b0:	b809883a 	mov	r4,r23
 100e3b4:	100dc200 	call	100dc20 <rshift>
 100e3b8:	d8c00017 	ldw	r3,0(sp)
 100e3bc:	9725c83a 	sub	r18,r18,fp
 100e3c0:	04400084 	movi	r17,2
 100e3c4:	1f000117 	ldw	fp,4(r3)
 100e3c8:	003fa806 	br	100e26c <__alt_data_end+0xff80e26c>
 100e3cc:	84f9883a 	add	fp,r16,r19
 100e3d0:	e0800003 	ldbu	r2,0(fp)
 100e3d4:	e021883a 	mov	r16,fp
 100e3d8:	11003fcc 	andi	r4,r2,255
 100e3dc:	a909883a 	add	r4,r21,r4
 100e3e0:	21000003 	ldbu	r4,0(r4)
 100e3e4:	203eaf26 	beq	r4,zero,100dea4 <__alt_data_end+0xff80dea4>
 100e3e8:	84000044 	addi	r16,r16,1
 100e3ec:	80800003 	ldbu	r2,0(r16)
 100e3f0:	11003fcc 	andi	r4,r2,255
 100e3f4:	a909883a 	add	r4,r21,r4
 100e3f8:	21000003 	ldbu	r4,0(r4)
 100e3fc:	203ffa1e 	bne	r4,zero,100e3e8 <__alt_data_end+0xff80e3e8>
 100e400:	003ea806 	br	100dea4 <__alt_data_end+0xff80dea4>
 100e404:	d9001617 	ldw	r4,88(sp)
 100e408:	00800044 	movi	r2,1
 100e40c:	1109c83a 	sub	r4,r2,r4
 100e410:	d9001615 	stw	r4,88(sp)
 100e414:	d8801617 	ldw	r2,88(sp)
 100e418:	103f9d26 	beq	r2,zero,100e290 <__alt_data_end+0xff80e290>
 100e41c:	bd000417 	ldw	r20,16(r23)
 100e420:	8005883a 	mov	r2,r16
 100e424:	013fffc4 	movi	r4,-1
 100e428:	a527883a 	add	r19,r20,r20
 100e42c:	9ce7883a 	add	r19,r19,r19
 100e430:	84cb883a 	add	r5,r16,r19
 100e434:	00000306 	br	100e444 <__gethex+0x6a0>
 100e438:	10000015 	stw	zero,0(r2)
 100e43c:	10800104 	addi	r2,r2,4
 100e440:	11402e2e 	bgeu	r2,r5,100e4fc <__gethex+0x758>
 100e444:	10c00017 	ldw	r3,0(r2)
 100e448:	193ffb26 	beq	r3,r4,100e438 <__alt_data_end+0xff80e438>
 100e44c:	18c00044 	addi	r3,r3,1
 100e450:	10c00015 	stw	r3,0(r2)
 100e454:	00800084 	movi	r2,2
 100e458:	88803426 	beq	r17,r2,100e52c <__gethex+0x788>
 100e45c:	b8800417 	ldw	r2,16(r23)
 100e460:	a0bf5c16 	blt	r20,r2,100e1d4 <__alt_data_end+0xff80e1d4>
 100e464:	944007cc 	andi	r17,r18,31
 100e468:	883f541e 	bne	r17,zero,100e1bc <__alt_data_end+0xff80e1bc>
 100e46c:	04400844 	movi	r17,33
 100e470:	003f8806 	br	100e294 <__alt_data_end+0xff80e294>
 100e474:	04c00044 	movi	r19,1
 100e478:	003fc106 	br	100e380 <__alt_data_end+0xff80e380>
 100e47c:	d8c01617 	ldw	r3,88(sp)
 100e480:	183ee326 	beq	r3,zero,100e010 <__alt_data_end+0xff80e010>
 100e484:	d8c00317 	ldw	r3,12(sp)
 100e488:	d9001517 	ldw	r4,84(sp)
 100e48c:	18800015 	stw	r2,0(r3)
 100e490:	00800044 	movi	r2,1
 100e494:	b8800415 	stw	r2,16(r23)
 100e498:	80800015 	stw	r2,0(r16)
 100e49c:	25c00015 	stw	r23,0(r4)
 100e4a0:	00801884 	movi	r2,98
 100e4a4:	003e8d06 	br	100dedc <__alt_data_end+0xff80dedc>
 100e4a8:	9880008c 	andi	r2,r19,2
 100e4ac:	103f7826 	beq	r2,zero,100e290 <__alt_data_end+0xff80e290>
 100e4b0:	80800017 	ldw	r2,0(r16)
 100e4b4:	9884b03a 	or	r2,r19,r2
 100e4b8:	10c4703a 	and	r2,r2,r3
 100e4bc:	103fd71e 	bne	r2,zero,100e41c <__alt_data_end+0xff80e41c>
 100e4c0:	003f7306 	br	100e290 <__alt_data_end+0xff80e290>
 100e4c4:	04c00084 	movi	r19,2
 100e4c8:	003f9006 	br	100e30c <__alt_data_end+0xff80e30c>
 100e4cc:	e4bed01e 	bne	fp,r18,100e010 <__alt_data_end+0xff80e010>
 100e4d0:	1cbfec0e 	bge	r3,r18,100e484 <__alt_data_end+0xff80e484>
 100e4d4:	b809883a 	mov	r4,r23
 100e4d8:	917fffc4 	addi	r5,r18,-1
 100e4dc:	10106b00 	call	10106b0 <__any_on>
 100e4e0:	103ecb26 	beq	r2,zero,100e010 <__alt_data_end+0xff80e010>
 100e4e4:	d8c00017 	ldw	r3,0(sp)
 100e4e8:	18800117 	ldw	r2,4(r3)
 100e4ec:	003fe506 	br	100e484 <__alt_data_end+0xff80e484>
 100e4f0:	d9001617 	ldw	r4,88(sp)
 100e4f4:	203fe326 	beq	r4,zero,100e484 <__alt_data_end+0xff80e484>
 100e4f8:	003ec506 	br	100e010 <__alt_data_end+0xff80e010>
 100e4fc:	b8800217 	ldw	r2,8(r23)
 100e500:	a080100e 	bge	r20,r2,100e544 <__gethex+0x7a0>
 100e504:	a009883a 	mov	r4,r20
 100e508:	20c00144 	addi	r3,r4,5
 100e50c:	18c7883a 	add	r3,r3,r3
 100e510:	21000044 	addi	r4,r4,1
 100e514:	18c7883a 	add	r3,r3,r3
 100e518:	b9000415 	stw	r4,16(r23)
 100e51c:	b8c7883a 	add	r3,r23,r3
 100e520:	00800044 	movi	r2,1
 100e524:	18800015 	stw	r2,0(r3)
 100e528:	003fca06 	br	100e454 <__alt_data_end+0xff80e454>
 100e52c:	d8c00017 	ldw	r3,0(sp)
 100e530:	18800017 	ldw	r2,0(r3)
 100e534:	10bfffc4 	addi	r2,r2,-1
 100e538:	14801526 	beq	r2,r18,100e590 <__gethex+0x7ec>
 100e53c:	04400884 	movi	r17,34
 100e540:	003f5406 	br	100e294 <__alt_data_end+0xff80e294>
 100e544:	b9400117 	ldw	r5,4(r23)
 100e548:	d9000117 	ldw	r4,4(sp)
 100e54c:	29400044 	addi	r5,r5,1
 100e550:	100f7b00 	call	100f7b0 <_Balloc>
 100e554:	b9800417 	ldw	r6,16(r23)
 100e558:	b9400304 	addi	r5,r23,12
 100e55c:	11000304 	addi	r4,r2,12
 100e560:	31800084 	addi	r6,r6,2
 100e564:	318d883a 	add	r6,r6,r6
 100e568:	318d883a 	add	r6,r6,r6
 100e56c:	1021883a 	mov	r16,r2
 100e570:	100f3f80 	call	100f3f8 <memcpy>
 100e574:	d9000117 	ldw	r4,4(sp)
 100e578:	b80b883a 	mov	r5,r23
 100e57c:	802f883a 	mov	r23,r16
 100e580:	100f8580 	call	100f858 <_Bfree>
 100e584:	81000417 	ldw	r4,16(r16)
 100e588:	84000504 	addi	r16,r16,20
 100e58c:	003fde06 	br	100e508 <__alt_data_end+0xff80e508>
 100e590:	9005d17a 	srai	r2,r18,5
 100e594:	944007cc 	andi	r17,r18,31
 100e598:	00c00044 	movi	r3,1
 100e59c:	1085883a 	add	r2,r2,r2
 100e5a0:	1085883a 	add	r2,r2,r2
 100e5a4:	8085883a 	add	r2,r16,r2
 100e5a8:	1c62983a 	sll	r17,r3,r17
 100e5ac:	10800017 	ldw	r2,0(r2)
 100e5b0:	8884703a 	and	r2,r17,r2
 100e5b4:	1023003a 	cmpeq	r17,r2,zero
 100e5b8:	8c400844 	addi	r17,r17,33
 100e5bc:	003f3506 	br	100e294 <__alt_data_end+0xff80e294>

0100e5c0 <__hexnan>:
 100e5c0:	defff504 	addi	sp,sp,-44
 100e5c4:	dc000315 	stw	r16,12(sp)
 100e5c8:	040040b4 	movhi	r16,258
 100e5cc:	8434d104 	addi	r16,r16,-11452
 100e5d0:	80800c03 	ldbu	r2,48(r16)
 100e5d4:	dfc00a15 	stw	ra,40(sp)
 100e5d8:	dd800915 	stw	r22,36(sp)
 100e5dc:	dd400815 	stw	r21,32(sp)
 100e5e0:	dd000715 	stw	r20,28(sp)
 100e5e4:	dcc00615 	stw	r19,24(sp)
 100e5e8:	dc800515 	stw	r18,20(sp)
 100e5ec:	dc400415 	stw	r17,16(sp)
 100e5f0:	10006c26 	beq	r2,zero,100e7a4 <__hexnan+0x1e4>
 100e5f4:	2cc00017 	ldw	r19,0(r5)
 100e5f8:	981dd17a 	srai	r14,r19,5
 100e5fc:	9cc007cc 	andi	r19,r19,31
 100e600:	739d883a 	add	r14,r14,r14
 100e604:	739d883a 	add	r14,r14,r14
 100e608:	339d883a 	add	r14,r6,r14
 100e60c:	98000126 	beq	r19,zero,100e614 <__hexnan+0x54>
 100e610:	73800104 	addi	r14,r14,4
 100e614:	22000017 	ldw	r8,0(r4)
 100e618:	72ffff04 	addi	r11,r14,-4
 100e61c:	703fff15 	stw	zero,-4(r14)
 100e620:	581b883a 	mov	r13,r11
 100e624:	580f883a 	mov	r7,r11
 100e628:	000b883a 	mov	r5,zero
 100e62c:	001f883a 	mov	r15,zero
 100e630:	0019883a 	mov	r12,zero
 100e634:	04800204 	movi	r18,8
 100e638:	04400804 	movi	r17,32
 100e63c:	050001c4 	movi	r20,7
 100e640:	42000044 	addi	r8,r8,1
 100e644:	40c00003 	ldbu	r3,0(r8)
 100e648:	18001d26 	beq	r3,zero,100e6c0 <__hexnan+0x100>
 100e64c:	80c5883a 	add	r2,r16,r3
 100e650:	10800003 	ldbu	r2,0(r2)
 100e654:	12403fcc 	andi	r9,r2,255
 100e658:	4800301e 	bne	r9,zero,100e71c <__hexnan+0x15c>
 100e65c:	88c04436 	bltu	r17,r3,100e770 <__hexnan+0x1b0>
 100e660:	7b3ff70e 	bge	r15,r12,100e640 <__alt_data_end+0xff80e640>
 100e664:	3b40112e 	bgeu	r7,r13,100e6ac <__hexnan+0xec>
 100e668:	a1401016 	blt	r20,r5,100e6ac <__hexnan+0xec>
 100e66c:	914bc83a 	sub	r5,r18,r5
 100e670:	294b883a 	add	r5,r5,r5
 100e674:	3a800017 	ldw	r10,0(r7)
 100e678:	294b883a 	add	r5,r5,r5
 100e67c:	896dc83a 	sub	r22,r17,r5
 100e680:	38c00104 	addi	r3,r7,4
 100e684:	3805883a 	mov	r2,r7
 100e688:	1d400017 	ldw	r21,0(r3)
 100e68c:	10800104 	addi	r2,r2,4
 100e690:	18c00104 	addi	r3,r3,4
 100e694:	ad92983a 	sll	r9,r21,r22
 100e698:	5252b03a 	or	r9,r10,r9
 100e69c:	a954d83a 	srl	r10,r21,r5
 100e6a0:	127fff15 	stw	r9,-4(r2)
 100e6a4:	1abfff15 	stw	r10,-4(r3)
 100e6a8:	137ff736 	bltu	r2,r13,100e688 <__alt_data_end+0xff80e688>
 100e6ac:	31c02a36 	bltu	r6,r7,100e758 <__hexnan+0x198>
 100e6b0:	42000044 	addi	r8,r8,1
 100e6b4:	40c00003 	ldbu	r3,0(r8)
 100e6b8:	01400204 	movi	r5,8
 100e6bc:	183fe31e 	bne	r3,zero,100e64c <__alt_data_end+0xff80e64c>
 100e6c0:	3805883a 	mov	r2,r7
 100e6c4:	60002c26 	beq	r12,zero,100e778 <__hexnan+0x1b8>
 100e6c8:	3b40022e 	bgeu	r7,r13,100e6d4 <__hexnan+0x114>
 100e6cc:	00c001c4 	movi	r3,7
 100e6d0:	19404e0e 	bge	r3,r5,100e80c <__hexnan+0x24c>
 100e6d4:	31c03b2e 	bgeu	r6,r7,100e7c4 <__hexnan+0x204>
 100e6d8:	3005883a 	mov	r2,r6
 100e6dc:	38c00017 	ldw	r3,0(r7)
 100e6e0:	10800104 	addi	r2,r2,4
 100e6e4:	39c00104 	addi	r7,r7,4
 100e6e8:	10ffff15 	stw	r3,-4(r2)
 100e6ec:	59fffb2e 	bgeu	r11,r7,100e6dc <__alt_data_end+0xff80e6dc>
 100e6f0:	10000015 	stw	zero,0(r2)
 100e6f4:	10800104 	addi	r2,r2,4
 100e6f8:	58bffd2e 	bgeu	r11,r2,100e6f0 <__alt_data_end+0xff80e6f0>
 100e6fc:	70bfff17 	ldw	r2,-4(r14)
 100e700:	1000041e 	bne	r2,zero,100e714 <__hexnan+0x154>
 100e704:	32c03826 	beq	r6,r11,100e7e8 <__hexnan+0x228>
 100e708:	5affff04 	addi	r11,r11,-4
 100e70c:	58800017 	ldw	r2,0(r11)
 100e710:	103ffc26 	beq	r2,zero,100e704 <__alt_data_end+0xff80e704>
 100e714:	00800144 	movi	r2,5
 100e718:	00001806 	br	100e77c <__hexnan+0x1bc>
 100e71c:	29400044 	addi	r5,r5,1
 100e720:	63000044 	addi	r12,r12,1
 100e724:	91400616 	blt	r18,r5,100e740 <__hexnan+0x180>
 100e728:	38c00017 	ldw	r3,0(r7)
 100e72c:	1806913a 	slli	r3,r3,4
 100e730:	108003cc 	andi	r2,r2,15
 100e734:	1884b03a 	or	r2,r3,r2
 100e738:	38800015 	stw	r2,0(r7)
 100e73c:	003fc006 	br	100e640 <__alt_data_end+0xff80e640>
 100e740:	31ffbf2e 	bgeu	r6,r7,100e640 <__alt_data_end+0xff80e640>
 100e744:	383fff15 	stw	zero,-4(r7)
 100e748:	0007883a 	mov	r3,zero
 100e74c:	39ffff04 	addi	r7,r7,-4
 100e750:	01400044 	movi	r5,1
 100e754:	003ff606 	br	100e730 <__alt_data_end+0xff80e730>
 100e758:	3b7fff04 	addi	r13,r7,-4
 100e75c:	383fff15 	stw	zero,-4(r7)
 100e760:	601f883a 	mov	r15,r12
 100e764:	680f883a 	mov	r7,r13
 100e768:	000b883a 	mov	r5,zero
 100e76c:	003fb406 	br	100e640 <__alt_data_end+0xff80e640>
 100e770:	00800a44 	movi	r2,41
 100e774:	18802026 	beq	r3,r2,100e7f8 <__hexnan+0x238>
 100e778:	00800104 	movi	r2,4
 100e77c:	dfc00a17 	ldw	ra,40(sp)
 100e780:	dd800917 	ldw	r22,36(sp)
 100e784:	dd400817 	ldw	r21,32(sp)
 100e788:	dd000717 	ldw	r20,28(sp)
 100e78c:	dcc00617 	ldw	r19,24(sp)
 100e790:	dc800517 	ldw	r18,20(sp)
 100e794:	dc400417 	ldw	r17,16(sp)
 100e798:	dc000317 	ldw	r16,12(sp)
 100e79c:	dec00b04 	addi	sp,sp,44
 100e7a0:	f800283a 	ret
 100e7a4:	d9000015 	stw	r4,0(sp)
 100e7a8:	d9400115 	stw	r5,4(sp)
 100e7ac:	d9800215 	stw	r6,8(sp)
 100e7b0:	100dd200 	call	100dd20 <__hexdig_init>
 100e7b4:	d9800217 	ldw	r6,8(sp)
 100e7b8:	d9400117 	ldw	r5,4(sp)
 100e7bc:	d9000017 	ldw	r4,0(sp)
 100e7c0:	003f8c06 	br	100e5f4 <__alt_data_end+0xff80e5f4>
 100e7c4:	983fcd26 	beq	r19,zero,100e6fc <__alt_data_end+0xff80e6fc>
 100e7c8:	00c00804 	movi	r3,32
 100e7cc:	1ce7c83a 	sub	r19,r3,r19
 100e7d0:	00ffffc4 	movi	r3,-1
 100e7d4:	70bfff17 	ldw	r2,-4(r14)
 100e7d8:	1cc6d83a 	srl	r3,r3,r19
 100e7dc:	1884703a 	and	r2,r3,r2
 100e7e0:	70bfff15 	stw	r2,-4(r14)
 100e7e4:	003fc606 	br	100e700 <__alt_data_end+0xff80e700>
 100e7e8:	00800044 	movi	r2,1
 100e7ec:	58800015 	stw	r2,0(r11)
 100e7f0:	00800144 	movi	r2,5
 100e7f4:	003fe106 	br	100e77c <__alt_data_end+0xff80e77c>
 100e7f8:	42000044 	addi	r8,r8,1
 100e7fc:	22000015 	stw	r8,0(r4)
 100e800:	3805883a 	mov	r2,r7
 100e804:	603fb01e 	bne	r12,zero,100e6c8 <__alt_data_end+0xff80e6c8>
 100e808:	003fdb06 	br	100e778 <__alt_data_end+0xff80e778>
 100e80c:	02400204 	movi	r9,8
 100e810:	4953c83a 	sub	r9,r9,r5
 100e814:	4a53883a 	add	r9,r9,r9
 100e818:	3a000017 	ldw	r8,0(r7)
 100e81c:	4a53883a 	add	r9,r9,r9
 100e820:	02800804 	movi	r10,32
 100e824:	5255c83a 	sub	r10,r10,r9
 100e828:	38c00104 	addi	r3,r7,4
 100e82c:	19400017 	ldw	r5,0(r3)
 100e830:	10800104 	addi	r2,r2,4
 100e834:	18c00104 	addi	r3,r3,4
 100e838:	2a88983a 	sll	r4,r5,r10
 100e83c:	4108b03a 	or	r4,r8,r4
 100e840:	2a50d83a 	srl	r8,r5,r9
 100e844:	113fff15 	stw	r4,-4(r2)
 100e848:	1a3fff15 	stw	r8,-4(r3)
 100e84c:	137ff736 	bltu	r2,r13,100e82c <__alt_data_end+0xff80e82c>
 100e850:	003fa006 	br	100e6d4 <__alt_data_end+0xff80e6d4>

0100e854 <_setlocale_r>:
 100e854:	30001b26 	beq	r6,zero,100e8c4 <_setlocale_r+0x70>
 100e858:	014040b4 	movhi	r5,258
 100e85c:	defffe04 	addi	sp,sp,-8
 100e860:	2965f704 	addi	r5,r5,-26660
 100e864:	3009883a 	mov	r4,r6
 100e868:	dc000015 	stw	r16,0(sp)
 100e86c:	dfc00115 	stw	ra,4(sp)
 100e870:	3021883a 	mov	r16,r6
 100e874:	1010e6c0 	call	1010e6c <strcmp>
 100e878:	1000061e 	bne	r2,zero,100e894 <_setlocale_r+0x40>
 100e87c:	008040b4 	movhi	r2,258
 100e880:	10a5bb04 	addi	r2,r2,-26900
 100e884:	dfc00117 	ldw	ra,4(sp)
 100e888:	dc000017 	ldw	r16,0(sp)
 100e88c:	dec00204 	addi	sp,sp,8
 100e890:	f800283a 	ret
 100e894:	014040b4 	movhi	r5,258
 100e898:	2965bb04 	addi	r5,r5,-26900
 100e89c:	8009883a 	mov	r4,r16
 100e8a0:	1010e6c0 	call	1010e6c <strcmp>
 100e8a4:	103ff526 	beq	r2,zero,100e87c <__alt_data_end+0xff80e87c>
 100e8a8:	014040b4 	movhi	r5,258
 100e8ac:	2965d304 	addi	r5,r5,-26804
 100e8b0:	8009883a 	mov	r4,r16
 100e8b4:	1010e6c0 	call	1010e6c <strcmp>
 100e8b8:	103ff026 	beq	r2,zero,100e87c <__alt_data_end+0xff80e87c>
 100e8bc:	0005883a 	mov	r2,zero
 100e8c0:	003ff006 	br	100e884 <__alt_data_end+0xff80e884>
 100e8c4:	008040b4 	movhi	r2,258
 100e8c8:	10a5bb04 	addi	r2,r2,-26900
 100e8cc:	f800283a 	ret

0100e8d0 <__locale_charset>:
 100e8d0:	008040b4 	movhi	r2,258
 100e8d4:	10a78504 	addi	r2,r2,-25068
 100e8d8:	f800283a 	ret

0100e8dc <__locale_mb_cur_max>:
 100e8dc:	008040b4 	movhi	r2,258
 100e8e0:	10ad3904 	addi	r2,r2,-19228
 100e8e4:	10800017 	ldw	r2,0(r2)
 100e8e8:	f800283a 	ret

0100e8ec <__locale_msgcharset>:
 100e8ec:	008040b4 	movhi	r2,258
 100e8f0:	10a77d04 	addi	r2,r2,-25100
 100e8f4:	f800283a 	ret

0100e8f8 <__locale_cjk_lang>:
 100e8f8:	0005883a 	mov	r2,zero
 100e8fc:	f800283a 	ret

0100e900 <_localeconv_r>:
 100e900:	008040b4 	movhi	r2,258
 100e904:	10a78d04 	addi	r2,r2,-25036
 100e908:	f800283a 	ret

0100e90c <setlocale>:
 100e90c:	00c040b4 	movhi	r3,258
 100e910:	18ed3804 	addi	r3,r3,-19232
 100e914:	2005883a 	mov	r2,r4
 100e918:	19000017 	ldw	r4,0(r3)
 100e91c:	280d883a 	mov	r6,r5
 100e920:	100b883a 	mov	r5,r2
 100e924:	100e8541 	jmpi	100e854 <_setlocale_r>

0100e928 <localeconv>:
 100e928:	008040b4 	movhi	r2,258
 100e92c:	10a78d04 	addi	r2,r2,-25036
 100e930:	f800283a 	ret

0100e934 <__smakebuf_r>:
 100e934:	2880030b 	ldhu	r2,12(r5)
 100e938:	10c0008c 	andi	r3,r2,2
 100e93c:	1800401e 	bne	r3,zero,100ea40 <__smakebuf_r+0x10c>
 100e940:	deffec04 	addi	sp,sp,-80
 100e944:	dc000f15 	stw	r16,60(sp)
 100e948:	2821883a 	mov	r16,r5
 100e94c:	2940038f 	ldh	r5,14(r5)
 100e950:	dc401015 	stw	r17,64(sp)
 100e954:	dfc01315 	stw	ra,76(sp)
 100e958:	dcc01215 	stw	r19,72(sp)
 100e95c:	dc801115 	stw	r18,68(sp)
 100e960:	2023883a 	mov	r17,r4
 100e964:	28001b16 	blt	r5,zero,100e9d4 <__smakebuf_r+0xa0>
 100e968:	d80d883a 	mov	r6,sp
 100e96c:	1013af80 	call	1013af8 <_fstat_r>
 100e970:	10001716 	blt	r2,zero,100e9d0 <__smakebuf_r+0x9c>
 100e974:	d8800117 	ldw	r2,4(sp)
 100e978:	00e00014 	movui	r3,32768
 100e97c:	10bc000c 	andi	r2,r2,61440
 100e980:	10c03726 	beq	r2,r3,100ea60 <__smakebuf_r+0x12c>
 100e984:	80c0030b 	ldhu	r3,12(r16)
 100e988:	18c20014 	ori	r3,r3,2048
 100e98c:	80c0030d 	sth	r3,12(r16)
 100e990:	00c80004 	movi	r3,8192
 100e994:	10c03c1e 	bne	r2,r3,100ea88 <__smakebuf_r+0x154>
 100e998:	8140038f 	ldh	r5,14(r16)
 100e99c:	8809883a 	mov	r4,r17
 100e9a0:	1013b500 	call	1013b50 <_isatty_r>
 100e9a4:	10004e26 	beq	r2,zero,100eae0 <__smakebuf_r+0x1ac>
 100e9a8:	8080030b 	ldhu	r2,12(r16)
 100e9ac:	04c00044 	movi	r19,1
 100e9b0:	80c010c4 	addi	r3,r16,67
 100e9b4:	14c4b03a 	or	r2,r2,r19
 100e9b8:	8080030d 	sth	r2,12(r16)
 100e9bc:	80c00015 	stw	r3,0(r16)
 100e9c0:	80c00415 	stw	r3,16(r16)
 100e9c4:	84c00515 	stw	r19,20(r16)
 100e9c8:	04810004 	movi	r18,1024
 100e9cc:	00000706 	br	100e9ec <__smakebuf_r+0xb8>
 100e9d0:	8080030b 	ldhu	r2,12(r16)
 100e9d4:	10c0200c 	andi	r3,r2,128
 100e9d8:	18001f1e 	bne	r3,zero,100ea58 <__smakebuf_r+0x124>
 100e9dc:	04810004 	movi	r18,1024
 100e9e0:	10820014 	ori	r2,r2,2048
 100e9e4:	8080030d 	sth	r2,12(r16)
 100e9e8:	0027883a 	mov	r19,zero
 100e9ec:	8809883a 	mov	r4,r17
 100e9f0:	900b883a 	mov	r5,r18
 100e9f4:	100eaec0 	call	100eaec <_malloc_r>
 100e9f8:	10002e26 	beq	r2,zero,100eab4 <__smakebuf_r+0x180>
 100e9fc:	80c0030b 	ldhu	r3,12(r16)
 100ea00:	01004074 	movhi	r4,257
 100ea04:	21339a04 	addi	r4,r4,-12696
 100ea08:	89000f15 	stw	r4,60(r17)
 100ea0c:	18c02014 	ori	r3,r3,128
 100ea10:	80c0030d 	sth	r3,12(r16)
 100ea14:	80800015 	stw	r2,0(r16)
 100ea18:	80800415 	stw	r2,16(r16)
 100ea1c:	84800515 	stw	r18,20(r16)
 100ea20:	98001c1e 	bne	r19,zero,100ea94 <__smakebuf_r+0x160>
 100ea24:	dfc01317 	ldw	ra,76(sp)
 100ea28:	dcc01217 	ldw	r19,72(sp)
 100ea2c:	dc801117 	ldw	r18,68(sp)
 100ea30:	dc401017 	ldw	r17,64(sp)
 100ea34:	dc000f17 	ldw	r16,60(sp)
 100ea38:	dec01404 	addi	sp,sp,80
 100ea3c:	f800283a 	ret
 100ea40:	288010c4 	addi	r2,r5,67
 100ea44:	28800015 	stw	r2,0(r5)
 100ea48:	28800415 	stw	r2,16(r5)
 100ea4c:	00800044 	movi	r2,1
 100ea50:	28800515 	stw	r2,20(r5)
 100ea54:	f800283a 	ret
 100ea58:	04801004 	movi	r18,64
 100ea5c:	003fe006 	br	100e9e0 <__alt_data_end+0xff80e9e0>
 100ea60:	81000a17 	ldw	r4,40(r16)
 100ea64:	00c04074 	movhi	r3,257
 100ea68:	18c38204 	addi	r3,r3,3592
 100ea6c:	20ffc51e 	bne	r4,r3,100e984 <__alt_data_end+0xff80e984>
 100ea70:	80c0030b 	ldhu	r3,12(r16)
 100ea74:	01010004 	movi	r4,1024
 100ea78:	81001315 	stw	r4,76(r16)
 100ea7c:	1906b03a 	or	r3,r3,r4
 100ea80:	80c0030d 	sth	r3,12(r16)
 100ea84:	003fc206 	br	100e990 <__alt_data_end+0xff80e990>
 100ea88:	0027883a 	mov	r19,zero
 100ea8c:	04810004 	movi	r18,1024
 100ea90:	003fd606 	br	100e9ec <__alt_data_end+0xff80e9ec>
 100ea94:	8140038f 	ldh	r5,14(r16)
 100ea98:	8809883a 	mov	r4,r17
 100ea9c:	1013b500 	call	1013b50 <_isatty_r>
 100eaa0:	103fe026 	beq	r2,zero,100ea24 <__alt_data_end+0xff80ea24>
 100eaa4:	8080030b 	ldhu	r2,12(r16)
 100eaa8:	10800054 	ori	r2,r2,1
 100eaac:	8080030d 	sth	r2,12(r16)
 100eab0:	003fdc06 	br	100ea24 <__alt_data_end+0xff80ea24>
 100eab4:	8080030b 	ldhu	r2,12(r16)
 100eab8:	10c0800c 	andi	r3,r2,512
 100eabc:	183fd91e 	bne	r3,zero,100ea24 <__alt_data_end+0xff80ea24>
 100eac0:	10800094 	ori	r2,r2,2
 100eac4:	80c010c4 	addi	r3,r16,67
 100eac8:	8080030d 	sth	r2,12(r16)
 100eacc:	00800044 	movi	r2,1
 100ead0:	80c00015 	stw	r3,0(r16)
 100ead4:	80c00415 	stw	r3,16(r16)
 100ead8:	80800515 	stw	r2,20(r16)
 100eadc:	003fd106 	br	100ea24 <__alt_data_end+0xff80ea24>
 100eae0:	04c00044 	movi	r19,1
 100eae4:	04810004 	movi	r18,1024
 100eae8:	003fc006 	br	100e9ec <__alt_data_end+0xff80e9ec>

0100eaec <_malloc_r>:
 100eaec:	defff504 	addi	sp,sp,-44
 100eaf0:	dc800315 	stw	r18,12(sp)
 100eaf4:	dfc00a15 	stw	ra,40(sp)
 100eaf8:	df000915 	stw	fp,36(sp)
 100eafc:	ddc00815 	stw	r23,32(sp)
 100eb00:	dd800715 	stw	r22,28(sp)
 100eb04:	dd400615 	stw	r21,24(sp)
 100eb08:	dd000515 	stw	r20,20(sp)
 100eb0c:	dcc00415 	stw	r19,16(sp)
 100eb10:	dc400215 	stw	r17,8(sp)
 100eb14:	dc000115 	stw	r16,4(sp)
 100eb18:	288002c4 	addi	r2,r5,11
 100eb1c:	00c00584 	movi	r3,22
 100eb20:	2025883a 	mov	r18,r4
 100eb24:	18802a2e 	bgeu	r3,r2,100ebd0 <_malloc_r+0xe4>
 100eb28:	047ffe04 	movi	r17,-8
 100eb2c:	1462703a 	and	r17,r2,r17
 100eb30:	88009e16 	blt	r17,zero,100edac <_malloc_r+0x2c0>
 100eb34:	89409d36 	bltu	r17,r5,100edac <_malloc_r+0x2c0>
 100eb38:	10167d40 	call	10167d4 <__malloc_lock>
 100eb3c:	00807dc4 	movi	r2,503
 100eb40:	14402736 	bltu	r2,r17,100ebe0 <_malloc_r+0xf4>
 100eb44:	8806d0fa 	srli	r3,r17,3
 100eb48:	04c040b4 	movhi	r19,258
 100eb4c:	9ce79b04 	addi	r19,r19,-24980
 100eb50:	18c5883a 	add	r2,r3,r3
 100eb54:	1085883a 	add	r2,r2,r2
 100eb58:	1085883a 	add	r2,r2,r2
 100eb5c:	9885883a 	add	r2,r19,r2
 100eb60:	14000317 	ldw	r16,12(r2)
 100eb64:	80814a26 	beq	r16,r2,100f090 <_malloc_r+0x5a4>
 100eb68:	80c00117 	ldw	r3,4(r16)
 100eb6c:	81000317 	ldw	r4,12(r16)
 100eb70:	00bfff04 	movi	r2,-4
 100eb74:	1884703a 	and	r2,r3,r2
 100eb78:	81400217 	ldw	r5,8(r16)
 100eb7c:	8085883a 	add	r2,r16,r2
 100eb80:	10c00117 	ldw	r3,4(r2)
 100eb84:	29000315 	stw	r4,12(r5)
 100eb88:	21400215 	stw	r5,8(r4)
 100eb8c:	18c00054 	ori	r3,r3,1
 100eb90:	10c00115 	stw	r3,4(r2)
 100eb94:	9009883a 	mov	r4,r18
 100eb98:	10167f40 	call	10167f4 <__malloc_unlock>
 100eb9c:	80800204 	addi	r2,r16,8
 100eba0:	dfc00a17 	ldw	ra,40(sp)
 100eba4:	df000917 	ldw	fp,36(sp)
 100eba8:	ddc00817 	ldw	r23,32(sp)
 100ebac:	dd800717 	ldw	r22,28(sp)
 100ebb0:	dd400617 	ldw	r21,24(sp)
 100ebb4:	dd000517 	ldw	r20,20(sp)
 100ebb8:	dcc00417 	ldw	r19,16(sp)
 100ebbc:	dc800317 	ldw	r18,12(sp)
 100ebc0:	dc400217 	ldw	r17,8(sp)
 100ebc4:	dc000117 	ldw	r16,4(sp)
 100ebc8:	dec00b04 	addi	sp,sp,44
 100ebcc:	f800283a 	ret
 100ebd0:	04400404 	movi	r17,16
 100ebd4:	89407536 	bltu	r17,r5,100edac <_malloc_r+0x2c0>
 100ebd8:	10167d40 	call	10167d4 <__malloc_lock>
 100ebdc:	003fd906 	br	100eb44 <__alt_data_end+0xff80eb44>
 100ebe0:	8806d27a 	srli	r3,r17,9
 100ebe4:	18007526 	beq	r3,zero,100edbc <_malloc_r+0x2d0>
 100ebe8:	00800104 	movi	r2,4
 100ebec:	10c0ef36 	bltu	r2,r3,100efac <_malloc_r+0x4c0>
 100ebf0:	8806d1ba 	srli	r3,r17,6
 100ebf4:	19c00e04 	addi	r7,r3,56
 100ebf8:	39cb883a 	add	r5,r7,r7
 100ebfc:	04c040b4 	movhi	r19,258
 100ec00:	294b883a 	add	r5,r5,r5
 100ec04:	9ce79b04 	addi	r19,r19,-24980
 100ec08:	294b883a 	add	r5,r5,r5
 100ec0c:	994b883a 	add	r5,r19,r5
 100ec10:	2c000317 	ldw	r16,12(r5)
 100ec14:	2c000e26 	beq	r5,r16,100ec50 <_malloc_r+0x164>
 100ec18:	80800117 	ldw	r2,4(r16)
 100ec1c:	01bfff04 	movi	r6,-4
 100ec20:	010003c4 	movi	r4,15
 100ec24:	1184703a 	and	r2,r2,r6
 100ec28:	1447c83a 	sub	r3,r2,r17
 100ec2c:	20c00716 	blt	r4,r3,100ec4c <_malloc_r+0x160>
 100ec30:	1800650e 	bge	r3,zero,100edc8 <_malloc_r+0x2dc>
 100ec34:	84000317 	ldw	r16,12(r16)
 100ec38:	2c000526 	beq	r5,r16,100ec50 <_malloc_r+0x164>
 100ec3c:	80800117 	ldw	r2,4(r16)
 100ec40:	1184703a 	and	r2,r2,r6
 100ec44:	1447c83a 	sub	r3,r2,r17
 100ec48:	20fff90e 	bge	r4,r3,100ec30 <__alt_data_end+0xff80ec30>
 100ec4c:	39ffffc4 	addi	r7,r7,-1
 100ec50:	38c00044 	addi	r3,r7,1
 100ec54:	018040b4 	movhi	r6,258
 100ec58:	9c000417 	ldw	r16,16(r19)
 100ec5c:	31a79b04 	addi	r6,r6,-24980
 100ec60:	32400204 	addi	r9,r6,8
 100ec64:	82410326 	beq	r16,r9,100f074 <_malloc_r+0x588>
 100ec68:	81000117 	ldw	r4,4(r16)
 100ec6c:	00bfff04 	movi	r2,-4
 100ec70:	208e703a 	and	r7,r4,r2
 100ec74:	3c45c83a 	sub	r2,r7,r17
 100ec78:	010003c4 	movi	r4,15
 100ec7c:	2080ee16 	blt	r4,r2,100f038 <_malloc_r+0x54c>
 100ec80:	32400515 	stw	r9,20(r6)
 100ec84:	32400415 	stw	r9,16(r6)
 100ec88:	1000510e 	bge	r2,zero,100edd0 <_malloc_r+0x2e4>
 100ec8c:	00807fc4 	movi	r2,511
 100ec90:	11c0ce36 	bltu	r2,r7,100efcc <_malloc_r+0x4e0>
 100ec94:	3808d0fa 	srli	r4,r7,3
 100ec98:	01c00044 	movi	r7,1
 100ec9c:	30800117 	ldw	r2,4(r6)
 100eca0:	210b883a 	add	r5,r4,r4
 100eca4:	294b883a 	add	r5,r5,r5
 100eca8:	2009d0ba 	srai	r4,r4,2
 100ecac:	294b883a 	add	r5,r5,r5
 100ecb0:	298b883a 	add	r5,r5,r6
 100ecb4:	2a000217 	ldw	r8,8(r5)
 100ecb8:	3908983a 	sll	r4,r7,r4
 100ecbc:	81400315 	stw	r5,12(r16)
 100ecc0:	82000215 	stw	r8,8(r16)
 100ecc4:	2088b03a 	or	r4,r4,r2
 100ecc8:	2c000215 	stw	r16,8(r5)
 100eccc:	31000115 	stw	r4,4(r6)
 100ecd0:	44000315 	stw	r16,12(r8)
 100ecd4:	1805d0ba 	srai	r2,r3,2
 100ecd8:	01400044 	movi	r5,1
 100ecdc:	288a983a 	sll	r5,r5,r2
 100ece0:	21404336 	bltu	r4,r5,100edf0 <_malloc_r+0x304>
 100ece4:	2144703a 	and	r2,r4,r5
 100ece8:	10000a1e 	bne	r2,zero,100ed14 <_malloc_r+0x228>
 100ecec:	00bfff04 	movi	r2,-4
 100ecf0:	294b883a 	add	r5,r5,r5
 100ecf4:	1886703a 	and	r3,r3,r2
 100ecf8:	2144703a 	and	r2,r4,r5
 100ecfc:	18c00104 	addi	r3,r3,4
 100ed00:	1000041e 	bne	r2,zero,100ed14 <_malloc_r+0x228>
 100ed04:	294b883a 	add	r5,r5,r5
 100ed08:	2144703a 	and	r2,r4,r5
 100ed0c:	18c00104 	addi	r3,r3,4
 100ed10:	103ffc26 	beq	r2,zero,100ed04 <__alt_data_end+0xff80ed04>
 100ed14:	023fff04 	movi	r8,-4
 100ed18:	01c003c4 	movi	r7,15
 100ed1c:	18c5883a 	add	r2,r3,r3
 100ed20:	1085883a 	add	r2,r2,r2
 100ed24:	1085883a 	add	r2,r2,r2
 100ed28:	9895883a 	add	r10,r19,r2
 100ed2c:	52c00304 	addi	r11,r10,12
 100ed30:	1819883a 	mov	r12,r3
 100ed34:	5c000017 	ldw	r16,0(r11)
 100ed38:	59bffd04 	addi	r6,r11,-12
 100ed3c:	8180041e 	bne	r16,r6,100ed50 <_malloc_r+0x264>
 100ed40:	0000ce06 	br	100f07c <_malloc_r+0x590>
 100ed44:	2000d70e 	bge	r4,zero,100f0a4 <_malloc_r+0x5b8>
 100ed48:	84000317 	ldw	r16,12(r16)
 100ed4c:	8180cb26 	beq	r16,r6,100f07c <_malloc_r+0x590>
 100ed50:	80800117 	ldw	r2,4(r16)
 100ed54:	1204703a 	and	r2,r2,r8
 100ed58:	1449c83a 	sub	r4,r2,r17
 100ed5c:	393ff90e 	bge	r7,r4,100ed44 <__alt_data_end+0xff80ed44>
 100ed60:	80800317 	ldw	r2,12(r16)
 100ed64:	80c00217 	ldw	r3,8(r16)
 100ed68:	89400054 	ori	r5,r17,1
 100ed6c:	81400115 	stw	r5,4(r16)
 100ed70:	18800315 	stw	r2,12(r3)
 100ed74:	10c00215 	stw	r3,8(r2)
 100ed78:	8463883a 	add	r17,r16,r17
 100ed7c:	9c400515 	stw	r17,20(r19)
 100ed80:	9c400415 	stw	r17,16(r19)
 100ed84:	20800054 	ori	r2,r4,1
 100ed88:	88800115 	stw	r2,4(r17)
 100ed8c:	8a400315 	stw	r9,12(r17)
 100ed90:	8a400215 	stw	r9,8(r17)
 100ed94:	8923883a 	add	r17,r17,r4
 100ed98:	89000015 	stw	r4,0(r17)
 100ed9c:	9009883a 	mov	r4,r18
 100eda0:	10167f40 	call	10167f4 <__malloc_unlock>
 100eda4:	80800204 	addi	r2,r16,8
 100eda8:	003f7d06 	br	100eba0 <__alt_data_end+0xff80eba0>
 100edac:	00800304 	movi	r2,12
 100edb0:	90800015 	stw	r2,0(r18)
 100edb4:	0005883a 	mov	r2,zero
 100edb8:	003f7906 	br	100eba0 <__alt_data_end+0xff80eba0>
 100edbc:	01401f84 	movi	r5,126
 100edc0:	01c00fc4 	movi	r7,63
 100edc4:	003f8d06 	br	100ebfc <__alt_data_end+0xff80ebfc>
 100edc8:	81000317 	ldw	r4,12(r16)
 100edcc:	003f6a06 	br	100eb78 <__alt_data_end+0xff80eb78>
 100edd0:	81c5883a 	add	r2,r16,r7
 100edd4:	10c00117 	ldw	r3,4(r2)
 100edd8:	9009883a 	mov	r4,r18
 100eddc:	18c00054 	ori	r3,r3,1
 100ede0:	10c00115 	stw	r3,4(r2)
 100ede4:	10167f40 	call	10167f4 <__malloc_unlock>
 100ede8:	80800204 	addi	r2,r16,8
 100edec:	003f6c06 	br	100eba0 <__alt_data_end+0xff80eba0>
 100edf0:	9c000217 	ldw	r16,8(r19)
 100edf4:	00bfff04 	movi	r2,-4
 100edf8:	85800117 	ldw	r22,4(r16)
 100edfc:	b0ac703a 	and	r22,r22,r2
 100ee00:	b4400336 	bltu	r22,r17,100ee10 <_malloc_r+0x324>
 100ee04:	b445c83a 	sub	r2,r22,r17
 100ee08:	00c003c4 	movi	r3,15
 100ee0c:	18805d16 	blt	r3,r2,100ef84 <_malloc_r+0x498>
 100ee10:	05c040b4 	movhi	r23,258
 100ee14:	008040b4 	movhi	r2,258
 100ee18:	bded3a04 	addi	r23,r23,-19224
 100ee1c:	10b45104 	addi	r2,r2,-11964
 100ee20:	15400017 	ldw	r21,0(r2)
 100ee24:	b9000017 	ldw	r4,0(r23)
 100ee28:	00ffffc4 	movi	r3,-1
 100ee2c:	858d883a 	add	r6,r16,r22
 100ee30:	8d6b883a 	add	r21,r17,r21
 100ee34:	20c0e426 	beq	r4,r3,100f1c8 <_malloc_r+0x6dc>
 100ee38:	ad4403c4 	addi	r21,r21,4111
 100ee3c:	00fc0004 	movi	r3,-4096
 100ee40:	a8ea703a 	and	r21,r21,r3
 100ee44:	9009883a 	mov	r4,r18
 100ee48:	a80b883a 	mov	r5,r21
 100ee4c:	d9800015 	stw	r6,0(sp)
 100ee50:	1010cdc0 	call	1010cdc <_sbrk_r>
 100ee54:	00ffffc4 	movi	r3,-1
 100ee58:	1029883a 	mov	r20,r2
 100ee5c:	d9800017 	ldw	r6,0(sp)
 100ee60:	10c0a426 	beq	r2,r3,100f0f4 <_malloc_r+0x608>
 100ee64:	1180a236 	bltu	r2,r6,100f0f0 <_malloc_r+0x604>
 100ee68:	070040b4 	movhi	fp,258
 100ee6c:	e7348b04 	addi	fp,fp,-11732
 100ee70:	e0c00017 	ldw	r3,0(fp)
 100ee74:	a8c7883a 	add	r3,r21,r3
 100ee78:	e0c00015 	stw	r3,0(fp)
 100ee7c:	3500da26 	beq	r6,r20,100f1e8 <_malloc_r+0x6fc>
 100ee80:	b9000017 	ldw	r4,0(r23)
 100ee84:	00bfffc4 	movi	r2,-1
 100ee88:	2080e426 	beq	r4,r2,100f21c <_malloc_r+0x730>
 100ee8c:	a185c83a 	sub	r2,r20,r6
 100ee90:	1885883a 	add	r2,r3,r2
 100ee94:	e0800015 	stw	r2,0(fp)
 100ee98:	a0c001cc 	andi	r3,r20,7
 100ee9c:	1800b526 	beq	r3,zero,100f174 <_malloc_r+0x688>
 100eea0:	a0e9c83a 	sub	r20,r20,r3
 100eea4:	00840204 	movi	r2,4104
 100eea8:	a5000204 	addi	r20,r20,8
 100eeac:	10c7c83a 	sub	r3,r2,r3
 100eeb0:	a545883a 	add	r2,r20,r21
 100eeb4:	1083ffcc 	andi	r2,r2,4095
 100eeb8:	18abc83a 	sub	r21,r3,r2
 100eebc:	9009883a 	mov	r4,r18
 100eec0:	a80b883a 	mov	r5,r21
 100eec4:	1010cdc0 	call	1010cdc <_sbrk_r>
 100eec8:	00ffffc4 	movi	r3,-1
 100eecc:	10c0d026 	beq	r2,r3,100f210 <_malloc_r+0x724>
 100eed0:	1507c83a 	sub	r3,r2,r20
 100eed4:	a8c7883a 	add	r3,r21,r3
 100eed8:	18c00054 	ori	r3,r3,1
 100eedc:	e0800017 	ldw	r2,0(fp)
 100eee0:	9d000215 	stw	r20,8(r19)
 100eee4:	a0c00115 	stw	r3,4(r20)
 100eee8:	a887883a 	add	r3,r21,r2
 100eeec:	e0c00015 	stw	r3,0(fp)
 100eef0:	84c00e26 	beq	r16,r19,100ef2c <_malloc_r+0x440>
 100eef4:	018003c4 	movi	r6,15
 100eef8:	3580a02e 	bgeu	r6,r22,100f17c <_malloc_r+0x690>
 100eefc:	81400117 	ldw	r5,4(r16)
 100ef00:	013ffe04 	movi	r4,-8
 100ef04:	b0bffd04 	addi	r2,r22,-12
 100ef08:	1104703a 	and	r2,r2,r4
 100ef0c:	2900004c 	andi	r4,r5,1
 100ef10:	1108b03a 	or	r4,r2,r4
 100ef14:	81000115 	stw	r4,4(r16)
 100ef18:	01400144 	movi	r5,5
 100ef1c:	8089883a 	add	r4,r16,r2
 100ef20:	21400115 	stw	r5,4(r4)
 100ef24:	21400215 	stw	r5,8(r4)
 100ef28:	3080c036 	bltu	r6,r2,100f22c <_malloc_r+0x740>
 100ef2c:	008040b4 	movhi	r2,258
 100ef30:	10b45004 	addi	r2,r2,-11968
 100ef34:	11000017 	ldw	r4,0(r2)
 100ef38:	20c0012e 	bgeu	r4,r3,100ef40 <_malloc_r+0x454>
 100ef3c:	10c00015 	stw	r3,0(r2)
 100ef40:	008040b4 	movhi	r2,258
 100ef44:	10b44f04 	addi	r2,r2,-11972
 100ef48:	11000017 	ldw	r4,0(r2)
 100ef4c:	9c000217 	ldw	r16,8(r19)
 100ef50:	20c0012e 	bgeu	r4,r3,100ef58 <_malloc_r+0x46c>
 100ef54:	10c00015 	stw	r3,0(r2)
 100ef58:	80c00117 	ldw	r3,4(r16)
 100ef5c:	00bfff04 	movi	r2,-4
 100ef60:	1886703a 	and	r3,r3,r2
 100ef64:	1c45c83a 	sub	r2,r3,r17
 100ef68:	1c400236 	bltu	r3,r17,100ef74 <_malloc_r+0x488>
 100ef6c:	00c003c4 	movi	r3,15
 100ef70:	18800416 	blt	r3,r2,100ef84 <_malloc_r+0x498>
 100ef74:	9009883a 	mov	r4,r18
 100ef78:	10167f40 	call	10167f4 <__malloc_unlock>
 100ef7c:	0005883a 	mov	r2,zero
 100ef80:	003f0706 	br	100eba0 <__alt_data_end+0xff80eba0>
 100ef84:	88c00054 	ori	r3,r17,1
 100ef88:	80c00115 	stw	r3,4(r16)
 100ef8c:	8463883a 	add	r17,r16,r17
 100ef90:	10800054 	ori	r2,r2,1
 100ef94:	9c400215 	stw	r17,8(r19)
 100ef98:	88800115 	stw	r2,4(r17)
 100ef9c:	9009883a 	mov	r4,r18
 100efa0:	10167f40 	call	10167f4 <__malloc_unlock>
 100efa4:	80800204 	addi	r2,r16,8
 100efa8:	003efd06 	br	100eba0 <__alt_data_end+0xff80eba0>
 100efac:	00800504 	movi	r2,20
 100efb0:	10c0482e 	bgeu	r2,r3,100f0d4 <_malloc_r+0x5e8>
 100efb4:	00801504 	movi	r2,84
 100efb8:	10c06836 	bltu	r2,r3,100f15c <_malloc_r+0x670>
 100efbc:	8806d33a 	srli	r3,r17,12
 100efc0:	19c01b84 	addi	r7,r3,110
 100efc4:	39cb883a 	add	r5,r7,r7
 100efc8:	003f0c06 	br	100ebfc <__alt_data_end+0xff80ebfc>
 100efcc:	3804d27a 	srli	r2,r7,9
 100efd0:	01000104 	movi	r4,4
 100efd4:	2080422e 	bgeu	r4,r2,100f0e0 <_malloc_r+0x5f4>
 100efd8:	01000504 	movi	r4,20
 100efdc:	20807c36 	bltu	r4,r2,100f1d0 <_malloc_r+0x6e4>
 100efe0:	110016c4 	addi	r4,r2,91
 100efe4:	210b883a 	add	r5,r4,r4
 100efe8:	294b883a 	add	r5,r5,r5
 100efec:	294b883a 	add	r5,r5,r5
 100eff0:	994b883a 	add	r5,r19,r5
 100eff4:	28800217 	ldw	r2,8(r5)
 100eff8:	020040b4 	movhi	r8,258
 100effc:	42279b04 	addi	r8,r8,-24980
 100f000:	11406326 	beq	r2,r5,100f190 <_malloc_r+0x6a4>
 100f004:	01bfff04 	movi	r6,-4
 100f008:	11000117 	ldw	r4,4(r2)
 100f00c:	2188703a 	and	r4,r4,r6
 100f010:	3900022e 	bgeu	r7,r4,100f01c <_malloc_r+0x530>
 100f014:	10800217 	ldw	r2,8(r2)
 100f018:	28bffb1e 	bne	r5,r2,100f008 <__alt_data_end+0xff80f008>
 100f01c:	11800317 	ldw	r6,12(r2)
 100f020:	99000117 	ldw	r4,4(r19)
 100f024:	81800315 	stw	r6,12(r16)
 100f028:	80800215 	stw	r2,8(r16)
 100f02c:	34000215 	stw	r16,8(r6)
 100f030:	14000315 	stw	r16,12(r2)
 100f034:	003f2706 	br	100ecd4 <__alt_data_end+0xff80ecd4>
 100f038:	88c00054 	ori	r3,r17,1
 100f03c:	80c00115 	stw	r3,4(r16)
 100f040:	8463883a 	add	r17,r16,r17
 100f044:	34400515 	stw	r17,20(r6)
 100f048:	34400415 	stw	r17,16(r6)
 100f04c:	10c00054 	ori	r3,r2,1
 100f050:	8a400315 	stw	r9,12(r17)
 100f054:	8a400215 	stw	r9,8(r17)
 100f058:	88c00115 	stw	r3,4(r17)
 100f05c:	88a3883a 	add	r17,r17,r2
 100f060:	88800015 	stw	r2,0(r17)
 100f064:	9009883a 	mov	r4,r18
 100f068:	10167f40 	call	10167f4 <__malloc_unlock>
 100f06c:	80800204 	addi	r2,r16,8
 100f070:	003ecb06 	br	100eba0 <__alt_data_end+0xff80eba0>
 100f074:	31000117 	ldw	r4,4(r6)
 100f078:	003f1606 	br	100ecd4 <__alt_data_end+0xff80ecd4>
 100f07c:	63000044 	addi	r12,r12,1
 100f080:	608000cc 	andi	r2,r12,3
 100f084:	5ac00204 	addi	r11,r11,8
 100f088:	103f2a1e 	bne	r2,zero,100ed34 <__alt_data_end+0xff80ed34>
 100f08c:	00002106 	br	100f114 <_malloc_r+0x628>
 100f090:	80800204 	addi	r2,r16,8
 100f094:	84000517 	ldw	r16,20(r16)
 100f098:	143eb31e 	bne	r2,r16,100eb68 <__alt_data_end+0xff80eb68>
 100f09c:	18c00084 	addi	r3,r3,2
 100f0a0:	003eec06 	br	100ec54 <__alt_data_end+0xff80ec54>
 100f0a4:	8085883a 	add	r2,r16,r2
 100f0a8:	10c00117 	ldw	r3,4(r2)
 100f0ac:	81000317 	ldw	r4,12(r16)
 100f0b0:	81400217 	ldw	r5,8(r16)
 100f0b4:	18c00054 	ori	r3,r3,1
 100f0b8:	10c00115 	stw	r3,4(r2)
 100f0bc:	29000315 	stw	r4,12(r5)
 100f0c0:	21400215 	stw	r5,8(r4)
 100f0c4:	9009883a 	mov	r4,r18
 100f0c8:	10167f40 	call	10167f4 <__malloc_unlock>
 100f0cc:	80800204 	addi	r2,r16,8
 100f0d0:	003eb306 	br	100eba0 <__alt_data_end+0xff80eba0>
 100f0d4:	19c016c4 	addi	r7,r3,91
 100f0d8:	39cb883a 	add	r5,r7,r7
 100f0dc:	003ec706 	br	100ebfc <__alt_data_end+0xff80ebfc>
 100f0e0:	3804d1ba 	srli	r2,r7,6
 100f0e4:	11000e04 	addi	r4,r2,56
 100f0e8:	210b883a 	add	r5,r4,r4
 100f0ec:	003fbe06 	br	100efe8 <__alt_data_end+0xff80efe8>
 100f0f0:	84ff5d26 	beq	r16,r19,100ee68 <__alt_data_end+0xff80ee68>
 100f0f4:	9c000217 	ldw	r16,8(r19)
 100f0f8:	00bfff04 	movi	r2,-4
 100f0fc:	80c00117 	ldw	r3,4(r16)
 100f100:	1886703a 	and	r3,r3,r2
 100f104:	003f9706 	br	100ef64 <__alt_data_end+0xff80ef64>
 100f108:	52800017 	ldw	r10,0(r10)
 100f10c:	18ffffc4 	addi	r3,r3,-1
 100f110:	50805c1e 	bne	r10,r2,100f284 <_malloc_r+0x798>
 100f114:	190000cc 	andi	r4,r3,3
 100f118:	50bffe04 	addi	r2,r10,-8
 100f11c:	203ffa1e 	bne	r4,zero,100f108 <__alt_data_end+0xff80f108>
 100f120:	98800117 	ldw	r2,4(r19)
 100f124:	0146303a 	nor	r3,zero,r5
 100f128:	1884703a 	and	r2,r3,r2
 100f12c:	98800115 	stw	r2,4(r19)
 100f130:	294b883a 	add	r5,r5,r5
 100f134:	117f2e36 	bltu	r2,r5,100edf0 <__alt_data_end+0xff80edf0>
 100f138:	283f2d26 	beq	r5,zero,100edf0 <__alt_data_end+0xff80edf0>
 100f13c:	1146703a 	and	r3,r2,r5
 100f140:	1800521e 	bne	r3,zero,100f28c <_malloc_r+0x7a0>
 100f144:	6007883a 	mov	r3,r12
 100f148:	294b883a 	add	r5,r5,r5
 100f14c:	1148703a 	and	r4,r2,r5
 100f150:	18c00104 	addi	r3,r3,4
 100f154:	203ffc26 	beq	r4,zero,100f148 <__alt_data_end+0xff80f148>
 100f158:	003ef006 	br	100ed1c <__alt_data_end+0xff80ed1c>
 100f15c:	00805504 	movi	r2,340
 100f160:	10c01336 	bltu	r2,r3,100f1b0 <_malloc_r+0x6c4>
 100f164:	8806d3fa 	srli	r3,r17,15
 100f168:	19c01dc4 	addi	r7,r3,119
 100f16c:	39cb883a 	add	r5,r7,r7
 100f170:	003ea206 	br	100ebfc <__alt_data_end+0xff80ebfc>
 100f174:	00c40004 	movi	r3,4096
 100f178:	003f4d06 	br	100eeb0 <__alt_data_end+0xff80eeb0>
 100f17c:	00800044 	movi	r2,1
 100f180:	a0800115 	stw	r2,4(r20)
 100f184:	a021883a 	mov	r16,r20
 100f188:	0007883a 	mov	r3,zero
 100f18c:	003f7506 	br	100ef64 <__alt_data_end+0xff80ef64>
 100f190:	200bd0ba 	srai	r5,r4,2
 100f194:	01800044 	movi	r6,1
 100f198:	41000117 	ldw	r4,4(r8)
 100f19c:	314a983a 	sll	r5,r6,r5
 100f1a0:	100d883a 	mov	r6,r2
 100f1a4:	2908b03a 	or	r4,r5,r4
 100f1a8:	41000115 	stw	r4,4(r8)
 100f1ac:	003f9d06 	br	100f024 <__alt_data_end+0xff80f024>
 100f1b0:	00815504 	movi	r2,1364
 100f1b4:	10c01336 	bltu	r2,r3,100f204 <_malloc_r+0x718>
 100f1b8:	8806d4ba 	srli	r3,r17,18
 100f1bc:	19c01f04 	addi	r7,r3,124
 100f1c0:	39cb883a 	add	r5,r7,r7
 100f1c4:	003e8d06 	br	100ebfc <__alt_data_end+0xff80ebfc>
 100f1c8:	ad400404 	addi	r21,r21,16
 100f1cc:	003f1d06 	br	100ee44 <__alt_data_end+0xff80ee44>
 100f1d0:	01001504 	movi	r4,84
 100f1d4:	20801c36 	bltu	r4,r2,100f248 <_malloc_r+0x75c>
 100f1d8:	3804d33a 	srli	r2,r7,12
 100f1dc:	11001b84 	addi	r4,r2,110
 100f1e0:	210b883a 	add	r5,r4,r4
 100f1e4:	003f8006 	br	100efe8 <__alt_data_end+0xff80efe8>
 100f1e8:	3083ffcc 	andi	r2,r6,4095
 100f1ec:	103f241e 	bne	r2,zero,100ee80 <__alt_data_end+0xff80ee80>
 100f1f0:	99000217 	ldw	r4,8(r19)
 100f1f4:	ad85883a 	add	r2,r21,r22
 100f1f8:	10800054 	ori	r2,r2,1
 100f1fc:	20800115 	stw	r2,4(r4)
 100f200:	003f4a06 	br	100ef2c <__alt_data_end+0xff80ef2c>
 100f204:	01403f04 	movi	r5,252
 100f208:	01c01f84 	movi	r7,126
 100f20c:	003e7b06 	br	100ebfc <__alt_data_end+0xff80ebfc>
 100f210:	00c00044 	movi	r3,1
 100f214:	002b883a 	mov	r21,zero
 100f218:	003f3006 	br	100eedc <__alt_data_end+0xff80eedc>
 100f21c:	008040b4 	movhi	r2,258
 100f220:	10ad3a04 	addi	r2,r2,-19224
 100f224:	15000015 	stw	r20,0(r2)
 100f228:	003f1b06 	br	100ee98 <__alt_data_end+0xff80ee98>
 100f22c:	9009883a 	mov	r4,r18
 100f230:	81400204 	addi	r5,r16,8
 100f234:	100d31c0 	call	100d31c <_free_r>
 100f238:	008040b4 	movhi	r2,258
 100f23c:	10b48b04 	addi	r2,r2,-11732
 100f240:	10c00017 	ldw	r3,0(r2)
 100f244:	003f3906 	br	100ef2c <__alt_data_end+0xff80ef2c>
 100f248:	01005504 	movi	r4,340
 100f24c:	20800436 	bltu	r4,r2,100f260 <_malloc_r+0x774>
 100f250:	3804d3fa 	srli	r2,r7,15
 100f254:	11001dc4 	addi	r4,r2,119
 100f258:	210b883a 	add	r5,r4,r4
 100f25c:	003f6206 	br	100efe8 <__alt_data_end+0xff80efe8>
 100f260:	01015504 	movi	r4,1364
 100f264:	20800436 	bltu	r4,r2,100f278 <_malloc_r+0x78c>
 100f268:	3804d4ba 	srli	r2,r7,18
 100f26c:	11001f04 	addi	r4,r2,124
 100f270:	210b883a 	add	r5,r4,r4
 100f274:	003f5c06 	br	100efe8 <__alt_data_end+0xff80efe8>
 100f278:	01403f04 	movi	r5,252
 100f27c:	01001f84 	movi	r4,126
 100f280:	003f5906 	br	100efe8 <__alt_data_end+0xff80efe8>
 100f284:	98800117 	ldw	r2,4(r19)
 100f288:	003fa906 	br	100f130 <__alt_data_end+0xff80f130>
 100f28c:	6007883a 	mov	r3,r12
 100f290:	003ea206 	br	100ed1c <__alt_data_end+0xff80ed1c>

0100f294 <memchr>:
 100f294:	208000cc 	andi	r2,r4,3
 100f298:	280f883a 	mov	r7,r5
 100f29c:	10003526 	beq	r2,zero,100f374 <memchr+0xe0>
 100f2a0:	30bfffc4 	addi	r2,r6,-1
 100f2a4:	30001b26 	beq	r6,zero,100f314 <memchr+0x80>
 100f2a8:	21800003 	ldbu	r6,0(r4)
 100f2ac:	28c03fcc 	andi	r3,r5,255
 100f2b0:	30c01a26 	beq	r6,r3,100f31c <memchr+0x88>
 100f2b4:	180d883a 	mov	r6,r3
 100f2b8:	00000406 	br	100f2cc <memchr+0x38>
 100f2bc:	10001526 	beq	r2,zero,100f314 <memchr+0x80>
 100f2c0:	20c00003 	ldbu	r3,0(r4)
 100f2c4:	10bfffc4 	addi	r2,r2,-1
 100f2c8:	19801426 	beq	r3,r6,100f31c <memchr+0x88>
 100f2cc:	21000044 	addi	r4,r4,1
 100f2d0:	20c000cc 	andi	r3,r4,3
 100f2d4:	183ff91e 	bne	r3,zero,100f2bc <__alt_data_end+0xff80f2bc>
 100f2d8:	024000c4 	movi	r9,3
 100f2dc:	48801136 	bltu	r9,r2,100f324 <memchr+0x90>
 100f2e0:	10000c26 	beq	r2,zero,100f314 <memchr+0x80>
 100f2e4:	20c00003 	ldbu	r3,0(r4)
 100f2e8:	29403fcc 	andi	r5,r5,255
 100f2ec:	19400b26 	beq	r3,r5,100f31c <memchr+0x88>
 100f2f0:	20c00044 	addi	r3,r4,1
 100f2f4:	2085883a 	add	r2,r4,r2
 100f2f8:	39803fcc 	andi	r6,r7,255
 100f2fc:	00000306 	br	100f30c <memchr+0x78>
 100f300:	18c00044 	addi	r3,r3,1
 100f304:	197fffc3 	ldbu	r5,-1(r3)
 100f308:	29800426 	beq	r5,r6,100f31c <memchr+0x88>
 100f30c:	1809883a 	mov	r4,r3
 100f310:	18bffb1e 	bne	r3,r2,100f300 <__alt_data_end+0xff80f300>
 100f314:	0005883a 	mov	r2,zero
 100f318:	f800283a 	ret
 100f31c:	2005883a 	mov	r2,r4
 100f320:	f800283a 	ret
 100f324:	28c03fcc 	andi	r3,r5,255
 100f328:	1810923a 	slli	r8,r3,8
 100f32c:	02ffbff4 	movhi	r11,65279
 100f330:	02a02074 	movhi	r10,32897
 100f334:	40c6b03a 	or	r3,r8,r3
 100f338:	1810943a 	slli	r8,r3,16
 100f33c:	5affbfc4 	addi	r11,r11,-257
 100f340:	52a02004 	addi	r10,r10,-32640
 100f344:	40d0b03a 	or	r8,r8,r3
 100f348:	20c00017 	ldw	r3,0(r4)
 100f34c:	40c6f03a 	xor	r3,r8,r3
 100f350:	1acd883a 	add	r6,r3,r11
 100f354:	00c6303a 	nor	r3,zero,r3
 100f358:	30c6703a 	and	r3,r6,r3
 100f35c:	1a86703a 	and	r3,r3,r10
 100f360:	183fdf1e 	bne	r3,zero,100f2e0 <__alt_data_end+0xff80f2e0>
 100f364:	10bfff04 	addi	r2,r2,-4
 100f368:	21000104 	addi	r4,r4,4
 100f36c:	48bff636 	bltu	r9,r2,100f348 <__alt_data_end+0xff80f348>
 100f370:	003fdb06 	br	100f2e0 <__alt_data_end+0xff80f2e0>
 100f374:	3005883a 	mov	r2,r6
 100f378:	003fd706 	br	100f2d8 <__alt_data_end+0xff80f2d8>

0100f37c <memcmp>:
 100f37c:	01c000c4 	movi	r7,3
 100f380:	3980192e 	bgeu	r7,r6,100f3e8 <memcmp+0x6c>
 100f384:	2144b03a 	or	r2,r4,r5
 100f388:	11c4703a 	and	r2,r2,r7
 100f38c:	10000f26 	beq	r2,zero,100f3cc <memcmp+0x50>
 100f390:	20800003 	ldbu	r2,0(r4)
 100f394:	28c00003 	ldbu	r3,0(r5)
 100f398:	10c0151e 	bne	r2,r3,100f3f0 <memcmp+0x74>
 100f39c:	31bfff84 	addi	r6,r6,-2
 100f3a0:	01ffffc4 	movi	r7,-1
 100f3a4:	00000406 	br	100f3b8 <memcmp+0x3c>
 100f3a8:	20800003 	ldbu	r2,0(r4)
 100f3ac:	28c00003 	ldbu	r3,0(r5)
 100f3b0:	31bfffc4 	addi	r6,r6,-1
 100f3b4:	10c00e1e 	bne	r2,r3,100f3f0 <memcmp+0x74>
 100f3b8:	21000044 	addi	r4,r4,1
 100f3bc:	29400044 	addi	r5,r5,1
 100f3c0:	31fff91e 	bne	r6,r7,100f3a8 <__alt_data_end+0xff80f3a8>
 100f3c4:	0005883a 	mov	r2,zero
 100f3c8:	f800283a 	ret
 100f3cc:	20c00017 	ldw	r3,0(r4)
 100f3d0:	28800017 	ldw	r2,0(r5)
 100f3d4:	1880041e 	bne	r3,r2,100f3e8 <memcmp+0x6c>
 100f3d8:	31bfff04 	addi	r6,r6,-4
 100f3dc:	21000104 	addi	r4,r4,4
 100f3e0:	29400104 	addi	r5,r5,4
 100f3e4:	39bff936 	bltu	r7,r6,100f3cc <__alt_data_end+0xff80f3cc>
 100f3e8:	303fe91e 	bne	r6,zero,100f390 <__alt_data_end+0xff80f390>
 100f3ec:	003ff506 	br	100f3c4 <__alt_data_end+0xff80f3c4>
 100f3f0:	10c5c83a 	sub	r2,r2,r3
 100f3f4:	f800283a 	ret

0100f3f8 <memcpy>:
 100f3f8:	deffff04 	addi	sp,sp,-4
 100f3fc:	dc000015 	stw	r16,0(sp)
 100f400:	00c003c4 	movi	r3,15
 100f404:	2005883a 	mov	r2,r4
 100f408:	1980432e 	bgeu	r3,r6,100f518 <memcpy+0x120>
 100f40c:	2146b03a 	or	r3,r4,r5
 100f410:	18c000cc 	andi	r3,r3,3
 100f414:	1800421e 	bne	r3,zero,100f520 <memcpy+0x128>
 100f418:	343ffc04 	addi	r16,r6,-16
 100f41c:	8020d13a 	srli	r16,r16,4
 100f420:	28c00104 	addi	r3,r5,4
 100f424:	23400104 	addi	r13,r4,4
 100f428:	801e913a 	slli	r15,r16,4
 100f42c:	2b000204 	addi	r12,r5,8
 100f430:	22c00204 	addi	r11,r4,8
 100f434:	7bc00504 	addi	r15,r15,20
 100f438:	2a800304 	addi	r10,r5,12
 100f43c:	22400304 	addi	r9,r4,12
 100f440:	2bdf883a 	add	r15,r5,r15
 100f444:	2811883a 	mov	r8,r5
 100f448:	200f883a 	mov	r7,r4
 100f44c:	41000017 	ldw	r4,0(r8)
 100f450:	39c00404 	addi	r7,r7,16
 100f454:	18c00404 	addi	r3,r3,16
 100f458:	393ffc15 	stw	r4,-16(r7)
 100f45c:	1bbffc17 	ldw	r14,-16(r3)
 100f460:	6b400404 	addi	r13,r13,16
 100f464:	5ac00404 	addi	r11,r11,16
 100f468:	6bbffc15 	stw	r14,-16(r13)
 100f46c:	63800017 	ldw	r14,0(r12)
 100f470:	4a400404 	addi	r9,r9,16
 100f474:	42000404 	addi	r8,r8,16
 100f478:	5bbffc15 	stw	r14,-16(r11)
 100f47c:	53800017 	ldw	r14,0(r10)
 100f480:	63000404 	addi	r12,r12,16
 100f484:	52800404 	addi	r10,r10,16
 100f488:	4bbffc15 	stw	r14,-16(r9)
 100f48c:	1bffef1e 	bne	r3,r15,100f44c <__alt_data_end+0xff80f44c>
 100f490:	81c00044 	addi	r7,r16,1
 100f494:	380e913a 	slli	r7,r7,4
 100f498:	310003cc 	andi	r4,r6,15
 100f49c:	02c000c4 	movi	r11,3
 100f4a0:	11c7883a 	add	r3,r2,r7
 100f4a4:	29cb883a 	add	r5,r5,r7
 100f4a8:	59001f2e 	bgeu	r11,r4,100f528 <memcpy+0x130>
 100f4ac:	1813883a 	mov	r9,r3
 100f4b0:	2811883a 	mov	r8,r5
 100f4b4:	200f883a 	mov	r7,r4
 100f4b8:	42800017 	ldw	r10,0(r8)
 100f4bc:	4a400104 	addi	r9,r9,4
 100f4c0:	39ffff04 	addi	r7,r7,-4
 100f4c4:	4abfff15 	stw	r10,-4(r9)
 100f4c8:	42000104 	addi	r8,r8,4
 100f4cc:	59fffa36 	bltu	r11,r7,100f4b8 <__alt_data_end+0xff80f4b8>
 100f4d0:	213fff04 	addi	r4,r4,-4
 100f4d4:	2008d0ba 	srli	r4,r4,2
 100f4d8:	318000cc 	andi	r6,r6,3
 100f4dc:	21000044 	addi	r4,r4,1
 100f4e0:	2109883a 	add	r4,r4,r4
 100f4e4:	2109883a 	add	r4,r4,r4
 100f4e8:	1907883a 	add	r3,r3,r4
 100f4ec:	290b883a 	add	r5,r5,r4
 100f4f0:	30000626 	beq	r6,zero,100f50c <memcpy+0x114>
 100f4f4:	198d883a 	add	r6,r3,r6
 100f4f8:	29c00003 	ldbu	r7,0(r5)
 100f4fc:	18c00044 	addi	r3,r3,1
 100f500:	29400044 	addi	r5,r5,1
 100f504:	19ffffc5 	stb	r7,-1(r3)
 100f508:	19bffb1e 	bne	r3,r6,100f4f8 <__alt_data_end+0xff80f4f8>
 100f50c:	dc000017 	ldw	r16,0(sp)
 100f510:	dec00104 	addi	sp,sp,4
 100f514:	f800283a 	ret
 100f518:	2007883a 	mov	r3,r4
 100f51c:	003ff406 	br	100f4f0 <__alt_data_end+0xff80f4f0>
 100f520:	2007883a 	mov	r3,r4
 100f524:	003ff306 	br	100f4f4 <__alt_data_end+0xff80f4f4>
 100f528:	200d883a 	mov	r6,r4
 100f52c:	003ff006 	br	100f4f0 <__alt_data_end+0xff80f4f0>

0100f530 <memmove>:
 100f530:	2005883a 	mov	r2,r4
 100f534:	29000b2e 	bgeu	r5,r4,100f564 <memmove+0x34>
 100f538:	298f883a 	add	r7,r5,r6
 100f53c:	21c0092e 	bgeu	r4,r7,100f564 <memmove+0x34>
 100f540:	2187883a 	add	r3,r4,r6
 100f544:	198bc83a 	sub	r5,r3,r6
 100f548:	30004b26 	beq	r6,zero,100f678 <memmove+0x148>
 100f54c:	39ffffc4 	addi	r7,r7,-1
 100f550:	39000003 	ldbu	r4,0(r7)
 100f554:	18ffffc4 	addi	r3,r3,-1
 100f558:	19000005 	stb	r4,0(r3)
 100f55c:	197ffb1e 	bne	r3,r5,100f54c <__alt_data_end+0xff80f54c>
 100f560:	f800283a 	ret
 100f564:	00c003c4 	movi	r3,15
 100f568:	1980412e 	bgeu	r3,r6,100f670 <memmove+0x140>
 100f56c:	1146b03a 	or	r3,r2,r5
 100f570:	18c000cc 	andi	r3,r3,3
 100f574:	1800411e 	bne	r3,zero,100f67c <memmove+0x14c>
 100f578:	33fffc04 	addi	r15,r6,-16
 100f57c:	781ed13a 	srli	r15,r15,4
 100f580:	28c00104 	addi	r3,r5,4
 100f584:	13400104 	addi	r13,r2,4
 100f588:	781c913a 	slli	r14,r15,4
 100f58c:	2b000204 	addi	r12,r5,8
 100f590:	12c00204 	addi	r11,r2,8
 100f594:	73800504 	addi	r14,r14,20
 100f598:	2a800304 	addi	r10,r5,12
 100f59c:	12400304 	addi	r9,r2,12
 100f5a0:	2b9d883a 	add	r14,r5,r14
 100f5a4:	2811883a 	mov	r8,r5
 100f5a8:	100f883a 	mov	r7,r2
 100f5ac:	41000017 	ldw	r4,0(r8)
 100f5b0:	39c00404 	addi	r7,r7,16
 100f5b4:	18c00404 	addi	r3,r3,16
 100f5b8:	393ffc15 	stw	r4,-16(r7)
 100f5bc:	193ffc17 	ldw	r4,-16(r3)
 100f5c0:	6b400404 	addi	r13,r13,16
 100f5c4:	5ac00404 	addi	r11,r11,16
 100f5c8:	693ffc15 	stw	r4,-16(r13)
 100f5cc:	61000017 	ldw	r4,0(r12)
 100f5d0:	4a400404 	addi	r9,r9,16
 100f5d4:	42000404 	addi	r8,r8,16
 100f5d8:	593ffc15 	stw	r4,-16(r11)
 100f5dc:	51000017 	ldw	r4,0(r10)
 100f5e0:	63000404 	addi	r12,r12,16
 100f5e4:	52800404 	addi	r10,r10,16
 100f5e8:	493ffc15 	stw	r4,-16(r9)
 100f5ec:	1bbfef1e 	bne	r3,r14,100f5ac <__alt_data_end+0xff80f5ac>
 100f5f0:	79000044 	addi	r4,r15,1
 100f5f4:	2008913a 	slli	r4,r4,4
 100f5f8:	328003cc 	andi	r10,r6,15
 100f5fc:	02c000c4 	movi	r11,3
 100f600:	1107883a 	add	r3,r2,r4
 100f604:	290b883a 	add	r5,r5,r4
 100f608:	5a801e2e 	bgeu	r11,r10,100f684 <memmove+0x154>
 100f60c:	1813883a 	mov	r9,r3
 100f610:	2811883a 	mov	r8,r5
 100f614:	500f883a 	mov	r7,r10
 100f618:	41000017 	ldw	r4,0(r8)
 100f61c:	4a400104 	addi	r9,r9,4
 100f620:	39ffff04 	addi	r7,r7,-4
 100f624:	493fff15 	stw	r4,-4(r9)
 100f628:	42000104 	addi	r8,r8,4
 100f62c:	59fffa36 	bltu	r11,r7,100f618 <__alt_data_end+0xff80f618>
 100f630:	513fff04 	addi	r4,r10,-4
 100f634:	2008d0ba 	srli	r4,r4,2
 100f638:	318000cc 	andi	r6,r6,3
 100f63c:	21000044 	addi	r4,r4,1
 100f640:	2109883a 	add	r4,r4,r4
 100f644:	2109883a 	add	r4,r4,r4
 100f648:	1907883a 	add	r3,r3,r4
 100f64c:	290b883a 	add	r5,r5,r4
 100f650:	30000926 	beq	r6,zero,100f678 <memmove+0x148>
 100f654:	198d883a 	add	r6,r3,r6
 100f658:	29c00003 	ldbu	r7,0(r5)
 100f65c:	18c00044 	addi	r3,r3,1
 100f660:	29400044 	addi	r5,r5,1
 100f664:	19ffffc5 	stb	r7,-1(r3)
 100f668:	19bffb1e 	bne	r3,r6,100f658 <__alt_data_end+0xff80f658>
 100f66c:	f800283a 	ret
 100f670:	1007883a 	mov	r3,r2
 100f674:	003ff606 	br	100f650 <__alt_data_end+0xff80f650>
 100f678:	f800283a 	ret
 100f67c:	1007883a 	mov	r3,r2
 100f680:	003ff406 	br	100f654 <__alt_data_end+0xff80f654>
 100f684:	500d883a 	mov	r6,r10
 100f688:	003ff106 	br	100f650 <__alt_data_end+0xff80f650>

0100f68c <memset>:
 100f68c:	20c000cc 	andi	r3,r4,3
 100f690:	2005883a 	mov	r2,r4
 100f694:	18004326 	beq	r3,zero,100f7a4 <memset+0x118>
 100f698:	31ffffc4 	addi	r7,r6,-1
 100f69c:	30004026 	beq	r6,zero,100f7a0 <memset+0x114>
 100f6a0:	2813883a 	mov	r9,r5
 100f6a4:	200d883a 	mov	r6,r4
 100f6a8:	2007883a 	mov	r3,r4
 100f6ac:	00000406 	br	100f6c0 <memset+0x34>
 100f6b0:	3a3fffc4 	addi	r8,r7,-1
 100f6b4:	31800044 	addi	r6,r6,1
 100f6b8:	38003926 	beq	r7,zero,100f7a0 <memset+0x114>
 100f6bc:	400f883a 	mov	r7,r8
 100f6c0:	18c00044 	addi	r3,r3,1
 100f6c4:	32400005 	stb	r9,0(r6)
 100f6c8:	1a0000cc 	andi	r8,r3,3
 100f6cc:	403ff81e 	bne	r8,zero,100f6b0 <__alt_data_end+0xff80f6b0>
 100f6d0:	010000c4 	movi	r4,3
 100f6d4:	21c02d2e 	bgeu	r4,r7,100f78c <memset+0x100>
 100f6d8:	29803fcc 	andi	r6,r5,255
 100f6dc:	3008923a 	slli	r4,r6,8
 100f6e0:	218cb03a 	or	r6,r4,r6
 100f6e4:	3008943a 	slli	r4,r6,16
 100f6e8:	218cb03a 	or	r6,r4,r6
 100f6ec:	010003c4 	movi	r4,15
 100f6f0:	21c0182e 	bgeu	r4,r7,100f754 <memset+0xc8>
 100f6f4:	3b3ffc04 	addi	r12,r7,-16
 100f6f8:	6018d13a 	srli	r12,r12,4
 100f6fc:	1a000104 	addi	r8,r3,4
 100f700:	1ac00204 	addi	r11,r3,8
 100f704:	6008913a 	slli	r4,r12,4
 100f708:	1a800304 	addi	r10,r3,12
 100f70c:	1813883a 	mov	r9,r3
 100f710:	21000504 	addi	r4,r4,20
 100f714:	1909883a 	add	r4,r3,r4
 100f718:	49800015 	stw	r6,0(r9)
 100f71c:	41800015 	stw	r6,0(r8)
 100f720:	59800015 	stw	r6,0(r11)
 100f724:	51800015 	stw	r6,0(r10)
 100f728:	42000404 	addi	r8,r8,16
 100f72c:	4a400404 	addi	r9,r9,16
 100f730:	5ac00404 	addi	r11,r11,16
 100f734:	52800404 	addi	r10,r10,16
 100f738:	413ff71e 	bne	r8,r4,100f718 <__alt_data_end+0xff80f718>
 100f73c:	63000044 	addi	r12,r12,1
 100f740:	6018913a 	slli	r12,r12,4
 100f744:	39c003cc 	andi	r7,r7,15
 100f748:	010000c4 	movi	r4,3
 100f74c:	1b07883a 	add	r3,r3,r12
 100f750:	21c00e2e 	bgeu	r4,r7,100f78c <memset+0x100>
 100f754:	1813883a 	mov	r9,r3
 100f758:	3811883a 	mov	r8,r7
 100f75c:	010000c4 	movi	r4,3
 100f760:	49800015 	stw	r6,0(r9)
 100f764:	423fff04 	addi	r8,r8,-4
 100f768:	4a400104 	addi	r9,r9,4
 100f76c:	223ffc36 	bltu	r4,r8,100f760 <__alt_data_end+0xff80f760>
 100f770:	393fff04 	addi	r4,r7,-4
 100f774:	2008d0ba 	srli	r4,r4,2
 100f778:	39c000cc 	andi	r7,r7,3
 100f77c:	21000044 	addi	r4,r4,1
 100f780:	2109883a 	add	r4,r4,r4
 100f784:	2109883a 	add	r4,r4,r4
 100f788:	1907883a 	add	r3,r3,r4
 100f78c:	38000426 	beq	r7,zero,100f7a0 <memset+0x114>
 100f790:	19cf883a 	add	r7,r3,r7
 100f794:	19400005 	stb	r5,0(r3)
 100f798:	18c00044 	addi	r3,r3,1
 100f79c:	19fffd1e 	bne	r3,r7,100f794 <__alt_data_end+0xff80f794>
 100f7a0:	f800283a 	ret
 100f7a4:	2007883a 	mov	r3,r4
 100f7a8:	300f883a 	mov	r7,r6
 100f7ac:	003fc806 	br	100f6d0 <__alt_data_end+0xff80f6d0>

0100f7b0 <_Balloc>:
 100f7b0:	20801317 	ldw	r2,76(r4)
 100f7b4:	defffc04 	addi	sp,sp,-16
 100f7b8:	dc400115 	stw	r17,4(sp)
 100f7bc:	dc000015 	stw	r16,0(sp)
 100f7c0:	dfc00315 	stw	ra,12(sp)
 100f7c4:	dc800215 	stw	r18,8(sp)
 100f7c8:	2023883a 	mov	r17,r4
 100f7cc:	2821883a 	mov	r16,r5
 100f7d0:	10000f26 	beq	r2,zero,100f810 <_Balloc+0x60>
 100f7d4:	8407883a 	add	r3,r16,r16
 100f7d8:	18c7883a 	add	r3,r3,r3
 100f7dc:	10c7883a 	add	r3,r2,r3
 100f7e0:	18800017 	ldw	r2,0(r3)
 100f7e4:	10001126 	beq	r2,zero,100f82c <_Balloc+0x7c>
 100f7e8:	11000017 	ldw	r4,0(r2)
 100f7ec:	19000015 	stw	r4,0(r3)
 100f7f0:	10000415 	stw	zero,16(r2)
 100f7f4:	10000315 	stw	zero,12(r2)
 100f7f8:	dfc00317 	ldw	ra,12(sp)
 100f7fc:	dc800217 	ldw	r18,8(sp)
 100f800:	dc400117 	ldw	r17,4(sp)
 100f804:	dc000017 	ldw	r16,0(sp)
 100f808:	dec00404 	addi	sp,sp,16
 100f80c:	f800283a 	ret
 100f810:	01400104 	movi	r5,4
 100f814:	01800844 	movi	r6,33
 100f818:	10137440 	call	1013744 <_calloc_r>
 100f81c:	88801315 	stw	r2,76(r17)
 100f820:	103fec1e 	bne	r2,zero,100f7d4 <__alt_data_end+0xff80f7d4>
 100f824:	0005883a 	mov	r2,zero
 100f828:	003ff306 	br	100f7f8 <__alt_data_end+0xff80f7f8>
 100f82c:	01400044 	movi	r5,1
 100f830:	2c24983a 	sll	r18,r5,r16
 100f834:	8809883a 	mov	r4,r17
 100f838:	91800144 	addi	r6,r18,5
 100f83c:	318d883a 	add	r6,r6,r6
 100f840:	318d883a 	add	r6,r6,r6
 100f844:	10137440 	call	1013744 <_calloc_r>
 100f848:	103ff626 	beq	r2,zero,100f824 <__alt_data_end+0xff80f824>
 100f84c:	14000115 	stw	r16,4(r2)
 100f850:	14800215 	stw	r18,8(r2)
 100f854:	003fe606 	br	100f7f0 <__alt_data_end+0xff80f7f0>

0100f858 <_Bfree>:
 100f858:	28000826 	beq	r5,zero,100f87c <_Bfree+0x24>
 100f85c:	28c00117 	ldw	r3,4(r5)
 100f860:	20801317 	ldw	r2,76(r4)
 100f864:	18c7883a 	add	r3,r3,r3
 100f868:	18c7883a 	add	r3,r3,r3
 100f86c:	10c5883a 	add	r2,r2,r3
 100f870:	10c00017 	ldw	r3,0(r2)
 100f874:	28c00015 	stw	r3,0(r5)
 100f878:	11400015 	stw	r5,0(r2)
 100f87c:	f800283a 	ret

0100f880 <__multadd>:
 100f880:	defffa04 	addi	sp,sp,-24
 100f884:	dc000115 	stw	r16,4(sp)
 100f888:	2c000417 	ldw	r16,16(r5)
 100f88c:	dc800315 	stw	r18,12(sp)
 100f890:	dc400215 	stw	r17,8(sp)
 100f894:	dfc00515 	stw	ra,20(sp)
 100f898:	dcc00415 	stw	r19,16(sp)
 100f89c:	2823883a 	mov	r17,r5
 100f8a0:	2025883a 	mov	r18,r4
 100f8a4:	2a400504 	addi	r9,r5,20
 100f8a8:	0015883a 	mov	r10,zero
 100f8ac:	4a000017 	ldw	r8,0(r9)
 100f8b0:	4a400104 	addi	r9,r9,4
 100f8b4:	52800044 	addi	r10,r10,1
 100f8b8:	40ffffcc 	andi	r3,r8,65535
 100f8bc:	1987383a 	mul	r3,r3,r6
 100f8c0:	4010d43a 	srli	r8,r8,16
 100f8c4:	19cf883a 	add	r7,r3,r7
 100f8c8:	4191383a 	mul	r8,r8,r6
 100f8cc:	3816d43a 	srli	r11,r7,16
 100f8d0:	38ffffcc 	andi	r3,r7,65535
 100f8d4:	5a0f883a 	add	r7,r11,r8
 100f8d8:	3810943a 	slli	r8,r7,16
 100f8dc:	380ed43a 	srli	r7,r7,16
 100f8e0:	40c7883a 	add	r3,r8,r3
 100f8e4:	48ffff15 	stw	r3,-4(r9)
 100f8e8:	543ff016 	blt	r10,r16,100f8ac <__alt_data_end+0xff80f8ac>
 100f8ec:	38000926 	beq	r7,zero,100f914 <__multadd+0x94>
 100f8f0:	88800217 	ldw	r2,8(r17)
 100f8f4:	80800f0e 	bge	r16,r2,100f934 <__multadd+0xb4>
 100f8f8:	80800144 	addi	r2,r16,5
 100f8fc:	1085883a 	add	r2,r2,r2
 100f900:	1085883a 	add	r2,r2,r2
 100f904:	8885883a 	add	r2,r17,r2
 100f908:	11c00015 	stw	r7,0(r2)
 100f90c:	84000044 	addi	r16,r16,1
 100f910:	8c000415 	stw	r16,16(r17)
 100f914:	8805883a 	mov	r2,r17
 100f918:	dfc00517 	ldw	ra,20(sp)
 100f91c:	dcc00417 	ldw	r19,16(sp)
 100f920:	dc800317 	ldw	r18,12(sp)
 100f924:	dc400217 	ldw	r17,8(sp)
 100f928:	dc000117 	ldw	r16,4(sp)
 100f92c:	dec00604 	addi	sp,sp,24
 100f930:	f800283a 	ret
 100f934:	89400117 	ldw	r5,4(r17)
 100f938:	9009883a 	mov	r4,r18
 100f93c:	d9c00015 	stw	r7,0(sp)
 100f940:	29400044 	addi	r5,r5,1
 100f944:	100f7b00 	call	100f7b0 <_Balloc>
 100f948:	89800417 	ldw	r6,16(r17)
 100f94c:	89400304 	addi	r5,r17,12
 100f950:	11000304 	addi	r4,r2,12
 100f954:	31800084 	addi	r6,r6,2
 100f958:	318d883a 	add	r6,r6,r6
 100f95c:	318d883a 	add	r6,r6,r6
 100f960:	1027883a 	mov	r19,r2
 100f964:	100f3f80 	call	100f3f8 <memcpy>
 100f968:	89000117 	ldw	r4,4(r17)
 100f96c:	90c01317 	ldw	r3,76(r18)
 100f970:	d9c00017 	ldw	r7,0(sp)
 100f974:	2109883a 	add	r4,r4,r4
 100f978:	2109883a 	add	r4,r4,r4
 100f97c:	1907883a 	add	r3,r3,r4
 100f980:	18800017 	ldw	r2,0(r3)
 100f984:	88800015 	stw	r2,0(r17)
 100f988:	1c400015 	stw	r17,0(r3)
 100f98c:	9823883a 	mov	r17,r19
 100f990:	003fd906 	br	100f8f8 <__alt_data_end+0xff80f8f8>

0100f994 <__s2b>:
 100f994:	defff904 	addi	sp,sp,-28
 100f998:	dc400115 	stw	r17,4(sp)
 100f99c:	dc000015 	stw	r16,0(sp)
 100f9a0:	2023883a 	mov	r17,r4
 100f9a4:	2821883a 	mov	r16,r5
 100f9a8:	39000204 	addi	r4,r7,8
 100f9ac:	01400244 	movi	r5,9
 100f9b0:	dcc00315 	stw	r19,12(sp)
 100f9b4:	dc800215 	stw	r18,8(sp)
 100f9b8:	dfc00615 	stw	ra,24(sp)
 100f9bc:	dd400515 	stw	r21,20(sp)
 100f9c0:	dd000415 	stw	r20,16(sp)
 100f9c4:	3825883a 	mov	r18,r7
 100f9c8:	3027883a 	mov	r19,r6
 100f9cc:	1004b440 	call	1004b44 <__divsi3>
 100f9d0:	00c00044 	movi	r3,1
 100f9d4:	000b883a 	mov	r5,zero
 100f9d8:	1880030e 	bge	r3,r2,100f9e8 <__s2b+0x54>
 100f9dc:	18c7883a 	add	r3,r3,r3
 100f9e0:	29400044 	addi	r5,r5,1
 100f9e4:	18bffd16 	blt	r3,r2,100f9dc <__alt_data_end+0xff80f9dc>
 100f9e8:	8809883a 	mov	r4,r17
 100f9ec:	100f7b00 	call	100f7b0 <_Balloc>
 100f9f0:	d8c00717 	ldw	r3,28(sp)
 100f9f4:	10c00515 	stw	r3,20(r2)
 100f9f8:	00c00044 	movi	r3,1
 100f9fc:	10c00415 	stw	r3,16(r2)
 100fa00:	00c00244 	movi	r3,9
 100fa04:	1cc0210e 	bge	r3,r19,100fa8c <__s2b+0xf8>
 100fa08:	80eb883a 	add	r21,r16,r3
 100fa0c:	a829883a 	mov	r20,r21
 100fa10:	84e1883a 	add	r16,r16,r19
 100fa14:	a1c00007 	ldb	r7,0(r20)
 100fa18:	8809883a 	mov	r4,r17
 100fa1c:	a5000044 	addi	r20,r20,1
 100fa20:	100b883a 	mov	r5,r2
 100fa24:	01800284 	movi	r6,10
 100fa28:	39fff404 	addi	r7,r7,-48
 100fa2c:	100f8800 	call	100f880 <__multadd>
 100fa30:	a43ff81e 	bne	r20,r16,100fa14 <__alt_data_end+0xff80fa14>
 100fa34:	ace1883a 	add	r16,r21,r19
 100fa38:	843ffe04 	addi	r16,r16,-8
 100fa3c:	9c800a0e 	bge	r19,r18,100fa68 <__s2b+0xd4>
 100fa40:	94e5c83a 	sub	r18,r18,r19
 100fa44:	84a5883a 	add	r18,r16,r18
 100fa48:	81c00007 	ldb	r7,0(r16)
 100fa4c:	8809883a 	mov	r4,r17
 100fa50:	84000044 	addi	r16,r16,1
 100fa54:	100b883a 	mov	r5,r2
 100fa58:	01800284 	movi	r6,10
 100fa5c:	39fff404 	addi	r7,r7,-48
 100fa60:	100f8800 	call	100f880 <__multadd>
 100fa64:	84bff81e 	bne	r16,r18,100fa48 <__alt_data_end+0xff80fa48>
 100fa68:	dfc00617 	ldw	ra,24(sp)
 100fa6c:	dd400517 	ldw	r21,20(sp)
 100fa70:	dd000417 	ldw	r20,16(sp)
 100fa74:	dcc00317 	ldw	r19,12(sp)
 100fa78:	dc800217 	ldw	r18,8(sp)
 100fa7c:	dc400117 	ldw	r17,4(sp)
 100fa80:	dc000017 	ldw	r16,0(sp)
 100fa84:	dec00704 	addi	sp,sp,28
 100fa88:	f800283a 	ret
 100fa8c:	84000284 	addi	r16,r16,10
 100fa90:	1827883a 	mov	r19,r3
 100fa94:	003fe906 	br	100fa3c <__alt_data_end+0xff80fa3c>

0100fa98 <__hi0bits>:
 100fa98:	20bfffec 	andhi	r2,r4,65535
 100fa9c:	1000141e 	bne	r2,zero,100faf0 <__hi0bits+0x58>
 100faa0:	2008943a 	slli	r4,r4,16
 100faa4:	00800404 	movi	r2,16
 100faa8:	20ffc02c 	andhi	r3,r4,65280
 100faac:	1800021e 	bne	r3,zero,100fab8 <__hi0bits+0x20>
 100fab0:	2008923a 	slli	r4,r4,8
 100fab4:	10800204 	addi	r2,r2,8
 100fab8:	20fc002c 	andhi	r3,r4,61440
 100fabc:	1800021e 	bne	r3,zero,100fac8 <__hi0bits+0x30>
 100fac0:	2008913a 	slli	r4,r4,4
 100fac4:	10800104 	addi	r2,r2,4
 100fac8:	20f0002c 	andhi	r3,r4,49152
 100facc:	1800031e 	bne	r3,zero,100fadc <__hi0bits+0x44>
 100fad0:	2109883a 	add	r4,r4,r4
 100fad4:	10800084 	addi	r2,r2,2
 100fad8:	2109883a 	add	r4,r4,r4
 100fadc:	20000316 	blt	r4,zero,100faec <__hi0bits+0x54>
 100fae0:	2110002c 	andhi	r4,r4,16384
 100fae4:	2000041e 	bne	r4,zero,100faf8 <__hi0bits+0x60>
 100fae8:	00800804 	movi	r2,32
 100faec:	f800283a 	ret
 100faf0:	0005883a 	mov	r2,zero
 100faf4:	003fec06 	br	100faa8 <__alt_data_end+0xff80faa8>
 100faf8:	10800044 	addi	r2,r2,1
 100fafc:	f800283a 	ret

0100fb00 <__lo0bits>:
 100fb00:	20c00017 	ldw	r3,0(r4)
 100fb04:	188001cc 	andi	r2,r3,7
 100fb08:	10000826 	beq	r2,zero,100fb2c <__lo0bits+0x2c>
 100fb0c:	1880004c 	andi	r2,r3,1
 100fb10:	1000211e 	bne	r2,zero,100fb98 <__lo0bits+0x98>
 100fb14:	1880008c 	andi	r2,r3,2
 100fb18:	1000211e 	bne	r2,zero,100fba0 <__lo0bits+0xa0>
 100fb1c:	1806d0ba 	srli	r3,r3,2
 100fb20:	00800084 	movi	r2,2
 100fb24:	20c00015 	stw	r3,0(r4)
 100fb28:	f800283a 	ret
 100fb2c:	18bfffcc 	andi	r2,r3,65535
 100fb30:	10001326 	beq	r2,zero,100fb80 <__lo0bits+0x80>
 100fb34:	0005883a 	mov	r2,zero
 100fb38:	19403fcc 	andi	r5,r3,255
 100fb3c:	2800021e 	bne	r5,zero,100fb48 <__lo0bits+0x48>
 100fb40:	1806d23a 	srli	r3,r3,8
 100fb44:	10800204 	addi	r2,r2,8
 100fb48:	194003cc 	andi	r5,r3,15
 100fb4c:	2800021e 	bne	r5,zero,100fb58 <__lo0bits+0x58>
 100fb50:	1806d13a 	srli	r3,r3,4
 100fb54:	10800104 	addi	r2,r2,4
 100fb58:	194000cc 	andi	r5,r3,3
 100fb5c:	2800021e 	bne	r5,zero,100fb68 <__lo0bits+0x68>
 100fb60:	1806d0ba 	srli	r3,r3,2
 100fb64:	10800084 	addi	r2,r2,2
 100fb68:	1940004c 	andi	r5,r3,1
 100fb6c:	2800081e 	bne	r5,zero,100fb90 <__lo0bits+0x90>
 100fb70:	1806d07a 	srli	r3,r3,1
 100fb74:	1800051e 	bne	r3,zero,100fb8c <__lo0bits+0x8c>
 100fb78:	00800804 	movi	r2,32
 100fb7c:	f800283a 	ret
 100fb80:	1806d43a 	srli	r3,r3,16
 100fb84:	00800404 	movi	r2,16
 100fb88:	003feb06 	br	100fb38 <__alt_data_end+0xff80fb38>
 100fb8c:	10800044 	addi	r2,r2,1
 100fb90:	20c00015 	stw	r3,0(r4)
 100fb94:	f800283a 	ret
 100fb98:	0005883a 	mov	r2,zero
 100fb9c:	f800283a 	ret
 100fba0:	1806d07a 	srli	r3,r3,1
 100fba4:	00800044 	movi	r2,1
 100fba8:	20c00015 	stw	r3,0(r4)
 100fbac:	f800283a 	ret

0100fbb0 <__i2b>:
 100fbb0:	defffd04 	addi	sp,sp,-12
 100fbb4:	dc000015 	stw	r16,0(sp)
 100fbb8:	04000044 	movi	r16,1
 100fbbc:	dc400115 	stw	r17,4(sp)
 100fbc0:	2823883a 	mov	r17,r5
 100fbc4:	800b883a 	mov	r5,r16
 100fbc8:	dfc00215 	stw	ra,8(sp)
 100fbcc:	100f7b00 	call	100f7b0 <_Balloc>
 100fbd0:	14400515 	stw	r17,20(r2)
 100fbd4:	14000415 	stw	r16,16(r2)
 100fbd8:	dfc00217 	ldw	ra,8(sp)
 100fbdc:	dc400117 	ldw	r17,4(sp)
 100fbe0:	dc000017 	ldw	r16,0(sp)
 100fbe4:	dec00304 	addi	sp,sp,12
 100fbe8:	f800283a 	ret

0100fbec <__multiply>:
 100fbec:	defffa04 	addi	sp,sp,-24
 100fbf0:	dcc00315 	stw	r19,12(sp)
 100fbf4:	dc800215 	stw	r18,8(sp)
 100fbf8:	2cc00417 	ldw	r19,16(r5)
 100fbfc:	34800417 	ldw	r18,16(r6)
 100fc00:	dd000415 	stw	r20,16(sp)
 100fc04:	dc400115 	stw	r17,4(sp)
 100fc08:	dfc00515 	stw	ra,20(sp)
 100fc0c:	dc000015 	stw	r16,0(sp)
 100fc10:	2829883a 	mov	r20,r5
 100fc14:	3023883a 	mov	r17,r6
 100fc18:	9c807016 	blt	r19,r18,100fddc <__multiply+0x1f0>
 100fc1c:	9005883a 	mov	r2,r18
 100fc20:	9825883a 	mov	r18,r19
 100fc24:	1027883a 	mov	r19,r2
 100fc28:	a0800217 	ldw	r2,8(r20)
 100fc2c:	94e1883a 	add	r16,r18,r19
 100fc30:	a1400117 	ldw	r5,4(r20)
 100fc34:	1400010e 	bge	r2,r16,100fc3c <__multiply+0x50>
 100fc38:	29400044 	addi	r5,r5,1
 100fc3c:	100f7b00 	call	100f7b0 <_Balloc>
 100fc40:	8417883a 	add	r11,r16,r16
 100fc44:	13000504 	addi	r12,r2,20
 100fc48:	5ad7883a 	add	r11,r11,r11
 100fc4c:	62d7883a 	add	r11,r12,r11
 100fc50:	6007883a 	mov	r3,r12
 100fc54:	62c0032e 	bgeu	r12,r11,100fc64 <__multiply+0x78>
 100fc58:	18000015 	stw	zero,0(r3)
 100fc5c:	18c00104 	addi	r3,r3,4
 100fc60:	1afffd36 	bltu	r3,r11,100fc58 <__alt_data_end+0xff80fc58>
 100fc64:	9ce7883a 	add	r19,r19,r19
 100fc68:	94a5883a 	add	r18,r18,r18
 100fc6c:	89800504 	addi	r6,r17,20
 100fc70:	9ce7883a 	add	r19,r19,r19
 100fc74:	a3800504 	addi	r14,r20,20
 100fc78:	94a5883a 	add	r18,r18,r18
 100fc7c:	34db883a 	add	r13,r6,r19
 100fc80:	7495883a 	add	r10,r14,r18
 100fc84:	3340422e 	bgeu	r6,r13,100fd90 <__multiply+0x1a4>
 100fc88:	34400017 	ldw	r17,0(r6)
 100fc8c:	8cbfffcc 	andi	r18,r17,65535
 100fc90:	90001b26 	beq	r18,zero,100fd00 <__multiply+0x114>
 100fc94:	6013883a 	mov	r9,r12
 100fc98:	7023883a 	mov	r17,r14
 100fc9c:	0011883a 	mov	r8,zero
 100fca0:	88c00017 	ldw	r3,0(r17)
 100fca4:	4bc00017 	ldw	r15,0(r9)
 100fca8:	8c400104 	addi	r17,r17,4
 100fcac:	19ffffcc 	andi	r7,r3,65535
 100fcb0:	3c8f383a 	mul	r7,r7,r18
 100fcb4:	1808d43a 	srli	r4,r3,16
 100fcb8:	797fffcc 	andi	r5,r15,65535
 100fcbc:	29cb883a 	add	r5,r5,r7
 100fcc0:	2a0b883a 	add	r5,r5,r8
 100fcc4:	2489383a 	mul	r4,r4,r18
 100fcc8:	7806d43a 	srli	r3,r15,16
 100fccc:	2810d43a 	srli	r8,r5,16
 100fcd0:	297fffcc 	andi	r5,r5,65535
 100fcd4:	1907883a 	add	r3,r3,r4
 100fcd8:	1a07883a 	add	r3,r3,r8
 100fcdc:	1808943a 	slli	r4,r3,16
 100fce0:	480f883a 	mov	r7,r9
 100fce4:	1810d43a 	srli	r8,r3,16
 100fce8:	214ab03a 	or	r5,r4,r5
 100fcec:	49400015 	stw	r5,0(r9)
 100fcf0:	4a400104 	addi	r9,r9,4
 100fcf4:	8abfea36 	bltu	r17,r10,100fca0 <__alt_data_end+0xff80fca0>
 100fcf8:	3a000115 	stw	r8,4(r7)
 100fcfc:	34400017 	ldw	r17,0(r6)
 100fd00:	8822d43a 	srli	r17,r17,16
 100fd04:	88001f26 	beq	r17,zero,100fd84 <__multiply+0x198>
 100fd08:	60c00017 	ldw	r3,0(r12)
 100fd0c:	7013883a 	mov	r9,r14
 100fd10:	601f883a 	mov	r15,r12
 100fd14:	1811883a 	mov	r8,r3
 100fd18:	6027883a 	mov	r19,r12
 100fd1c:	000f883a 	mov	r7,zero
 100fd20:	00000106 	br	100fd28 <__multiply+0x13c>
 100fd24:	9027883a 	mov	r19,r18
 100fd28:	4940000b 	ldhu	r5,0(r9)
 100fd2c:	4010d43a 	srli	r8,r8,16
 100fd30:	193fffcc 	andi	r4,r3,65535
 100fd34:	2c4b383a 	mul	r5,r5,r17
 100fd38:	7bc00104 	addi	r15,r15,4
 100fd3c:	4a400104 	addi	r9,r9,4
 100fd40:	2a0b883a 	add	r5,r5,r8
 100fd44:	29cb883a 	add	r5,r5,r7
 100fd48:	2806943a 	slli	r3,r5,16
 100fd4c:	9c800104 	addi	r18,r19,4
 100fd50:	280ad43a 	srli	r5,r5,16
 100fd54:	1908b03a 	or	r4,r3,r4
 100fd58:	793fff15 	stw	r4,-4(r15)
 100fd5c:	48ffff17 	ldw	r3,-4(r9)
 100fd60:	92000017 	ldw	r8,0(r18)
 100fd64:	1806d43a 	srli	r3,r3,16
 100fd68:	413fffcc 	andi	r4,r8,65535
 100fd6c:	1c47383a 	mul	r3,r3,r17
 100fd70:	1907883a 	add	r3,r3,r4
 100fd74:	1947883a 	add	r3,r3,r5
 100fd78:	180ed43a 	srli	r7,r3,16
 100fd7c:	4abfe936 	bltu	r9,r10,100fd24 <__alt_data_end+0xff80fd24>
 100fd80:	98c00115 	stw	r3,4(r19)
 100fd84:	31800104 	addi	r6,r6,4
 100fd88:	63000104 	addi	r12,r12,4
 100fd8c:	337fbe36 	bltu	r6,r13,100fc88 <__alt_data_end+0xff80fc88>
 100fd90:	0400090e 	bge	zero,r16,100fdb8 <__multiply+0x1cc>
 100fd94:	58ffff17 	ldw	r3,-4(r11)
 100fd98:	5affff04 	addi	r11,r11,-4
 100fd9c:	18000326 	beq	r3,zero,100fdac <__multiply+0x1c0>
 100fda0:	00000506 	br	100fdb8 <__multiply+0x1cc>
 100fda4:	58c00017 	ldw	r3,0(r11)
 100fda8:	1800031e 	bne	r3,zero,100fdb8 <__multiply+0x1cc>
 100fdac:	843fffc4 	addi	r16,r16,-1
 100fdb0:	5affff04 	addi	r11,r11,-4
 100fdb4:	803ffb1e 	bne	r16,zero,100fda4 <__alt_data_end+0xff80fda4>
 100fdb8:	14000415 	stw	r16,16(r2)
 100fdbc:	dfc00517 	ldw	ra,20(sp)
 100fdc0:	dd000417 	ldw	r20,16(sp)
 100fdc4:	dcc00317 	ldw	r19,12(sp)
 100fdc8:	dc800217 	ldw	r18,8(sp)
 100fdcc:	dc400117 	ldw	r17,4(sp)
 100fdd0:	dc000017 	ldw	r16,0(sp)
 100fdd4:	dec00604 	addi	sp,sp,24
 100fdd8:	f800283a 	ret
 100fddc:	3029883a 	mov	r20,r6
 100fde0:	2823883a 	mov	r17,r5
 100fde4:	003f9006 	br	100fc28 <__alt_data_end+0xff80fc28>

0100fde8 <__pow5mult>:
 100fde8:	defffa04 	addi	sp,sp,-24
 100fdec:	dcc00315 	stw	r19,12(sp)
 100fdf0:	dc800215 	stw	r18,8(sp)
 100fdf4:	dc000015 	stw	r16,0(sp)
 100fdf8:	dfc00515 	stw	ra,20(sp)
 100fdfc:	dd000415 	stw	r20,16(sp)
 100fe00:	dc400115 	stw	r17,4(sp)
 100fe04:	308000cc 	andi	r2,r6,3
 100fe08:	3021883a 	mov	r16,r6
 100fe0c:	2027883a 	mov	r19,r4
 100fe10:	2825883a 	mov	r18,r5
 100fe14:	10002e1e 	bne	r2,zero,100fed0 <__pow5mult+0xe8>
 100fe18:	8021d0ba 	srai	r16,r16,2
 100fe1c:	80001a26 	beq	r16,zero,100fe88 <__pow5mult+0xa0>
 100fe20:	9c401217 	ldw	r17,72(r19)
 100fe24:	8800061e 	bne	r17,zero,100fe40 <__pow5mult+0x58>
 100fe28:	00003406 	br	100fefc <__pow5mult+0x114>
 100fe2c:	8021d07a 	srai	r16,r16,1
 100fe30:	80001526 	beq	r16,zero,100fe88 <__pow5mult+0xa0>
 100fe34:	88800017 	ldw	r2,0(r17)
 100fe38:	10001c26 	beq	r2,zero,100feac <__pow5mult+0xc4>
 100fe3c:	1023883a 	mov	r17,r2
 100fe40:	80c0004c 	andi	r3,r16,1
 100fe44:	183ff926 	beq	r3,zero,100fe2c <__alt_data_end+0xff80fe2c>
 100fe48:	900b883a 	mov	r5,r18
 100fe4c:	880d883a 	mov	r6,r17
 100fe50:	9809883a 	mov	r4,r19
 100fe54:	100fbec0 	call	100fbec <__multiply>
 100fe58:	90001b26 	beq	r18,zero,100fec8 <__pow5mult+0xe0>
 100fe5c:	91c00117 	ldw	r7,4(r18)
 100fe60:	98c01317 	ldw	r3,76(r19)
 100fe64:	8021d07a 	srai	r16,r16,1
 100fe68:	39cf883a 	add	r7,r7,r7
 100fe6c:	39cf883a 	add	r7,r7,r7
 100fe70:	19c7883a 	add	r3,r3,r7
 100fe74:	19000017 	ldw	r4,0(r3)
 100fe78:	91000015 	stw	r4,0(r18)
 100fe7c:	1c800015 	stw	r18,0(r3)
 100fe80:	1025883a 	mov	r18,r2
 100fe84:	803feb1e 	bne	r16,zero,100fe34 <__alt_data_end+0xff80fe34>
 100fe88:	9005883a 	mov	r2,r18
 100fe8c:	dfc00517 	ldw	ra,20(sp)
 100fe90:	dd000417 	ldw	r20,16(sp)
 100fe94:	dcc00317 	ldw	r19,12(sp)
 100fe98:	dc800217 	ldw	r18,8(sp)
 100fe9c:	dc400117 	ldw	r17,4(sp)
 100fea0:	dc000017 	ldw	r16,0(sp)
 100fea4:	dec00604 	addi	sp,sp,24
 100fea8:	f800283a 	ret
 100feac:	9809883a 	mov	r4,r19
 100feb0:	880b883a 	mov	r5,r17
 100feb4:	880d883a 	mov	r6,r17
 100feb8:	100fbec0 	call	100fbec <__multiply>
 100febc:	88800015 	stw	r2,0(r17)
 100fec0:	10000015 	stw	zero,0(r2)
 100fec4:	003fdd06 	br	100fe3c <__alt_data_end+0xff80fe3c>
 100fec8:	1025883a 	mov	r18,r2
 100fecc:	003fd706 	br	100fe2c <__alt_data_end+0xff80fe2c>
 100fed0:	10bfffc4 	addi	r2,r2,-1
 100fed4:	1085883a 	add	r2,r2,r2
 100fed8:	00c040b4 	movhi	r3,258
 100fedc:	18e5fa04 	addi	r3,r3,-26648
 100fee0:	1085883a 	add	r2,r2,r2
 100fee4:	1885883a 	add	r2,r3,r2
 100fee8:	11800017 	ldw	r6,0(r2)
 100feec:	000f883a 	mov	r7,zero
 100fef0:	100f8800 	call	100f880 <__multadd>
 100fef4:	1025883a 	mov	r18,r2
 100fef8:	003fc706 	br	100fe18 <__alt_data_end+0xff80fe18>
 100fefc:	05000044 	movi	r20,1
 100ff00:	9809883a 	mov	r4,r19
 100ff04:	a00b883a 	mov	r5,r20
 100ff08:	100f7b00 	call	100f7b0 <_Balloc>
 100ff0c:	1023883a 	mov	r17,r2
 100ff10:	00809c44 	movi	r2,625
 100ff14:	88800515 	stw	r2,20(r17)
 100ff18:	8d000415 	stw	r20,16(r17)
 100ff1c:	9c401215 	stw	r17,72(r19)
 100ff20:	88000015 	stw	zero,0(r17)
 100ff24:	003fc606 	br	100fe40 <__alt_data_end+0xff80fe40>

0100ff28 <__lshift>:
 100ff28:	defff904 	addi	sp,sp,-28
 100ff2c:	dd000415 	stw	r20,16(sp)
 100ff30:	dcc00315 	stw	r19,12(sp)
 100ff34:	3029d17a 	srai	r20,r6,5
 100ff38:	2cc00417 	ldw	r19,16(r5)
 100ff3c:	28800217 	ldw	r2,8(r5)
 100ff40:	dd400515 	stw	r21,20(sp)
 100ff44:	a4e7883a 	add	r19,r20,r19
 100ff48:	dc800215 	stw	r18,8(sp)
 100ff4c:	dc400115 	stw	r17,4(sp)
 100ff50:	dc000015 	stw	r16,0(sp)
 100ff54:	dfc00615 	stw	ra,24(sp)
 100ff58:	9c000044 	addi	r16,r19,1
 100ff5c:	2823883a 	mov	r17,r5
 100ff60:	302b883a 	mov	r21,r6
 100ff64:	2025883a 	mov	r18,r4
 100ff68:	29400117 	ldw	r5,4(r5)
 100ff6c:	1400030e 	bge	r2,r16,100ff7c <__lshift+0x54>
 100ff70:	1085883a 	add	r2,r2,r2
 100ff74:	29400044 	addi	r5,r5,1
 100ff78:	143ffd16 	blt	r2,r16,100ff70 <__alt_data_end+0xff80ff70>
 100ff7c:	9009883a 	mov	r4,r18
 100ff80:	100f7b00 	call	100f7b0 <_Balloc>
 100ff84:	11c00504 	addi	r7,r2,20
 100ff88:	0500090e 	bge	zero,r20,100ffb0 <__lshift+0x88>
 100ff8c:	3811883a 	mov	r8,r7
 100ff90:	0007883a 	mov	r3,zero
 100ff94:	40000015 	stw	zero,0(r8)
 100ff98:	18c00044 	addi	r3,r3,1
 100ff9c:	42000104 	addi	r8,r8,4
 100ffa0:	1d3ffc1e 	bne	r3,r20,100ff94 <__alt_data_end+0xff80ff94>
 100ffa4:	18c7883a 	add	r3,r3,r3
 100ffa8:	18c7883a 	add	r3,r3,r3
 100ffac:	38cf883a 	add	r7,r7,r3
 100ffb0:	89000417 	ldw	r4,16(r17)
 100ffb4:	88c00504 	addi	r3,r17,20
 100ffb8:	a98007cc 	andi	r6,r21,31
 100ffbc:	2109883a 	add	r4,r4,r4
 100ffc0:	2109883a 	add	r4,r4,r4
 100ffc4:	1909883a 	add	r4,r3,r4
 100ffc8:	30002326 	beq	r6,zero,1010058 <__lshift+0x130>
 100ffcc:	01400804 	movi	r5,32
 100ffd0:	298bc83a 	sub	r5,r5,r6
 100ffd4:	0013883a 	mov	r9,zero
 100ffd8:	1a000017 	ldw	r8,0(r3)
 100ffdc:	3815883a 	mov	r10,r7
 100ffe0:	39c00104 	addi	r7,r7,4
 100ffe4:	4190983a 	sll	r8,r8,r6
 100ffe8:	18c00104 	addi	r3,r3,4
 100ffec:	4a10b03a 	or	r8,r9,r8
 100fff0:	3a3fff15 	stw	r8,-4(r7)
 100fff4:	1a3fff17 	ldw	r8,-4(r3)
 100fff8:	4152d83a 	srl	r9,r8,r5
 100fffc:	193ff636 	bltu	r3,r4,100ffd8 <__alt_data_end+0xff80ffd8>
 1010000:	52400115 	stw	r9,4(r10)
 1010004:	48000126 	beq	r9,zero,101000c <__lshift+0xe4>
 1010008:	9c000084 	addi	r16,r19,2
 101000c:	89000117 	ldw	r4,4(r17)
 1010010:	90c01317 	ldw	r3,76(r18)
 1010014:	843fffc4 	addi	r16,r16,-1
 1010018:	2109883a 	add	r4,r4,r4
 101001c:	2109883a 	add	r4,r4,r4
 1010020:	1907883a 	add	r3,r3,r4
 1010024:	19000017 	ldw	r4,0(r3)
 1010028:	14000415 	stw	r16,16(r2)
 101002c:	89000015 	stw	r4,0(r17)
 1010030:	1c400015 	stw	r17,0(r3)
 1010034:	dfc00617 	ldw	ra,24(sp)
 1010038:	dd400517 	ldw	r21,20(sp)
 101003c:	dd000417 	ldw	r20,16(sp)
 1010040:	dcc00317 	ldw	r19,12(sp)
 1010044:	dc800217 	ldw	r18,8(sp)
 1010048:	dc400117 	ldw	r17,4(sp)
 101004c:	dc000017 	ldw	r16,0(sp)
 1010050:	dec00704 	addi	sp,sp,28
 1010054:	f800283a 	ret
 1010058:	19400017 	ldw	r5,0(r3)
 101005c:	39c00104 	addi	r7,r7,4
 1010060:	18c00104 	addi	r3,r3,4
 1010064:	397fff15 	stw	r5,-4(r7)
 1010068:	193ffb36 	bltu	r3,r4,1010058 <__alt_data_end+0xff810058>
 101006c:	003fe706 	br	101000c <__alt_data_end+0xff81000c>

01010070 <__mcmp>:
 1010070:	20800417 	ldw	r2,16(r4)
 1010074:	28c00417 	ldw	r3,16(r5)
 1010078:	10c5c83a 	sub	r2,r2,r3
 101007c:	1000111e 	bne	r2,zero,10100c4 <__mcmp+0x54>
 1010080:	18c7883a 	add	r3,r3,r3
 1010084:	18c7883a 	add	r3,r3,r3
 1010088:	21000504 	addi	r4,r4,20
 101008c:	29400504 	addi	r5,r5,20
 1010090:	20c5883a 	add	r2,r4,r3
 1010094:	28cb883a 	add	r5,r5,r3
 1010098:	00000106 	br	10100a0 <__mcmp+0x30>
 101009c:	20800a2e 	bgeu	r4,r2,10100c8 <__mcmp+0x58>
 10100a0:	10bfff04 	addi	r2,r2,-4
 10100a4:	297fff04 	addi	r5,r5,-4
 10100a8:	11800017 	ldw	r6,0(r2)
 10100ac:	28c00017 	ldw	r3,0(r5)
 10100b0:	30fffa26 	beq	r6,r3,101009c <__alt_data_end+0xff81009c>
 10100b4:	30c00236 	bltu	r6,r3,10100c0 <__mcmp+0x50>
 10100b8:	00800044 	movi	r2,1
 10100bc:	f800283a 	ret
 10100c0:	00bfffc4 	movi	r2,-1
 10100c4:	f800283a 	ret
 10100c8:	0005883a 	mov	r2,zero
 10100cc:	f800283a 	ret

010100d0 <__mdiff>:
 10100d0:	defffb04 	addi	sp,sp,-20
 10100d4:	dc000015 	stw	r16,0(sp)
 10100d8:	2821883a 	mov	r16,r5
 10100dc:	dcc00315 	stw	r19,12(sp)
 10100e0:	300b883a 	mov	r5,r6
 10100e4:	2027883a 	mov	r19,r4
 10100e8:	8009883a 	mov	r4,r16
 10100ec:	dc800215 	stw	r18,8(sp)
 10100f0:	dfc00415 	stw	ra,16(sp)
 10100f4:	dc400115 	stw	r17,4(sp)
 10100f8:	3025883a 	mov	r18,r6
 10100fc:	10100700 	call	1010070 <__mcmp>
 1010100:	10005226 	beq	r2,zero,101024c <__mdiff+0x17c>
 1010104:	10004c16 	blt	r2,zero,1010238 <__mdiff+0x168>
 1010108:	0023883a 	mov	r17,zero
 101010c:	81400117 	ldw	r5,4(r16)
 1010110:	9809883a 	mov	r4,r19
 1010114:	100f7b00 	call	100f7b0 <_Balloc>
 1010118:	83400417 	ldw	r13,16(r16)
 101011c:	93800417 	ldw	r14,16(r18)
 1010120:	81000504 	addi	r4,r16,20
 1010124:	6b59883a 	add	r12,r13,r13
 1010128:	739d883a 	add	r14,r14,r14
 101012c:	6319883a 	add	r12,r12,r12
 1010130:	91800504 	addi	r6,r18,20
 1010134:	739d883a 	add	r14,r14,r14
 1010138:	14400315 	stw	r17,12(r2)
 101013c:	2319883a 	add	r12,r4,r12
 1010140:	339d883a 	add	r14,r6,r14
 1010144:	12400504 	addi	r9,r2,20
 1010148:	0007883a 	mov	r3,zero
 101014c:	22000017 	ldw	r8,0(r4)
 1010150:	32800017 	ldw	r10,0(r6)
 1010154:	4ac00104 	addi	r11,r9,4
 1010158:	41ffffcc 	andi	r7,r8,65535
 101015c:	38c7883a 	add	r3,r7,r3
 1010160:	51ffffcc 	andi	r7,r10,65535
 1010164:	19cfc83a 	sub	r7,r3,r7
 1010168:	4010d43a 	srli	r8,r8,16
 101016c:	5014d43a 	srli	r10,r10,16
 1010170:	3807d43a 	srai	r3,r7,16
 1010174:	39ffffcc 	andi	r7,r7,65535
 1010178:	4291c83a 	sub	r8,r8,r10
 101017c:	40c7883a 	add	r3,r8,r3
 1010180:	1810943a 	slli	r8,r3,16
 1010184:	31800104 	addi	r6,r6,4
 1010188:	21000104 	addi	r4,r4,4
 101018c:	41ceb03a 	or	r7,r8,r7
 1010190:	49c00015 	stw	r7,0(r9)
 1010194:	1807d43a 	srai	r3,r3,16
 1010198:	580b883a 	mov	r5,r11
 101019c:	5813883a 	mov	r9,r11
 10101a0:	33bfea36 	bltu	r6,r14,101014c <__alt_data_end+0xff81014c>
 10101a4:	2011883a 	mov	r8,r4
 10101a8:	2300152e 	bgeu	r4,r12,1010200 <__mdiff+0x130>
 10101ac:	21400017 	ldw	r5,0(r4)
 10101b0:	4a400104 	addi	r9,r9,4
 10101b4:	21000104 	addi	r4,r4,4
 10101b8:	29ffffcc 	andi	r7,r5,65535
 10101bc:	38c7883a 	add	r3,r7,r3
 10101c0:	280ad43a 	srli	r5,r5,16
 10101c4:	180dd43a 	srai	r6,r3,16
 10101c8:	19ffffcc 	andi	r7,r3,65535
 10101cc:	3147883a 	add	r3,r6,r5
 10101d0:	180a943a 	slli	r5,r3,16
 10101d4:	1807d43a 	srai	r3,r3,16
 10101d8:	29ceb03a 	or	r7,r5,r7
 10101dc:	49ffff15 	stw	r7,-4(r9)
 10101e0:	233ff236 	bltu	r4,r12,10101ac <__alt_data_end+0xff8101ac>
 10101e4:	0206303a 	nor	r3,zero,r8
 10101e8:	1b07883a 	add	r3,r3,r12
 10101ec:	1806d0ba 	srli	r3,r3,2
 10101f0:	18c00044 	addi	r3,r3,1
 10101f4:	18c7883a 	add	r3,r3,r3
 10101f8:	18c7883a 	add	r3,r3,r3
 10101fc:	58cb883a 	add	r5,r11,r3
 1010200:	28ffff04 	addi	r3,r5,-4
 1010204:	3800041e 	bne	r7,zero,1010218 <__mdiff+0x148>
 1010208:	18ffff04 	addi	r3,r3,-4
 101020c:	19000017 	ldw	r4,0(r3)
 1010210:	6b7fffc4 	addi	r13,r13,-1
 1010214:	203ffc26 	beq	r4,zero,1010208 <__alt_data_end+0xff810208>
 1010218:	13400415 	stw	r13,16(r2)
 101021c:	dfc00417 	ldw	ra,16(sp)
 1010220:	dcc00317 	ldw	r19,12(sp)
 1010224:	dc800217 	ldw	r18,8(sp)
 1010228:	dc400117 	ldw	r17,4(sp)
 101022c:	dc000017 	ldw	r16,0(sp)
 1010230:	dec00504 	addi	sp,sp,20
 1010234:	f800283a 	ret
 1010238:	8005883a 	mov	r2,r16
 101023c:	04400044 	movi	r17,1
 1010240:	9021883a 	mov	r16,r18
 1010244:	1025883a 	mov	r18,r2
 1010248:	003fb006 	br	101010c <__alt_data_end+0xff81010c>
 101024c:	9809883a 	mov	r4,r19
 1010250:	000b883a 	mov	r5,zero
 1010254:	100f7b00 	call	100f7b0 <_Balloc>
 1010258:	00c00044 	movi	r3,1
 101025c:	10c00415 	stw	r3,16(r2)
 1010260:	10000515 	stw	zero,20(r2)
 1010264:	003fed06 	br	101021c <__alt_data_end+0xff81021c>

01010268 <__ulp>:
 1010268:	295ffc2c 	andhi	r5,r5,32752
 101026c:	00bf3034 	movhi	r2,64704
 1010270:	2887883a 	add	r3,r5,r2
 1010274:	00c0020e 	bge	zero,r3,1010280 <__ulp+0x18>
 1010278:	0005883a 	mov	r2,zero
 101027c:	f800283a 	ret
 1010280:	00c7c83a 	sub	r3,zero,r3
 1010284:	180bd53a 	srai	r5,r3,20
 1010288:	008004c4 	movi	r2,19
 101028c:	11400a0e 	bge	r2,r5,10102b8 <__ulp+0x50>
 1010290:	00800c84 	movi	r2,50
 1010294:	0007883a 	mov	r3,zero
 1010298:	11400516 	blt	r2,r5,10102b0 <__ulp+0x48>
 101029c:	00800cc4 	movi	r2,51
 10102a0:	114bc83a 	sub	r5,r2,r5
 10102a4:	00800044 	movi	r2,1
 10102a8:	1144983a 	sll	r2,r2,r5
 10102ac:	f800283a 	ret
 10102b0:	00800044 	movi	r2,1
 10102b4:	f800283a 	ret
 10102b8:	00800234 	movhi	r2,8
 10102bc:	1147d83a 	sra	r3,r2,r5
 10102c0:	0005883a 	mov	r2,zero
 10102c4:	f800283a 	ret

010102c8 <__b2d>:
 10102c8:	defffa04 	addi	sp,sp,-24
 10102cc:	dc000015 	stw	r16,0(sp)
 10102d0:	24000417 	ldw	r16,16(r4)
 10102d4:	dc400115 	stw	r17,4(sp)
 10102d8:	24400504 	addi	r17,r4,20
 10102dc:	8421883a 	add	r16,r16,r16
 10102e0:	8421883a 	add	r16,r16,r16
 10102e4:	8c21883a 	add	r16,r17,r16
 10102e8:	dc800215 	stw	r18,8(sp)
 10102ec:	84bfff17 	ldw	r18,-4(r16)
 10102f0:	dd000415 	stw	r20,16(sp)
 10102f4:	dcc00315 	stw	r19,12(sp)
 10102f8:	9009883a 	mov	r4,r18
 10102fc:	2829883a 	mov	r20,r5
 1010300:	dfc00515 	stw	ra,20(sp)
 1010304:	100fa980 	call	100fa98 <__hi0bits>
 1010308:	00c00804 	movi	r3,32
 101030c:	1887c83a 	sub	r3,r3,r2
 1010310:	a0c00015 	stw	r3,0(r20)
 1010314:	00c00284 	movi	r3,10
 1010318:	84ffff04 	addi	r19,r16,-4
 101031c:	18801216 	blt	r3,r2,1010368 <__b2d+0xa0>
 1010320:	014002c4 	movi	r5,11
 1010324:	2889c83a 	sub	r4,r5,r2
 1010328:	9106d83a 	srl	r3,r18,r4
 101032c:	18cffc34 	orhi	r3,r3,16368
 1010330:	8cc0282e 	bgeu	r17,r19,10103d4 <__b2d+0x10c>
 1010334:	817ffe17 	ldw	r5,-8(r16)
 1010338:	290ad83a 	srl	r5,r5,r4
 101033c:	10800544 	addi	r2,r2,21
 1010340:	9084983a 	sll	r2,r18,r2
 1010344:	2884b03a 	or	r2,r5,r2
 1010348:	dfc00517 	ldw	ra,20(sp)
 101034c:	dd000417 	ldw	r20,16(sp)
 1010350:	dcc00317 	ldw	r19,12(sp)
 1010354:	dc800217 	ldw	r18,8(sp)
 1010358:	dc400117 	ldw	r17,4(sp)
 101035c:	dc000017 	ldw	r16,0(sp)
 1010360:	dec00604 	addi	sp,sp,24
 1010364:	f800283a 	ret
 1010368:	113ffd44 	addi	r4,r2,-11
 101036c:	8cc00f2e 	bgeu	r17,r19,10103ac <__b2d+0xe4>
 1010370:	81bffe04 	addi	r6,r16,-8
 1010374:	817ffe17 	ldw	r5,-8(r16)
 1010378:	20001326 	beq	r4,zero,10103c8 <__b2d+0x100>
 101037c:	00c00ac4 	movi	r3,43
 1010380:	1885c83a 	sub	r2,r3,r2
 1010384:	2886d83a 	srl	r3,r5,r2
 1010388:	9124983a 	sll	r18,r18,r4
 101038c:	90e4b03a 	or	r18,r18,r3
 1010390:	90cffc34 	orhi	r3,r18,16368
 1010394:	8980112e 	bgeu	r17,r6,10103dc <__b2d+0x114>
 1010398:	81bffd17 	ldw	r6,-12(r16)
 101039c:	308cd83a 	srl	r6,r6,r2
 10103a0:	2904983a 	sll	r2,r5,r4
 10103a4:	1184b03a 	or	r2,r2,r6
 10103a8:	003fe706 	br	1010348 <__alt_data_end+0xff810348>
 10103ac:	20000526 	beq	r4,zero,10103c4 <__b2d+0xfc>
 10103b0:	9124983a 	sll	r18,r18,r4
 10103b4:	000d883a 	mov	r6,zero
 10103b8:	000b883a 	mov	r5,zero
 10103bc:	90cffc34 	orhi	r3,r18,16368
 10103c0:	003ff706 	br	10103a0 <__alt_data_end+0xff8103a0>
 10103c4:	000b883a 	mov	r5,zero
 10103c8:	90cffc34 	orhi	r3,r18,16368
 10103cc:	2805883a 	mov	r2,r5
 10103d0:	003fdd06 	br	1010348 <__alt_data_end+0xff810348>
 10103d4:	000b883a 	mov	r5,zero
 10103d8:	003fd806 	br	101033c <__alt_data_end+0xff81033c>
 10103dc:	000d883a 	mov	r6,zero
 10103e0:	003fef06 	br	10103a0 <__alt_data_end+0xff8103a0>

010103e4 <__d2b>:
 10103e4:	defff704 	addi	sp,sp,-36
 10103e8:	dc000215 	stw	r16,8(sp)
 10103ec:	3021883a 	mov	r16,r6
 10103f0:	dc400315 	stw	r17,12(sp)
 10103f4:	8022907a 	slli	r17,r16,1
 10103f8:	dd400715 	stw	r21,28(sp)
 10103fc:	282b883a 	mov	r21,r5
 1010400:	01400044 	movi	r5,1
 1010404:	dd000615 	stw	r20,24(sp)
 1010408:	dcc00515 	stw	r19,20(sp)
 101040c:	dc800415 	stw	r18,16(sp)
 1010410:	dfc00815 	stw	ra,32(sp)
 1010414:	3829883a 	mov	r20,r7
 1010418:	dc800917 	ldw	r18,36(sp)
 101041c:	8822d57a 	srli	r17,r17,21
 1010420:	100f7b00 	call	100f7b0 <_Balloc>
 1010424:	1027883a 	mov	r19,r2
 1010428:	00800434 	movhi	r2,16
 101042c:	10bfffc4 	addi	r2,r2,-1
 1010430:	808c703a 	and	r6,r16,r2
 1010434:	88000126 	beq	r17,zero,101043c <__d2b+0x58>
 1010438:	31800434 	orhi	r6,r6,16
 101043c:	d9800015 	stw	r6,0(sp)
 1010440:	a8001f26 	beq	r21,zero,10104c0 <__d2b+0xdc>
 1010444:	d9000104 	addi	r4,sp,4
 1010448:	dd400115 	stw	r21,4(sp)
 101044c:	100fb000 	call	100fb00 <__lo0bits>
 1010450:	d8c00017 	ldw	r3,0(sp)
 1010454:	1000291e 	bne	r2,zero,10104fc <__d2b+0x118>
 1010458:	d9000117 	ldw	r4,4(sp)
 101045c:	99000515 	stw	r4,20(r19)
 1010460:	1820c03a 	cmpne	r16,r3,zero
 1010464:	84000044 	addi	r16,r16,1
 1010468:	98c00615 	stw	r3,24(r19)
 101046c:	9c000415 	stw	r16,16(r19)
 1010470:	88001b1e 	bne	r17,zero,10104e0 <__d2b+0xfc>
 1010474:	800690ba 	slli	r3,r16,2
 1010478:	10bef384 	addi	r2,r2,-1074
 101047c:	a0800015 	stw	r2,0(r20)
 1010480:	98c5883a 	add	r2,r19,r3
 1010484:	11000417 	ldw	r4,16(r2)
 1010488:	8020917a 	slli	r16,r16,5
 101048c:	100fa980 	call	100fa98 <__hi0bits>
 1010490:	8085c83a 	sub	r2,r16,r2
 1010494:	90800015 	stw	r2,0(r18)
 1010498:	9805883a 	mov	r2,r19
 101049c:	dfc00817 	ldw	ra,32(sp)
 10104a0:	dd400717 	ldw	r21,28(sp)
 10104a4:	dd000617 	ldw	r20,24(sp)
 10104a8:	dcc00517 	ldw	r19,20(sp)
 10104ac:	dc800417 	ldw	r18,16(sp)
 10104b0:	dc400317 	ldw	r17,12(sp)
 10104b4:	dc000217 	ldw	r16,8(sp)
 10104b8:	dec00904 	addi	sp,sp,36
 10104bc:	f800283a 	ret
 10104c0:	d809883a 	mov	r4,sp
 10104c4:	100fb000 	call	100fb00 <__lo0bits>
 10104c8:	d8c00017 	ldw	r3,0(sp)
 10104cc:	04000044 	movi	r16,1
 10104d0:	9c000415 	stw	r16,16(r19)
 10104d4:	98c00515 	stw	r3,20(r19)
 10104d8:	10800804 	addi	r2,r2,32
 10104dc:	883fe526 	beq	r17,zero,1010474 <__alt_data_end+0xff810474>
 10104e0:	8c7ef344 	addi	r17,r17,-1075
 10104e4:	88a3883a 	add	r17,r17,r2
 10104e8:	00c00d44 	movi	r3,53
 10104ec:	a4400015 	stw	r17,0(r20)
 10104f0:	1885c83a 	sub	r2,r3,r2
 10104f4:	90800015 	stw	r2,0(r18)
 10104f8:	003fe706 	br	1010498 <__alt_data_end+0xff810498>
 10104fc:	01000804 	movi	r4,32
 1010500:	2089c83a 	sub	r4,r4,r2
 1010504:	1908983a 	sll	r4,r3,r4
 1010508:	d9400117 	ldw	r5,4(sp)
 101050c:	1886d83a 	srl	r3,r3,r2
 1010510:	2148b03a 	or	r4,r4,r5
 1010514:	99000515 	stw	r4,20(r19)
 1010518:	d8c00015 	stw	r3,0(sp)
 101051c:	003fd006 	br	1010460 <__alt_data_end+0xff810460>

01010520 <__ratio>:
 1010520:	defff904 	addi	sp,sp,-28
 1010524:	dc400315 	stw	r17,12(sp)
 1010528:	2823883a 	mov	r17,r5
 101052c:	d9400104 	addi	r5,sp,4
 1010530:	dfc00615 	stw	ra,24(sp)
 1010534:	dcc00515 	stw	r19,20(sp)
 1010538:	dc800415 	stw	r18,16(sp)
 101053c:	2027883a 	mov	r19,r4
 1010540:	dc000215 	stw	r16,8(sp)
 1010544:	10102c80 	call	10102c8 <__b2d>
 1010548:	8809883a 	mov	r4,r17
 101054c:	d80b883a 	mov	r5,sp
 1010550:	1025883a 	mov	r18,r2
 1010554:	1821883a 	mov	r16,r3
 1010558:	10102c80 	call	10102c8 <__b2d>
 101055c:	8a400417 	ldw	r9,16(r17)
 1010560:	9a000417 	ldw	r8,16(r19)
 1010564:	100d883a 	mov	r6,r2
 1010568:	d8800017 	ldw	r2,0(sp)
 101056c:	4251c83a 	sub	r8,r8,r9
 1010570:	4012917a 	slli	r9,r8,5
 1010574:	da000117 	ldw	r8,4(sp)
 1010578:	4091c83a 	sub	r8,r8,r2
 101057c:	4251883a 	add	r8,r8,r9
 1010580:	02000d0e 	bge	zero,r8,10105b8 <__ratio+0x98>
 1010584:	4010953a 	slli	r8,r8,20
 1010588:	4421883a 	add	r16,r8,r16
 101058c:	9009883a 	mov	r4,r18
 1010590:	800b883a 	mov	r5,r16
 1010594:	180f883a 	mov	r7,r3
 1010598:	10036d00 	call	10036d0 <__divdf3>
 101059c:	dfc00617 	ldw	ra,24(sp)
 10105a0:	dcc00517 	ldw	r19,20(sp)
 10105a4:	dc800417 	ldw	r18,16(sp)
 10105a8:	dc400317 	ldw	r17,12(sp)
 10105ac:	dc000217 	ldw	r16,8(sp)
 10105b0:	dec00704 	addi	sp,sp,28
 10105b4:	f800283a 	ret
 10105b8:	4010953a 	slli	r8,r8,20
 10105bc:	1a07c83a 	sub	r3,r3,r8
 10105c0:	003ff206 	br	101058c <__alt_data_end+0xff81058c>

010105c4 <_mprec_log10>:
 10105c4:	defffe04 	addi	sp,sp,-8
 10105c8:	dc000015 	stw	r16,0(sp)
 10105cc:	dfc00115 	stw	ra,4(sp)
 10105d0:	008005c4 	movi	r2,23
 10105d4:	2021883a 	mov	r16,r4
 10105d8:	11000d0e 	bge	r2,r4,1010610 <_mprec_log10+0x4c>
 10105dc:	0005883a 	mov	r2,zero
 10105e0:	00cffc34 	movhi	r3,16368
 10105e4:	843fffc4 	addi	r16,r16,-1
 10105e8:	1009883a 	mov	r4,r2
 10105ec:	180b883a 	mov	r5,r3
 10105f0:	000d883a 	mov	r6,zero
 10105f4:	01d00934 	movhi	r7,16420
 10105f8:	10040200 	call	1004020 <__muldf3>
 10105fc:	803ff91e 	bne	r16,zero,10105e4 <__alt_data_end+0xff8105e4>
 1010600:	dfc00117 	ldw	ra,4(sp)
 1010604:	dc000017 	ldw	r16,0(sp)
 1010608:	dec00204 	addi	sp,sp,8
 101060c:	f800283a 	ret
 1010610:	202090fa 	slli	r16,r4,3
 1010614:	008040b4 	movhi	r2,258
 1010618:	10a61104 	addi	r2,r2,-26556
 101061c:	1421883a 	add	r16,r2,r16
 1010620:	80800017 	ldw	r2,0(r16)
 1010624:	80c00117 	ldw	r3,4(r16)
 1010628:	dfc00117 	ldw	ra,4(sp)
 101062c:	dc000017 	ldw	r16,0(sp)
 1010630:	dec00204 	addi	sp,sp,8
 1010634:	f800283a 	ret

01010638 <__copybits>:
 1010638:	297fffc4 	addi	r5,r5,-1
 101063c:	280fd17a 	srai	r7,r5,5
 1010640:	30c00417 	ldw	r3,16(r6)
 1010644:	30800504 	addi	r2,r6,20
 1010648:	39c00044 	addi	r7,r7,1
 101064c:	18c7883a 	add	r3,r3,r3
 1010650:	39cf883a 	add	r7,r7,r7
 1010654:	18c7883a 	add	r3,r3,r3
 1010658:	39cf883a 	add	r7,r7,r7
 101065c:	10c7883a 	add	r3,r2,r3
 1010660:	21cf883a 	add	r7,r4,r7
 1010664:	10c00d2e 	bgeu	r2,r3,101069c <__copybits+0x64>
 1010668:	200b883a 	mov	r5,r4
 101066c:	12000017 	ldw	r8,0(r2)
 1010670:	29400104 	addi	r5,r5,4
 1010674:	10800104 	addi	r2,r2,4
 1010678:	2a3fff15 	stw	r8,-4(r5)
 101067c:	10fffb36 	bltu	r2,r3,101066c <__alt_data_end+0xff81066c>
 1010680:	1985c83a 	sub	r2,r3,r6
 1010684:	10bffac4 	addi	r2,r2,-21
 1010688:	1004d0ba 	srli	r2,r2,2
 101068c:	10800044 	addi	r2,r2,1
 1010690:	1085883a 	add	r2,r2,r2
 1010694:	1085883a 	add	r2,r2,r2
 1010698:	2089883a 	add	r4,r4,r2
 101069c:	21c0032e 	bgeu	r4,r7,10106ac <__copybits+0x74>
 10106a0:	20000015 	stw	zero,0(r4)
 10106a4:	21000104 	addi	r4,r4,4
 10106a8:	21fffd36 	bltu	r4,r7,10106a0 <__alt_data_end+0xff8106a0>
 10106ac:	f800283a 	ret

010106b0 <__any_on>:
 10106b0:	20c00417 	ldw	r3,16(r4)
 10106b4:	2805d17a 	srai	r2,r5,5
 10106b8:	21000504 	addi	r4,r4,20
 10106bc:	18800d0e 	bge	r3,r2,10106f4 <__any_on+0x44>
 10106c0:	18c7883a 	add	r3,r3,r3
 10106c4:	18c7883a 	add	r3,r3,r3
 10106c8:	20c7883a 	add	r3,r4,r3
 10106cc:	20c0192e 	bgeu	r4,r3,1010734 <__any_on+0x84>
 10106d0:	18bfff17 	ldw	r2,-4(r3)
 10106d4:	18ffff04 	addi	r3,r3,-4
 10106d8:	1000041e 	bne	r2,zero,10106ec <__any_on+0x3c>
 10106dc:	20c0142e 	bgeu	r4,r3,1010730 <__any_on+0x80>
 10106e0:	18ffff04 	addi	r3,r3,-4
 10106e4:	19400017 	ldw	r5,0(r3)
 10106e8:	283ffc26 	beq	r5,zero,10106dc <__alt_data_end+0xff8106dc>
 10106ec:	00800044 	movi	r2,1
 10106f0:	f800283a 	ret
 10106f4:	10c00a0e 	bge	r2,r3,1010720 <__any_on+0x70>
 10106f8:	1085883a 	add	r2,r2,r2
 10106fc:	1085883a 	add	r2,r2,r2
 1010700:	294007cc 	andi	r5,r5,31
 1010704:	2087883a 	add	r3,r4,r2
 1010708:	283ff026 	beq	r5,zero,10106cc <__alt_data_end+0xff8106cc>
 101070c:	19800017 	ldw	r6,0(r3)
 1010710:	3144d83a 	srl	r2,r6,r5
 1010714:	114a983a 	sll	r5,r2,r5
 1010718:	29bff41e 	bne	r5,r6,10106ec <__alt_data_end+0xff8106ec>
 101071c:	003feb06 	br	10106cc <__alt_data_end+0xff8106cc>
 1010720:	1085883a 	add	r2,r2,r2
 1010724:	1085883a 	add	r2,r2,r2
 1010728:	2087883a 	add	r3,r4,r2
 101072c:	003fe706 	br	10106cc <__alt_data_end+0xff8106cc>
 1010730:	f800283a 	ret
 1010734:	0005883a 	mov	r2,zero
 1010738:	f800283a 	ret

0101073c <_realloc_r>:
 101073c:	defff604 	addi	sp,sp,-40
 1010740:	dcc00315 	stw	r19,12(sp)
 1010744:	dc400115 	stw	r17,4(sp)
 1010748:	dfc00915 	stw	ra,36(sp)
 101074c:	df000815 	stw	fp,32(sp)
 1010750:	ddc00715 	stw	r23,28(sp)
 1010754:	dd800615 	stw	r22,24(sp)
 1010758:	dd400515 	stw	r21,20(sp)
 101075c:	dd000415 	stw	r20,16(sp)
 1010760:	dc800215 	stw	r18,8(sp)
 1010764:	dc000015 	stw	r16,0(sp)
 1010768:	2827883a 	mov	r19,r5
 101076c:	3023883a 	mov	r17,r6
 1010770:	2800bf26 	beq	r5,zero,1010a70 <_realloc_r+0x334>
 1010774:	2025883a 	mov	r18,r4
 1010778:	10167d40 	call	10167d4 <__malloc_lock>
 101077c:	98ffff17 	ldw	r3,-4(r19)
 1010780:	01bfff04 	movi	r6,-4
 1010784:	890002c4 	addi	r4,r17,11
 1010788:	01c00584 	movi	r7,22
 101078c:	9d7ffe04 	addi	r21,r19,-8
 1010790:	19a0703a 	and	r16,r3,r6
 1010794:	39003f2e 	bgeu	r7,r4,1010894 <_realloc_r+0x158>
 1010798:	053ffe04 	movi	r20,-8
 101079c:	2528703a 	and	r20,r4,r20
 10107a0:	a00f883a 	mov	r7,r20
 10107a4:	a0008216 	blt	r20,zero,10109b0 <_realloc_r+0x274>
 10107a8:	a4408136 	bltu	r20,r17,10109b0 <_realloc_r+0x274>
 10107ac:	81c03c0e 	bge	r16,r7,10108a0 <_realloc_r+0x164>
 10107b0:	070040b4 	movhi	fp,258
 10107b4:	e7279b04 	addi	fp,fp,-24980
 10107b8:	e1000217 	ldw	r4,8(fp)
 10107bc:	ac05883a 	add	r2,r21,r16
 10107c0:	2080bf26 	beq	r4,r2,1010ac0 <_realloc_r+0x384>
 10107c4:	11000117 	ldw	r4,4(r2)
 10107c8:	023fff84 	movi	r8,-2
 10107cc:	2210703a 	and	r8,r4,r8
 10107d0:	1211883a 	add	r8,r2,r8
 10107d4:	41400117 	ldw	r5,4(r8)
 10107d8:	2940004c 	andi	r5,r5,1
 10107dc:	28004a1e 	bne	r5,zero,1010908 <_realloc_r+0x1cc>
 10107e0:	017fff04 	movi	r5,-4
 10107e4:	2148703a 	and	r4,r4,r5
 10107e8:	2409883a 	add	r4,r4,r16
 10107ec:	21c0ad0e 	bge	r4,r7,1010aa4 <_realloc_r+0x368>
 10107f0:	18c0004c 	andi	r3,r3,1
 10107f4:	18007f1e 	bne	r3,zero,10109f4 <_realloc_r+0x2b8>
 10107f8:	9dfffe17 	ldw	r23,-8(r19)
 10107fc:	adefc83a 	sub	r23,r21,r23
 1010800:	bd800117 	ldw	r22,4(r23)
 1010804:	b14a703a 	and	r5,r22,r5
 1010808:	216d883a 	add	r22,r4,r5
 101080c:	b1c04516 	blt	r22,r7,1010924 <_realloc_r+0x1e8>
 1010810:	10c00317 	ldw	r3,12(r2)
 1010814:	10800217 	ldw	r2,8(r2)
 1010818:	81bfff04 	addi	r6,r16,-4
 101081c:	bc400204 	addi	r17,r23,8
 1010820:	10c00315 	stw	r3,12(r2)
 1010824:	18800215 	stw	r2,8(r3)
 1010828:	b9400217 	ldw	r5,8(r23)
 101082c:	b8c00317 	ldw	r3,12(r23)
 1010830:	00800904 	movi	r2,36
 1010834:	28c00315 	stw	r3,12(r5)
 1010838:	19400215 	stw	r5,8(r3)
 101083c:	1180ef36 	bltu	r2,r6,1010bfc <_realloc_r+0x4c0>
 1010840:	008004c4 	movi	r2,19
 1010844:	1180da2e 	bgeu	r2,r6,1010bb0 <_realloc_r+0x474>
 1010848:	98800017 	ldw	r2,0(r19)
 101084c:	b8800215 	stw	r2,8(r23)
 1010850:	98800117 	ldw	r2,4(r19)
 1010854:	b8800315 	stw	r2,12(r23)
 1010858:	008006c4 	movi	r2,27
 101085c:	1180fc2e 	bgeu	r2,r6,1010c50 <_realloc_r+0x514>
 1010860:	98800217 	ldw	r2,8(r19)
 1010864:	b8800415 	stw	r2,16(r23)
 1010868:	98800317 	ldw	r2,12(r19)
 101086c:	b8800515 	stw	r2,20(r23)
 1010870:	00800904 	movi	r2,36
 1010874:	3080421e 	bne	r6,r2,1010980 <_realloc_r+0x244>
 1010878:	98800417 	ldw	r2,16(r19)
 101087c:	9cc00604 	addi	r19,r19,24
 1010880:	b8c00804 	addi	r3,r23,32
 1010884:	b8800615 	stw	r2,24(r23)
 1010888:	98bfff17 	ldw	r2,-4(r19)
 101088c:	b8800715 	stw	r2,28(r23)
 1010890:	00003d06 	br	1010988 <_realloc_r+0x24c>
 1010894:	01c00404 	movi	r7,16
 1010898:	3829883a 	mov	r20,r7
 101089c:	003fc206 	br	10107a8 <__alt_data_end+0xff8107a8>
 10108a0:	9823883a 	mov	r17,r19
 10108a4:	850fc83a 	sub	r7,r16,r20
 10108a8:	008003c4 	movi	r2,15
 10108ac:	18c0004c 	andi	r3,r3,1
 10108b0:	11c04336 	bltu	r2,r7,10109c0 <_realloc_r+0x284>
 10108b4:	1c06b03a 	or	r3,r3,r16
 10108b8:	a8c00115 	stw	r3,4(r21)
 10108bc:	ac21883a 	add	r16,r21,r16
 10108c0:	80c00117 	ldw	r3,4(r16)
 10108c4:	18c00054 	ori	r3,r3,1
 10108c8:	80c00115 	stw	r3,4(r16)
 10108cc:	9009883a 	mov	r4,r18
 10108d0:	10167f40 	call	10167f4 <__malloc_unlock>
 10108d4:	8805883a 	mov	r2,r17
 10108d8:	dfc00917 	ldw	ra,36(sp)
 10108dc:	df000817 	ldw	fp,32(sp)
 10108e0:	ddc00717 	ldw	r23,28(sp)
 10108e4:	dd800617 	ldw	r22,24(sp)
 10108e8:	dd400517 	ldw	r21,20(sp)
 10108ec:	dd000417 	ldw	r20,16(sp)
 10108f0:	dcc00317 	ldw	r19,12(sp)
 10108f4:	dc800217 	ldw	r18,8(sp)
 10108f8:	dc400117 	ldw	r17,4(sp)
 10108fc:	dc000017 	ldw	r16,0(sp)
 1010900:	dec00a04 	addi	sp,sp,40
 1010904:	f800283a 	ret
 1010908:	18c0004c 	andi	r3,r3,1
 101090c:	1800391e 	bne	r3,zero,10109f4 <_realloc_r+0x2b8>
 1010910:	9dfffe17 	ldw	r23,-8(r19)
 1010914:	00bfff04 	movi	r2,-4
 1010918:	adefc83a 	sub	r23,r21,r23
 101091c:	b9400117 	ldw	r5,4(r23)
 1010920:	288a703a 	and	r5,r5,r2
 1010924:	2c2d883a 	add	r22,r5,r16
 1010928:	b1c03216 	blt	r22,r7,10109f4 <_realloc_r+0x2b8>
 101092c:	b8800317 	ldw	r2,12(r23)
 1010930:	b8c00217 	ldw	r3,8(r23)
 1010934:	81bfff04 	addi	r6,r16,-4
 1010938:	01000904 	movi	r4,36
 101093c:	18800315 	stw	r2,12(r3)
 1010940:	10c00215 	stw	r3,8(r2)
 1010944:	bc400204 	addi	r17,r23,8
 1010948:	2180ac36 	bltu	r4,r6,1010bfc <_realloc_r+0x4c0>
 101094c:	008004c4 	movi	r2,19
 1010950:	1180972e 	bgeu	r2,r6,1010bb0 <_realloc_r+0x474>
 1010954:	98800017 	ldw	r2,0(r19)
 1010958:	b8800215 	stw	r2,8(r23)
 101095c:	98800117 	ldw	r2,4(r19)
 1010960:	b8800315 	stw	r2,12(r23)
 1010964:	008006c4 	movi	r2,27
 1010968:	1180b92e 	bgeu	r2,r6,1010c50 <_realloc_r+0x514>
 101096c:	98800217 	ldw	r2,8(r19)
 1010970:	b8800415 	stw	r2,16(r23)
 1010974:	98800317 	ldw	r2,12(r19)
 1010978:	b8800515 	stw	r2,20(r23)
 101097c:	313fbe26 	beq	r6,r4,1010878 <__alt_data_end+0xff810878>
 1010980:	b8c00604 	addi	r3,r23,24
 1010984:	9cc00404 	addi	r19,r19,16
 1010988:	98800017 	ldw	r2,0(r19)
 101098c:	b021883a 	mov	r16,r22
 1010990:	b82b883a 	mov	r21,r23
 1010994:	18800015 	stw	r2,0(r3)
 1010998:	98800117 	ldw	r2,4(r19)
 101099c:	18800115 	stw	r2,4(r3)
 10109a0:	98800217 	ldw	r2,8(r19)
 10109a4:	18800215 	stw	r2,8(r3)
 10109a8:	b8c00117 	ldw	r3,4(r23)
 10109ac:	003fbd06 	br	10108a4 <__alt_data_end+0xff8108a4>
 10109b0:	00800304 	movi	r2,12
 10109b4:	90800015 	stw	r2,0(r18)
 10109b8:	0005883a 	mov	r2,zero
 10109bc:	003fc606 	br	10108d8 <__alt_data_end+0xff8108d8>
 10109c0:	1d06b03a 	or	r3,r3,r20
 10109c4:	ad0b883a 	add	r5,r21,r20
 10109c8:	a8c00115 	stw	r3,4(r21)
 10109cc:	38800054 	ori	r2,r7,1
 10109d0:	28800115 	stw	r2,4(r5)
 10109d4:	29cf883a 	add	r7,r5,r7
 10109d8:	38800117 	ldw	r2,4(r7)
 10109dc:	9009883a 	mov	r4,r18
 10109e0:	29400204 	addi	r5,r5,8
 10109e4:	10800054 	ori	r2,r2,1
 10109e8:	38800115 	stw	r2,4(r7)
 10109ec:	100d31c0 	call	100d31c <_free_r>
 10109f0:	003fb606 	br	10108cc <__alt_data_end+0xff8108cc>
 10109f4:	880b883a 	mov	r5,r17
 10109f8:	9009883a 	mov	r4,r18
 10109fc:	100eaec0 	call	100eaec <_malloc_r>
 1010a00:	1023883a 	mov	r17,r2
 1010a04:	1000aa26 	beq	r2,zero,1010cb0 <_realloc_r+0x574>
 1010a08:	98ffff17 	ldw	r3,-4(r19)
 1010a0c:	113ffe04 	addi	r4,r2,-8
 1010a10:	00bfff84 	movi	r2,-2
 1010a14:	1884703a 	and	r2,r3,r2
 1010a18:	a885883a 	add	r2,r21,r2
 1010a1c:	20808626 	beq	r4,r2,1010c38 <_realloc_r+0x4fc>
 1010a20:	81bfff04 	addi	r6,r16,-4
 1010a24:	00800904 	movi	r2,36
 1010a28:	11807036 	bltu	r2,r6,1010bec <_realloc_r+0x4b0>
 1010a2c:	00c004c4 	movi	r3,19
 1010a30:	19805636 	bltu	r3,r6,1010b8c <_realloc_r+0x450>
 1010a34:	8805883a 	mov	r2,r17
 1010a38:	9807883a 	mov	r3,r19
 1010a3c:	19000017 	ldw	r4,0(r3)
 1010a40:	11000015 	stw	r4,0(r2)
 1010a44:	19000117 	ldw	r4,4(r3)
 1010a48:	11000115 	stw	r4,4(r2)
 1010a4c:	18c00217 	ldw	r3,8(r3)
 1010a50:	10c00215 	stw	r3,8(r2)
 1010a54:	980b883a 	mov	r5,r19
 1010a58:	9009883a 	mov	r4,r18
 1010a5c:	100d31c0 	call	100d31c <_free_r>
 1010a60:	9009883a 	mov	r4,r18
 1010a64:	10167f40 	call	10167f4 <__malloc_unlock>
 1010a68:	8805883a 	mov	r2,r17
 1010a6c:	003f9a06 	br	10108d8 <__alt_data_end+0xff8108d8>
 1010a70:	300b883a 	mov	r5,r6
 1010a74:	dfc00917 	ldw	ra,36(sp)
 1010a78:	df000817 	ldw	fp,32(sp)
 1010a7c:	ddc00717 	ldw	r23,28(sp)
 1010a80:	dd800617 	ldw	r22,24(sp)
 1010a84:	dd400517 	ldw	r21,20(sp)
 1010a88:	dd000417 	ldw	r20,16(sp)
 1010a8c:	dcc00317 	ldw	r19,12(sp)
 1010a90:	dc800217 	ldw	r18,8(sp)
 1010a94:	dc400117 	ldw	r17,4(sp)
 1010a98:	dc000017 	ldw	r16,0(sp)
 1010a9c:	dec00a04 	addi	sp,sp,40
 1010aa0:	100eaec1 	jmpi	100eaec <_malloc_r>
 1010aa4:	11400317 	ldw	r5,12(r2)
 1010aa8:	10800217 	ldw	r2,8(r2)
 1010aac:	9823883a 	mov	r17,r19
 1010ab0:	2021883a 	mov	r16,r4
 1010ab4:	11400315 	stw	r5,12(r2)
 1010ab8:	28800215 	stw	r2,8(r5)
 1010abc:	003f7906 	br	10108a4 <__alt_data_end+0xff8108a4>
 1010ac0:	21000117 	ldw	r4,4(r4)
 1010ac4:	00bfff04 	movi	r2,-4
 1010ac8:	a1800404 	addi	r6,r20,16
 1010acc:	2088703a 	and	r4,r4,r2
 1010ad0:	2409883a 	add	r4,r4,r16
 1010ad4:	2180380e 	bge	r4,r6,1010bb8 <_realloc_r+0x47c>
 1010ad8:	18c0004c 	andi	r3,r3,1
 1010adc:	183fc51e 	bne	r3,zero,10109f4 <__alt_data_end+0xff8109f4>
 1010ae0:	9dfffe17 	ldw	r23,-8(r19)
 1010ae4:	adefc83a 	sub	r23,r21,r23
 1010ae8:	b9400117 	ldw	r5,4(r23)
 1010aec:	288a703a 	and	r5,r5,r2
 1010af0:	216d883a 	add	r22,r4,r5
 1010af4:	b1bf8b16 	blt	r22,r6,1010924 <__alt_data_end+0xff810924>
 1010af8:	b8800317 	ldw	r2,12(r23)
 1010afc:	b8c00217 	ldw	r3,8(r23)
 1010b00:	81bfff04 	addi	r6,r16,-4
 1010b04:	01000904 	movi	r4,36
 1010b08:	18800315 	stw	r2,12(r3)
 1010b0c:	10c00215 	stw	r3,8(r2)
 1010b10:	bc400204 	addi	r17,r23,8
 1010b14:	21805a36 	bltu	r4,r6,1010c80 <_realloc_r+0x544>
 1010b18:	008004c4 	movi	r2,19
 1010b1c:	1180562e 	bgeu	r2,r6,1010c78 <_realloc_r+0x53c>
 1010b20:	98800017 	ldw	r2,0(r19)
 1010b24:	b8800215 	stw	r2,8(r23)
 1010b28:	98800117 	ldw	r2,4(r19)
 1010b2c:	b8800315 	stw	r2,12(r23)
 1010b30:	008006c4 	movi	r2,27
 1010b34:	11805636 	bltu	r2,r6,1010c90 <_realloc_r+0x554>
 1010b38:	b8800404 	addi	r2,r23,16
 1010b3c:	9cc00204 	addi	r19,r19,8
 1010b40:	98c00017 	ldw	r3,0(r19)
 1010b44:	10c00015 	stw	r3,0(r2)
 1010b48:	98c00117 	ldw	r3,4(r19)
 1010b4c:	10c00115 	stw	r3,4(r2)
 1010b50:	98c00217 	ldw	r3,8(r19)
 1010b54:	10c00215 	stw	r3,8(r2)
 1010b58:	bd07883a 	add	r3,r23,r20
 1010b5c:	b505c83a 	sub	r2,r22,r20
 1010b60:	e0c00215 	stw	r3,8(fp)
 1010b64:	10800054 	ori	r2,r2,1
 1010b68:	18800115 	stw	r2,4(r3)
 1010b6c:	b8800117 	ldw	r2,4(r23)
 1010b70:	9009883a 	mov	r4,r18
 1010b74:	1080004c 	andi	r2,r2,1
 1010b78:	a0a8b03a 	or	r20,r20,r2
 1010b7c:	bd000115 	stw	r20,4(r23)
 1010b80:	10167f40 	call	10167f4 <__malloc_unlock>
 1010b84:	8805883a 	mov	r2,r17
 1010b88:	003f5306 	br	10108d8 <__alt_data_end+0xff8108d8>
 1010b8c:	98c00017 	ldw	r3,0(r19)
 1010b90:	88c00015 	stw	r3,0(r17)
 1010b94:	98c00117 	ldw	r3,4(r19)
 1010b98:	88c00115 	stw	r3,4(r17)
 1010b9c:	00c006c4 	movi	r3,27
 1010ba0:	19801d36 	bltu	r3,r6,1010c18 <_realloc_r+0x4dc>
 1010ba4:	88800204 	addi	r2,r17,8
 1010ba8:	98c00204 	addi	r3,r19,8
 1010bac:	003fa306 	br	1010a3c <__alt_data_end+0xff810a3c>
 1010bb0:	8807883a 	mov	r3,r17
 1010bb4:	003f7406 	br	1010988 <__alt_data_end+0xff810988>
 1010bb8:	ad2b883a 	add	r21,r21,r20
 1010bbc:	2505c83a 	sub	r2,r4,r20
 1010bc0:	e5400215 	stw	r21,8(fp)
 1010bc4:	10800054 	ori	r2,r2,1
 1010bc8:	a8800115 	stw	r2,4(r21)
 1010bcc:	98bfff17 	ldw	r2,-4(r19)
 1010bd0:	9009883a 	mov	r4,r18
 1010bd4:	1080004c 	andi	r2,r2,1
 1010bd8:	a0a8b03a 	or	r20,r20,r2
 1010bdc:	9d3fff15 	stw	r20,-4(r19)
 1010be0:	10167f40 	call	10167f4 <__malloc_unlock>
 1010be4:	9805883a 	mov	r2,r19
 1010be8:	003f3b06 	br	10108d8 <__alt_data_end+0xff8108d8>
 1010bec:	8809883a 	mov	r4,r17
 1010bf0:	980b883a 	mov	r5,r19
 1010bf4:	100f5300 	call	100f530 <memmove>
 1010bf8:	003f9606 	br	1010a54 <__alt_data_end+0xff810a54>
 1010bfc:	8809883a 	mov	r4,r17
 1010c00:	980b883a 	mov	r5,r19
 1010c04:	100f5300 	call	100f530 <memmove>
 1010c08:	b8c00117 	ldw	r3,4(r23)
 1010c0c:	b021883a 	mov	r16,r22
 1010c10:	b82b883a 	mov	r21,r23
 1010c14:	003f2306 	br	10108a4 <__alt_data_end+0xff8108a4>
 1010c18:	98c00217 	ldw	r3,8(r19)
 1010c1c:	88c00215 	stw	r3,8(r17)
 1010c20:	98c00317 	ldw	r3,12(r19)
 1010c24:	88c00315 	stw	r3,12(r17)
 1010c28:	30800c26 	beq	r6,r2,1010c5c <_realloc_r+0x520>
 1010c2c:	88800404 	addi	r2,r17,16
 1010c30:	98c00404 	addi	r3,r19,16
 1010c34:	003f8106 	br	1010a3c <__alt_data_end+0xff810a3c>
 1010c38:	893fff17 	ldw	r4,-4(r17)
 1010c3c:	00bfff04 	movi	r2,-4
 1010c40:	9823883a 	mov	r17,r19
 1010c44:	2084703a 	and	r2,r4,r2
 1010c48:	80a1883a 	add	r16,r16,r2
 1010c4c:	003f1506 	br	10108a4 <__alt_data_end+0xff8108a4>
 1010c50:	b8c00404 	addi	r3,r23,16
 1010c54:	9cc00204 	addi	r19,r19,8
 1010c58:	003f4b06 	br	1010988 <__alt_data_end+0xff810988>
 1010c5c:	99000417 	ldw	r4,16(r19)
 1010c60:	88800604 	addi	r2,r17,24
 1010c64:	98c00604 	addi	r3,r19,24
 1010c68:	89000415 	stw	r4,16(r17)
 1010c6c:	99000517 	ldw	r4,20(r19)
 1010c70:	89000515 	stw	r4,20(r17)
 1010c74:	003f7106 	br	1010a3c <__alt_data_end+0xff810a3c>
 1010c78:	8805883a 	mov	r2,r17
 1010c7c:	003fb006 	br	1010b40 <__alt_data_end+0xff810b40>
 1010c80:	8809883a 	mov	r4,r17
 1010c84:	980b883a 	mov	r5,r19
 1010c88:	100f5300 	call	100f530 <memmove>
 1010c8c:	003fb206 	br	1010b58 <__alt_data_end+0xff810b58>
 1010c90:	98800217 	ldw	r2,8(r19)
 1010c94:	b8800415 	stw	r2,16(r23)
 1010c98:	98800317 	ldw	r2,12(r19)
 1010c9c:	b8800515 	stw	r2,20(r23)
 1010ca0:	31000726 	beq	r6,r4,1010cc0 <_realloc_r+0x584>
 1010ca4:	b8800604 	addi	r2,r23,24
 1010ca8:	9cc00404 	addi	r19,r19,16
 1010cac:	003fa406 	br	1010b40 <__alt_data_end+0xff810b40>
 1010cb0:	9009883a 	mov	r4,r18
 1010cb4:	10167f40 	call	10167f4 <__malloc_unlock>
 1010cb8:	0005883a 	mov	r2,zero
 1010cbc:	003f0606 	br	10108d8 <__alt_data_end+0xff8108d8>
 1010cc0:	98c00417 	ldw	r3,16(r19)
 1010cc4:	9cc00604 	addi	r19,r19,24
 1010cc8:	b8800804 	addi	r2,r23,32
 1010ccc:	b8c00615 	stw	r3,24(r23)
 1010cd0:	98ffff17 	ldw	r3,-4(r19)
 1010cd4:	b8c00715 	stw	r3,28(r23)
 1010cd8:	003f9906 	br	1010b40 <__alt_data_end+0xff810b40>

01010cdc <_sbrk_r>:
 1010cdc:	defffd04 	addi	sp,sp,-12
 1010ce0:	dc000015 	stw	r16,0(sp)
 1010ce4:	040040b4 	movhi	r16,258
 1010ce8:	dc400115 	stw	r17,4(sp)
 1010cec:	84345204 	addi	r16,r16,-11960
 1010cf0:	2023883a 	mov	r17,r4
 1010cf4:	2809883a 	mov	r4,r5
 1010cf8:	dfc00215 	stw	ra,8(sp)
 1010cfc:	80000015 	stw	zero,0(r16)
 1010d00:	10169c00 	call	10169c0 <sbrk>
 1010d04:	00ffffc4 	movi	r3,-1
 1010d08:	10c00526 	beq	r2,r3,1010d20 <_sbrk_r+0x44>
 1010d0c:	dfc00217 	ldw	ra,8(sp)
 1010d10:	dc400117 	ldw	r17,4(sp)
 1010d14:	dc000017 	ldw	r16,0(sp)
 1010d18:	dec00304 	addi	sp,sp,12
 1010d1c:	f800283a 	ret
 1010d20:	80c00017 	ldw	r3,0(r16)
 1010d24:	183ff926 	beq	r3,zero,1010d0c <__alt_data_end+0xff810d0c>
 1010d28:	88c00015 	stw	r3,0(r17)
 1010d2c:	003ff706 	br	1010d0c <__alt_data_end+0xff810d0c>

01010d30 <__sread>:
 1010d30:	defffe04 	addi	sp,sp,-8
 1010d34:	dc000015 	stw	r16,0(sp)
 1010d38:	2821883a 	mov	r16,r5
 1010d3c:	2940038f 	ldh	r5,14(r5)
 1010d40:	dfc00115 	stw	ra,4(sp)
 1010d44:	1013c000 	call	1013c00 <_read_r>
 1010d48:	10000716 	blt	r2,zero,1010d68 <__sread+0x38>
 1010d4c:	80c01417 	ldw	r3,80(r16)
 1010d50:	1887883a 	add	r3,r3,r2
 1010d54:	80c01415 	stw	r3,80(r16)
 1010d58:	dfc00117 	ldw	ra,4(sp)
 1010d5c:	dc000017 	ldw	r16,0(sp)
 1010d60:	dec00204 	addi	sp,sp,8
 1010d64:	f800283a 	ret
 1010d68:	80c0030b 	ldhu	r3,12(r16)
 1010d6c:	18fbffcc 	andi	r3,r3,61439
 1010d70:	80c0030d 	sth	r3,12(r16)
 1010d74:	dfc00117 	ldw	ra,4(sp)
 1010d78:	dc000017 	ldw	r16,0(sp)
 1010d7c:	dec00204 	addi	sp,sp,8
 1010d80:	f800283a 	ret

01010d84 <__seofread>:
 1010d84:	0005883a 	mov	r2,zero
 1010d88:	f800283a 	ret

01010d8c <__swrite>:
 1010d8c:	2880030b 	ldhu	r2,12(r5)
 1010d90:	defffb04 	addi	sp,sp,-20
 1010d94:	dcc00315 	stw	r19,12(sp)
 1010d98:	dc800215 	stw	r18,8(sp)
 1010d9c:	dc400115 	stw	r17,4(sp)
 1010da0:	dc000015 	stw	r16,0(sp)
 1010da4:	dfc00415 	stw	ra,16(sp)
 1010da8:	10c0400c 	andi	r3,r2,256
 1010dac:	2821883a 	mov	r16,r5
 1010db0:	2027883a 	mov	r19,r4
 1010db4:	3025883a 	mov	r18,r6
 1010db8:	3823883a 	mov	r17,r7
 1010dbc:	18000526 	beq	r3,zero,1010dd4 <__swrite+0x48>
 1010dc0:	2940038f 	ldh	r5,14(r5)
 1010dc4:	000d883a 	mov	r6,zero
 1010dc8:	01c00084 	movi	r7,2
 1010dcc:	1013ba40 	call	1013ba4 <_lseek_r>
 1010dd0:	8080030b 	ldhu	r2,12(r16)
 1010dd4:	8140038f 	ldh	r5,14(r16)
 1010dd8:	10bbffcc 	andi	r2,r2,61439
 1010ddc:	9809883a 	mov	r4,r19
 1010de0:	900d883a 	mov	r6,r18
 1010de4:	880f883a 	mov	r7,r17
 1010de8:	8080030d 	sth	r2,12(r16)
 1010dec:	dfc00417 	ldw	ra,16(sp)
 1010df0:	dcc00317 	ldw	r19,12(sp)
 1010df4:	dc800217 	ldw	r18,8(sp)
 1010df8:	dc400117 	ldw	r17,4(sp)
 1010dfc:	dc000017 	ldw	r16,0(sp)
 1010e00:	dec00504 	addi	sp,sp,20
 1010e04:	10136941 	jmpi	1013694 <_write_r>

01010e08 <__sseek>:
 1010e08:	defffe04 	addi	sp,sp,-8
 1010e0c:	dc000015 	stw	r16,0(sp)
 1010e10:	2821883a 	mov	r16,r5
 1010e14:	2940038f 	ldh	r5,14(r5)
 1010e18:	dfc00115 	stw	ra,4(sp)
 1010e1c:	1013ba40 	call	1013ba4 <_lseek_r>
 1010e20:	00ffffc4 	movi	r3,-1
 1010e24:	10c00826 	beq	r2,r3,1010e48 <__sseek+0x40>
 1010e28:	80c0030b 	ldhu	r3,12(r16)
 1010e2c:	80801415 	stw	r2,80(r16)
 1010e30:	18c40014 	ori	r3,r3,4096
 1010e34:	80c0030d 	sth	r3,12(r16)
 1010e38:	dfc00117 	ldw	ra,4(sp)
 1010e3c:	dc000017 	ldw	r16,0(sp)
 1010e40:	dec00204 	addi	sp,sp,8
 1010e44:	f800283a 	ret
 1010e48:	80c0030b 	ldhu	r3,12(r16)
 1010e4c:	18fbffcc 	andi	r3,r3,61439
 1010e50:	80c0030d 	sth	r3,12(r16)
 1010e54:	dfc00117 	ldw	ra,4(sp)
 1010e58:	dc000017 	ldw	r16,0(sp)
 1010e5c:	dec00204 	addi	sp,sp,8
 1010e60:	f800283a 	ret

01010e64 <__sclose>:
 1010e64:	2940038f 	ldh	r5,14(r5)
 1010e68:	10136f01 	jmpi	10136f0 <_close_r>

01010e6c <strcmp>:
 1010e6c:	2144b03a 	or	r2,r4,r5
 1010e70:	108000cc 	andi	r2,r2,3
 1010e74:	1000171e 	bne	r2,zero,1010ed4 <strcmp+0x68>
 1010e78:	20800017 	ldw	r2,0(r4)
 1010e7c:	28c00017 	ldw	r3,0(r5)
 1010e80:	10c0141e 	bne	r2,r3,1010ed4 <strcmp+0x68>
 1010e84:	027fbff4 	movhi	r9,65279
 1010e88:	4a7fbfc4 	addi	r9,r9,-257
 1010e8c:	0086303a 	nor	r3,zero,r2
 1010e90:	02202074 	movhi	r8,32897
 1010e94:	1245883a 	add	r2,r2,r9
 1010e98:	42202004 	addi	r8,r8,-32640
 1010e9c:	10c4703a 	and	r2,r2,r3
 1010ea0:	1204703a 	and	r2,r2,r8
 1010ea4:	10000226 	beq	r2,zero,1010eb0 <strcmp+0x44>
 1010ea8:	00001706 	br	1010f08 <strcmp+0x9c>
 1010eac:	1000161e 	bne	r2,zero,1010f08 <strcmp+0x9c>
 1010eb0:	21000104 	addi	r4,r4,4
 1010eb4:	20c00017 	ldw	r3,0(r4)
 1010eb8:	29400104 	addi	r5,r5,4
 1010ebc:	29800017 	ldw	r6,0(r5)
 1010ec0:	1a4f883a 	add	r7,r3,r9
 1010ec4:	00c4303a 	nor	r2,zero,r3
 1010ec8:	3884703a 	and	r2,r7,r2
 1010ecc:	1204703a 	and	r2,r2,r8
 1010ed0:	19bff626 	beq	r3,r6,1010eac <__alt_data_end+0xff810eac>
 1010ed4:	20800007 	ldb	r2,0(r4)
 1010ed8:	1000051e 	bne	r2,zero,1010ef0 <strcmp+0x84>
 1010edc:	00000606 	br	1010ef8 <strcmp+0x8c>
 1010ee0:	21000044 	addi	r4,r4,1
 1010ee4:	20800007 	ldb	r2,0(r4)
 1010ee8:	29400044 	addi	r5,r5,1
 1010eec:	10000226 	beq	r2,zero,1010ef8 <strcmp+0x8c>
 1010ef0:	28c00007 	ldb	r3,0(r5)
 1010ef4:	10fffa26 	beq	r2,r3,1010ee0 <__alt_data_end+0xff810ee0>
 1010ef8:	20800003 	ldbu	r2,0(r4)
 1010efc:	28c00003 	ldbu	r3,0(r5)
 1010f00:	10c5c83a 	sub	r2,r2,r3
 1010f04:	f800283a 	ret
 1010f08:	0005883a 	mov	r2,zero
 1010f0c:	f800283a 	ret

01010f10 <strncmp>:
 1010f10:	30002126 	beq	r6,zero,1010f98 <strncmp+0x88>
 1010f14:	2144b03a 	or	r2,r4,r5
 1010f18:	108000cc 	andi	r2,r2,3
 1010f1c:	1000241e 	bne	r2,zero,1010fb0 <strncmp+0xa0>
 1010f20:	024000c4 	movi	r9,3
 1010f24:	4980222e 	bgeu	r9,r6,1010fb0 <strncmp+0xa0>
 1010f28:	20800017 	ldw	r2,0(r4)
 1010f2c:	28c00017 	ldw	r3,0(r5)
 1010f30:	10c01f1e 	bne	r2,r3,1010fb0 <strncmp+0xa0>
 1010f34:	31bfff04 	addi	r6,r6,-4
 1010f38:	30001726 	beq	r6,zero,1010f98 <strncmp+0x88>
 1010f3c:	02ffbff4 	movhi	r11,65279
 1010f40:	5affbfc4 	addi	r11,r11,-257
 1010f44:	0086303a 	nor	r3,zero,r2
 1010f48:	02a02074 	movhi	r10,32897
 1010f4c:	12c5883a 	add	r2,r2,r11
 1010f50:	52a02004 	addi	r10,r10,-32640
 1010f54:	10c4703a 	and	r2,r2,r3
 1010f58:	1284703a 	and	r2,r2,r10
 1010f5c:	10000226 	beq	r2,zero,1010f68 <strncmp+0x58>
 1010f60:	00000d06 	br	1010f98 <strncmp+0x88>
 1010f64:	10000c1e 	bne	r2,zero,1010f98 <strncmp+0x88>
 1010f68:	21000104 	addi	r4,r4,4
 1010f6c:	29400104 	addi	r5,r5,4
 1010f70:	49800f2e 	bgeu	r9,r6,1010fb0 <strncmp+0xa0>
 1010f74:	20c00017 	ldw	r3,0(r4)
 1010f78:	29c00017 	ldw	r7,0(r5)
 1010f7c:	1ad1883a 	add	r8,r3,r11
 1010f80:	00c4303a 	nor	r2,zero,r3
 1010f84:	4084703a 	and	r2,r8,r2
 1010f88:	1284703a 	and	r2,r2,r10
 1010f8c:	19c0081e 	bne	r3,r7,1010fb0 <strncmp+0xa0>
 1010f90:	31bfff04 	addi	r6,r6,-4
 1010f94:	303ff31e 	bne	r6,zero,1010f64 <__alt_data_end+0xff810f64>
 1010f98:	0005883a 	mov	r2,zero
 1010f9c:	f800283a 	ret
 1010fa0:	303ffd26 	beq	r6,zero,1010f98 <__alt_data_end+0xff810f98>
 1010fa4:	103ffc26 	beq	r2,zero,1010f98 <__alt_data_end+0xff810f98>
 1010fa8:	21000044 	addi	r4,r4,1
 1010fac:	29400044 	addi	r5,r5,1
 1010fb0:	20800007 	ldb	r2,0(r4)
 1010fb4:	28c00007 	ldb	r3,0(r5)
 1010fb8:	31bfffc4 	addi	r6,r6,-1
 1010fbc:	10fff826 	beq	r2,r3,1010fa0 <__alt_data_end+0xff810fa0>
 1010fc0:	20800003 	ldbu	r2,0(r4)
 1010fc4:	28c00003 	ldbu	r3,0(r5)
 1010fc8:	10c5c83a 	sub	r2,r2,r3
 1010fcc:	f800283a 	ret

01010fd0 <__ssprint_r>:
 1010fd0:	30800217 	ldw	r2,8(r6)
 1010fd4:	defff604 	addi	sp,sp,-40
 1010fd8:	ddc00715 	stw	r23,28(sp)
 1010fdc:	dcc00315 	stw	r19,12(sp)
 1010fe0:	dfc00915 	stw	ra,36(sp)
 1010fe4:	df000815 	stw	fp,32(sp)
 1010fe8:	dd800615 	stw	r22,24(sp)
 1010fec:	dd400515 	stw	r21,20(sp)
 1010ff0:	dd000415 	stw	r20,16(sp)
 1010ff4:	dc800215 	stw	r18,8(sp)
 1010ff8:	dc400115 	stw	r17,4(sp)
 1010ffc:	dc000015 	stw	r16,0(sp)
 1011000:	3027883a 	mov	r19,r6
 1011004:	35c00017 	ldw	r23,0(r6)
 1011008:	10005526 	beq	r2,zero,1011160 <__ssprint_r+0x190>
 101100c:	2029883a 	mov	r20,r4
 1011010:	29000017 	ldw	r4,0(r5)
 1011014:	2821883a 	mov	r16,r5
 1011018:	0039883a 	mov	fp,zero
 101101c:	0023883a 	mov	r17,zero
 1011020:	88003926 	beq	r17,zero,1011108 <__ssprint_r+0x138>
 1011024:	84800217 	ldw	r18,8(r16)
 1011028:	902d883a 	mov	r22,r18
 101102c:	8c803a36 	bltu	r17,r18,1011118 <__ssprint_r+0x148>
 1011030:	80c0030b 	ldhu	r3,12(r16)
 1011034:	1881200c 	andi	r2,r3,1152
 1011038:	10002626 	beq	r2,zero,10110d4 <__ssprint_r+0x104>
 101103c:	80800517 	ldw	r2,20(r16)
 1011040:	81400417 	ldw	r5,16(r16)
 1011044:	89c00044 	addi	r7,r17,1
 1011048:	108d883a 	add	r6,r2,r2
 101104c:	3085883a 	add	r2,r6,r2
 1011050:	100cd7fa 	srli	r6,r2,31
 1011054:	216dc83a 	sub	r22,r4,r5
 1011058:	3d89883a 	add	r4,r7,r22
 101105c:	3085883a 	add	r2,r6,r2
 1011060:	1025d07a 	srai	r18,r2,1
 1011064:	900d883a 	mov	r6,r18
 1011068:	9100022e 	bgeu	r18,r4,1011074 <__ssprint_r+0xa4>
 101106c:	2025883a 	mov	r18,r4
 1011070:	200d883a 	mov	r6,r4
 1011074:	18c1000c 	andi	r3,r3,1024
 1011078:	a009883a 	mov	r4,r20
 101107c:	18002926 	beq	r3,zero,1011124 <__ssprint_r+0x154>
 1011080:	300b883a 	mov	r5,r6
 1011084:	100eaec0 	call	100eaec <_malloc_r>
 1011088:	102b883a 	mov	r21,r2
 101108c:	10002b26 	beq	r2,zero,101113c <__ssprint_r+0x16c>
 1011090:	81400417 	ldw	r5,16(r16)
 1011094:	1009883a 	mov	r4,r2
 1011098:	b00d883a 	mov	r6,r22
 101109c:	100f3f80 	call	100f3f8 <memcpy>
 10110a0:	8080030b 	ldhu	r2,12(r16)
 10110a4:	00fedfc4 	movi	r3,-1153
 10110a8:	10c4703a 	and	r2,r2,r3
 10110ac:	10802014 	ori	r2,r2,128
 10110b0:	8080030d 	sth	r2,12(r16)
 10110b4:	ad89883a 	add	r4,r21,r22
 10110b8:	95adc83a 	sub	r22,r18,r22
 10110bc:	84800515 	stw	r18,20(r16)
 10110c0:	85800215 	stw	r22,8(r16)
 10110c4:	85400415 	stw	r21,16(r16)
 10110c8:	81000015 	stw	r4,0(r16)
 10110cc:	8825883a 	mov	r18,r17
 10110d0:	882d883a 	mov	r22,r17
 10110d4:	e00b883a 	mov	r5,fp
 10110d8:	b00d883a 	mov	r6,r22
 10110dc:	100f5300 	call	100f530 <memmove>
 10110e0:	80c00217 	ldw	r3,8(r16)
 10110e4:	81000017 	ldw	r4,0(r16)
 10110e8:	98800217 	ldw	r2,8(r19)
 10110ec:	1ca5c83a 	sub	r18,r3,r18
 10110f0:	2589883a 	add	r4,r4,r22
 10110f4:	84800215 	stw	r18,8(r16)
 10110f8:	81000015 	stw	r4,0(r16)
 10110fc:	1463c83a 	sub	r17,r2,r17
 1011100:	9c400215 	stw	r17,8(r19)
 1011104:	88001626 	beq	r17,zero,1011160 <__ssprint_r+0x190>
 1011108:	bf000017 	ldw	fp,0(r23)
 101110c:	bc400117 	ldw	r17,4(r23)
 1011110:	bdc00204 	addi	r23,r23,8
 1011114:	003fc206 	br	1011020 <__alt_data_end+0xff811020>
 1011118:	8825883a 	mov	r18,r17
 101111c:	882d883a 	mov	r22,r17
 1011120:	003fec06 	br	10110d4 <__alt_data_end+0xff8110d4>
 1011124:	101073c0 	call	101073c <_realloc_r>
 1011128:	102b883a 	mov	r21,r2
 101112c:	103fe11e 	bne	r2,zero,10110b4 <__alt_data_end+0xff8110b4>
 1011130:	81400417 	ldw	r5,16(r16)
 1011134:	a009883a 	mov	r4,r20
 1011138:	100d31c0 	call	100d31c <_free_r>
 101113c:	80c0030b 	ldhu	r3,12(r16)
 1011140:	00800304 	movi	r2,12
 1011144:	a0800015 	stw	r2,0(r20)
 1011148:	18c01014 	ori	r3,r3,64
 101114c:	80c0030d 	sth	r3,12(r16)
 1011150:	00bfffc4 	movi	r2,-1
 1011154:	98000215 	stw	zero,8(r19)
 1011158:	98000115 	stw	zero,4(r19)
 101115c:	00000206 	br	1011168 <__ssprint_r+0x198>
 1011160:	98000115 	stw	zero,4(r19)
 1011164:	0005883a 	mov	r2,zero
 1011168:	dfc00917 	ldw	ra,36(sp)
 101116c:	df000817 	ldw	fp,32(sp)
 1011170:	ddc00717 	ldw	r23,28(sp)
 1011174:	dd800617 	ldw	r22,24(sp)
 1011178:	dd400517 	ldw	r21,20(sp)
 101117c:	dd000417 	ldw	r20,16(sp)
 1011180:	dcc00317 	ldw	r19,12(sp)
 1011184:	dc800217 	ldw	r18,8(sp)
 1011188:	dc400117 	ldw	r17,4(sp)
 101118c:	dc000017 	ldw	r16,0(sp)
 1011190:	dec00a04 	addi	sp,sp,40
 1011194:	f800283a 	ret

01011198 <___svfiprintf_internal_r>:
 1011198:	2880030b 	ldhu	r2,12(r5)
 101119c:	deffc904 	addi	sp,sp,-220
 10111a0:	dd403215 	stw	r21,200(sp)
 10111a4:	dfc03615 	stw	ra,216(sp)
 10111a8:	df003515 	stw	fp,212(sp)
 10111ac:	ddc03415 	stw	r23,208(sp)
 10111b0:	dd803315 	stw	r22,204(sp)
 10111b4:	dd003115 	stw	r20,196(sp)
 10111b8:	dcc03015 	stw	r19,192(sp)
 10111bc:	dc802f15 	stw	r18,188(sp)
 10111c0:	dc402e15 	stw	r17,184(sp)
 10111c4:	dc002d15 	stw	r16,180(sp)
 10111c8:	d9402715 	stw	r5,156(sp)
 10111cc:	d9002915 	stw	r4,164(sp)
 10111d0:	1080200c 	andi	r2,r2,128
 10111d4:	d9c02315 	stw	r7,140(sp)
 10111d8:	302b883a 	mov	r21,r6
 10111dc:	10000226 	beq	r2,zero,10111e8 <___svfiprintf_internal_r+0x50>
 10111e0:	28800417 	ldw	r2,16(r5)
 10111e4:	1003ce26 	beq	r2,zero,1012120 <___svfiprintf_internal_r+0xf88>
 10111e8:	dac01a04 	addi	r11,sp,104
 10111ec:	da8019c4 	addi	r10,sp,103
 10111f0:	dc802917 	ldw	r18,164(sp)
 10111f4:	dd002717 	ldw	r20,156(sp)
 10111f8:	04c040b4 	movhi	r19,258
 10111fc:	dac01e15 	stw	r11,120(sp)
 1011200:	5a97c83a 	sub	r11,r11,r10
 1011204:	9ce64304 	addi	r19,r19,-26356
 1011208:	da801f15 	stw	r10,124(sp)
 101120c:	dec01a15 	stw	sp,104(sp)
 1011210:	d8001c15 	stw	zero,112(sp)
 1011214:	d8001b15 	stw	zero,108(sp)
 1011218:	d8002a15 	stw	zero,168(sp)
 101121c:	d8002415 	stw	zero,144(sp)
 1011220:	d811883a 	mov	r8,sp
 1011224:	dac02b15 	stw	r11,172(sp)
 1011228:	a8800007 	ldb	r2,0(r21)
 101122c:	10026826 	beq	r2,zero,1011bd0 <___svfiprintf_internal_r+0xa38>
 1011230:	01000944 	movi	r4,37
 1011234:	11026626 	beq	r2,r4,1011bd0 <___svfiprintf_internal_r+0xa38>
 1011238:	a805883a 	mov	r2,r21
 101123c:	00000106 	br	1011244 <___svfiprintf_internal_r+0xac>
 1011240:	19000326 	beq	r3,r4,1011250 <___svfiprintf_internal_r+0xb8>
 1011244:	10800044 	addi	r2,r2,1
 1011248:	10c00007 	ldb	r3,0(r2)
 101124c:	183ffc1e 	bne	r3,zero,1011240 <__alt_data_end+0xff811240>
 1011250:	1561c83a 	sub	r16,r2,r21
 1011254:	102d883a 	mov	r22,r2
 1011258:	80000e26 	beq	r16,zero,1011294 <___svfiprintf_internal_r+0xfc>
 101125c:	d8c01c17 	ldw	r3,112(sp)
 1011260:	d8801b17 	ldw	r2,108(sp)
 1011264:	45400015 	stw	r21,0(r8)
 1011268:	1c07883a 	add	r3,r3,r16
 101126c:	10800044 	addi	r2,r2,1
 1011270:	d8c01c15 	stw	r3,112(sp)
 1011274:	44000115 	stw	r16,4(r8)
 1011278:	d8801b15 	stw	r2,108(sp)
 101127c:	00c001c4 	movi	r3,7
 1011280:	1882d616 	blt	r3,r2,1011ddc <___svfiprintf_internal_r+0xc44>
 1011284:	42000204 	addi	r8,r8,8
 1011288:	da802417 	ldw	r10,144(sp)
 101128c:	5415883a 	add	r10,r10,r16
 1011290:	da802415 	stw	r10,144(sp)
 1011294:	b0800007 	ldb	r2,0(r22)
 1011298:	10027326 	beq	r2,zero,1011c68 <___svfiprintf_internal_r+0xad0>
 101129c:	b1000047 	ldb	r4,1(r22)
 10112a0:	b5400044 	addi	r21,r22,1
 10112a4:	d8001d85 	stb	zero,118(sp)
 10112a8:	000d883a 	mov	r6,zero
 10112ac:	043fffc4 	movi	r16,-1
 10112b0:	d8002115 	stw	zero,132(sp)
 10112b4:	0023883a 	mov	r17,zero
 10112b8:	00c01604 	movi	r3,88
 10112bc:	01400244 	movi	r5,9
 10112c0:	02400a84 	movi	r9,42
 10112c4:	01c01b04 	movi	r7,108
 10112c8:	ad400044 	addi	r21,r21,1
 10112cc:	20bff804 	addi	r2,r4,-32
 10112d0:	18819536 	bltu	r3,r2,1011928 <___svfiprintf_internal_r+0x790>
 10112d4:	100490ba 	slli	r2,r2,2
 10112d8:	02c04074 	movhi	r11,257
 10112dc:	5ac4bb04 	addi	r11,r11,4844
 10112e0:	12c5883a 	add	r2,r2,r11
 10112e4:	10800017 	ldw	r2,0(r2)
 10112e8:	1000683a 	jmp	r2
 10112ec:	01011828 	cmpgeui	r4,zero,1120
 10112f0:	01011928 	cmpgeui	r4,zero,1124
 10112f4:	01011928 	cmpgeui	r4,zero,1124
 10112f8:	0101181c 	xori	r4,zero,1120
 10112fc:	01011928 	cmpgeui	r4,zero,1124
 1011300:	01011928 	cmpgeui	r4,zero,1124
 1011304:	01011928 	cmpgeui	r4,zero,1124
 1011308:	01011928 	cmpgeui	r4,zero,1124
 101130c:	01011928 	cmpgeui	r4,zero,1124
 1011310:	01011928 	cmpgeui	r4,zero,1124
 1011314:	0101154c 	andi	r4,zero,1109
 1011318:	0101195c 	xori	r4,zero,1125
 101131c:	01011928 	cmpgeui	r4,zero,1124
 1011320:	01011574 	movhi	r4,1109
 1011324:	01011968 	cmpgeui	r4,zero,1125
 1011328:	01011928 	cmpgeui	r4,zero,1124
 101132c:	01011950 	cmplti	r4,zero,1125
 1011330:	010118f0 	cmpltui	r4,zero,1123
 1011334:	010118f0 	cmpltui	r4,zero,1123
 1011338:	010118f0 	cmpltui	r4,zero,1123
 101133c:	010118f0 	cmpltui	r4,zero,1123
 1011340:	010118f0 	cmpltui	r4,zero,1123
 1011344:	010118f0 	cmpltui	r4,zero,1123
 1011348:	010118f0 	cmpltui	r4,zero,1123
 101134c:	010118f0 	cmpltui	r4,zero,1123
 1011350:	010118f0 	cmpltui	r4,zero,1123
 1011354:	01011928 	cmpgeui	r4,zero,1124
 1011358:	01011928 	cmpgeui	r4,zero,1124
 101135c:	01011928 	cmpgeui	r4,zero,1124
 1011360:	01011928 	cmpgeui	r4,zero,1124
 1011364:	01011928 	cmpgeui	r4,zero,1124
 1011368:	01011928 	cmpgeui	r4,zero,1124
 101136c:	01011928 	cmpgeui	r4,zero,1124
 1011370:	01011928 	cmpgeui	r4,zero,1124
 1011374:	01011928 	cmpgeui	r4,zero,1124
 1011378:	01011928 	cmpgeui	r4,zero,1124
 101137c:	01011888 	cmpgei	r4,zero,1122
 1011380:	01011928 	cmpgeui	r4,zero,1124
 1011384:	01011928 	cmpgeui	r4,zero,1124
 1011388:	01011928 	cmpgeui	r4,zero,1124
 101138c:	01011928 	cmpgeui	r4,zero,1124
 1011390:	01011928 	cmpgeui	r4,zero,1124
 1011394:	01011928 	cmpgeui	r4,zero,1124
 1011398:	01011928 	cmpgeui	r4,zero,1124
 101139c:	01011928 	cmpgeui	r4,zero,1124
 10113a0:	01011928 	cmpgeui	r4,zero,1124
 10113a4:	01011928 	cmpgeui	r4,zero,1124
 10113a8:	0101151c 	xori	r4,zero,1108
 10113ac:	01011928 	cmpgeui	r4,zero,1124
 10113b0:	01011928 	cmpgeui	r4,zero,1124
 10113b4:	01011928 	cmpgeui	r4,zero,1124
 10113b8:	01011928 	cmpgeui	r4,zero,1124
 10113bc:	01011928 	cmpgeui	r4,zero,1124
 10113c0:	01011450 	cmplti	r4,zero,1105
 10113c4:	01011928 	cmpgeui	r4,zero,1124
 10113c8:	01011928 	cmpgeui	r4,zero,1124
 10113cc:	0101177c 	xorhi	r4,zero,1117
 10113d0:	01011928 	cmpgeui	r4,zero,1124
 10113d4:	01011928 	cmpgeui	r4,zero,1124
 10113d8:	01011928 	cmpgeui	r4,zero,1124
 10113dc:	01011928 	cmpgeui	r4,zero,1124
 10113e0:	01011928 	cmpgeui	r4,zero,1124
 10113e4:	01011928 	cmpgeui	r4,zero,1124
 10113e8:	01011928 	cmpgeui	r4,zero,1124
 10113ec:	01011928 	cmpgeui	r4,zero,1124
 10113f0:	01011928 	cmpgeui	r4,zero,1124
 10113f4:	01011928 	cmpgeui	r4,zero,1124
 10113f8:	01011668 	cmpgeui	r4,zero,1113
 10113fc:	01011628 	cmpgeui	r4,zero,1112
 1011400:	01011928 	cmpgeui	r4,zero,1124
 1011404:	01011928 	cmpgeui	r4,zero,1124
 1011408:	01011928 	cmpgeui	r4,zero,1124
 101140c:	010117d8 	cmpnei	r4,zero,1119
 1011410:	01011628 	cmpgeui	r4,zero,1112
 1011414:	01011928 	cmpgeui	r4,zero,1124
 1011418:	01011928 	cmpgeui	r4,zero,1124
 101141c:	010117c4 	movi	r4,1119
 1011420:	01011928 	cmpgeui	r4,zero,1124
 1011424:	010117e4 	muli	r4,zero,1119
 1011428:	01011520 	cmpeqi	r4,zero,1108
 101142c:	010115e8 	cmpgeui	r4,zero,1111
 1011430:	010115dc 	xori	r4,zero,1111
 1011434:	01011928 	cmpgeui	r4,zero,1124
 1011438:	01011580 	call	101158 <__alt_mem_onchip_memory2_0+0x101158>
 101143c:	01011928 	cmpgeui	r4,zero,1124
 1011440:	01011454 	movui	r4,1105
 1011444:	01011928 	cmpgeui	r4,zero,1124
 1011448:	01011928 	cmpgeui	r4,zero,1124
 101144c:	01011844 	movi	r4,1121
 1011450:	8c400414 	ori	r17,r17,16
 1011454:	88c0080c 	andi	r3,r17,32
 1011458:	d8802317 	ldw	r2,140(sp)
 101145c:	18029626 	beq	r3,zero,1011eb8 <___svfiprintf_internal_r+0xd20>
 1011460:	dac02317 	ldw	r11,140(sp)
 1011464:	12400017 	ldw	r9,0(r2)
 1011468:	12800117 	ldw	r10,4(r2)
 101146c:	5ac00204 	addi	r11,r11,8
 1011470:	dac02315 	stw	r11,140(sp)
 1011474:	00800044 	movi	r2,1
 1011478:	4a86b03a 	or	r3,r9,r10
 101147c:	d8001d85 	stb	zero,118(sp)
 1011480:	8039883a 	mov	fp,r16
 1011484:	0017883a 	mov	r11,zero
 1011488:	80000216 	blt	r16,zero,1011494 <___svfiprintf_internal_r+0x2fc>
 101148c:	013fdfc4 	movi	r4,-129
 1011490:	8922703a 	and	r17,r17,r4
 1011494:	1801d01e 	bne	r3,zero,1011bd8 <___svfiprintf_internal_r+0xa40>
 1011498:	80024426 	beq	r16,zero,1011dac <___svfiprintf_internal_r+0xc14>
 101149c:	10803fcc 	andi	r2,r2,255
 10114a0:	00c00044 	movi	r3,1
 10114a4:	10c2b326 	beq	r2,r3,1011f74 <___svfiprintf_internal_r+0xddc>
 10114a8:	00c00084 	movi	r3,2
 10114ac:	10c25b26 	beq	r2,r3,1011e1c <___svfiprintf_internal_r+0xc84>
 10114b0:	d8c01a04 	addi	r3,sp,104
 10114b4:	4808d0fa 	srli	r4,r9,3
 10114b8:	500a977a 	slli	r5,r10,29
 10114bc:	5014d0fa 	srli	r10,r10,3
 10114c0:	4a4001cc 	andi	r9,r9,7
 10114c4:	48800c04 	addi	r2,r9,48
 10114c8:	18ffffc4 	addi	r3,r3,-1
 10114cc:	2912b03a 	or	r9,r5,r4
 10114d0:	18800005 	stb	r2,0(r3)
 10114d4:	4a88b03a 	or	r4,r9,r10
 10114d8:	203ff61e 	bne	r4,zero,10114b4 <__alt_data_end+0xff8114b4>
 10114dc:	8900004c 	andi	r4,r17,1
 10114e0:	d8c02615 	stw	r3,152(sp)
 10114e4:	2002951e 	bne	r4,zero,1011f3c <___svfiprintf_internal_r+0xda4>
 10114e8:	da801e17 	ldw	r10,120(sp)
 10114ec:	50f9c83a 	sub	fp,r10,r3
 10114f0:	df002015 	stw	fp,128(sp)
 10114f4:	e400010e 	bge	fp,r16,10114fc <___svfiprintf_internal_r+0x364>
 10114f8:	dc002015 	stw	r16,128(sp)
 10114fc:	5ac03fcc 	andi	r11,r11,255
 1011500:	5ac0201c 	xori	r11,r11,128
 1011504:	5affe004 	addi	r11,r11,-128
 1011508:	58006326 	beq	r11,zero,1011698 <___svfiprintf_internal_r+0x500>
 101150c:	d8c02017 	ldw	r3,128(sp)
 1011510:	18c00044 	addi	r3,r3,1
 1011514:	d8c02015 	stw	r3,128(sp)
 1011518:	00005f06 	br	1011698 <___svfiprintf_internal_r+0x500>
 101151c:	8c400414 	ori	r17,r17,16
 1011520:	88c0080c 	andi	r3,r17,32
 1011524:	d8802317 	ldw	r2,140(sp)
 1011528:	18027826 	beq	r3,zero,1011f0c <___svfiprintf_internal_r+0xd74>
 101152c:	dac02317 	ldw	r11,140(sp)
 1011530:	12400017 	ldw	r9,0(r2)
 1011534:	12800117 	ldw	r10,4(r2)
 1011538:	5ac00204 	addi	r11,r11,8
 101153c:	dac02315 	stw	r11,140(sp)
 1011540:	0005883a 	mov	r2,zero
 1011544:	4a86b03a 	or	r3,r9,r10
 1011548:	003fcc06 	br	101147c <__alt_data_end+0xff81147c>
 101154c:	da802317 	ldw	r10,140(sp)
 1011550:	dac02317 	ldw	r11,140(sp)
 1011554:	52800017 	ldw	r10,0(r10)
 1011558:	58800104 	addi	r2,r11,4
 101155c:	da802115 	stw	r10,132(sp)
 1011560:	50028a0e 	bge	r10,zero,1011f8c <___svfiprintf_internal_r+0xdf4>
 1011564:	da802117 	ldw	r10,132(sp)
 1011568:	d8802315 	stw	r2,140(sp)
 101156c:	0295c83a 	sub	r10,zero,r10
 1011570:	da802115 	stw	r10,132(sp)
 1011574:	8c400114 	ori	r17,r17,4
 1011578:	a9000007 	ldb	r4,0(r21)
 101157c:	003f5206 	br	10112c8 <__alt_data_end+0xff8112c8>
 1011580:	da802317 	ldw	r10,140(sp)
 1011584:	dac02317 	ldw	r11,140(sp)
 1011588:	d8001d85 	stb	zero,118(sp)
 101158c:	52800017 	ldw	r10,0(r10)
 1011590:	5dc00104 	addi	r23,r11,4
 1011594:	da802615 	stw	r10,152(sp)
 1011598:	5002eb26 	beq	r10,zero,1012148 <___svfiprintf_internal_r+0xfb0>
 101159c:	d9002617 	ldw	r4,152(sp)
 10115a0:	8002d716 	blt	r16,zero,1012100 <___svfiprintf_internal_r+0xf68>
 10115a4:	000b883a 	mov	r5,zero
 10115a8:	800d883a 	mov	r6,r16
 10115ac:	da002c15 	stw	r8,176(sp)
 10115b0:	100f2940 	call	100f294 <memchr>
 10115b4:	da002c17 	ldw	r8,176(sp)
 10115b8:	1002fb26 	beq	r2,zero,10121a8 <___svfiprintf_internal_r+0x1010>
 10115bc:	d8c02617 	ldw	r3,152(sp)
 10115c0:	10f9c83a 	sub	fp,r2,r3
 10115c4:	8700010e 	bge	r16,fp,10115cc <___svfiprintf_internal_r+0x434>
 10115c8:	8039883a 	mov	fp,r16
 10115cc:	dac01d83 	ldbu	r11,118(sp)
 10115d0:	ddc02315 	stw	r23,140(sp)
 10115d4:	0021883a 	mov	r16,zero
 10115d8:	003fc506 	br	10114f0 <__alt_data_end+0xff8114f0>
 10115dc:	8c400814 	ori	r17,r17,32
 10115e0:	a9000007 	ldb	r4,0(r21)
 10115e4:	003f3806 	br	10112c8 <__alt_data_end+0xff8112c8>
 10115e8:	dac02317 	ldw	r11,140(sp)
 10115ec:	00800c04 	movi	r2,48
 10115f0:	d8801d05 	stb	r2,116(sp)
 10115f4:	5a400017 	ldw	r9,0(r11)
 10115f8:	00801e04 	movi	r2,120
 10115fc:	d8801d45 	stb	r2,117(sp)
 1011600:	008040b4 	movhi	r2,258
 1011604:	10a5d404 	addi	r2,r2,-26800
 1011608:	5ac00104 	addi	r11,r11,4
 101160c:	d8802a15 	stw	r2,168(sp)
 1011610:	0015883a 	mov	r10,zero
 1011614:	8c400094 	ori	r17,r17,2
 1011618:	dac02315 	stw	r11,140(sp)
 101161c:	00800084 	movi	r2,2
 1011620:	4807883a 	mov	r3,r9
 1011624:	003f9506 	br	101147c <__alt_data_end+0xff81147c>
 1011628:	d9801d85 	stb	r6,118(sp)
 101162c:	8880080c 	andi	r2,r17,32
 1011630:	d8c02317 	ldw	r3,140(sp)
 1011634:	10009926 	beq	r2,zero,101189c <___svfiprintf_internal_r+0x704>
 1011638:	dac02317 	ldw	r11,140(sp)
 101163c:	18800117 	ldw	r2,4(r3)
 1011640:	1a400017 	ldw	r9,0(r3)
 1011644:	5ac00204 	addi	r11,r11,8
 1011648:	dac02315 	stw	r11,140(sp)
 101164c:	1015883a 	mov	r10,r2
 1011650:	10009d16 	blt	r2,zero,10118c8 <___svfiprintf_internal_r+0x730>
 1011654:	dac01d83 	ldbu	r11,118(sp)
 1011658:	8039883a 	mov	fp,r16
 101165c:	00800044 	movi	r2,1
 1011660:	4a86b03a 	or	r3,r9,r10
 1011664:	003f8806 	br	1011488 <__alt_data_end+0xff811488>
 1011668:	dac02317 	ldw	r11,140(sp)
 101166c:	00c00044 	movi	r3,1
 1011670:	da801004 	addi	r10,sp,64
 1011674:	58800017 	ldw	r2,0(r11)
 1011678:	5ac00104 	addi	r11,r11,4
 101167c:	d8c02015 	stw	r3,128(sp)
 1011680:	d8001d85 	stb	zero,118(sp)
 1011684:	d8801005 	stb	r2,64(sp)
 1011688:	dac02315 	stw	r11,140(sp)
 101168c:	1839883a 	mov	fp,r3
 1011690:	da802615 	stw	r10,152(sp)
 1011694:	0021883a 	mov	r16,zero
 1011698:	8a80008c 	andi	r10,r17,2
 101169c:	da802215 	stw	r10,136(sp)
 10116a0:	50000326 	beq	r10,zero,10116b0 <___svfiprintf_internal_r+0x518>
 10116a4:	dac02017 	ldw	r11,128(sp)
 10116a8:	5ac00084 	addi	r11,r11,2
 10116ac:	dac02015 	stw	r11,128(sp)
 10116b0:	88c0210c 	andi	r3,r17,132
 10116b4:	d8c02515 	stw	r3,148(sp)
 10116b8:	1800bb1e 	bne	r3,zero,10119a8 <___svfiprintf_internal_r+0x810>
 10116bc:	da802117 	ldw	r10,132(sp)
 10116c0:	dac02017 	ldw	r11,128(sp)
 10116c4:	52edc83a 	sub	r22,r10,r11
 10116c8:	0580b70e 	bge	zero,r22,10119a8 <___svfiprintf_internal_r+0x810>
 10116cc:	02400404 	movi	r9,16
 10116d0:	d8c01c17 	ldw	r3,112(sp)
 10116d4:	d8801b17 	ldw	r2,108(sp)
 10116d8:	4d82a70e 	bge	r9,r22,1012178 <___svfiprintf_internal_r+0xfe0>
 10116dc:	014040b4 	movhi	r5,258
 10116e0:	29664704 	addi	r5,r5,-26340
 10116e4:	d9402815 	stw	r5,160(sp)
 10116e8:	05c001c4 	movi	r23,7
 10116ec:	00000306 	br	10116fc <___svfiprintf_internal_r+0x564>
 10116f0:	b5bffc04 	addi	r22,r22,-16
 10116f4:	42000204 	addi	r8,r8,8
 10116f8:	4d80150e 	bge	r9,r22,1011750 <___svfiprintf_internal_r+0x5b8>
 10116fc:	028040b4 	movhi	r10,258
 1011700:	18c00404 	addi	r3,r3,16
 1011704:	10800044 	addi	r2,r2,1
 1011708:	52a64704 	addi	r10,r10,-26340
 101170c:	42800015 	stw	r10,0(r8)
 1011710:	42400115 	stw	r9,4(r8)
 1011714:	d8c01c15 	stw	r3,112(sp)
 1011718:	d8801b15 	stw	r2,108(sp)
 101171c:	b8bff40e 	bge	r23,r2,10116f0 <__alt_data_end+0xff8116f0>
 1011720:	9009883a 	mov	r4,r18
 1011724:	a00b883a 	mov	r5,r20
 1011728:	d9801a04 	addi	r6,sp,104
 101172c:	da402c15 	stw	r9,176(sp)
 1011730:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011734:	da402c17 	ldw	r9,176(sp)
 1011738:	1001511e 	bne	r2,zero,1011c80 <___svfiprintf_internal_r+0xae8>
 101173c:	b5bffc04 	addi	r22,r22,-16
 1011740:	d8c01c17 	ldw	r3,112(sp)
 1011744:	d8801b17 	ldw	r2,108(sp)
 1011748:	d811883a 	mov	r8,sp
 101174c:	4dbfeb16 	blt	r9,r22,10116fc <__alt_data_end+0xff8116fc>
 1011750:	dac02817 	ldw	r11,160(sp)
 1011754:	b0c7883a 	add	r3,r22,r3
 1011758:	10800044 	addi	r2,r2,1
 101175c:	42c00015 	stw	r11,0(r8)
 1011760:	45800115 	stw	r22,4(r8)
 1011764:	d8c01c15 	stw	r3,112(sp)
 1011768:	d8801b15 	stw	r2,108(sp)
 101176c:	010001c4 	movi	r4,7
 1011770:	2081dd16 	blt	r4,r2,1011ee8 <___svfiprintf_internal_r+0xd50>
 1011774:	42000204 	addi	r8,r8,8
 1011778:	00008d06 	br	10119b0 <___svfiprintf_internal_r+0x818>
 101177c:	00c040b4 	movhi	r3,258
 1011780:	18e5cf04 	addi	r3,r3,-26820
 1011784:	d8c02a15 	stw	r3,168(sp)
 1011788:	d9801d85 	stb	r6,118(sp)
 101178c:	88c0080c 	andi	r3,r17,32
 1011790:	d8802317 	ldw	r2,140(sp)
 1011794:	18003226 	beq	r3,zero,1011860 <___svfiprintf_internal_r+0x6c8>
 1011798:	da802317 	ldw	r10,140(sp)
 101179c:	12400017 	ldw	r9,0(r2)
 10117a0:	52800204 	addi	r10,r10,8
 10117a4:	da802315 	stw	r10,140(sp)
 10117a8:	12800117 	ldw	r10,4(r2)
 10117ac:	8880004c 	andi	r2,r17,1
 10117b0:	1001be26 	beq	r2,zero,1011eac <___svfiprintf_internal_r+0xd14>
 10117b4:	4a86b03a 	or	r3,r9,r10
 10117b8:	1802291e 	bne	r3,zero,1012060 <___svfiprintf_internal_r+0xec8>
 10117bc:	00800084 	movi	r2,2
 10117c0:	003f2e06 	br	101147c <__alt_data_end+0xff81147c>
 10117c4:	a9000007 	ldb	r4,0(r21)
 10117c8:	a805883a 	mov	r2,r21
 10117cc:	21c22a26 	beq	r4,r7,1012078 <___svfiprintf_internal_r+0xee0>
 10117d0:	8c400414 	ori	r17,r17,16
 10117d4:	003ebc06 	br	10112c8 <__alt_data_end+0xff8112c8>
 10117d8:	8c401014 	ori	r17,r17,64
 10117dc:	a9000007 	ldb	r4,0(r21)
 10117e0:	003eb906 	br	10112c8 <__alt_data_end+0xff8112c8>
 10117e4:	d9801d85 	stb	r6,118(sp)
 10117e8:	8880080c 	andi	r2,r17,32
 10117ec:	1002131e 	bne	r2,zero,101203c <___svfiprintf_internal_r+0xea4>
 10117f0:	8880040c 	andi	r2,r17,16
 10117f4:	1002241e 	bne	r2,zero,1012088 <___svfiprintf_internal_r+0xef0>
 10117f8:	8c40100c 	andi	r17,r17,64
 10117fc:	88022226 	beq	r17,zero,1012088 <___svfiprintf_internal_r+0xef0>
 1011800:	dac02317 	ldw	r11,140(sp)
 1011804:	da802417 	ldw	r10,144(sp)
 1011808:	58800017 	ldw	r2,0(r11)
 101180c:	5ac00104 	addi	r11,r11,4
 1011810:	dac02315 	stw	r11,140(sp)
 1011814:	1280000d 	sth	r10,0(r2)
 1011818:	003e8306 	br	1011228 <__alt_data_end+0xff811228>
 101181c:	8c400054 	ori	r17,r17,1
 1011820:	a9000007 	ldb	r4,0(r21)
 1011824:	003ea806 	br	10112c8 <__alt_data_end+0xff8112c8>
 1011828:	30803fcc 	andi	r2,r6,255
 101182c:	1080201c 	xori	r2,r2,128
 1011830:	10bfe004 	addi	r2,r2,-128
 1011834:	1001ff1e 	bne	r2,zero,1012034 <___svfiprintf_internal_r+0xe9c>
 1011838:	01800804 	movi	r6,32
 101183c:	a9000007 	ldb	r4,0(r21)
 1011840:	003ea106 	br	10112c8 <__alt_data_end+0xff8112c8>
 1011844:	02c040b4 	movhi	r11,258
 1011848:	5ae5d404 	addi	r11,r11,-26800
 101184c:	dac02a15 	stw	r11,168(sp)
 1011850:	d9801d85 	stb	r6,118(sp)
 1011854:	88c0080c 	andi	r3,r17,32
 1011858:	d8802317 	ldw	r2,140(sp)
 101185c:	183fce1e 	bne	r3,zero,1011798 <__alt_data_end+0xff811798>
 1011860:	88c0040c 	andi	r3,r17,16
 1011864:	1801ed1e 	bne	r3,zero,101201c <___svfiprintf_internal_r+0xe84>
 1011868:	88c0100c 	andi	r3,r17,64
 101186c:	18021a26 	beq	r3,zero,10120d8 <___svfiprintf_internal_r+0xf40>
 1011870:	da802317 	ldw	r10,140(sp)
 1011874:	1240000b 	ldhu	r9,0(r2)
 1011878:	52800104 	addi	r10,r10,4
 101187c:	da802315 	stw	r10,140(sp)
 1011880:	0015883a 	mov	r10,zero
 1011884:	003fc906 	br	10117ac <__alt_data_end+0xff8117ac>
 1011888:	8c400414 	ori	r17,r17,16
 101188c:	d9801d85 	stb	r6,118(sp)
 1011890:	8880080c 	andi	r2,r17,32
 1011894:	d8c02317 	ldw	r3,140(sp)
 1011898:	103f671e 	bne	r2,zero,1011638 <__alt_data_end+0xff811638>
 101189c:	8880040c 	andi	r2,r17,16
 10118a0:	1001c71e 	bne	r2,zero,1011fc0 <___svfiprintf_internal_r+0xe28>
 10118a4:	8880100c 	andi	r2,r17,64
 10118a8:	1001c526 	beq	r2,zero,1011fc0 <___svfiprintf_internal_r+0xe28>
 10118ac:	1a40000f 	ldh	r9,0(r3)
 10118b0:	dac02317 	ldw	r11,140(sp)
 10118b4:	4815d7fa 	srai	r10,r9,31
 10118b8:	5ac00104 	addi	r11,r11,4
 10118bc:	dac02315 	stw	r11,140(sp)
 10118c0:	5005883a 	mov	r2,r10
 10118c4:	103f630e 	bge	r2,zero,1011654 <__alt_data_end+0xff811654>
 10118c8:	0253c83a 	sub	r9,zero,r9
 10118cc:	4804c03a 	cmpne	r2,r9,zero
 10118d0:	0295c83a 	sub	r10,zero,r10
 10118d4:	5095c83a 	sub	r10,r10,r2
 10118d8:	02c00b44 	movi	r11,45
 10118dc:	dac01d85 	stb	r11,118(sp)
 10118e0:	8039883a 	mov	fp,r16
 10118e4:	00800044 	movi	r2,1
 10118e8:	4a86b03a 	or	r3,r9,r10
 10118ec:	003ee606 	br	1011488 <__alt_data_end+0xff811488>
 10118f0:	a815883a 	mov	r10,r21
 10118f4:	d8002115 	stw	zero,132(sp)
 10118f8:	20bff404 	addi	r2,r4,-48
 10118fc:	51000007 	ldb	r4,0(r10)
 1011900:	da802117 	ldw	r10,132(sp)
 1011904:	ad400044 	addi	r21,r21,1
 1011908:	52c002a4 	muli	r11,r10,10
 101190c:	a815883a 	mov	r10,r21
 1011910:	5885883a 	add	r2,r11,r2
 1011914:	d8802115 	stw	r2,132(sp)
 1011918:	20bff404 	addi	r2,r4,-48
 101191c:	28bff72e 	bgeu	r5,r2,10118fc <__alt_data_end+0xff8118fc>
 1011920:	20bff804 	addi	r2,r4,-32
 1011924:	18be6b2e 	bgeu	r3,r2,10112d4 <__alt_data_end+0xff8112d4>
 1011928:	d9801d85 	stb	r6,118(sp)
 101192c:	2000ce26 	beq	r4,zero,1011c68 <___svfiprintf_internal_r+0xad0>
 1011930:	02800044 	movi	r10,1
 1011934:	dac01004 	addi	r11,sp,64
 1011938:	da802015 	stw	r10,128(sp)
 101193c:	d9001005 	stb	r4,64(sp)
 1011940:	d8001d85 	stb	zero,118(sp)
 1011944:	5039883a 	mov	fp,r10
 1011948:	dac02615 	stw	r11,152(sp)
 101194c:	003f5106 	br	1011694 <__alt_data_end+0xff811694>
 1011950:	8c402014 	ori	r17,r17,128
 1011954:	a9000007 	ldb	r4,0(r21)
 1011958:	003e5b06 	br	10112c8 <__alt_data_end+0xff8112c8>
 101195c:	01800ac4 	movi	r6,43
 1011960:	a9000007 	ldb	r4,0(r21)
 1011964:	003e5806 	br	10112c8 <__alt_data_end+0xff8112c8>
 1011968:	a9000007 	ldb	r4,0(r21)
 101196c:	aa800044 	addi	r10,r21,1
 1011970:	22421426 	beq	r4,r9,10121c4 <___svfiprintf_internal_r+0x102c>
 1011974:	20bff404 	addi	r2,r4,-48
 1011978:	502b883a 	mov	r21,r10
 101197c:	0021883a 	mov	r16,zero
 1011980:	28be5236 	bltu	r5,r2,10112cc <__alt_data_end+0xff8112cc>
 1011984:	a9000007 	ldb	r4,0(r21)
 1011988:	840002a4 	muli	r16,r16,10
 101198c:	ad400044 	addi	r21,r21,1
 1011990:	1421883a 	add	r16,r2,r16
 1011994:	20bff404 	addi	r2,r4,-48
 1011998:	28bffa2e 	bgeu	r5,r2,1011984 <__alt_data_end+0xff811984>
 101199c:	803e4b0e 	bge	r16,zero,10112cc <__alt_data_end+0xff8112cc>
 10119a0:	043fffc4 	movi	r16,-1
 10119a4:	003e4906 	br	10112cc <__alt_data_end+0xff8112cc>
 10119a8:	d8c01c17 	ldw	r3,112(sp)
 10119ac:	d8801b17 	ldw	r2,108(sp)
 10119b0:	d9001d87 	ldb	r4,118(sp)
 10119b4:	20000b26 	beq	r4,zero,10119e4 <___svfiprintf_internal_r+0x84c>
 10119b8:	d9001d84 	addi	r4,sp,118
 10119bc:	18c00044 	addi	r3,r3,1
 10119c0:	10800044 	addi	r2,r2,1
 10119c4:	41000015 	stw	r4,0(r8)
 10119c8:	01000044 	movi	r4,1
 10119cc:	41000115 	stw	r4,4(r8)
 10119d0:	d8c01c15 	stw	r3,112(sp)
 10119d4:	d8801b15 	stw	r2,108(sp)
 10119d8:	010001c4 	movi	r4,7
 10119dc:	20811e16 	blt	r4,r2,1011e58 <___svfiprintf_internal_r+0xcc0>
 10119e0:	42000204 	addi	r8,r8,8
 10119e4:	da802217 	ldw	r10,136(sp)
 10119e8:	50000b26 	beq	r10,zero,1011a18 <___svfiprintf_internal_r+0x880>
 10119ec:	d9001d04 	addi	r4,sp,116
 10119f0:	18c00084 	addi	r3,r3,2
 10119f4:	10800044 	addi	r2,r2,1
 10119f8:	41000015 	stw	r4,0(r8)
 10119fc:	01000084 	movi	r4,2
 1011a00:	41000115 	stw	r4,4(r8)
 1011a04:	d8c01c15 	stw	r3,112(sp)
 1011a08:	d8801b15 	stw	r2,108(sp)
 1011a0c:	010001c4 	movi	r4,7
 1011a10:	20811a16 	blt	r4,r2,1011e7c <___svfiprintf_internal_r+0xce4>
 1011a14:	42000204 	addi	r8,r8,8
 1011a18:	dac02517 	ldw	r11,148(sp)
 1011a1c:	01002004 	movi	r4,128
 1011a20:	5900a826 	beq	r11,r4,1011cc4 <___svfiprintf_internal_r+0xb2c>
 1011a24:	8721c83a 	sub	r16,r16,fp
 1011a28:	0400260e 	bge	zero,r16,1011ac4 <___svfiprintf_internal_r+0x92c>
 1011a2c:	01c00404 	movi	r7,16
 1011a30:	3c01a50e 	bge	r7,r16,10120c8 <___svfiprintf_internal_r+0xf30>
 1011a34:	010040b4 	movhi	r4,258
 1011a38:	21264304 	addi	r4,r4,-26356
 1011a3c:	d9002215 	stw	r4,136(sp)
 1011a40:	382f883a 	mov	r23,r7
 1011a44:	058001c4 	movi	r22,7
 1011a48:	00000306 	br	1011a58 <___svfiprintf_internal_r+0x8c0>
 1011a4c:	843ffc04 	addi	r16,r16,-16
 1011a50:	42000204 	addi	r8,r8,8
 1011a54:	bc00110e 	bge	r23,r16,1011a9c <___svfiprintf_internal_r+0x904>
 1011a58:	18c00404 	addi	r3,r3,16
 1011a5c:	10800044 	addi	r2,r2,1
 1011a60:	44c00015 	stw	r19,0(r8)
 1011a64:	45c00115 	stw	r23,4(r8)
 1011a68:	d8c01c15 	stw	r3,112(sp)
 1011a6c:	d8801b15 	stw	r2,108(sp)
 1011a70:	b0bff60e 	bge	r22,r2,1011a4c <__alt_data_end+0xff811a4c>
 1011a74:	9009883a 	mov	r4,r18
 1011a78:	a00b883a 	mov	r5,r20
 1011a7c:	d9801a04 	addi	r6,sp,104
 1011a80:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011a84:	10007e1e 	bne	r2,zero,1011c80 <___svfiprintf_internal_r+0xae8>
 1011a88:	843ffc04 	addi	r16,r16,-16
 1011a8c:	d8c01c17 	ldw	r3,112(sp)
 1011a90:	d8801b17 	ldw	r2,108(sp)
 1011a94:	d811883a 	mov	r8,sp
 1011a98:	bc3fef16 	blt	r23,r16,1011a58 <__alt_data_end+0xff811a58>
 1011a9c:	da802217 	ldw	r10,136(sp)
 1011aa0:	1c07883a 	add	r3,r3,r16
 1011aa4:	10800044 	addi	r2,r2,1
 1011aa8:	42800015 	stw	r10,0(r8)
 1011aac:	44000115 	stw	r16,4(r8)
 1011ab0:	d8c01c15 	stw	r3,112(sp)
 1011ab4:	d8801b15 	stw	r2,108(sp)
 1011ab8:	010001c4 	movi	r4,7
 1011abc:	2080ce16 	blt	r4,r2,1011df8 <___svfiprintf_internal_r+0xc60>
 1011ac0:	42000204 	addi	r8,r8,8
 1011ac4:	dac02617 	ldw	r11,152(sp)
 1011ac8:	e0c7883a 	add	r3,fp,r3
 1011acc:	10800044 	addi	r2,r2,1
 1011ad0:	42c00015 	stw	r11,0(r8)
 1011ad4:	47000115 	stw	fp,4(r8)
 1011ad8:	d8c01c15 	stw	r3,112(sp)
 1011adc:	d8801b15 	stw	r2,108(sp)
 1011ae0:	010001c4 	movi	r4,7
 1011ae4:	2080a316 	blt	r4,r2,1011d74 <___svfiprintf_internal_r+0xbdc>
 1011ae8:	42000204 	addi	r8,r8,8
 1011aec:	8c40010c 	andi	r17,r17,4
 1011af0:	88002b26 	beq	r17,zero,1011ba0 <___svfiprintf_internal_r+0xa08>
 1011af4:	da802117 	ldw	r10,132(sp)
 1011af8:	dac02017 	ldw	r11,128(sp)
 1011afc:	52e1c83a 	sub	r16,r10,r11
 1011b00:	0400270e 	bge	zero,r16,1011ba0 <___svfiprintf_internal_r+0xa08>
 1011b04:	04400404 	movi	r17,16
 1011b08:	d8801b17 	ldw	r2,108(sp)
 1011b0c:	8c019e0e 	bge	r17,r16,1012188 <___svfiprintf_internal_r+0xff0>
 1011b10:	014040b4 	movhi	r5,258
 1011b14:	29664704 	addi	r5,r5,-26340
 1011b18:	d9402815 	stw	r5,160(sp)
 1011b1c:	070001c4 	movi	fp,7
 1011b20:	00000306 	br	1011b30 <___svfiprintf_internal_r+0x998>
 1011b24:	843ffc04 	addi	r16,r16,-16
 1011b28:	42000204 	addi	r8,r8,8
 1011b2c:	8c00130e 	bge	r17,r16,1011b7c <___svfiprintf_internal_r+0x9e4>
 1011b30:	028040b4 	movhi	r10,258
 1011b34:	18c00404 	addi	r3,r3,16
 1011b38:	10800044 	addi	r2,r2,1
 1011b3c:	52a64704 	addi	r10,r10,-26340
 1011b40:	42800015 	stw	r10,0(r8)
 1011b44:	44400115 	stw	r17,4(r8)
 1011b48:	d8c01c15 	stw	r3,112(sp)
 1011b4c:	d8801b15 	stw	r2,108(sp)
 1011b50:	e0bff40e 	bge	fp,r2,1011b24 <__alt_data_end+0xff811b24>
 1011b54:	9009883a 	mov	r4,r18
 1011b58:	a00b883a 	mov	r5,r20
 1011b5c:	d9801a04 	addi	r6,sp,104
 1011b60:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011b64:	1000461e 	bne	r2,zero,1011c80 <___svfiprintf_internal_r+0xae8>
 1011b68:	843ffc04 	addi	r16,r16,-16
 1011b6c:	d8c01c17 	ldw	r3,112(sp)
 1011b70:	d8801b17 	ldw	r2,108(sp)
 1011b74:	d811883a 	mov	r8,sp
 1011b78:	8c3fed16 	blt	r17,r16,1011b30 <__alt_data_end+0xff811b30>
 1011b7c:	dac02817 	ldw	r11,160(sp)
 1011b80:	1c07883a 	add	r3,r3,r16
 1011b84:	10800044 	addi	r2,r2,1
 1011b88:	42c00015 	stw	r11,0(r8)
 1011b8c:	44000115 	stw	r16,4(r8)
 1011b90:	d8c01c15 	stw	r3,112(sp)
 1011b94:	d8801b15 	stw	r2,108(sp)
 1011b98:	010001c4 	movi	r4,7
 1011b9c:	2080fe16 	blt	r4,r2,1011f98 <___svfiprintf_internal_r+0xe00>
 1011ba0:	dd802017 	ldw	r22,128(sp)
 1011ba4:	da802117 	ldw	r10,132(sp)
 1011ba8:	b280010e 	bge	r22,r10,1011bb0 <___svfiprintf_internal_r+0xa18>
 1011bac:	502d883a 	mov	r22,r10
 1011bb0:	dac02417 	ldw	r11,144(sp)
 1011bb4:	5d97883a 	add	r11,r11,r22
 1011bb8:	dac02415 	stw	r11,144(sp)
 1011bbc:	1800751e 	bne	r3,zero,1011d94 <___svfiprintf_internal_r+0xbfc>
 1011bc0:	a8800007 	ldb	r2,0(r21)
 1011bc4:	d8001b15 	stw	zero,108(sp)
 1011bc8:	d811883a 	mov	r8,sp
 1011bcc:	103d981e 	bne	r2,zero,1011230 <__alt_data_end+0xff811230>
 1011bd0:	a82d883a 	mov	r22,r21
 1011bd4:	003daf06 	br	1011294 <__alt_data_end+0xff811294>
 1011bd8:	10803fcc 	andi	r2,r2,255
 1011bdc:	00c00044 	movi	r3,1
 1011be0:	10fe311e 	bne	r2,r3,10114a8 <__alt_data_end+0xff8114a8>
 1011be4:	5000e126 	beq	r10,zero,1011f6c <___svfiprintf_internal_r+0xdd4>
 1011be8:	dc402015 	stw	r17,128(sp)
 1011bec:	dc002215 	stw	r16,136(sp)
 1011bf0:	dd801a04 	addi	r22,sp,104
 1011bf4:	402f883a 	mov	r23,r8
 1011bf8:	5839883a 	mov	fp,r11
 1011bfc:	4821883a 	mov	r16,r9
 1011c00:	5023883a 	mov	r17,r10
 1011c04:	8009883a 	mov	r4,r16
 1011c08:	880b883a 	mov	r5,r17
 1011c0c:	01800284 	movi	r6,10
 1011c10:	000f883a 	mov	r7,zero
 1011c14:	10146000 	call	1014600 <__umoddi3>
 1011c18:	10800c04 	addi	r2,r2,48
 1011c1c:	b5bfffc4 	addi	r22,r22,-1
 1011c20:	8009883a 	mov	r4,r16
 1011c24:	880b883a 	mov	r5,r17
 1011c28:	01800284 	movi	r6,10
 1011c2c:	000f883a 	mov	r7,zero
 1011c30:	b0800005 	stb	r2,0(r22)
 1011c34:	10140400 	call	1014040 <__udivdi3>
 1011c38:	1021883a 	mov	r16,r2
 1011c3c:	10c4b03a 	or	r2,r2,r3
 1011c40:	1823883a 	mov	r17,r3
 1011c44:	103fef1e 	bne	r2,zero,1011c04 <__alt_data_end+0xff811c04>
 1011c48:	da801e17 	ldw	r10,120(sp)
 1011c4c:	e017883a 	mov	r11,fp
 1011c50:	b811883a 	mov	r8,r23
 1011c54:	dc402017 	ldw	r17,128(sp)
 1011c58:	dc002217 	ldw	r16,136(sp)
 1011c5c:	dd802615 	stw	r22,152(sp)
 1011c60:	55b9c83a 	sub	fp,r10,r22
 1011c64:	003e2206 	br	10114f0 <__alt_data_end+0xff8114f0>
 1011c68:	d8801c17 	ldw	r2,112(sp)
 1011c6c:	10000426 	beq	r2,zero,1011c80 <___svfiprintf_internal_r+0xae8>
 1011c70:	d9002917 	ldw	r4,164(sp)
 1011c74:	d9402717 	ldw	r5,156(sp)
 1011c78:	d9801a04 	addi	r6,sp,104
 1011c7c:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011c80:	da802717 	ldw	r10,156(sp)
 1011c84:	5080030b 	ldhu	r2,12(r10)
 1011c88:	1080100c 	andi	r2,r2,64
 1011c8c:	1000511e 	bne	r2,zero,1011dd4 <___svfiprintf_internal_r+0xc3c>
 1011c90:	d8802417 	ldw	r2,144(sp)
 1011c94:	dfc03617 	ldw	ra,216(sp)
 1011c98:	df003517 	ldw	fp,212(sp)
 1011c9c:	ddc03417 	ldw	r23,208(sp)
 1011ca0:	dd803317 	ldw	r22,204(sp)
 1011ca4:	dd403217 	ldw	r21,200(sp)
 1011ca8:	dd003117 	ldw	r20,196(sp)
 1011cac:	dcc03017 	ldw	r19,192(sp)
 1011cb0:	dc802f17 	ldw	r18,188(sp)
 1011cb4:	dc402e17 	ldw	r17,184(sp)
 1011cb8:	dc002d17 	ldw	r16,180(sp)
 1011cbc:	dec03704 	addi	sp,sp,220
 1011cc0:	f800283a 	ret
 1011cc4:	da802117 	ldw	r10,132(sp)
 1011cc8:	dac02017 	ldw	r11,128(sp)
 1011ccc:	52edc83a 	sub	r22,r10,r11
 1011cd0:	05bf540e 	bge	zero,r22,1011a24 <__alt_data_end+0xff811a24>
 1011cd4:	02400404 	movi	r9,16
 1011cd8:	4d812f0e 	bge	r9,r22,1012198 <___svfiprintf_internal_r+0x1000>
 1011cdc:	014040b4 	movhi	r5,258
 1011ce0:	29664304 	addi	r5,r5,-26356
 1011ce4:	d9402215 	stw	r5,136(sp)
 1011ce8:	05c001c4 	movi	r23,7
 1011cec:	00000306 	br	1011cfc <___svfiprintf_internal_r+0xb64>
 1011cf0:	b5bffc04 	addi	r22,r22,-16
 1011cf4:	42000204 	addi	r8,r8,8
 1011cf8:	4d80130e 	bge	r9,r22,1011d48 <___svfiprintf_internal_r+0xbb0>
 1011cfc:	18c00404 	addi	r3,r3,16
 1011d00:	10800044 	addi	r2,r2,1
 1011d04:	44c00015 	stw	r19,0(r8)
 1011d08:	42400115 	stw	r9,4(r8)
 1011d0c:	d8c01c15 	stw	r3,112(sp)
 1011d10:	d8801b15 	stw	r2,108(sp)
 1011d14:	b8bff60e 	bge	r23,r2,1011cf0 <__alt_data_end+0xff811cf0>
 1011d18:	9009883a 	mov	r4,r18
 1011d1c:	a00b883a 	mov	r5,r20
 1011d20:	d9801a04 	addi	r6,sp,104
 1011d24:	da402c15 	stw	r9,176(sp)
 1011d28:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011d2c:	da402c17 	ldw	r9,176(sp)
 1011d30:	103fd31e 	bne	r2,zero,1011c80 <__alt_data_end+0xff811c80>
 1011d34:	b5bffc04 	addi	r22,r22,-16
 1011d38:	d8c01c17 	ldw	r3,112(sp)
 1011d3c:	d8801b17 	ldw	r2,108(sp)
 1011d40:	d811883a 	mov	r8,sp
 1011d44:	4dbfed16 	blt	r9,r22,1011cfc <__alt_data_end+0xff811cfc>
 1011d48:	da802217 	ldw	r10,136(sp)
 1011d4c:	1d87883a 	add	r3,r3,r22
 1011d50:	10800044 	addi	r2,r2,1
 1011d54:	42800015 	stw	r10,0(r8)
 1011d58:	45800115 	stw	r22,4(r8)
 1011d5c:	d8c01c15 	stw	r3,112(sp)
 1011d60:	d8801b15 	stw	r2,108(sp)
 1011d64:	010001c4 	movi	r4,7
 1011d68:	2080ce16 	blt	r4,r2,10120a4 <___svfiprintf_internal_r+0xf0c>
 1011d6c:	42000204 	addi	r8,r8,8
 1011d70:	003f2c06 	br	1011a24 <__alt_data_end+0xff811a24>
 1011d74:	9009883a 	mov	r4,r18
 1011d78:	a00b883a 	mov	r5,r20
 1011d7c:	d9801a04 	addi	r6,sp,104
 1011d80:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011d84:	103fbe1e 	bne	r2,zero,1011c80 <__alt_data_end+0xff811c80>
 1011d88:	d8c01c17 	ldw	r3,112(sp)
 1011d8c:	d811883a 	mov	r8,sp
 1011d90:	003f5606 	br	1011aec <__alt_data_end+0xff811aec>
 1011d94:	9009883a 	mov	r4,r18
 1011d98:	a00b883a 	mov	r5,r20
 1011d9c:	d9801a04 	addi	r6,sp,104
 1011da0:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011da4:	103f8626 	beq	r2,zero,1011bc0 <__alt_data_end+0xff811bc0>
 1011da8:	003fb506 	br	1011c80 <__alt_data_end+0xff811c80>
 1011dac:	10803fcc 	andi	r2,r2,255
 1011db0:	10003b1e 	bne	r2,zero,1011ea0 <___svfiprintf_internal_r+0xd08>
 1011db4:	8880004c 	andi	r2,r17,1
 1011db8:	10007e26 	beq	r2,zero,1011fb4 <___svfiprintf_internal_r+0xe1c>
 1011dbc:	00800c04 	movi	r2,48
 1011dc0:	d8c019c4 	addi	r3,sp,103
 1011dc4:	d88019c5 	stb	r2,103(sp)
 1011dc8:	df002b17 	ldw	fp,172(sp)
 1011dcc:	d8c02615 	stw	r3,152(sp)
 1011dd0:	003dc706 	br	10114f0 <__alt_data_end+0xff8114f0>
 1011dd4:	00bfffc4 	movi	r2,-1
 1011dd8:	003fae06 	br	1011c94 <__alt_data_end+0xff811c94>
 1011ddc:	9009883a 	mov	r4,r18
 1011de0:	a00b883a 	mov	r5,r20
 1011de4:	d9801a04 	addi	r6,sp,104
 1011de8:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011dec:	103fa41e 	bne	r2,zero,1011c80 <__alt_data_end+0xff811c80>
 1011df0:	d811883a 	mov	r8,sp
 1011df4:	003d2406 	br	1011288 <__alt_data_end+0xff811288>
 1011df8:	9009883a 	mov	r4,r18
 1011dfc:	a00b883a 	mov	r5,r20
 1011e00:	d9801a04 	addi	r6,sp,104
 1011e04:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011e08:	103f9d1e 	bne	r2,zero,1011c80 <__alt_data_end+0xff811c80>
 1011e0c:	d8c01c17 	ldw	r3,112(sp)
 1011e10:	d8801b17 	ldw	r2,108(sp)
 1011e14:	d811883a 	mov	r8,sp
 1011e18:	003f2a06 	br	1011ac4 <__alt_data_end+0xff811ac4>
 1011e1c:	d9402a17 	ldw	r5,168(sp)
 1011e20:	d8c01a04 	addi	r3,sp,104
 1011e24:	488003cc 	andi	r2,r9,15
 1011e28:	5008973a 	slli	r4,r10,28
 1011e2c:	2885883a 	add	r2,r5,r2
 1011e30:	4812d13a 	srli	r9,r9,4
 1011e34:	10800003 	ldbu	r2,0(r2)
 1011e38:	5014d13a 	srli	r10,r10,4
 1011e3c:	18ffffc4 	addi	r3,r3,-1
 1011e40:	2252b03a 	or	r9,r4,r9
 1011e44:	18800005 	stb	r2,0(r3)
 1011e48:	4a84b03a 	or	r2,r9,r10
 1011e4c:	103ff51e 	bne	r2,zero,1011e24 <__alt_data_end+0xff811e24>
 1011e50:	d8c02615 	stw	r3,152(sp)
 1011e54:	003da406 	br	10114e8 <__alt_data_end+0xff8114e8>
 1011e58:	9009883a 	mov	r4,r18
 1011e5c:	a00b883a 	mov	r5,r20
 1011e60:	d9801a04 	addi	r6,sp,104
 1011e64:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011e68:	103f851e 	bne	r2,zero,1011c80 <__alt_data_end+0xff811c80>
 1011e6c:	d8c01c17 	ldw	r3,112(sp)
 1011e70:	d8801b17 	ldw	r2,108(sp)
 1011e74:	d811883a 	mov	r8,sp
 1011e78:	003eda06 	br	10119e4 <__alt_data_end+0xff8119e4>
 1011e7c:	9009883a 	mov	r4,r18
 1011e80:	a00b883a 	mov	r5,r20
 1011e84:	d9801a04 	addi	r6,sp,104
 1011e88:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011e8c:	103f7c1e 	bne	r2,zero,1011c80 <__alt_data_end+0xff811c80>
 1011e90:	d8c01c17 	ldw	r3,112(sp)
 1011e94:	d8801b17 	ldw	r2,108(sp)
 1011e98:	d811883a 	mov	r8,sp
 1011e9c:	003ede06 	br	1011a18 <__alt_data_end+0xff811a18>
 1011ea0:	da801a04 	addi	r10,sp,104
 1011ea4:	da802615 	stw	r10,152(sp)
 1011ea8:	003d9106 	br	10114f0 <__alt_data_end+0xff8114f0>
 1011eac:	00800084 	movi	r2,2
 1011eb0:	4a86b03a 	or	r3,r9,r10
 1011eb4:	003d7106 	br	101147c <__alt_data_end+0xff81147c>
 1011eb8:	88c0040c 	andi	r3,r17,16
 1011ebc:	18004f1e 	bne	r3,zero,1011ffc <___svfiprintf_internal_r+0xe64>
 1011ec0:	88c0100c 	andi	r3,r17,64
 1011ec4:	18004d26 	beq	r3,zero,1011ffc <___svfiprintf_internal_r+0xe64>
 1011ec8:	dac02317 	ldw	r11,140(sp)
 1011ecc:	1240000b 	ldhu	r9,0(r2)
 1011ed0:	0015883a 	mov	r10,zero
 1011ed4:	5ac00104 	addi	r11,r11,4
 1011ed8:	dac02315 	stw	r11,140(sp)
 1011edc:	00800044 	movi	r2,1
 1011ee0:	4807883a 	mov	r3,r9
 1011ee4:	003d6506 	br	101147c <__alt_data_end+0xff81147c>
 1011ee8:	9009883a 	mov	r4,r18
 1011eec:	a00b883a 	mov	r5,r20
 1011ef0:	d9801a04 	addi	r6,sp,104
 1011ef4:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011ef8:	103f611e 	bne	r2,zero,1011c80 <__alt_data_end+0xff811c80>
 1011efc:	d8c01c17 	ldw	r3,112(sp)
 1011f00:	d8801b17 	ldw	r2,108(sp)
 1011f04:	d811883a 	mov	r8,sp
 1011f08:	003ea906 	br	10119b0 <__alt_data_end+0xff8119b0>
 1011f0c:	88c0040c 	andi	r3,r17,16
 1011f10:	1800321e 	bne	r3,zero,1011fdc <___svfiprintf_internal_r+0xe44>
 1011f14:	88c0100c 	andi	r3,r17,64
 1011f18:	18003026 	beq	r3,zero,1011fdc <___svfiprintf_internal_r+0xe44>
 1011f1c:	dac02317 	ldw	r11,140(sp)
 1011f20:	1240000b 	ldhu	r9,0(r2)
 1011f24:	0015883a 	mov	r10,zero
 1011f28:	5ac00104 	addi	r11,r11,4
 1011f2c:	dac02315 	stw	r11,140(sp)
 1011f30:	0005883a 	mov	r2,zero
 1011f34:	4807883a 	mov	r3,r9
 1011f38:	003d5006 	br	101147c <__alt_data_end+0xff81147c>
 1011f3c:	10803fcc 	andi	r2,r2,255
 1011f40:	1080201c 	xori	r2,r2,128
 1011f44:	10bfe004 	addi	r2,r2,-128
 1011f48:	01000c04 	movi	r4,48
 1011f4c:	11006826 	beq	r2,r4,10120f0 <___svfiprintf_internal_r+0xf58>
 1011f50:	da802617 	ldw	r10,152(sp)
 1011f54:	d8801e17 	ldw	r2,120(sp)
 1011f58:	193fffc5 	stb	r4,-1(r3)
 1011f5c:	52bfffc4 	addi	r10,r10,-1
 1011f60:	da802615 	stw	r10,152(sp)
 1011f64:	12b9c83a 	sub	fp,r2,r10
 1011f68:	003d6106 	br	10114f0 <__alt_data_end+0xff8114f0>
 1011f6c:	00800244 	movi	r2,9
 1011f70:	127f1d36 	bltu	r2,r9,1011be8 <__alt_data_end+0xff811be8>
 1011f74:	4a400c04 	addi	r9,r9,48
 1011f78:	d8c019c4 	addi	r3,sp,103
 1011f7c:	da4019c5 	stb	r9,103(sp)
 1011f80:	df002b17 	ldw	fp,172(sp)
 1011f84:	d8c02615 	stw	r3,152(sp)
 1011f88:	003d5906 	br	10114f0 <__alt_data_end+0xff8114f0>
 1011f8c:	d8802315 	stw	r2,140(sp)
 1011f90:	a9000007 	ldb	r4,0(r21)
 1011f94:	003ccc06 	br	10112c8 <__alt_data_end+0xff8112c8>
 1011f98:	9009883a 	mov	r4,r18
 1011f9c:	a00b883a 	mov	r5,r20
 1011fa0:	d9801a04 	addi	r6,sp,104
 1011fa4:	1010fd00 	call	1010fd0 <__ssprint_r>
 1011fa8:	103f351e 	bne	r2,zero,1011c80 <__alt_data_end+0xff811c80>
 1011fac:	d8c01c17 	ldw	r3,112(sp)
 1011fb0:	003efb06 	br	1011ba0 <__alt_data_end+0xff811ba0>
 1011fb4:	d8c01a04 	addi	r3,sp,104
 1011fb8:	d8c02615 	stw	r3,152(sp)
 1011fbc:	003d4c06 	br	10114f0 <__alt_data_end+0xff8114f0>
 1011fc0:	da802317 	ldw	r10,140(sp)
 1011fc4:	1a400017 	ldw	r9,0(r3)
 1011fc8:	52800104 	addi	r10,r10,4
 1011fcc:	da802315 	stw	r10,140(sp)
 1011fd0:	4815d7fa 	srai	r10,r9,31
 1011fd4:	5005883a 	mov	r2,r10
 1011fd8:	003d9d06 	br	1011650 <__alt_data_end+0xff811650>
 1011fdc:	da802317 	ldw	r10,140(sp)
 1011fe0:	12400017 	ldw	r9,0(r2)
 1011fe4:	0005883a 	mov	r2,zero
 1011fe8:	52800104 	addi	r10,r10,4
 1011fec:	da802315 	stw	r10,140(sp)
 1011ff0:	4807883a 	mov	r3,r9
 1011ff4:	0015883a 	mov	r10,zero
 1011ff8:	003d2006 	br	101147c <__alt_data_end+0xff81147c>
 1011ffc:	da802317 	ldw	r10,140(sp)
 1012000:	12400017 	ldw	r9,0(r2)
 1012004:	00800044 	movi	r2,1
 1012008:	52800104 	addi	r10,r10,4
 101200c:	da802315 	stw	r10,140(sp)
 1012010:	4807883a 	mov	r3,r9
 1012014:	0015883a 	mov	r10,zero
 1012018:	003d1806 	br	101147c <__alt_data_end+0xff81147c>
 101201c:	dac02317 	ldw	r11,140(sp)
 1012020:	12400017 	ldw	r9,0(r2)
 1012024:	0015883a 	mov	r10,zero
 1012028:	5ac00104 	addi	r11,r11,4
 101202c:	dac02315 	stw	r11,140(sp)
 1012030:	003dde06 	br	10117ac <__alt_data_end+0xff8117ac>
 1012034:	a9000007 	ldb	r4,0(r21)
 1012038:	003ca306 	br	10112c8 <__alt_data_end+0xff8112c8>
 101203c:	dac02317 	ldw	r11,140(sp)
 1012040:	da802417 	ldw	r10,144(sp)
 1012044:	58800017 	ldw	r2,0(r11)
 1012048:	5007d7fa 	srai	r3,r10,31
 101204c:	5ac00104 	addi	r11,r11,4
 1012050:	dac02315 	stw	r11,140(sp)
 1012054:	12800015 	stw	r10,0(r2)
 1012058:	10c00115 	stw	r3,4(r2)
 101205c:	003c7206 	br	1011228 <__alt_data_end+0xff811228>
 1012060:	00800c04 	movi	r2,48
 1012064:	d8801d05 	stb	r2,116(sp)
 1012068:	d9001d45 	stb	r4,117(sp)
 101206c:	8c400094 	ori	r17,r17,2
 1012070:	00800084 	movi	r2,2
 1012074:	003d0106 	br	101147c <__alt_data_end+0xff81147c>
 1012078:	ad400044 	addi	r21,r21,1
 101207c:	8c400814 	ori	r17,r17,32
 1012080:	11000047 	ldb	r4,1(r2)
 1012084:	003c9006 	br	10112c8 <__alt_data_end+0xff8112c8>
 1012088:	dac02317 	ldw	r11,140(sp)
 101208c:	da802417 	ldw	r10,144(sp)
 1012090:	58800017 	ldw	r2,0(r11)
 1012094:	5ac00104 	addi	r11,r11,4
 1012098:	dac02315 	stw	r11,140(sp)
 101209c:	12800015 	stw	r10,0(r2)
 10120a0:	003c6106 	br	1011228 <__alt_data_end+0xff811228>
 10120a4:	9009883a 	mov	r4,r18
 10120a8:	a00b883a 	mov	r5,r20
 10120ac:	d9801a04 	addi	r6,sp,104
 10120b0:	1010fd00 	call	1010fd0 <__ssprint_r>
 10120b4:	103ef21e 	bne	r2,zero,1011c80 <__alt_data_end+0xff811c80>
 10120b8:	d8c01c17 	ldw	r3,112(sp)
 10120bc:	d8801b17 	ldw	r2,108(sp)
 10120c0:	d811883a 	mov	r8,sp
 10120c4:	003e5706 	br	1011a24 <__alt_data_end+0xff811a24>
 10120c8:	02c040b4 	movhi	r11,258
 10120cc:	5ae64304 	addi	r11,r11,-26356
 10120d0:	dac02215 	stw	r11,136(sp)
 10120d4:	003e7106 	br	1011a9c <__alt_data_end+0xff811a9c>
 10120d8:	dac02317 	ldw	r11,140(sp)
 10120dc:	12400017 	ldw	r9,0(r2)
 10120e0:	0015883a 	mov	r10,zero
 10120e4:	5ac00104 	addi	r11,r11,4
 10120e8:	dac02315 	stw	r11,140(sp)
 10120ec:	003daf06 	br	10117ac <__alt_data_end+0xff8117ac>
 10120f0:	da801e17 	ldw	r10,120(sp)
 10120f4:	d8c02617 	ldw	r3,152(sp)
 10120f8:	50f9c83a 	sub	fp,r10,r3
 10120fc:	003cfc06 	br	10114f0 <__alt_data_end+0xff8114f0>
 1012100:	da002c15 	stw	r8,176(sp)
 1012104:	1004fa80 	call	1004fa8 <strlen>
 1012108:	1039883a 	mov	fp,r2
 101210c:	dac01d83 	ldbu	r11,118(sp)
 1012110:	ddc02315 	stw	r23,140(sp)
 1012114:	0021883a 	mov	r16,zero
 1012118:	da002c17 	ldw	r8,176(sp)
 101211c:	003cf406 	br	10114f0 <__alt_data_end+0xff8114f0>
 1012120:	04001004 	movi	r16,64
 1012124:	800b883a 	mov	r5,r16
 1012128:	100eaec0 	call	100eaec <_malloc_r>
 101212c:	da802717 	ldw	r10,156(sp)
 1012130:	50800015 	stw	r2,0(r10)
 1012134:	50800415 	stw	r2,16(r10)
 1012138:	10002c26 	beq	r2,zero,10121ec <___svfiprintf_internal_r+0x1054>
 101213c:	da802717 	ldw	r10,156(sp)
 1012140:	54000515 	stw	r16,20(r10)
 1012144:	003c2806 	br	10111e8 <__alt_data_end+0xff8111e8>
 1012148:	00800184 	movi	r2,6
 101214c:	1400012e 	bgeu	r2,r16,1012154 <___svfiprintf_internal_r+0xfbc>
 1012150:	1021883a 	mov	r16,r2
 1012154:	8039883a 	mov	fp,r16
 1012158:	802d883a 	mov	r22,r16
 101215c:	80001716 	blt	r16,zero,10121bc <___svfiprintf_internal_r+0x1024>
 1012160:	008040b4 	movhi	r2,258
 1012164:	10a5d904 	addi	r2,r2,-26780
 1012168:	dd802015 	stw	r22,128(sp)
 101216c:	ddc02315 	stw	r23,140(sp)
 1012170:	d8802615 	stw	r2,152(sp)
 1012174:	003d4706 	br	1011694 <__alt_data_end+0xff811694>
 1012178:	010040b4 	movhi	r4,258
 101217c:	21264704 	addi	r4,r4,-26340
 1012180:	d9002815 	stw	r4,160(sp)
 1012184:	003d7206 	br	1011750 <__alt_data_end+0xff811750>
 1012188:	010040b4 	movhi	r4,258
 101218c:	21264704 	addi	r4,r4,-26340
 1012190:	d9002815 	stw	r4,160(sp)
 1012194:	003e7906 	br	1011b7c <__alt_data_end+0xff811b7c>
 1012198:	010040b4 	movhi	r4,258
 101219c:	21264304 	addi	r4,r4,-26356
 10121a0:	d9002215 	stw	r4,136(sp)
 10121a4:	003ee806 	br	1011d48 <__alt_data_end+0xff811d48>
 10121a8:	8039883a 	mov	fp,r16
 10121ac:	dac01d83 	ldbu	r11,118(sp)
 10121b0:	ddc02315 	stw	r23,140(sp)
 10121b4:	0021883a 	mov	r16,zero
 10121b8:	003ccd06 	br	10114f0 <__alt_data_end+0xff8114f0>
 10121bc:	002d883a 	mov	r22,zero
 10121c0:	003fe706 	br	1012160 <__alt_data_end+0xff812160>
 10121c4:	dac02317 	ldw	r11,140(sp)
 10121c8:	a805883a 	mov	r2,r21
 10121cc:	502b883a 	mov	r21,r10
 10121d0:	5c000017 	ldw	r16,0(r11)
 10121d4:	59000104 	addi	r4,r11,4
 10121d8:	d9002315 	stw	r4,140(sp)
 10121dc:	803fa80e 	bge	r16,zero,1012080 <__alt_data_end+0xff812080>
 10121e0:	043fffc4 	movi	r16,-1
 10121e4:	11000047 	ldb	r4,1(r2)
 10121e8:	003c3706 	br	10112c8 <__alt_data_end+0xff8112c8>
 10121ec:	dac02917 	ldw	r11,164(sp)
 10121f0:	00800304 	movi	r2,12
 10121f4:	58800015 	stw	r2,0(r11)
 10121f8:	00bfffc4 	movi	r2,-1
 10121fc:	003ea506 	br	1011c94 <__alt_data_end+0xff811c94>

01012200 <__sprint_r.part.0>:
 1012200:	28801917 	ldw	r2,100(r5)
 1012204:	defff604 	addi	sp,sp,-40
 1012208:	dd400515 	stw	r21,20(sp)
 101220c:	dcc00315 	stw	r19,12(sp)
 1012210:	dfc00915 	stw	ra,36(sp)
 1012214:	df000815 	stw	fp,32(sp)
 1012218:	ddc00715 	stw	r23,28(sp)
 101221c:	dd800615 	stw	r22,24(sp)
 1012220:	dd000415 	stw	r20,16(sp)
 1012224:	dc800215 	stw	r18,8(sp)
 1012228:	dc400115 	stw	r17,4(sp)
 101222c:	dc000015 	stw	r16,0(sp)
 1012230:	1088000c 	andi	r2,r2,8192
 1012234:	2827883a 	mov	r19,r5
 1012238:	302b883a 	mov	r21,r6
 101223c:	10002d26 	beq	r2,zero,10122f4 <__sprint_r.part.0+0xf4>
 1012240:	30800217 	ldw	r2,8(r6)
 1012244:	35800017 	ldw	r22,0(r6)
 1012248:	10002826 	beq	r2,zero,10122ec <__sprint_r.part.0+0xec>
 101224c:	2029883a 	mov	r20,r4
 1012250:	b5c00104 	addi	r23,r22,4
 1012254:	04bfffc4 	movi	r18,-1
 1012258:	bc400017 	ldw	r17,0(r23)
 101225c:	b4000017 	ldw	r16,0(r22)
 1012260:	0039883a 	mov	fp,zero
 1012264:	8822d0ba 	srli	r17,r17,2
 1012268:	04400316 	blt	zero,r17,1012278 <__sprint_r.part.0+0x78>
 101226c:	00001706 	br	10122cc <__sprint_r.part.0+0xcc>
 1012270:	84000104 	addi	r16,r16,4
 1012274:	8f001526 	beq	r17,fp,10122cc <__sprint_r.part.0+0xcc>
 1012278:	81400017 	ldw	r5,0(r16)
 101227c:	a009883a 	mov	r4,r20
 1012280:	980d883a 	mov	r6,r19
 1012284:	101391c0 	call	101391c <_fputwc_r>
 1012288:	e7000044 	addi	fp,fp,1
 101228c:	14bff81e 	bne	r2,r18,1012270 <__alt_data_end+0xff812270>
 1012290:	9005883a 	mov	r2,r18
 1012294:	a8000215 	stw	zero,8(r21)
 1012298:	a8000115 	stw	zero,4(r21)
 101229c:	dfc00917 	ldw	ra,36(sp)
 10122a0:	df000817 	ldw	fp,32(sp)
 10122a4:	ddc00717 	ldw	r23,28(sp)
 10122a8:	dd800617 	ldw	r22,24(sp)
 10122ac:	dd400517 	ldw	r21,20(sp)
 10122b0:	dd000417 	ldw	r20,16(sp)
 10122b4:	dcc00317 	ldw	r19,12(sp)
 10122b8:	dc800217 	ldw	r18,8(sp)
 10122bc:	dc400117 	ldw	r17,4(sp)
 10122c0:	dc000017 	ldw	r16,0(sp)
 10122c4:	dec00a04 	addi	sp,sp,40
 10122c8:	f800283a 	ret
 10122cc:	a8c00217 	ldw	r3,8(r21)
 10122d0:	8c63883a 	add	r17,r17,r17
 10122d4:	8c63883a 	add	r17,r17,r17
 10122d8:	1c45c83a 	sub	r2,r3,r17
 10122dc:	a8800215 	stw	r2,8(r21)
 10122e0:	b5800204 	addi	r22,r22,8
 10122e4:	bdc00204 	addi	r23,r23,8
 10122e8:	103fdb1e 	bne	r2,zero,1012258 <__alt_data_end+0xff812258>
 10122ec:	0005883a 	mov	r2,zero
 10122f0:	003fe806 	br	1012294 <__alt_data_end+0xff812294>
 10122f4:	100d60c0 	call	100d60c <__sfvwrite_r>
 10122f8:	003fe606 	br	1012294 <__alt_data_end+0xff812294>

010122fc <__sprint_r>:
 10122fc:	30c00217 	ldw	r3,8(r6)
 1012300:	18000126 	beq	r3,zero,1012308 <__sprint_r+0xc>
 1012304:	10122001 	jmpi	1012200 <__sprint_r.part.0>
 1012308:	30000115 	stw	zero,4(r6)
 101230c:	0005883a 	mov	r2,zero
 1012310:	f800283a 	ret

01012314 <___vfiprintf_internal_r>:
 1012314:	defeca04 	addi	sp,sp,-1240
 1012318:	dd813215 	stw	r22,1224(sp)
 101231c:	dd013015 	stw	r20,1216(sp)
 1012320:	dfc13515 	stw	ra,1236(sp)
 1012324:	df013415 	stw	fp,1232(sp)
 1012328:	ddc13315 	stw	r23,1228(sp)
 101232c:	dd413115 	stw	r21,1220(sp)
 1012330:	dcc12f15 	stw	r19,1212(sp)
 1012334:	dc812e15 	stw	r18,1208(sp)
 1012338:	dc412d15 	stw	r17,1204(sp)
 101233c:	dc012c15 	stw	r16,1200(sp)
 1012340:	d9012015 	stw	r4,1152(sp)
 1012344:	d9c12115 	stw	r7,1156(sp)
 1012348:	2829883a 	mov	r20,r5
 101234c:	302d883a 	mov	r22,r6
 1012350:	20000226 	beq	r4,zero,101235c <___vfiprintf_internal_r+0x48>
 1012354:	20800e17 	ldw	r2,56(r4)
 1012358:	1001d326 	beq	r2,zero,1012aa8 <___vfiprintf_internal_r+0x794>
 101235c:	a0c0030b 	ldhu	r3,12(r20)
 1012360:	1908000c 	andi	r4,r3,8192
 1012364:	1805883a 	mov	r2,r3
 1012368:	2000071e 	bne	r4,zero,1012388 <___vfiprintf_internal_r+0x74>
 101236c:	a1001917 	ldw	r4,100(r20)
 1012370:	18880014 	ori	r2,r3,8192
 1012374:	00f7ffc4 	movi	r3,-8193
 1012378:	20c8703a 	and	r4,r4,r3
 101237c:	a080030d 	sth	r2,12(r20)
 1012380:	1007883a 	mov	r3,r2
 1012384:	a1001915 	stw	r4,100(r20)
 1012388:	1100020c 	andi	r4,r2,8
 101238c:	20018926 	beq	r4,zero,10129b4 <___vfiprintf_internal_r+0x6a0>
 1012390:	a1000417 	ldw	r4,16(r20)
 1012394:	20018726 	beq	r4,zero,10129b4 <___vfiprintf_internal_r+0x6a0>
 1012398:	1080068c 	andi	r2,r2,26
 101239c:	01000284 	movi	r4,10
 10123a0:	11018d26 	beq	r2,r4,10129d8 <___vfiprintf_internal_r+0x6c4>
 10123a4:	da810a04 	addi	r10,sp,1064
 10123a8:	dac109c4 	addi	r11,sp,1063
 10123ac:	070040b4 	movhi	fp,258
 10123b0:	05c040b4 	movhi	r23,258
 10123b4:	da811e15 	stw	r10,1144(sp)
 10123b8:	52d5c83a 	sub	r10,r10,r11
 10123bc:	e7264f04 	addi	fp,fp,-26308
 10123c0:	bde64b04 	addi	r23,r23,-26324
 10123c4:	dac11f15 	stw	r11,1148(sp)
 10123c8:	dec11a15 	stw	sp,1128(sp)
 10123cc:	d8011c15 	stw	zero,1136(sp)
 10123d0:	d8011b15 	stw	zero,1132(sp)
 10123d4:	d8012615 	stw	zero,1176(sp)
 10123d8:	d8012215 	stw	zero,1160(sp)
 10123dc:	da812715 	stw	r10,1180(sp)
 10123e0:	d811883a 	mov	r8,sp
 10123e4:	b021883a 	mov	r16,r22
 10123e8:	80800007 	ldb	r2,0(r16)
 10123ec:	10039c26 	beq	r2,zero,1013260 <___vfiprintf_internal_r+0xf4c>
 10123f0:	01000944 	movi	r4,37
 10123f4:	11039a26 	beq	r2,r4,1013260 <___vfiprintf_internal_r+0xf4c>
 10123f8:	8005883a 	mov	r2,r16
 10123fc:	00000106 	br	1012404 <___vfiprintf_internal_r+0xf0>
 1012400:	19000326 	beq	r3,r4,1012410 <___vfiprintf_internal_r+0xfc>
 1012404:	10800044 	addi	r2,r2,1
 1012408:	10c00007 	ldb	r3,0(r2)
 101240c:	183ffc1e 	bne	r3,zero,1012400 <__alt_data_end+0xff812400>
 1012410:	1425c83a 	sub	r18,r2,r16
 1012414:	1023883a 	mov	r17,r2
 1012418:	90001026 	beq	r18,zero,101245c <___vfiprintf_internal_r+0x148>
 101241c:	d8c11c17 	ldw	r3,1136(sp)
 1012420:	d8811b17 	ldw	r2,1132(sp)
 1012424:	44000015 	stw	r16,0(r8)
 1012428:	90c7883a 	add	r3,r18,r3
 101242c:	10800044 	addi	r2,r2,1
 1012430:	44800115 	stw	r18,4(r8)
 1012434:	d8c11c15 	stw	r3,1136(sp)
 1012438:	d8811b15 	stw	r2,1132(sp)
 101243c:	010001c4 	movi	r4,7
 1012440:	2080750e 	bge	r4,r2,1012618 <___vfiprintf_internal_r+0x304>
 1012444:	18039d1e 	bne	r3,zero,10132bc <___vfiprintf_internal_r+0xfa8>
 1012448:	dac12217 	ldw	r11,1160(sp)
 101244c:	d8011b15 	stw	zero,1132(sp)
 1012450:	d811883a 	mov	r8,sp
 1012454:	5c97883a 	add	r11,r11,r18
 1012458:	dac12215 	stw	r11,1160(sp)
 101245c:	88800007 	ldb	r2,0(r17)
 1012460:	1002e026 	beq	r2,zero,1012fe4 <___vfiprintf_internal_r+0xcd0>
 1012464:	88c00047 	ldb	r3,1(r17)
 1012468:	8c000044 	addi	r16,r17,1
 101246c:	d8011d85 	stb	zero,1142(sp)
 1012470:	000d883a 	mov	r6,zero
 1012474:	027fffc4 	movi	r9,-1
 1012478:	0027883a 	mov	r19,zero
 101247c:	002b883a 	mov	r21,zero
 1012480:	01001604 	movi	r4,88
 1012484:	01400244 	movi	r5,9
 1012488:	03000a84 	movi	r12,42
 101248c:	01c01b04 	movi	r7,108
 1012490:	84000044 	addi	r16,r16,1
 1012494:	18bff804 	addi	r2,r3,-32
 1012498:	20825f36 	bltu	r4,r2,1012e18 <___vfiprintf_internal_r+0xb04>
 101249c:	100490ba 	slli	r2,r2,2
 10124a0:	02804074 	movhi	r10,257
 10124a4:	52892d04 	addi	r10,r10,9396
 10124a8:	1285883a 	add	r2,r2,r10
 10124ac:	10800017 	ldw	r2,0(r2)
 10124b0:	1000683a 	jmp	r2
 10124b4:	01012c88 	cmpgei	r4,zero,1202
 10124b8:	01012e18 	cmpnei	r4,zero,1208
 10124bc:	01012e18 	cmpnei	r4,zero,1208
 10124c0:	01012e0c 	andi	r4,zero,1208
 10124c4:	01012e18 	cmpnei	r4,zero,1208
 10124c8:	01012e18 	cmpnei	r4,zero,1208
 10124cc:	01012e18 	cmpnei	r4,zero,1208
 10124d0:	01012e18 	cmpnei	r4,zero,1208
 10124d4:	01012e18 	cmpnei	r4,zero,1208
 10124d8:	01012e18 	cmpnei	r4,zero,1208
 10124dc:	01012de4 	muli	r4,zero,1207
 10124e0:	01012e00 	call	1012e0 <__alt_mem_onchip_memory2_0+0x1012e0>
 10124e4:	01012e18 	cmpnei	r4,zero,1208
 10124e8:	01012ab8 	rdprs	r4,zero,1194
 10124ec:	01012c18 	cmpnei	r4,zero,1200
 10124f0:	01012e18 	cmpnei	r4,zero,1208
 10124f4:	01012b9c 	xori	r4,zero,1198
 10124f8:	01012ba8 	cmpgeui	r4,zero,1198
 10124fc:	01012ba8 	cmpgeui	r4,zero,1198
 1012500:	01012ba8 	cmpgeui	r4,zero,1198
 1012504:	01012ba8 	cmpgeui	r4,zero,1198
 1012508:	01012ba8 	cmpgeui	r4,zero,1198
 101250c:	01012ba8 	cmpgeui	r4,zero,1198
 1012510:	01012ba8 	cmpgeui	r4,zero,1198
 1012514:	01012ba8 	cmpgeui	r4,zero,1198
 1012518:	01012ba8 	cmpgeui	r4,zero,1198
 101251c:	01012e18 	cmpnei	r4,zero,1208
 1012520:	01012e18 	cmpnei	r4,zero,1208
 1012524:	01012e18 	cmpnei	r4,zero,1208
 1012528:	01012e18 	cmpnei	r4,zero,1208
 101252c:	01012e18 	cmpnei	r4,zero,1208
 1012530:	01012e18 	cmpnei	r4,zero,1208
 1012534:	01012e18 	cmpnei	r4,zero,1208
 1012538:	01012e18 	cmpnei	r4,zero,1208
 101253c:	01012e18 	cmpnei	r4,zero,1208
 1012540:	01012e18 	cmpnei	r4,zero,1208
 1012544:	01012bd4 	movui	r4,1199
 1012548:	01012e18 	cmpnei	r4,zero,1208
 101254c:	01012e18 	cmpnei	r4,zero,1208
 1012550:	01012e18 	cmpnei	r4,zero,1208
 1012554:	01012e18 	cmpnei	r4,zero,1208
 1012558:	01012e18 	cmpnei	r4,zero,1208
 101255c:	01012e18 	cmpnei	r4,zero,1208
 1012560:	01012e18 	cmpnei	r4,zero,1208
 1012564:	01012e18 	cmpnei	r4,zero,1208
 1012568:	01012e18 	cmpnei	r4,zero,1208
 101256c:	01012e18 	cmpnei	r4,zero,1208
 1012570:	01012668 	cmpgeui	r4,zero,1177
 1012574:	01012e18 	cmpnei	r4,zero,1208
 1012578:	01012e18 	cmpnei	r4,zero,1208
 101257c:	01012e18 	cmpnei	r4,zero,1208
 1012580:	01012e18 	cmpnei	r4,zero,1208
 1012584:	01012e18 	cmpnei	r4,zero,1208
 1012588:	0101262c 	andhi	r4,zero,1176
 101258c:	01012e18 	cmpnei	r4,zero,1208
 1012590:	01012e18 	cmpnei	r4,zero,1208
 1012594:	01012b14 	movui	r4,1196
 1012598:	01012e18 	cmpnei	r4,zero,1208
 101259c:	01012e18 	cmpnei	r4,zero,1208
 10125a0:	01012e18 	cmpnei	r4,zero,1208
 10125a4:	01012e18 	cmpnei	r4,zero,1208
 10125a8:	01012e18 	cmpnei	r4,zero,1208
 10125ac:	01012e18 	cmpnei	r4,zero,1208
 10125b0:	01012e18 	cmpnei	r4,zero,1208
 10125b4:	01012e18 	cmpnei	r4,zero,1208
 10125b8:	01012e18 	cmpnei	r4,zero,1208
 10125bc:	01012e18 	cmpnei	r4,zero,1208
 10125c0:	01012b6c 	andhi	r4,zero,1197
 10125c4:	01012d04 	movi	r4,1204
 10125c8:	01012e18 	cmpnei	r4,zero,1208
 10125cc:	01012e18 	cmpnei	r4,zero,1208
 10125d0:	01012e18 	cmpnei	r4,zero,1208
 10125d4:	01012d8c 	andi	r4,zero,1206
 10125d8:	01012d04 	movi	r4,1204
 10125dc:	01012e18 	cmpnei	r4,zero,1208
 10125e0:	01012e18 	cmpnei	r4,zero,1208
 10125e4:	01012d98 	cmpnei	r4,zero,1206
 10125e8:	01012e18 	cmpnei	r4,zero,1208
 10125ec:	01012c58 	cmpnei	r4,zero,1201
 10125f0:	0101266c 	andhi	r4,zero,1177
 10125f4:	01012d40 	call	1012d4 <__alt_mem_onchip_memory2_0+0x1012d4>
 10125f8:	01012d80 	call	1012d8 <__alt_mem_onchip_memory2_0+0x1012d8>
 10125fc:	01012e18 	cmpnei	r4,zero,1208
 1012600:	01012ca4 	muli	r4,zero,1202
 1012604:	01012e18 	cmpnei	r4,zero,1208
 1012608:	01012630 	cmpltui	r4,zero,1176
 101260c:	01012e18 	cmpnei	r4,zero,1208
 1012610:	01012e18 	cmpnei	r4,zero,1208
 1012614:	01012da8 	cmpgeui	r4,zero,1206
 1012618:	42000204 	addi	r8,r8,8
 101261c:	dac12217 	ldw	r11,1160(sp)
 1012620:	5c97883a 	add	r11,r11,r18
 1012624:	dac12215 	stw	r11,1160(sp)
 1012628:	003f8c06 	br	101245c <__alt_data_end+0xff81245c>
 101262c:	ad400414 	ori	r21,r21,16
 1012630:	a880080c 	andi	r2,r21,32
 1012634:	10012f1e 	bne	r2,zero,1012af4 <___vfiprintf_internal_r+0x7e0>
 1012638:	a880040c 	andi	r2,r21,16
 101263c:	1001ff1e 	bne	r2,zero,1012e3c <___vfiprintf_internal_r+0xb28>
 1012640:	a880100c 	andi	r2,r21,64
 1012644:	1001fd26 	beq	r2,zero,1012e3c <___vfiprintf_internal_r+0xb28>
 1012648:	da812117 	ldw	r10,1156(sp)
 101264c:	002d883a 	mov	r22,zero
 1012650:	00800044 	movi	r2,1
 1012654:	5480000b 	ldhu	r18,0(r10)
 1012658:	52800104 	addi	r10,r10,4
 101265c:	da812115 	stw	r10,1156(sp)
 1012660:	9009883a 	mov	r4,r18
 1012664:	00000a06 	br	1012690 <___vfiprintf_internal_r+0x37c>
 1012668:	ad400414 	ori	r21,r21,16
 101266c:	a880080c 	andi	r2,r21,32
 1012670:	10011426 	beq	r2,zero,1012ac4 <___vfiprintf_internal_r+0x7b0>
 1012674:	da812117 	ldw	r10,1156(sp)
 1012678:	0005883a 	mov	r2,zero
 101267c:	54800017 	ldw	r18,0(r10)
 1012680:	55800117 	ldw	r22,4(r10)
 1012684:	52800204 	addi	r10,r10,8
 1012688:	da812115 	stw	r10,1156(sp)
 101268c:	9588b03a 	or	r4,r18,r22
 1012690:	d8011d85 	stb	zero,1142(sp)
 1012694:	4823883a 	mov	r17,r9
 1012698:	0019883a 	mov	r12,zero
 101269c:	48000216 	blt	r9,zero,10126a8 <___vfiprintf_internal_r+0x394>
 10126a0:	00ffdfc4 	movi	r3,-129
 10126a4:	a8ea703a 	and	r21,r21,r3
 10126a8:	2002221e 	bne	r4,zero,1012f34 <___vfiprintf_internal_r+0xc20>
 10126ac:	4802c726 	beq	r9,zero,10131cc <___vfiprintf_internal_r+0xeb8>
 10126b0:	10803fcc 	andi	r2,r2,255
 10126b4:	00c00044 	movi	r3,1
 10126b8:	10c24426 	beq	r2,r3,1012fcc <___vfiprintf_internal_r+0xcb8>
 10126bc:	00c00084 	movi	r3,2
 10126c0:	10c2cc26 	beq	r2,r3,10131f4 <___vfiprintf_internal_r+0xee0>
 10126c4:	d8c10a04 	addi	r3,sp,1064
 10126c8:	9008d0fa 	srli	r4,r18,3
 10126cc:	b00a977a 	slli	r5,r22,29
 10126d0:	b02cd0fa 	srli	r22,r22,3
 10126d4:	948001cc 	andi	r18,r18,7
 10126d8:	90800c04 	addi	r2,r18,48
 10126dc:	18ffffc4 	addi	r3,r3,-1
 10126e0:	2924b03a 	or	r18,r5,r4
 10126e4:	18800005 	stb	r2,0(r3)
 10126e8:	9588b03a 	or	r4,r18,r22
 10126ec:	203ff61e 	bne	r4,zero,10126c8 <__alt_data_end+0xff8126c8>
 10126f0:	a900004c 	andi	r4,r21,1
 10126f4:	d8c12415 	stw	r3,1168(sp)
 10126f8:	2002fb1e 	bne	r4,zero,10132e8 <___vfiprintf_internal_r+0xfd4>
 10126fc:	da811e17 	ldw	r10,1144(sp)
 1012700:	50e3c83a 	sub	r17,r10,r3
 1012704:	8825883a 	mov	r18,r17
 1012708:	8a40010e 	bge	r17,r9,1012710 <___vfiprintf_internal_r+0x3fc>
 101270c:	4825883a 	mov	r18,r9
 1012710:	63003fcc 	andi	r12,r12,255
 1012714:	6300201c 	xori	r12,r12,128
 1012718:	633fe004 	addi	r12,r12,-128
 101271c:	60000126 	beq	r12,zero,1012724 <___vfiprintf_internal_r+0x410>
 1012720:	94800044 	addi	r18,r18,1
 1012724:	ab80008c 	andi	r14,r21,2
 1012728:	70000126 	beq	r14,zero,1012730 <___vfiprintf_internal_r+0x41c>
 101272c:	94800084 	addi	r18,r18,2
 1012730:	ad80210c 	andi	r22,r21,132
 1012734:	b001df1e 	bne	r22,zero,1012eb4 <___vfiprintf_internal_r+0xba0>
 1012738:	9c8fc83a 	sub	r7,r19,r18
 101273c:	01c1dd0e 	bge	zero,r7,1012eb4 <___vfiprintf_internal_r+0xba0>
 1012740:	03000404 	movi	r12,16
 1012744:	d8811c17 	ldw	r2,1136(sp)
 1012748:	61c3920e 	bge	r12,r7,1013594 <___vfiprintf_internal_r+0x1280>
 101274c:	028040b4 	movhi	r10,258
 1012750:	52a64f04 	addi	r10,r10,-26308
 1012754:	dc012915 	stw	r16,1188(sp)
 1012758:	d9811b17 	ldw	r6,1132(sp)
 101275c:	da812315 	stw	r10,1164(sp)
 1012760:	00c001c4 	movi	r3,7
 1012764:	da412515 	stw	r9,1172(sp)
 1012768:	db812815 	stw	r14,1184(sp)
 101276c:	3821883a 	mov	r16,r7
 1012770:	00000506 	br	1012788 <___vfiprintf_internal_r+0x474>
 1012774:	31400084 	addi	r5,r6,2
 1012778:	42000204 	addi	r8,r8,8
 101277c:	200d883a 	mov	r6,r4
 1012780:	843ffc04 	addi	r16,r16,-16
 1012784:	64000d0e 	bge	r12,r16,10127bc <___vfiprintf_internal_r+0x4a8>
 1012788:	10800404 	addi	r2,r2,16
 101278c:	31000044 	addi	r4,r6,1
 1012790:	47000015 	stw	fp,0(r8)
 1012794:	43000115 	stw	r12,4(r8)
 1012798:	d8811c15 	stw	r2,1136(sp)
 101279c:	d9011b15 	stw	r4,1132(sp)
 10127a0:	193ff40e 	bge	r3,r4,1012774 <__alt_data_end+0xff812774>
 10127a4:	1001b51e 	bne	r2,zero,1012e7c <___vfiprintf_internal_r+0xb68>
 10127a8:	843ffc04 	addi	r16,r16,-16
 10127ac:	000d883a 	mov	r6,zero
 10127b0:	01400044 	movi	r5,1
 10127b4:	d811883a 	mov	r8,sp
 10127b8:	643ff316 	blt	r12,r16,1012788 <__alt_data_end+0xff812788>
 10127bc:	800f883a 	mov	r7,r16
 10127c0:	da412517 	ldw	r9,1172(sp)
 10127c4:	db812817 	ldw	r14,1184(sp)
 10127c8:	dc012917 	ldw	r16,1188(sp)
 10127cc:	dac12317 	ldw	r11,1164(sp)
 10127d0:	3887883a 	add	r3,r7,r2
 10127d4:	41c00115 	stw	r7,4(r8)
 10127d8:	42c00015 	stw	r11,0(r8)
 10127dc:	d8c11c15 	stw	r3,1136(sp)
 10127e0:	d9411b15 	stw	r5,1132(sp)
 10127e4:	008001c4 	movi	r2,7
 10127e8:	11429316 	blt	r2,r5,1013238 <___vfiprintf_internal_r+0xf24>
 10127ec:	d9011d87 	ldb	r4,1142(sp)
 10127f0:	42000204 	addi	r8,r8,8
 10127f4:	28800044 	addi	r2,r5,1
 10127f8:	2001b31e 	bne	r4,zero,1012ec8 <___vfiprintf_internal_r+0xbb4>
 10127fc:	70000c26 	beq	r14,zero,1012830 <___vfiprintf_internal_r+0x51c>
 1012800:	d9011d04 	addi	r4,sp,1140
 1012804:	18c00084 	addi	r3,r3,2
 1012808:	41000015 	stw	r4,0(r8)
 101280c:	01000084 	movi	r4,2
 1012810:	41000115 	stw	r4,4(r8)
 1012814:	d8c11c15 	stw	r3,1136(sp)
 1012818:	d8811b15 	stw	r2,1132(sp)
 101281c:	010001c4 	movi	r4,7
 1012820:	20826516 	blt	r4,r2,10131b8 <___vfiprintf_internal_r+0xea4>
 1012824:	100b883a 	mov	r5,r2
 1012828:	42000204 	addi	r8,r8,8
 101282c:	10800044 	addi	r2,r2,1
 1012830:	01002004 	movi	r4,128
 1012834:	b1021a26 	beq	r22,r4,10130a0 <___vfiprintf_internal_r+0xd8c>
 1012838:	4c6dc83a 	sub	r22,r9,r17
 101283c:	0580230e 	bge	zero,r22,10128cc <___vfiprintf_internal_r+0x5b8>
 1012840:	01c00404 	movi	r7,16
 1012844:	3d83300e 	bge	r7,r22,1013508 <___vfiprintf_internal_r+0x11f4>
 1012848:	008040b4 	movhi	r2,258
 101284c:	10a64b04 	addi	r2,r2,-26324
 1012850:	d8812315 	stw	r2,1164(sp)
 1012854:	030001c4 	movi	r12,7
 1012858:	00000506 	br	1012870 <___vfiprintf_internal_r+0x55c>
 101285c:	28800084 	addi	r2,r5,2
 1012860:	42000204 	addi	r8,r8,8
 1012864:	200b883a 	mov	r5,r4
 1012868:	b5bffc04 	addi	r22,r22,-16
 101286c:	3d800d0e 	bge	r7,r22,10128a4 <___vfiprintf_internal_r+0x590>
 1012870:	18c00404 	addi	r3,r3,16
 1012874:	29000044 	addi	r4,r5,1
 1012878:	45c00015 	stw	r23,0(r8)
 101287c:	41c00115 	stw	r7,4(r8)
 1012880:	d8c11c15 	stw	r3,1136(sp)
 1012884:	d9011b15 	stw	r4,1132(sp)
 1012888:	613ff40e 	bge	r12,r4,101285c <__alt_data_end+0xff81285c>
 101288c:	18019b1e 	bne	r3,zero,1012efc <___vfiprintf_internal_r+0xbe8>
 1012890:	b5bffc04 	addi	r22,r22,-16
 1012894:	000b883a 	mov	r5,zero
 1012898:	00800044 	movi	r2,1
 101289c:	d811883a 	mov	r8,sp
 10128a0:	3dbff316 	blt	r7,r22,1012870 <__alt_data_end+0xff812870>
 10128a4:	da812317 	ldw	r10,1164(sp)
 10128a8:	1d87883a 	add	r3,r3,r22
 10128ac:	45800115 	stw	r22,4(r8)
 10128b0:	42800015 	stw	r10,0(r8)
 10128b4:	d8c11c15 	stw	r3,1136(sp)
 10128b8:	d8811b15 	stw	r2,1132(sp)
 10128bc:	010001c4 	movi	r4,7
 10128c0:	2081dd16 	blt	r4,r2,1013038 <___vfiprintf_internal_r+0xd24>
 10128c4:	42000204 	addi	r8,r8,8
 10128c8:	10800044 	addi	r2,r2,1
 10128cc:	da812417 	ldw	r10,1168(sp)
 10128d0:	1c47883a 	add	r3,r3,r17
 10128d4:	44400115 	stw	r17,4(r8)
 10128d8:	42800015 	stw	r10,0(r8)
 10128dc:	d8c11c15 	stw	r3,1136(sp)
 10128e0:	d8811b15 	stw	r2,1132(sp)
 10128e4:	010001c4 	movi	r4,7
 10128e8:	2081dc0e 	bge	r4,r2,101305c <___vfiprintf_internal_r+0xd48>
 10128ec:	1802611e 	bne	r3,zero,1013274 <___vfiprintf_internal_r+0xf60>
 10128f0:	d8011b15 	stw	zero,1132(sp)
 10128f4:	aac0010c 	andi	r11,r21,4
 10128f8:	58002726 	beq	r11,zero,1012998 <___vfiprintf_internal_r+0x684>
 10128fc:	9ca3c83a 	sub	r17,r19,r18
 1012900:	d811883a 	mov	r8,sp
 1012904:	0443510e 	bge	zero,r17,101364c <___vfiprintf_internal_r+0x1338>
 1012908:	01c00404 	movi	r7,16
 101290c:	3c43320e 	bge	r7,r17,10135d8 <___vfiprintf_internal_r+0x12c4>
 1012910:	008040b4 	movhi	r2,258
 1012914:	10a64f04 	addi	r2,r2,-26308
 1012918:	d9011b17 	ldw	r4,1132(sp)
 101291c:	d8812315 	stw	r2,1164(sp)
 1012920:	382d883a 	mov	r22,r7
 1012924:	054001c4 	movi	r21,7
 1012928:	00000506 	br	1012940 <___vfiprintf_internal_r+0x62c>
 101292c:	21400084 	addi	r5,r4,2
 1012930:	42000204 	addi	r8,r8,8
 1012934:	1009883a 	mov	r4,r2
 1012938:	8c7ffc04 	addi	r17,r17,-16
 101293c:	b4400d0e 	bge	r22,r17,1012974 <___vfiprintf_internal_r+0x660>
 1012940:	18c00404 	addi	r3,r3,16
 1012944:	20800044 	addi	r2,r4,1
 1012948:	47000015 	stw	fp,0(r8)
 101294c:	45800115 	stw	r22,4(r8)
 1012950:	d8c11c15 	stw	r3,1136(sp)
 1012954:	d8811b15 	stw	r2,1132(sp)
 1012958:	a8bff40e 	bge	r21,r2,101292c <__alt_data_end+0xff81292c>
 101295c:	1801ac1e 	bne	r3,zero,1013010 <___vfiprintf_internal_r+0xcfc>
 1012960:	8c7ffc04 	addi	r17,r17,-16
 1012964:	0009883a 	mov	r4,zero
 1012968:	01400044 	movi	r5,1
 101296c:	d811883a 	mov	r8,sp
 1012970:	b47ff316 	blt	r22,r17,1012940 <__alt_data_end+0xff812940>
 1012974:	da812317 	ldw	r10,1164(sp)
 1012978:	1c47883a 	add	r3,r3,r17
 101297c:	44400115 	stw	r17,4(r8)
 1012980:	42800015 	stw	r10,0(r8)
 1012984:	d8c11c15 	stw	r3,1136(sp)
 1012988:	d9411b15 	stw	r5,1132(sp)
 101298c:	008001c4 	movi	r2,7
 1012990:	1141b70e 	bge	r2,r5,1013070 <___vfiprintf_internal_r+0xd5c>
 1012994:	1802cf1e 	bne	r3,zero,10134d4 <___vfiprintf_internal_r+0x11c0>
 1012998:	94c2ca16 	blt	r18,r19,10134c4 <___vfiprintf_internal_r+0x11b0>
 101299c:	dac12217 	ldw	r11,1160(sp)
 10129a0:	5c97883a 	add	r11,r11,r18
 10129a4:	dac12215 	stw	r11,1160(sp)
 10129a8:	d8011b15 	stw	zero,1132(sp)
 10129ac:	d811883a 	mov	r8,sp
 10129b0:	003e8d06 	br	10123e8 <__alt_data_end+0xff8123e8>
 10129b4:	d9012017 	ldw	r4,1152(sp)
 10129b8:	a00b883a 	mov	r5,r20
 10129bc:	100b1a80 	call	100b1a8 <__swsetup_r>
 10129c0:	10002c1e 	bne	r2,zero,1012a74 <___vfiprintf_internal_r+0x760>
 10129c4:	a0c0030b 	ldhu	r3,12(r20)
 10129c8:	01000284 	movi	r4,10
 10129cc:	1805883a 	mov	r2,r3
 10129d0:	1080068c 	andi	r2,r2,26
 10129d4:	113e731e 	bne	r2,r4,10123a4 <__alt_data_end+0xff8123a4>
 10129d8:	a080038b 	ldhu	r2,14(r20)
 10129dc:	113fffcc 	andi	r4,r2,65535
 10129e0:	2120001c 	xori	r4,r4,32768
 10129e4:	21200004 	addi	r4,r4,-32768
 10129e8:	203e6e16 	blt	r4,zero,10123a4 <__alt_data_end+0xff8123a4>
 10129ec:	a3001917 	ldw	r12,100(r20)
 10129f0:	a2c00717 	ldw	r11,28(r20)
 10129f4:	a2800917 	ldw	r10,36(r20)
 10129f8:	d9012017 	ldw	r4,1152(sp)
 10129fc:	d9c12117 	ldw	r7,1156(sp)
 1012a00:	02410004 	movi	r9,1024
 1012a04:	18ffff4c 	andi	r3,r3,65533
 1012a08:	da4b883a 	add	r5,sp,r9
 1012a0c:	b00d883a 	mov	r6,r22
 1012a10:	d8c1030d 	sth	r3,1036(sp)
 1012a14:	db011915 	stw	r12,1124(sp)
 1012a18:	d881038d 	sth	r2,1038(sp)
 1012a1c:	dac10715 	stw	r11,1052(sp)
 1012a20:	da810915 	stw	r10,1060(sp)
 1012a24:	dec10015 	stw	sp,1024(sp)
 1012a28:	dec10415 	stw	sp,1040(sp)
 1012a2c:	da410215 	stw	r9,1032(sp)
 1012a30:	da410515 	stw	r9,1044(sp)
 1012a34:	d8010615 	stw	zero,1048(sp)
 1012a38:	10123140 	call	1012314 <___vfiprintf_internal_r>
 1012a3c:	1021883a 	mov	r16,r2
 1012a40:	10000416 	blt	r2,zero,1012a54 <___vfiprintf_internal_r+0x740>
 1012a44:	d9012017 	ldw	r4,1152(sp)
 1012a48:	d9410004 	addi	r5,sp,1024
 1012a4c:	100cc000 	call	100cc00 <_fflush_r>
 1012a50:	1002fc1e 	bne	r2,zero,1013644 <___vfiprintf_internal_r+0x1330>
 1012a54:	d881030b 	ldhu	r2,1036(sp)
 1012a58:	1080100c 	andi	r2,r2,64
 1012a5c:	10000326 	beq	r2,zero,1012a6c <___vfiprintf_internal_r+0x758>
 1012a60:	a080030b 	ldhu	r2,12(r20)
 1012a64:	10801014 	ori	r2,r2,64
 1012a68:	a080030d 	sth	r2,12(r20)
 1012a6c:	8005883a 	mov	r2,r16
 1012a70:	00000106 	br	1012a78 <___vfiprintf_internal_r+0x764>
 1012a74:	00bfffc4 	movi	r2,-1
 1012a78:	dfc13517 	ldw	ra,1236(sp)
 1012a7c:	df013417 	ldw	fp,1232(sp)
 1012a80:	ddc13317 	ldw	r23,1228(sp)
 1012a84:	dd813217 	ldw	r22,1224(sp)
 1012a88:	dd413117 	ldw	r21,1220(sp)
 1012a8c:	dd013017 	ldw	r20,1216(sp)
 1012a90:	dcc12f17 	ldw	r19,1212(sp)
 1012a94:	dc812e17 	ldw	r18,1208(sp)
 1012a98:	dc412d17 	ldw	r17,1204(sp)
 1012a9c:	dc012c17 	ldw	r16,1200(sp)
 1012aa0:	dec13604 	addi	sp,sp,1240
 1012aa4:	f800283a 	ret
 1012aa8:	100d1a80 	call	100d1a8 <__sinit>
 1012aac:	003e2b06 	br	101235c <__alt_data_end+0xff81235c>
 1012ab0:	04e7c83a 	sub	r19,zero,r19
 1012ab4:	d8812115 	stw	r2,1156(sp)
 1012ab8:	ad400114 	ori	r21,r21,4
 1012abc:	80c00007 	ldb	r3,0(r16)
 1012ac0:	003e7306 	br	1012490 <__alt_data_end+0xff812490>
 1012ac4:	a880040c 	andi	r2,r21,16
 1012ac8:	1000e41e 	bne	r2,zero,1012e5c <___vfiprintf_internal_r+0xb48>
 1012acc:	a880100c 	andi	r2,r21,64
 1012ad0:	1000e226 	beq	r2,zero,1012e5c <___vfiprintf_internal_r+0xb48>
 1012ad4:	da812117 	ldw	r10,1156(sp)
 1012ad8:	002d883a 	mov	r22,zero
 1012adc:	0005883a 	mov	r2,zero
 1012ae0:	5480000b 	ldhu	r18,0(r10)
 1012ae4:	52800104 	addi	r10,r10,4
 1012ae8:	da812115 	stw	r10,1156(sp)
 1012aec:	9009883a 	mov	r4,r18
 1012af0:	003ee706 	br	1012690 <__alt_data_end+0xff812690>
 1012af4:	da812117 	ldw	r10,1156(sp)
 1012af8:	00800044 	movi	r2,1
 1012afc:	54800017 	ldw	r18,0(r10)
 1012b00:	55800117 	ldw	r22,4(r10)
 1012b04:	52800204 	addi	r10,r10,8
 1012b08:	da812115 	stw	r10,1156(sp)
 1012b0c:	9588b03a 	or	r4,r18,r22
 1012b10:	003edf06 	br	1012690 <__alt_data_end+0xff812690>
 1012b14:	02c040b4 	movhi	r11,258
 1012b18:	5ae5cf04 	addi	r11,r11,-26820
 1012b1c:	d9811d85 	stb	r6,1142(sp)
 1012b20:	dac12615 	stw	r11,1176(sp)
 1012b24:	a900080c 	andi	r4,r21,32
 1012b28:	d8812117 	ldw	r2,1156(sp)
 1012b2c:	2000a526 	beq	r4,zero,1012dc4 <___vfiprintf_internal_r+0xab0>
 1012b30:	da812117 	ldw	r10,1156(sp)
 1012b34:	14800017 	ldw	r18,0(r2)
 1012b38:	15800117 	ldw	r22,4(r2)
 1012b3c:	52800204 	addi	r10,r10,8
 1012b40:	da812115 	stw	r10,1156(sp)
 1012b44:	a880004c 	andi	r2,r21,1
 1012b48:	1001d926 	beq	r2,zero,10132b0 <___vfiprintf_internal_r+0xf9c>
 1012b4c:	9588b03a 	or	r4,r18,r22
 1012b50:	20024426 	beq	r4,zero,1013464 <___vfiprintf_internal_r+0x1150>
 1012b54:	00800c04 	movi	r2,48
 1012b58:	d8811d05 	stb	r2,1140(sp)
 1012b5c:	d8c11d45 	stb	r3,1141(sp)
 1012b60:	ad400094 	ori	r21,r21,2
 1012b64:	00800084 	movi	r2,2
 1012b68:	003ec906 	br	1012690 <__alt_data_end+0xff812690>
 1012b6c:	da812117 	ldw	r10,1156(sp)
 1012b70:	04800044 	movi	r18,1
 1012b74:	dac10004 	addi	r11,sp,1024
 1012b78:	50800017 	ldw	r2,0(r10)
 1012b7c:	52800104 	addi	r10,r10,4
 1012b80:	d8011d85 	stb	zero,1142(sp)
 1012b84:	d8810005 	stb	r2,1024(sp)
 1012b88:	da812115 	stw	r10,1156(sp)
 1012b8c:	9023883a 	mov	r17,r18
 1012b90:	dac12415 	stw	r11,1168(sp)
 1012b94:	0013883a 	mov	r9,zero
 1012b98:	003ee206 	br	1012724 <__alt_data_end+0xff812724>
 1012b9c:	ad402014 	ori	r21,r21,128
 1012ba0:	80c00007 	ldb	r3,0(r16)
 1012ba4:	003e3a06 	br	1012490 <__alt_data_end+0xff812490>
 1012ba8:	8015883a 	mov	r10,r16
 1012bac:	0027883a 	mov	r19,zero
 1012bb0:	18bff404 	addi	r2,r3,-48
 1012bb4:	50c00007 	ldb	r3,0(r10)
 1012bb8:	9cc002a4 	muli	r19,r19,10
 1012bbc:	84000044 	addi	r16,r16,1
 1012bc0:	8015883a 	mov	r10,r16
 1012bc4:	98a7883a 	add	r19,r19,r2
 1012bc8:	18bff404 	addi	r2,r3,-48
 1012bcc:	28bff92e 	bgeu	r5,r2,1012bb4 <__alt_data_end+0xff812bb4>
 1012bd0:	003e3006 	br	1012494 <__alt_data_end+0xff812494>
 1012bd4:	ad400414 	ori	r21,r21,16
 1012bd8:	d9811d85 	stb	r6,1142(sp)
 1012bdc:	a880080c 	andi	r2,r21,32
 1012be0:	d8c12117 	ldw	r3,1156(sp)
 1012be4:	10004b26 	beq	r2,zero,1012d14 <___vfiprintf_internal_r+0xa00>
 1012be8:	da812117 	ldw	r10,1156(sp)
 1012bec:	18800117 	ldw	r2,4(r3)
 1012bf0:	1c800017 	ldw	r18,0(r3)
 1012bf4:	52800204 	addi	r10,r10,8
 1012bf8:	da812115 	stw	r10,1156(sp)
 1012bfc:	102d883a 	mov	r22,r2
 1012c00:	1001f116 	blt	r2,zero,10133c8 <___vfiprintf_internal_r+0x10b4>
 1012c04:	db011d83 	ldbu	r12,1142(sp)
 1012c08:	4823883a 	mov	r17,r9
 1012c0c:	00800044 	movi	r2,1
 1012c10:	9588b03a 	or	r4,r18,r22
 1012c14:	003ea106 	br	101269c <__alt_data_end+0xff81269c>
 1012c18:	80c00007 	ldb	r3,0(r16)
 1012c1c:	82800044 	addi	r10,r16,1
 1012c20:	1b027f26 	beq	r3,r12,1013620 <___vfiprintf_internal_r+0x130c>
 1012c24:	18bff404 	addi	r2,r3,-48
 1012c28:	5021883a 	mov	r16,r10
 1012c2c:	0013883a 	mov	r9,zero
 1012c30:	28be1836 	bltu	r5,r2,1012494 <__alt_data_end+0xff812494>
 1012c34:	80c00007 	ldb	r3,0(r16)
 1012c38:	4a4002a4 	muli	r9,r9,10
 1012c3c:	84000044 	addi	r16,r16,1
 1012c40:	1253883a 	add	r9,r2,r9
 1012c44:	18bff404 	addi	r2,r3,-48
 1012c48:	28bffa2e 	bgeu	r5,r2,1012c34 <__alt_data_end+0xff812c34>
 1012c4c:	483e110e 	bge	r9,zero,1012494 <__alt_data_end+0xff812494>
 1012c50:	027fffc4 	movi	r9,-1
 1012c54:	003e0f06 	br	1012494 <__alt_data_end+0xff812494>
 1012c58:	d9811d85 	stb	r6,1142(sp)
 1012c5c:	a880080c 	andi	r2,r21,32
 1012c60:	1001ee26 	beq	r2,zero,101341c <___vfiprintf_internal_r+0x1108>
 1012c64:	da812117 	ldw	r10,1156(sp)
 1012c68:	dac12217 	ldw	r11,1160(sp)
 1012c6c:	50800017 	ldw	r2,0(r10)
 1012c70:	5807d7fa 	srai	r3,r11,31
 1012c74:	52800104 	addi	r10,r10,4
 1012c78:	da812115 	stw	r10,1156(sp)
 1012c7c:	12c00015 	stw	r11,0(r2)
 1012c80:	10c00115 	stw	r3,4(r2)
 1012c84:	003dd806 	br	10123e8 <__alt_data_end+0xff8123e8>
 1012c88:	30803fcc 	andi	r2,r6,255
 1012c8c:	1080201c 	xori	r2,r2,128
 1012c90:	10bfe004 	addi	r2,r2,-128
 1012c94:	1001df1e 	bne	r2,zero,1013414 <___vfiprintf_internal_r+0x1100>
 1012c98:	01800804 	movi	r6,32
 1012c9c:	80c00007 	ldb	r3,0(r16)
 1012ca0:	003dfb06 	br	1012490 <__alt_data_end+0xff812490>
 1012ca4:	da812117 	ldw	r10,1156(sp)
 1012ca8:	dac12117 	ldw	r11,1156(sp)
 1012cac:	d8011d85 	stb	zero,1142(sp)
 1012cb0:	52800017 	ldw	r10,0(r10)
 1012cb4:	5d800104 	addi	r22,r11,4
 1012cb8:	da812415 	stw	r10,1168(sp)
 1012cbc:	50023b26 	beq	r10,zero,10135ac <___vfiprintf_internal_r+0x1298>
 1012cc0:	d9012417 	ldw	r4,1168(sp)
 1012cc4:	48021f16 	blt	r9,zero,1013544 <___vfiprintf_internal_r+0x1230>
 1012cc8:	480d883a 	mov	r6,r9
 1012ccc:	000b883a 	mov	r5,zero
 1012cd0:	da012a15 	stw	r8,1192(sp)
 1012cd4:	da412b15 	stw	r9,1196(sp)
 1012cd8:	100f2940 	call	100f294 <memchr>
 1012cdc:	da012a17 	ldw	r8,1192(sp)
 1012ce0:	da412b17 	ldw	r9,1196(sp)
 1012ce4:	10024726 	beq	r2,zero,1013604 <___vfiprintf_internal_r+0x12f0>
 1012ce8:	d8c12417 	ldw	r3,1168(sp)
 1012cec:	10e3c83a 	sub	r17,r2,r3
 1012cf0:	4c41f616 	blt	r9,r17,10134cc <___vfiprintf_internal_r+0x11b8>
 1012cf4:	db011d83 	ldbu	r12,1142(sp)
 1012cf8:	dd812115 	stw	r22,1156(sp)
 1012cfc:	0013883a 	mov	r9,zero
 1012d00:	003e8006 	br	1012704 <__alt_data_end+0xff812704>
 1012d04:	d9811d85 	stb	r6,1142(sp)
 1012d08:	a880080c 	andi	r2,r21,32
 1012d0c:	d8c12117 	ldw	r3,1156(sp)
 1012d10:	103fb51e 	bne	r2,zero,1012be8 <__alt_data_end+0xff812be8>
 1012d14:	a880040c 	andi	r2,r21,16
 1012d18:	10015e1e 	bne	r2,zero,1013294 <___vfiprintf_internal_r+0xf80>
 1012d1c:	a880100c 	andi	r2,r21,64
 1012d20:	10015c26 	beq	r2,zero,1013294 <___vfiprintf_internal_r+0xf80>
 1012d24:	1c80000f 	ldh	r18,0(r3)
 1012d28:	da812117 	ldw	r10,1156(sp)
 1012d2c:	902dd7fa 	srai	r22,r18,31
 1012d30:	52800104 	addi	r10,r10,4
 1012d34:	da812115 	stw	r10,1156(sp)
 1012d38:	b005883a 	mov	r2,r22
 1012d3c:	003fb006 	br	1012c00 <__alt_data_end+0xff812c00>
 1012d40:	da812117 	ldw	r10,1156(sp)
 1012d44:	00800c04 	movi	r2,48
 1012d48:	02c040b4 	movhi	r11,258
 1012d4c:	54800017 	ldw	r18,0(r10)
 1012d50:	d8811d05 	stb	r2,1140(sp)
 1012d54:	52800104 	addi	r10,r10,4
 1012d58:	00801e04 	movi	r2,120
 1012d5c:	5ae5d404 	addi	r11,r11,-26800
 1012d60:	d8811d45 	stb	r2,1141(sp)
 1012d64:	002d883a 	mov	r22,zero
 1012d68:	ad400094 	ori	r21,r21,2
 1012d6c:	da812115 	stw	r10,1156(sp)
 1012d70:	dac12615 	stw	r11,1176(sp)
 1012d74:	00800084 	movi	r2,2
 1012d78:	9009883a 	mov	r4,r18
 1012d7c:	003e4406 	br	1012690 <__alt_data_end+0xff812690>
 1012d80:	ad400814 	ori	r21,r21,32
 1012d84:	80c00007 	ldb	r3,0(r16)
 1012d88:	003dc106 	br	1012490 <__alt_data_end+0xff812490>
 1012d8c:	ad401014 	ori	r21,r21,64
 1012d90:	80c00007 	ldb	r3,0(r16)
 1012d94:	003dbe06 	br	1012490 <__alt_data_end+0xff812490>
 1012d98:	80c00007 	ldb	r3,0(r16)
 1012d9c:	19c1de26 	beq	r3,r7,1013518 <___vfiprintf_internal_r+0x1204>
 1012da0:	ad400414 	ori	r21,r21,16
 1012da4:	003dba06 	br	1012490 <__alt_data_end+0xff812490>
 1012da8:	008040b4 	movhi	r2,258
 1012dac:	10a5d404 	addi	r2,r2,-26800
 1012db0:	d8812615 	stw	r2,1176(sp)
 1012db4:	d9811d85 	stb	r6,1142(sp)
 1012db8:	a900080c 	andi	r4,r21,32
 1012dbc:	d8812117 	ldw	r2,1156(sp)
 1012dc0:	203f5b1e 	bne	r4,zero,1012b30 <__alt_data_end+0xff812b30>
 1012dc4:	a900040c 	andi	r4,r21,16
 1012dc8:	2001a826 	beq	r4,zero,101346c <___vfiprintf_internal_r+0x1158>
 1012dcc:	dac12117 	ldw	r11,1156(sp)
 1012dd0:	14800017 	ldw	r18,0(r2)
 1012dd4:	002d883a 	mov	r22,zero
 1012dd8:	5ac00104 	addi	r11,r11,4
 1012ddc:	dac12115 	stw	r11,1156(sp)
 1012de0:	003f5806 	br	1012b44 <__alt_data_end+0xff812b44>
 1012de4:	da812117 	ldw	r10,1156(sp)
 1012de8:	54c00017 	ldw	r19,0(r10)
 1012dec:	50800104 	addi	r2,r10,4
 1012df0:	983f2f16 	blt	r19,zero,1012ab0 <__alt_data_end+0xff812ab0>
 1012df4:	d8812115 	stw	r2,1156(sp)
 1012df8:	80c00007 	ldb	r3,0(r16)
 1012dfc:	003da406 	br	1012490 <__alt_data_end+0xff812490>
 1012e00:	01800ac4 	movi	r6,43
 1012e04:	80c00007 	ldb	r3,0(r16)
 1012e08:	003da106 	br	1012490 <__alt_data_end+0xff812490>
 1012e0c:	ad400054 	ori	r21,r21,1
 1012e10:	80c00007 	ldb	r3,0(r16)
 1012e14:	003d9e06 	br	1012490 <__alt_data_end+0xff812490>
 1012e18:	d9811d85 	stb	r6,1142(sp)
 1012e1c:	18007126 	beq	r3,zero,1012fe4 <___vfiprintf_internal_r+0xcd0>
 1012e20:	04800044 	movi	r18,1
 1012e24:	d8c10005 	stb	r3,1024(sp)
 1012e28:	d8c10004 	addi	r3,sp,1024
 1012e2c:	d8011d85 	stb	zero,1142(sp)
 1012e30:	9023883a 	mov	r17,r18
 1012e34:	d8c12415 	stw	r3,1168(sp)
 1012e38:	003f5606 	br	1012b94 <__alt_data_end+0xff812b94>
 1012e3c:	dac12117 	ldw	r11,1156(sp)
 1012e40:	002d883a 	mov	r22,zero
 1012e44:	00800044 	movi	r2,1
 1012e48:	5c800017 	ldw	r18,0(r11)
 1012e4c:	5ac00104 	addi	r11,r11,4
 1012e50:	dac12115 	stw	r11,1156(sp)
 1012e54:	9009883a 	mov	r4,r18
 1012e58:	003e0d06 	br	1012690 <__alt_data_end+0xff812690>
 1012e5c:	dac12117 	ldw	r11,1156(sp)
 1012e60:	002d883a 	mov	r22,zero
 1012e64:	0005883a 	mov	r2,zero
 1012e68:	5c800017 	ldw	r18,0(r11)
 1012e6c:	5ac00104 	addi	r11,r11,4
 1012e70:	dac12115 	stw	r11,1156(sp)
 1012e74:	9009883a 	mov	r4,r18
 1012e78:	003e0506 	br	1012690 <__alt_data_end+0xff812690>
 1012e7c:	d9012017 	ldw	r4,1152(sp)
 1012e80:	a00b883a 	mov	r5,r20
 1012e84:	d9811a04 	addi	r6,sp,1128
 1012e88:	d8c12a15 	stw	r3,1192(sp)
 1012e8c:	db012b15 	stw	r12,1196(sp)
 1012e90:	10122000 	call	1012200 <__sprint_r.part.0>
 1012e94:	d8c12a17 	ldw	r3,1192(sp)
 1012e98:	db012b17 	ldw	r12,1196(sp)
 1012e9c:	1000571e 	bne	r2,zero,1012ffc <___vfiprintf_internal_r+0xce8>
 1012ea0:	d9811b17 	ldw	r6,1132(sp)
 1012ea4:	d8811c17 	ldw	r2,1136(sp)
 1012ea8:	d811883a 	mov	r8,sp
 1012eac:	31400044 	addi	r5,r6,1
 1012eb0:	003e3306 	br	1012780 <__alt_data_end+0xff812780>
 1012eb4:	d9411b17 	ldw	r5,1132(sp)
 1012eb8:	d8c11c17 	ldw	r3,1136(sp)
 1012ebc:	28800044 	addi	r2,r5,1
 1012ec0:	d9011d87 	ldb	r4,1142(sp)
 1012ec4:	203e4d26 	beq	r4,zero,10127fc <__alt_data_end+0xff8127fc>
 1012ec8:	01000044 	movi	r4,1
 1012ecc:	d9411d84 	addi	r5,sp,1142
 1012ed0:	1907883a 	add	r3,r3,r4
 1012ed4:	41400015 	stw	r5,0(r8)
 1012ed8:	41000115 	stw	r4,4(r8)
 1012edc:	d8c11c15 	stw	r3,1136(sp)
 1012ee0:	d8811b15 	stw	r2,1132(sp)
 1012ee4:	014001c4 	movi	r5,7
 1012ee8:	2880aa16 	blt	r5,r2,1013194 <___vfiprintf_internal_r+0xe80>
 1012eec:	100b883a 	mov	r5,r2
 1012ef0:	42000204 	addi	r8,r8,8
 1012ef4:	10800044 	addi	r2,r2,1
 1012ef8:	003e4006 	br	10127fc <__alt_data_end+0xff8127fc>
 1012efc:	d9012017 	ldw	r4,1152(sp)
 1012f00:	a00b883a 	mov	r5,r20
 1012f04:	d9811a04 	addi	r6,sp,1128
 1012f08:	d9c12a15 	stw	r7,1192(sp)
 1012f0c:	db012b15 	stw	r12,1196(sp)
 1012f10:	10122000 	call	1012200 <__sprint_r.part.0>
 1012f14:	d9c12a17 	ldw	r7,1192(sp)
 1012f18:	db012b17 	ldw	r12,1196(sp)
 1012f1c:	1000371e 	bne	r2,zero,1012ffc <___vfiprintf_internal_r+0xce8>
 1012f20:	d9411b17 	ldw	r5,1132(sp)
 1012f24:	d8c11c17 	ldw	r3,1136(sp)
 1012f28:	d811883a 	mov	r8,sp
 1012f2c:	28800044 	addi	r2,r5,1
 1012f30:	003e4d06 	br	1012868 <__alt_data_end+0xff812868>
 1012f34:	10803fcc 	andi	r2,r2,255
 1012f38:	00c00044 	movi	r3,1
 1012f3c:	10fddf1e 	bne	r2,r3,10126bc <__alt_data_end+0xff8126bc>
 1012f40:	b000021e 	bne	r22,zero,1012f4c <___vfiprintf_internal_r+0xc38>
 1012f44:	00800244 	movi	r2,9
 1012f48:	1480202e 	bgeu	r2,r18,1012fcc <___vfiprintf_internal_r+0xcb8>
 1012f4c:	dc012515 	stw	r16,1172(sp)
 1012f50:	dc410a04 	addi	r17,sp,1064
 1012f54:	9021883a 	mov	r16,r18
 1012f58:	da012415 	stw	r8,1168(sp)
 1012f5c:	b025883a 	mov	r18,r22
 1012f60:	da412315 	stw	r9,1164(sp)
 1012f64:	602d883a 	mov	r22,r12
 1012f68:	8009883a 	mov	r4,r16
 1012f6c:	900b883a 	mov	r5,r18
 1012f70:	01800284 	movi	r6,10
 1012f74:	000f883a 	mov	r7,zero
 1012f78:	10146000 	call	1014600 <__umoddi3>
 1012f7c:	10800c04 	addi	r2,r2,48
 1012f80:	8c7fffc4 	addi	r17,r17,-1
 1012f84:	8009883a 	mov	r4,r16
 1012f88:	900b883a 	mov	r5,r18
 1012f8c:	01800284 	movi	r6,10
 1012f90:	000f883a 	mov	r7,zero
 1012f94:	88800005 	stb	r2,0(r17)
 1012f98:	10140400 	call	1014040 <__udivdi3>
 1012f9c:	1021883a 	mov	r16,r2
 1012fa0:	10c4b03a 	or	r2,r2,r3
 1012fa4:	1825883a 	mov	r18,r3
 1012fa8:	103fef1e 	bne	r2,zero,1012f68 <__alt_data_end+0xff812f68>
 1012fac:	da811e17 	ldw	r10,1144(sp)
 1012fb0:	da012417 	ldw	r8,1168(sp)
 1012fb4:	da412317 	ldw	r9,1164(sp)
 1012fb8:	dc412415 	stw	r17,1168(sp)
 1012fbc:	b019883a 	mov	r12,r22
 1012fc0:	dc012517 	ldw	r16,1172(sp)
 1012fc4:	5463c83a 	sub	r17,r10,r17
 1012fc8:	003dce06 	br	1012704 <__alt_data_end+0xff812704>
 1012fcc:	94800c04 	addi	r18,r18,48
 1012fd0:	d8c109c4 	addi	r3,sp,1063
 1012fd4:	dc8109c5 	stb	r18,1063(sp)
 1012fd8:	dc412717 	ldw	r17,1180(sp)
 1012fdc:	d8c12415 	stw	r3,1168(sp)
 1012fe0:	003dc806 	br	1012704 <__alt_data_end+0xff812704>
 1012fe4:	d8811c17 	ldw	r2,1136(sp)
 1012fe8:	10000426 	beq	r2,zero,1012ffc <___vfiprintf_internal_r+0xce8>
 1012fec:	d9012017 	ldw	r4,1152(sp)
 1012ff0:	a00b883a 	mov	r5,r20
 1012ff4:	d9811a04 	addi	r6,sp,1128
 1012ff8:	10122000 	call	1012200 <__sprint_r.part.0>
 1012ffc:	a080030b 	ldhu	r2,12(r20)
 1013000:	1080100c 	andi	r2,r2,64
 1013004:	103e9b1e 	bne	r2,zero,1012a74 <__alt_data_end+0xff812a74>
 1013008:	d8812217 	ldw	r2,1160(sp)
 101300c:	003e9a06 	br	1012a78 <__alt_data_end+0xff812a78>
 1013010:	d9012017 	ldw	r4,1152(sp)
 1013014:	a00b883a 	mov	r5,r20
 1013018:	d9811a04 	addi	r6,sp,1128
 101301c:	10122000 	call	1012200 <__sprint_r.part.0>
 1013020:	103ff61e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 1013024:	d9011b17 	ldw	r4,1132(sp)
 1013028:	d8c11c17 	ldw	r3,1136(sp)
 101302c:	d811883a 	mov	r8,sp
 1013030:	21400044 	addi	r5,r4,1
 1013034:	003e4006 	br	1012938 <__alt_data_end+0xff812938>
 1013038:	1800d61e 	bne	r3,zero,1013394 <___vfiprintf_internal_r+0x1080>
 101303c:	dac12417 	ldw	r11,1168(sp)
 1013040:	00800044 	movi	r2,1
 1013044:	dc400115 	stw	r17,4(sp)
 1013048:	dac00015 	stw	r11,0(sp)
 101304c:	dc411c15 	stw	r17,1136(sp)
 1013050:	d8811b15 	stw	r2,1132(sp)
 1013054:	8807883a 	mov	r3,r17
 1013058:	d811883a 	mov	r8,sp
 101305c:	42000204 	addi	r8,r8,8
 1013060:	aac0010c 	andi	r11,r21,4
 1013064:	58000226 	beq	r11,zero,1013070 <___vfiprintf_internal_r+0xd5c>
 1013068:	9ca3c83a 	sub	r17,r19,r18
 101306c:	047e2616 	blt	zero,r17,1012908 <__alt_data_end+0xff812908>
 1013070:	94c0010e 	bge	r18,r19,1013078 <___vfiprintf_internal_r+0xd64>
 1013074:	9825883a 	mov	r18,r19
 1013078:	da812217 	ldw	r10,1160(sp)
 101307c:	5495883a 	add	r10,r10,r18
 1013080:	da812215 	stw	r10,1160(sp)
 1013084:	183e4826 	beq	r3,zero,10129a8 <__alt_data_end+0xff8129a8>
 1013088:	d9012017 	ldw	r4,1152(sp)
 101308c:	a00b883a 	mov	r5,r20
 1013090:	d9811a04 	addi	r6,sp,1128
 1013094:	10122000 	call	1012200 <__sprint_r.part.0>
 1013098:	103e4326 	beq	r2,zero,10129a8 <__alt_data_end+0xff8129a8>
 101309c:	003fd706 	br	1012ffc <__alt_data_end+0xff812ffc>
 10130a0:	9cadc83a 	sub	r22,r19,r18
 10130a4:	05bde40e 	bge	zero,r22,1012838 <__alt_data_end+0xff812838>
 10130a8:	03000404 	movi	r12,16
 10130ac:	6581500e 	bge	r12,r22,10135f0 <___vfiprintf_internal_r+0x12dc>
 10130b0:	008040b4 	movhi	r2,258
 10130b4:	10a64b04 	addi	r2,r2,-26324
 10130b8:	d8812315 	stw	r2,1164(sp)
 10130bc:	8005883a 	mov	r2,r16
 10130c0:	038001c4 	movi	r14,7
 10130c4:	b021883a 	mov	r16,r22
 10130c8:	da412515 	stw	r9,1172(sp)
 10130cc:	102d883a 	mov	r22,r2
 10130d0:	00000506 	br	10130e8 <___vfiprintf_internal_r+0xdd4>
 10130d4:	29000084 	addi	r4,r5,2
 10130d8:	42000204 	addi	r8,r8,8
 10130dc:	100b883a 	mov	r5,r2
 10130e0:	843ffc04 	addi	r16,r16,-16
 10130e4:	64000d0e 	bge	r12,r16,101311c <___vfiprintf_internal_r+0xe08>
 10130e8:	18c00404 	addi	r3,r3,16
 10130ec:	28800044 	addi	r2,r5,1
 10130f0:	45c00015 	stw	r23,0(r8)
 10130f4:	43000115 	stw	r12,4(r8)
 10130f8:	d8c11c15 	stw	r3,1136(sp)
 10130fc:	d8811b15 	stw	r2,1132(sp)
 1013100:	70bff40e 	bge	r14,r2,10130d4 <__alt_data_end+0xff8130d4>
 1013104:	1800151e 	bne	r3,zero,101315c <___vfiprintf_internal_r+0xe48>
 1013108:	843ffc04 	addi	r16,r16,-16
 101310c:	000b883a 	mov	r5,zero
 1013110:	01000044 	movi	r4,1
 1013114:	d811883a 	mov	r8,sp
 1013118:	643ff316 	blt	r12,r16,10130e8 <__alt_data_end+0xff8130e8>
 101311c:	da412517 	ldw	r9,1172(sp)
 1013120:	b005883a 	mov	r2,r22
 1013124:	802d883a 	mov	r22,r16
 1013128:	1021883a 	mov	r16,r2
 101312c:	da812317 	ldw	r10,1164(sp)
 1013130:	1d87883a 	add	r3,r3,r22
 1013134:	45800115 	stw	r22,4(r8)
 1013138:	42800015 	stw	r10,0(r8)
 101313c:	d8c11c15 	stw	r3,1136(sp)
 1013140:	d9011b15 	stw	r4,1132(sp)
 1013144:	008001c4 	movi	r2,7
 1013148:	11008d16 	blt	r2,r4,1013380 <___vfiprintf_internal_r+0x106c>
 101314c:	42000204 	addi	r8,r8,8
 1013150:	20800044 	addi	r2,r4,1
 1013154:	200b883a 	mov	r5,r4
 1013158:	003db706 	br	1012838 <__alt_data_end+0xff812838>
 101315c:	d9012017 	ldw	r4,1152(sp)
 1013160:	a00b883a 	mov	r5,r20
 1013164:	d9811a04 	addi	r6,sp,1128
 1013168:	db012b15 	stw	r12,1196(sp)
 101316c:	db812a15 	stw	r14,1192(sp)
 1013170:	10122000 	call	1012200 <__sprint_r.part.0>
 1013174:	db012b17 	ldw	r12,1196(sp)
 1013178:	db812a17 	ldw	r14,1192(sp)
 101317c:	103f9f1e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 1013180:	d9411b17 	ldw	r5,1132(sp)
 1013184:	d8c11c17 	ldw	r3,1136(sp)
 1013188:	d811883a 	mov	r8,sp
 101318c:	29000044 	addi	r4,r5,1
 1013190:	003fd306 	br	10130e0 <__alt_data_end+0xff8130e0>
 1013194:	18006c1e 	bne	r3,zero,1013348 <___vfiprintf_internal_r+0x1034>
 1013198:	70004f26 	beq	r14,zero,10132d8 <___vfiprintf_internal_r+0xfc4>
 101319c:	d8811d04 	addi	r2,sp,1140
 10131a0:	00c00084 	movi	r3,2
 10131a4:	d8800015 	stw	r2,0(sp)
 10131a8:	d8c00115 	stw	r3,4(sp)
 10131ac:	2005883a 	mov	r2,r4
 10131b0:	d811883a 	mov	r8,sp
 10131b4:	003d9b06 	br	1012824 <__alt_data_end+0xff812824>
 10131b8:	1800571e 	bne	r3,zero,1013318 <___vfiprintf_internal_r+0x1004>
 10131bc:	000b883a 	mov	r5,zero
 10131c0:	00800044 	movi	r2,1
 10131c4:	d811883a 	mov	r8,sp
 10131c8:	003d9906 	br	1012830 <__alt_data_end+0xff812830>
 10131cc:	10803fcc 	andi	r2,r2,255
 10131d0:	1000251e 	bne	r2,zero,1013268 <___vfiprintf_internal_r+0xf54>
 10131d4:	a880004c 	andi	r2,r21,1
 10131d8:	10007826 	beq	r2,zero,10133bc <___vfiprintf_internal_r+0x10a8>
 10131dc:	00800c04 	movi	r2,48
 10131e0:	d8c109c4 	addi	r3,sp,1063
 10131e4:	d88109c5 	stb	r2,1063(sp)
 10131e8:	dc412717 	ldw	r17,1180(sp)
 10131ec:	d8c12415 	stw	r3,1168(sp)
 10131f0:	003d4406 	br	1012704 <__alt_data_end+0xff812704>
 10131f4:	d9012617 	ldw	r4,1176(sp)
 10131f8:	dc410a04 	addi	r17,sp,1064
 10131fc:	908003cc 	andi	r2,r18,15
 1013200:	b006973a 	slli	r3,r22,28
 1013204:	2085883a 	add	r2,r4,r2
 1013208:	9024d13a 	srli	r18,r18,4
 101320c:	10800003 	ldbu	r2,0(r2)
 1013210:	b02cd13a 	srli	r22,r22,4
 1013214:	8c7fffc4 	addi	r17,r17,-1
 1013218:	1ca4b03a 	or	r18,r3,r18
 101321c:	88800005 	stb	r2,0(r17)
 1013220:	9584b03a 	or	r2,r18,r22
 1013224:	103ff51e 	bne	r2,zero,10131fc <__alt_data_end+0xff8131fc>
 1013228:	dac11e17 	ldw	r11,1144(sp)
 101322c:	dc412415 	stw	r17,1168(sp)
 1013230:	5c63c83a 	sub	r17,r11,r17
 1013234:	003d3306 	br	1012704 <__alt_data_end+0xff812704>
 1013238:	1800941e 	bne	r3,zero,101348c <___vfiprintf_internal_r+0x1178>
 101323c:	d8811d87 	ldb	r2,1142(sp)
 1013240:	10006b26 	beq	r2,zero,10133f0 <___vfiprintf_internal_r+0x10dc>
 1013244:	00c00044 	movi	r3,1
 1013248:	d9011d84 	addi	r4,sp,1142
 101324c:	1805883a 	mov	r2,r3
 1013250:	d9000015 	stw	r4,0(sp)
 1013254:	d8c00115 	stw	r3,4(sp)
 1013258:	d811883a 	mov	r8,sp
 101325c:	003f2306 	br	1012eec <__alt_data_end+0xff812eec>
 1013260:	8023883a 	mov	r17,r16
 1013264:	003c7d06 	br	101245c <__alt_data_end+0xff81245c>
 1013268:	da810a04 	addi	r10,sp,1064
 101326c:	da812415 	stw	r10,1168(sp)
 1013270:	003d2406 	br	1012704 <__alt_data_end+0xff812704>
 1013274:	d9012017 	ldw	r4,1152(sp)
 1013278:	a00b883a 	mov	r5,r20
 101327c:	d9811a04 	addi	r6,sp,1128
 1013280:	10122000 	call	1012200 <__sprint_r.part.0>
 1013284:	103f5d1e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 1013288:	d8c11c17 	ldw	r3,1136(sp)
 101328c:	d811883a 	mov	r8,sp
 1013290:	003f7306 	br	1013060 <__alt_data_end+0xff813060>
 1013294:	1c800017 	ldw	r18,0(r3)
 1013298:	dac12117 	ldw	r11,1156(sp)
 101329c:	902dd7fa 	srai	r22,r18,31
 10132a0:	5ac00104 	addi	r11,r11,4
 10132a4:	dac12115 	stw	r11,1156(sp)
 10132a8:	b005883a 	mov	r2,r22
 10132ac:	003e5406 	br	1012c00 <__alt_data_end+0xff812c00>
 10132b0:	00800084 	movi	r2,2
 10132b4:	9588b03a 	or	r4,r18,r22
 10132b8:	003cf506 	br	1012690 <__alt_data_end+0xff812690>
 10132bc:	d9012017 	ldw	r4,1152(sp)
 10132c0:	a00b883a 	mov	r5,r20
 10132c4:	d9811a04 	addi	r6,sp,1128
 10132c8:	10122000 	call	1012200 <__sprint_r.part.0>
 10132cc:	103f4b1e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 10132d0:	d811883a 	mov	r8,sp
 10132d4:	003cd106 	br	101261c <__alt_data_end+0xff81261c>
 10132d8:	000b883a 	mov	r5,zero
 10132dc:	2005883a 	mov	r2,r4
 10132e0:	d811883a 	mov	r8,sp
 10132e4:	003d5206 	br	1012830 <__alt_data_end+0xff812830>
 10132e8:	10803fcc 	andi	r2,r2,255
 10132ec:	1080201c 	xori	r2,r2,128
 10132f0:	10bfe004 	addi	r2,r2,-128
 10132f4:	01000c04 	movi	r4,48
 10132f8:	11008e26 	beq	r2,r4,1013534 <___vfiprintf_internal_r+0x1220>
 10132fc:	da812417 	ldw	r10,1168(sp)
 1013300:	dac11e17 	ldw	r11,1144(sp)
 1013304:	193fffc5 	stb	r4,-1(r3)
 1013308:	52bfffc4 	addi	r10,r10,-1
 101330c:	da812415 	stw	r10,1168(sp)
 1013310:	5aa3c83a 	sub	r17,r11,r10
 1013314:	003cfb06 	br	1012704 <__alt_data_end+0xff812704>
 1013318:	d9012017 	ldw	r4,1152(sp)
 101331c:	a00b883a 	mov	r5,r20
 1013320:	d9811a04 	addi	r6,sp,1128
 1013324:	da412b15 	stw	r9,1196(sp)
 1013328:	10122000 	call	1012200 <__sprint_r.part.0>
 101332c:	da412b17 	ldw	r9,1196(sp)
 1013330:	103f321e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 1013334:	d9411b17 	ldw	r5,1132(sp)
 1013338:	d8c11c17 	ldw	r3,1136(sp)
 101333c:	d811883a 	mov	r8,sp
 1013340:	28800044 	addi	r2,r5,1
 1013344:	003d3a06 	br	1012830 <__alt_data_end+0xff812830>
 1013348:	d9012017 	ldw	r4,1152(sp)
 101334c:	a00b883a 	mov	r5,r20
 1013350:	d9811a04 	addi	r6,sp,1128
 1013354:	da412b15 	stw	r9,1196(sp)
 1013358:	db812a15 	stw	r14,1192(sp)
 101335c:	10122000 	call	1012200 <__sprint_r.part.0>
 1013360:	da412b17 	ldw	r9,1196(sp)
 1013364:	db812a17 	ldw	r14,1192(sp)
 1013368:	103f241e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 101336c:	d9411b17 	ldw	r5,1132(sp)
 1013370:	d8c11c17 	ldw	r3,1136(sp)
 1013374:	d811883a 	mov	r8,sp
 1013378:	28800044 	addi	r2,r5,1
 101337c:	003d1f06 	br	10127fc <__alt_data_end+0xff8127fc>
 1013380:	1800781e 	bne	r3,zero,1013564 <___vfiprintf_internal_r+0x1250>
 1013384:	000b883a 	mov	r5,zero
 1013388:	00800044 	movi	r2,1
 101338c:	d811883a 	mov	r8,sp
 1013390:	003d2906 	br	1012838 <__alt_data_end+0xff812838>
 1013394:	d9012017 	ldw	r4,1152(sp)
 1013398:	a00b883a 	mov	r5,r20
 101339c:	d9811a04 	addi	r6,sp,1128
 10133a0:	10122000 	call	1012200 <__sprint_r.part.0>
 10133a4:	103f151e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 10133a8:	d8811b17 	ldw	r2,1132(sp)
 10133ac:	d8c11c17 	ldw	r3,1136(sp)
 10133b0:	d811883a 	mov	r8,sp
 10133b4:	10800044 	addi	r2,r2,1
 10133b8:	003d4406 	br	10128cc <__alt_data_end+0xff8128cc>
 10133bc:	dac10a04 	addi	r11,sp,1064
 10133c0:	dac12415 	stw	r11,1168(sp)
 10133c4:	003ccf06 	br	1012704 <__alt_data_end+0xff812704>
 10133c8:	04a5c83a 	sub	r18,zero,r18
 10133cc:	9004c03a 	cmpne	r2,r18,zero
 10133d0:	05adc83a 	sub	r22,zero,r22
 10133d4:	b0adc83a 	sub	r22,r22,r2
 10133d8:	03000b44 	movi	r12,45
 10133dc:	db011d85 	stb	r12,1142(sp)
 10133e0:	4823883a 	mov	r17,r9
 10133e4:	00800044 	movi	r2,1
 10133e8:	9588b03a 	or	r4,r18,r22
 10133ec:	003cab06 	br	101269c <__alt_data_end+0xff81269c>
 10133f0:	000b883a 	mov	r5,zero
 10133f4:	00800044 	movi	r2,1
 10133f8:	d811883a 	mov	r8,sp
 10133fc:	703d0c26 	beq	r14,zero,1012830 <__alt_data_end+0xff812830>
 1013400:	00c00084 	movi	r3,2
 1013404:	d9011d04 	addi	r4,sp,1140
 1013408:	d9000015 	stw	r4,0(sp)
 101340c:	d8c00115 	stw	r3,4(sp)
 1013410:	003d0406 	br	1012824 <__alt_data_end+0xff812824>
 1013414:	80c00007 	ldb	r3,0(r16)
 1013418:	003c1d06 	br	1012490 <__alt_data_end+0xff812490>
 101341c:	a880040c 	andi	r2,r21,16
 1013420:	1000091e 	bne	r2,zero,1013448 <___vfiprintf_internal_r+0x1134>
 1013424:	aac0100c 	andi	r11,r21,64
 1013428:	58000726 	beq	r11,zero,1013448 <___vfiprintf_internal_r+0x1134>
 101342c:	da812117 	ldw	r10,1156(sp)
 1013430:	dac12217 	ldw	r11,1160(sp)
 1013434:	50800017 	ldw	r2,0(r10)
 1013438:	52800104 	addi	r10,r10,4
 101343c:	da812115 	stw	r10,1156(sp)
 1013440:	12c0000d 	sth	r11,0(r2)
 1013444:	003be806 	br	10123e8 <__alt_data_end+0xff8123e8>
 1013448:	da812117 	ldw	r10,1156(sp)
 101344c:	dac12217 	ldw	r11,1160(sp)
 1013450:	50800017 	ldw	r2,0(r10)
 1013454:	52800104 	addi	r10,r10,4
 1013458:	da812115 	stw	r10,1156(sp)
 101345c:	12c00015 	stw	r11,0(r2)
 1013460:	003be106 	br	10123e8 <__alt_data_end+0xff8123e8>
 1013464:	00800084 	movi	r2,2
 1013468:	003c8906 	br	1012690 <__alt_data_end+0xff812690>
 101346c:	a900100c 	andi	r4,r21,64
 1013470:	20001f26 	beq	r4,zero,10134f0 <___vfiprintf_internal_r+0x11dc>
 1013474:	da812117 	ldw	r10,1156(sp)
 1013478:	1480000b 	ldhu	r18,0(r2)
 101347c:	002d883a 	mov	r22,zero
 1013480:	52800104 	addi	r10,r10,4
 1013484:	da812115 	stw	r10,1156(sp)
 1013488:	003dae06 	br	1012b44 <__alt_data_end+0xff812b44>
 101348c:	d9012017 	ldw	r4,1152(sp)
 1013490:	a00b883a 	mov	r5,r20
 1013494:	d9811a04 	addi	r6,sp,1128
 1013498:	da412b15 	stw	r9,1196(sp)
 101349c:	db812a15 	stw	r14,1192(sp)
 10134a0:	10122000 	call	1012200 <__sprint_r.part.0>
 10134a4:	da412b17 	ldw	r9,1196(sp)
 10134a8:	db812a17 	ldw	r14,1192(sp)
 10134ac:	103ed31e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 10134b0:	d9411b17 	ldw	r5,1132(sp)
 10134b4:	d8c11c17 	ldw	r3,1136(sp)
 10134b8:	d811883a 	mov	r8,sp
 10134bc:	28800044 	addi	r2,r5,1
 10134c0:	003e7f06 	br	1012ec0 <__alt_data_end+0xff812ec0>
 10134c4:	9825883a 	mov	r18,r19
 10134c8:	003d3406 	br	101299c <__alt_data_end+0xff81299c>
 10134cc:	4823883a 	mov	r17,r9
 10134d0:	003e0806 	br	1012cf4 <__alt_data_end+0xff812cf4>
 10134d4:	d9012017 	ldw	r4,1152(sp)
 10134d8:	a00b883a 	mov	r5,r20
 10134dc:	d9811a04 	addi	r6,sp,1128
 10134e0:	10122000 	call	1012200 <__sprint_r.part.0>
 10134e4:	103ec51e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 10134e8:	d8c11c17 	ldw	r3,1136(sp)
 10134ec:	003ee006 	br	1013070 <__alt_data_end+0xff813070>
 10134f0:	dac12117 	ldw	r11,1156(sp)
 10134f4:	14800017 	ldw	r18,0(r2)
 10134f8:	002d883a 	mov	r22,zero
 10134fc:	5ac00104 	addi	r11,r11,4
 1013500:	dac12115 	stw	r11,1156(sp)
 1013504:	003d8f06 	br	1012b44 <__alt_data_end+0xff812b44>
 1013508:	02c040b4 	movhi	r11,258
 101350c:	5ae64b04 	addi	r11,r11,-26324
 1013510:	dac12315 	stw	r11,1164(sp)
 1013514:	003ce306 	br	10128a4 <__alt_data_end+0xff8128a4>
 1013518:	80c00043 	ldbu	r3,1(r16)
 101351c:	ad400814 	ori	r21,r21,32
 1013520:	84000044 	addi	r16,r16,1
 1013524:	18c03fcc 	andi	r3,r3,255
 1013528:	18c0201c 	xori	r3,r3,128
 101352c:	18ffe004 	addi	r3,r3,-128
 1013530:	003bd706 	br	1012490 <__alt_data_end+0xff812490>
 1013534:	dac11e17 	ldw	r11,1144(sp)
 1013538:	d8c12417 	ldw	r3,1168(sp)
 101353c:	58e3c83a 	sub	r17,r11,r3
 1013540:	003c7006 	br	1012704 <__alt_data_end+0xff812704>
 1013544:	da012a15 	stw	r8,1192(sp)
 1013548:	1004fa80 	call	1004fa8 <strlen>
 101354c:	1023883a 	mov	r17,r2
 1013550:	db011d83 	ldbu	r12,1142(sp)
 1013554:	dd812115 	stw	r22,1156(sp)
 1013558:	0013883a 	mov	r9,zero
 101355c:	da012a17 	ldw	r8,1192(sp)
 1013560:	003c6806 	br	1012704 <__alt_data_end+0xff812704>
 1013564:	d9012017 	ldw	r4,1152(sp)
 1013568:	a00b883a 	mov	r5,r20
 101356c:	d9811a04 	addi	r6,sp,1128
 1013570:	da412b15 	stw	r9,1196(sp)
 1013574:	10122000 	call	1012200 <__sprint_r.part.0>
 1013578:	da412b17 	ldw	r9,1196(sp)
 101357c:	103e9f1e 	bne	r2,zero,1012ffc <__alt_data_end+0xff812ffc>
 1013580:	d9411b17 	ldw	r5,1132(sp)
 1013584:	d8c11c17 	ldw	r3,1136(sp)
 1013588:	d811883a 	mov	r8,sp
 101358c:	28800044 	addi	r2,r5,1
 1013590:	003ca906 	br	1012838 <__alt_data_end+0xff812838>
 1013594:	d9411b17 	ldw	r5,1132(sp)
 1013598:	010040b4 	movhi	r4,258
 101359c:	21264f04 	addi	r4,r4,-26308
 10135a0:	d9012315 	stw	r4,1164(sp)
 10135a4:	29400044 	addi	r5,r5,1
 10135a8:	003c8806 	br	10127cc <__alt_data_end+0xff8127cc>
 10135ac:	00800184 	movi	r2,6
 10135b0:	1240012e 	bgeu	r2,r9,10135b8 <___vfiprintf_internal_r+0x12a4>
 10135b4:	1013883a 	mov	r9,r2
 10135b8:	4823883a 	mov	r17,r9
 10135bc:	4825883a 	mov	r18,r9
 10135c0:	48001516 	blt	r9,zero,1013618 <___vfiprintf_internal_r+0x1304>
 10135c4:	008040b4 	movhi	r2,258
 10135c8:	10a5d904 	addi	r2,r2,-26780
 10135cc:	dd812115 	stw	r22,1156(sp)
 10135d0:	d8812415 	stw	r2,1168(sp)
 10135d4:	003d6f06 	br	1012b94 <__alt_data_end+0xff812b94>
 10135d8:	d9411b17 	ldw	r5,1132(sp)
 10135dc:	02c040b4 	movhi	r11,258
 10135e0:	5ae64f04 	addi	r11,r11,-26308
 10135e4:	dac12315 	stw	r11,1164(sp)
 10135e8:	29400044 	addi	r5,r5,1
 10135ec:	003ce106 	br	1012974 <__alt_data_end+0xff812974>
 10135f0:	010040b4 	movhi	r4,258
 10135f4:	21264b04 	addi	r4,r4,-26324
 10135f8:	d9012315 	stw	r4,1164(sp)
 10135fc:	1009883a 	mov	r4,r2
 1013600:	003eca06 	br	101312c <__alt_data_end+0xff81312c>
 1013604:	4823883a 	mov	r17,r9
 1013608:	db011d83 	ldbu	r12,1142(sp)
 101360c:	dd812115 	stw	r22,1156(sp)
 1013610:	0013883a 	mov	r9,zero
 1013614:	003c3b06 	br	1012704 <__alt_data_end+0xff812704>
 1013618:	0025883a 	mov	r18,zero
 101361c:	003fe906 	br	10135c4 <__alt_data_end+0xff8135c4>
 1013620:	dac12117 	ldw	r11,1156(sp)
 1013624:	8005883a 	mov	r2,r16
 1013628:	5021883a 	mov	r16,r10
 101362c:	5a400017 	ldw	r9,0(r11)
 1013630:	58c00104 	addi	r3,r11,4
 1013634:	d8c12115 	stw	r3,1156(sp)
 1013638:	48000a16 	blt	r9,zero,1013664 <___vfiprintf_internal_r+0x1350>
 101363c:	10c00047 	ldb	r3,1(r2)
 1013640:	003b9306 	br	1012490 <__alt_data_end+0xff812490>
 1013644:	043fffc4 	movi	r16,-1
 1013648:	003d0206 	br	1012a54 <__alt_data_end+0xff812a54>
 101364c:	94c0010e 	bge	r18,r19,1013654 <___vfiprintf_internal_r+0x1340>
 1013650:	9825883a 	mov	r18,r19
 1013654:	da812217 	ldw	r10,1160(sp)
 1013658:	5495883a 	add	r10,r10,r18
 101365c:	da812215 	stw	r10,1160(sp)
 1013660:	003cd106 	br	10129a8 <__alt_data_end+0xff8129a8>
 1013664:	027fffc4 	movi	r9,-1
 1013668:	10c00047 	ldb	r3,1(r2)
 101366c:	003b8806 	br	1012490 <__alt_data_end+0xff812490>

01013670 <__vfiprintf_internal>:
 1013670:	2007883a 	mov	r3,r4
 1013674:	010040b4 	movhi	r4,258
 1013678:	212d3804 	addi	r4,r4,-19232
 101367c:	21000017 	ldw	r4,0(r4)
 1013680:	2805883a 	mov	r2,r5
 1013684:	300f883a 	mov	r7,r6
 1013688:	180b883a 	mov	r5,r3
 101368c:	100d883a 	mov	r6,r2
 1013690:	10123141 	jmpi	1012314 <___vfiprintf_internal_r>

01013694 <_write_r>:
 1013694:	defffd04 	addi	sp,sp,-12
 1013698:	dc000015 	stw	r16,0(sp)
 101369c:	040040b4 	movhi	r16,258
 10136a0:	dc400115 	stw	r17,4(sp)
 10136a4:	84345204 	addi	r16,r16,-11960
 10136a8:	2023883a 	mov	r17,r4
 10136ac:	2809883a 	mov	r4,r5
 10136b0:	300b883a 	mov	r5,r6
 10136b4:	380d883a 	mov	r6,r7
 10136b8:	dfc00215 	stw	ra,8(sp)
 10136bc:	80000015 	stw	zero,0(r16)
 10136c0:	1016af00 	call	1016af0 <write>
 10136c4:	00ffffc4 	movi	r3,-1
 10136c8:	10c00526 	beq	r2,r3,10136e0 <_write_r+0x4c>
 10136cc:	dfc00217 	ldw	ra,8(sp)
 10136d0:	dc400117 	ldw	r17,4(sp)
 10136d4:	dc000017 	ldw	r16,0(sp)
 10136d8:	dec00304 	addi	sp,sp,12
 10136dc:	f800283a 	ret
 10136e0:	80c00017 	ldw	r3,0(r16)
 10136e4:	183ff926 	beq	r3,zero,10136cc <__alt_data_end+0xff8136cc>
 10136e8:	88c00015 	stw	r3,0(r17)
 10136ec:	003ff706 	br	10136cc <__alt_data_end+0xff8136cc>

010136f0 <_close_r>:
 10136f0:	defffd04 	addi	sp,sp,-12
 10136f4:	dc000015 	stw	r16,0(sp)
 10136f8:	040040b4 	movhi	r16,258
 10136fc:	dc400115 	stw	r17,4(sp)
 1013700:	84345204 	addi	r16,r16,-11960
 1013704:	2023883a 	mov	r17,r4
 1013708:	2809883a 	mov	r4,r5
 101370c:	dfc00215 	stw	ra,8(sp)
 1013710:	80000015 	stw	zero,0(r16)
 1013714:	10162640 	call	1016264 <close>
 1013718:	00ffffc4 	movi	r3,-1
 101371c:	10c00526 	beq	r2,r3,1013734 <_close_r+0x44>
 1013720:	dfc00217 	ldw	ra,8(sp)
 1013724:	dc400117 	ldw	r17,4(sp)
 1013728:	dc000017 	ldw	r16,0(sp)
 101372c:	dec00304 	addi	sp,sp,12
 1013730:	f800283a 	ret
 1013734:	80c00017 	ldw	r3,0(r16)
 1013738:	183ff926 	beq	r3,zero,1013720 <__alt_data_end+0xff813720>
 101373c:	88c00015 	stw	r3,0(r17)
 1013740:	003ff706 	br	1013720 <__alt_data_end+0xff813720>

01013744 <_calloc_r>:
 1013744:	298b383a 	mul	r5,r5,r6
 1013748:	defffe04 	addi	sp,sp,-8
 101374c:	dc000015 	stw	r16,0(sp)
 1013750:	dfc00115 	stw	ra,4(sp)
 1013754:	100eaec0 	call	100eaec <_malloc_r>
 1013758:	1021883a 	mov	r16,r2
 101375c:	10002826 	beq	r2,zero,1013800 <_calloc_r+0xbc>
 1013760:	11bfff17 	ldw	r6,-4(r2)
 1013764:	00bfff04 	movi	r2,-4
 1013768:	00c00904 	movi	r3,36
 101376c:	308c703a 	and	r6,r6,r2
 1013770:	308d883a 	add	r6,r6,r2
 1013774:	19801436 	bltu	r3,r6,10137c8 <_calloc_r+0x84>
 1013778:	008004c4 	movi	r2,19
 101377c:	11800936 	bltu	r2,r6,10137a4 <_calloc_r+0x60>
 1013780:	8005883a 	mov	r2,r16
 1013784:	10000015 	stw	zero,0(r2)
 1013788:	10000115 	stw	zero,4(r2)
 101378c:	10000215 	stw	zero,8(r2)
 1013790:	8005883a 	mov	r2,r16
 1013794:	dfc00117 	ldw	ra,4(sp)
 1013798:	dc000017 	ldw	r16,0(sp)
 101379c:	dec00204 	addi	sp,sp,8
 10137a0:	f800283a 	ret
 10137a4:	80000015 	stw	zero,0(r16)
 10137a8:	80000115 	stw	zero,4(r16)
 10137ac:	008006c4 	movi	r2,27
 10137b0:	11800d2e 	bgeu	r2,r6,10137e8 <_calloc_r+0xa4>
 10137b4:	80000215 	stw	zero,8(r16)
 10137b8:	80000315 	stw	zero,12(r16)
 10137bc:	30c00c26 	beq	r6,r3,10137f0 <_calloc_r+0xac>
 10137c0:	80800404 	addi	r2,r16,16
 10137c4:	003fef06 	br	1013784 <__alt_data_end+0xff813784>
 10137c8:	8009883a 	mov	r4,r16
 10137cc:	000b883a 	mov	r5,zero
 10137d0:	100f68c0 	call	100f68c <memset>
 10137d4:	8005883a 	mov	r2,r16
 10137d8:	dfc00117 	ldw	ra,4(sp)
 10137dc:	dc000017 	ldw	r16,0(sp)
 10137e0:	dec00204 	addi	sp,sp,8
 10137e4:	f800283a 	ret
 10137e8:	80800204 	addi	r2,r16,8
 10137ec:	003fe506 	br	1013784 <__alt_data_end+0xff813784>
 10137f0:	80000415 	stw	zero,16(r16)
 10137f4:	80800604 	addi	r2,r16,24
 10137f8:	80000515 	stw	zero,20(r16)
 10137fc:	003fe106 	br	1013784 <__alt_data_end+0xff813784>
 1013800:	0005883a 	mov	r2,zero
 1013804:	003fe306 	br	1013794 <__alt_data_end+0xff813794>

01013808 <_fclose_r>:
 1013808:	28003226 	beq	r5,zero,10138d4 <_fclose_r+0xcc>
 101380c:	defffc04 	addi	sp,sp,-16
 1013810:	dc400115 	stw	r17,4(sp)
 1013814:	2023883a 	mov	r17,r4
 1013818:	dc000015 	stw	r16,0(sp)
 101381c:	dfc00315 	stw	ra,12(sp)
 1013820:	dc800215 	stw	r18,8(sp)
 1013824:	2821883a 	mov	r16,r5
 1013828:	100d1b80 	call	100d1b8 <__sfp_lock_acquire>
 101382c:	88000226 	beq	r17,zero,1013838 <_fclose_r+0x30>
 1013830:	88800e17 	ldw	r2,56(r17)
 1013834:	10002926 	beq	r2,zero,10138dc <_fclose_r+0xd4>
 1013838:	8080030f 	ldh	r2,12(r16)
 101383c:	10002226 	beq	r2,zero,10138c8 <_fclose_r+0xc0>
 1013840:	8809883a 	mov	r4,r17
 1013844:	800b883a 	mov	r5,r16
 1013848:	100cc000 	call	100cc00 <_fflush_r>
 101384c:	1025883a 	mov	r18,r2
 1013850:	80800b17 	ldw	r2,44(r16)
 1013854:	10000426 	beq	r2,zero,1013868 <_fclose_r+0x60>
 1013858:	81400717 	ldw	r5,28(r16)
 101385c:	8809883a 	mov	r4,r17
 1013860:	103ee83a 	callr	r2
 1013864:	10002616 	blt	r2,zero,1013900 <_fclose_r+0xf8>
 1013868:	8080030b 	ldhu	r2,12(r16)
 101386c:	1080200c 	andi	r2,r2,128
 1013870:	10001f1e 	bne	r2,zero,10138f0 <_fclose_r+0xe8>
 1013874:	81400c17 	ldw	r5,48(r16)
 1013878:	28000526 	beq	r5,zero,1013890 <_fclose_r+0x88>
 101387c:	80801004 	addi	r2,r16,64
 1013880:	28800226 	beq	r5,r2,101388c <_fclose_r+0x84>
 1013884:	8809883a 	mov	r4,r17
 1013888:	100d31c0 	call	100d31c <_free_r>
 101388c:	80000c15 	stw	zero,48(r16)
 1013890:	81401117 	ldw	r5,68(r16)
 1013894:	28000326 	beq	r5,zero,10138a4 <_fclose_r+0x9c>
 1013898:	8809883a 	mov	r4,r17
 101389c:	100d31c0 	call	100d31c <_free_r>
 10138a0:	80001115 	stw	zero,68(r16)
 10138a4:	8000030d 	sth	zero,12(r16)
 10138a8:	100d1bc0 	call	100d1bc <__sfp_lock_release>
 10138ac:	9005883a 	mov	r2,r18
 10138b0:	dfc00317 	ldw	ra,12(sp)
 10138b4:	dc800217 	ldw	r18,8(sp)
 10138b8:	dc400117 	ldw	r17,4(sp)
 10138bc:	dc000017 	ldw	r16,0(sp)
 10138c0:	dec00404 	addi	sp,sp,16
 10138c4:	f800283a 	ret
 10138c8:	100d1bc0 	call	100d1bc <__sfp_lock_release>
 10138cc:	0005883a 	mov	r2,zero
 10138d0:	003ff706 	br	10138b0 <__alt_data_end+0xff8138b0>
 10138d4:	0005883a 	mov	r2,zero
 10138d8:	f800283a 	ret
 10138dc:	8809883a 	mov	r4,r17
 10138e0:	100d1a80 	call	100d1a8 <__sinit>
 10138e4:	8080030f 	ldh	r2,12(r16)
 10138e8:	103fd51e 	bne	r2,zero,1013840 <__alt_data_end+0xff813840>
 10138ec:	003ff606 	br	10138c8 <__alt_data_end+0xff8138c8>
 10138f0:	81400417 	ldw	r5,16(r16)
 10138f4:	8809883a 	mov	r4,r17
 10138f8:	100d31c0 	call	100d31c <_free_r>
 10138fc:	003fdd06 	br	1013874 <__alt_data_end+0xff813874>
 1013900:	04bfffc4 	movi	r18,-1
 1013904:	003fd806 	br	1013868 <__alt_data_end+0xff813868>

01013908 <fclose>:
 1013908:	008040b4 	movhi	r2,258
 101390c:	10ad3804 	addi	r2,r2,-19232
 1013910:	200b883a 	mov	r5,r4
 1013914:	11000017 	ldw	r4,0(r2)
 1013918:	10138081 	jmpi	1013808 <_fclose_r>

0101391c <_fputwc_r>:
 101391c:	3080030b 	ldhu	r2,12(r6)
 1013920:	defff804 	addi	sp,sp,-32
 1013924:	dcc00415 	stw	r19,16(sp)
 1013928:	dc800315 	stw	r18,12(sp)
 101392c:	dc000115 	stw	r16,4(sp)
 1013930:	dfc00715 	stw	ra,28(sp)
 1013934:	dd400615 	stw	r21,24(sp)
 1013938:	dd000515 	stw	r20,20(sp)
 101393c:	dc400215 	stw	r17,8(sp)
 1013940:	10c8000c 	andi	r3,r2,8192
 1013944:	3021883a 	mov	r16,r6
 1013948:	2027883a 	mov	r19,r4
 101394c:	2825883a 	mov	r18,r5
 1013950:	1800051e 	bne	r3,zero,1013968 <_fputwc_r+0x4c>
 1013954:	30c01917 	ldw	r3,100(r6)
 1013958:	10880014 	ori	r2,r2,8192
 101395c:	3080030d 	sth	r2,12(r6)
 1013960:	18880014 	ori	r2,r3,8192
 1013964:	30801915 	stw	r2,100(r6)
 1013968:	100e8dc0 	call	100e8dc <__locale_mb_cur_max>
 101396c:	00c00044 	movi	r3,1
 1013970:	10c03e26 	beq	r2,r3,1013a6c <_fputwc_r+0x150>
 1013974:	9809883a 	mov	r4,r19
 1013978:	d80b883a 	mov	r5,sp
 101397c:	900d883a 	mov	r6,r18
 1013980:	81c01704 	addi	r7,r16,92
 1013984:	1013dcc0 	call	1013dcc <_wcrtomb_r>
 1013988:	1029883a 	mov	r20,r2
 101398c:	00bfffc4 	movi	r2,-1
 1013990:	a0802026 	beq	r20,r2,1013a14 <_fputwc_r+0xf8>
 1013994:	d9400003 	ldbu	r5,0(sp)
 1013998:	a0001c26 	beq	r20,zero,1013a0c <_fputwc_r+0xf0>
 101399c:	0023883a 	mov	r17,zero
 10139a0:	05400284 	movi	r21,10
 10139a4:	00000906 	br	10139cc <_fputwc_r+0xb0>
 10139a8:	80800017 	ldw	r2,0(r16)
 10139ac:	11400005 	stb	r5,0(r2)
 10139b0:	80c00017 	ldw	r3,0(r16)
 10139b4:	18c00044 	addi	r3,r3,1
 10139b8:	80c00015 	stw	r3,0(r16)
 10139bc:	8c400044 	addi	r17,r17,1
 10139c0:	dc45883a 	add	r2,sp,r17
 10139c4:	8d00112e 	bgeu	r17,r20,1013a0c <_fputwc_r+0xf0>
 10139c8:	11400003 	ldbu	r5,0(r2)
 10139cc:	80c00217 	ldw	r3,8(r16)
 10139d0:	18ffffc4 	addi	r3,r3,-1
 10139d4:	80c00215 	stw	r3,8(r16)
 10139d8:	183ff30e 	bge	r3,zero,10139a8 <__alt_data_end+0xff8139a8>
 10139dc:	80800617 	ldw	r2,24(r16)
 10139e0:	18801916 	blt	r3,r2,1013a48 <_fputwc_r+0x12c>
 10139e4:	80800017 	ldw	r2,0(r16)
 10139e8:	11400005 	stb	r5,0(r2)
 10139ec:	80800017 	ldw	r2,0(r16)
 10139f0:	10c00003 	ldbu	r3,0(r2)
 10139f4:	10800044 	addi	r2,r2,1
 10139f8:	1d402326 	beq	r3,r21,1013a88 <_fputwc_r+0x16c>
 10139fc:	80800015 	stw	r2,0(r16)
 1013a00:	8c400044 	addi	r17,r17,1
 1013a04:	dc45883a 	add	r2,sp,r17
 1013a08:	8d3fef36 	bltu	r17,r20,10139c8 <__alt_data_end+0xff8139c8>
 1013a0c:	9005883a 	mov	r2,r18
 1013a10:	00000406 	br	1013a24 <_fputwc_r+0x108>
 1013a14:	80c0030b 	ldhu	r3,12(r16)
 1013a18:	a005883a 	mov	r2,r20
 1013a1c:	18c01014 	ori	r3,r3,64
 1013a20:	80c0030d 	sth	r3,12(r16)
 1013a24:	dfc00717 	ldw	ra,28(sp)
 1013a28:	dd400617 	ldw	r21,24(sp)
 1013a2c:	dd000517 	ldw	r20,20(sp)
 1013a30:	dcc00417 	ldw	r19,16(sp)
 1013a34:	dc800317 	ldw	r18,12(sp)
 1013a38:	dc400217 	ldw	r17,8(sp)
 1013a3c:	dc000117 	ldw	r16,4(sp)
 1013a40:	dec00804 	addi	sp,sp,32
 1013a44:	f800283a 	ret
 1013a48:	9809883a 	mov	r4,r19
 1013a4c:	29403fcc 	andi	r5,r5,255
 1013a50:	800d883a 	mov	r6,r16
 1013a54:	1013c5c0 	call	1013c5c <__swbuf_r>
 1013a58:	10bfffe0 	cmpeqi	r2,r2,-1
 1013a5c:	10803fcc 	andi	r2,r2,255
 1013a60:	103fd626 	beq	r2,zero,10139bc <__alt_data_end+0xff8139bc>
 1013a64:	00bfffc4 	movi	r2,-1
 1013a68:	003fee06 	br	1013a24 <__alt_data_end+0xff813a24>
 1013a6c:	90ffffc4 	addi	r3,r18,-1
 1013a70:	01003f84 	movi	r4,254
 1013a74:	20ffbf36 	bltu	r4,r3,1013974 <__alt_data_end+0xff813974>
 1013a78:	900b883a 	mov	r5,r18
 1013a7c:	dc800005 	stb	r18,0(sp)
 1013a80:	1029883a 	mov	r20,r2
 1013a84:	003fc506 	br	101399c <__alt_data_end+0xff81399c>
 1013a88:	9809883a 	mov	r4,r19
 1013a8c:	a80b883a 	mov	r5,r21
 1013a90:	800d883a 	mov	r6,r16
 1013a94:	1013c5c0 	call	1013c5c <__swbuf_r>
 1013a98:	10bfffe0 	cmpeqi	r2,r2,-1
 1013a9c:	003fef06 	br	1013a5c <__alt_data_end+0xff813a5c>

01013aa0 <fputwc>:
 1013aa0:	defffc04 	addi	sp,sp,-16
 1013aa4:	dc000115 	stw	r16,4(sp)
 1013aa8:	040040b4 	movhi	r16,258
 1013aac:	842d3804 	addi	r16,r16,-19232
 1013ab0:	dc400215 	stw	r17,8(sp)
 1013ab4:	2023883a 	mov	r17,r4
 1013ab8:	81000017 	ldw	r4,0(r16)
 1013abc:	dfc00315 	stw	ra,12(sp)
 1013ac0:	280d883a 	mov	r6,r5
 1013ac4:	20000626 	beq	r4,zero,1013ae0 <fputwc+0x40>
 1013ac8:	20800e17 	ldw	r2,56(r4)
 1013acc:	1000041e 	bne	r2,zero,1013ae0 <fputwc+0x40>
 1013ad0:	d9400015 	stw	r5,0(sp)
 1013ad4:	100d1a80 	call	100d1a8 <__sinit>
 1013ad8:	81000017 	ldw	r4,0(r16)
 1013adc:	d9800017 	ldw	r6,0(sp)
 1013ae0:	880b883a 	mov	r5,r17
 1013ae4:	dfc00317 	ldw	ra,12(sp)
 1013ae8:	dc400217 	ldw	r17,8(sp)
 1013aec:	dc000117 	ldw	r16,4(sp)
 1013af0:	dec00404 	addi	sp,sp,16
 1013af4:	101391c1 	jmpi	101391c <_fputwc_r>

01013af8 <_fstat_r>:
 1013af8:	defffd04 	addi	sp,sp,-12
 1013afc:	dc000015 	stw	r16,0(sp)
 1013b00:	040040b4 	movhi	r16,258
 1013b04:	dc400115 	stw	r17,4(sp)
 1013b08:	84345204 	addi	r16,r16,-11960
 1013b0c:	2023883a 	mov	r17,r4
 1013b10:	2809883a 	mov	r4,r5
 1013b14:	300b883a 	mov	r5,r6
 1013b18:	dfc00215 	stw	ra,8(sp)
 1013b1c:	80000015 	stw	zero,0(r16)
 1013b20:	10163b00 	call	10163b0 <fstat>
 1013b24:	00ffffc4 	movi	r3,-1
 1013b28:	10c00526 	beq	r2,r3,1013b40 <_fstat_r+0x48>
 1013b2c:	dfc00217 	ldw	ra,8(sp)
 1013b30:	dc400117 	ldw	r17,4(sp)
 1013b34:	dc000017 	ldw	r16,0(sp)
 1013b38:	dec00304 	addi	sp,sp,12
 1013b3c:	f800283a 	ret
 1013b40:	80c00017 	ldw	r3,0(r16)
 1013b44:	183ff926 	beq	r3,zero,1013b2c <__alt_data_end+0xff813b2c>
 1013b48:	88c00015 	stw	r3,0(r17)
 1013b4c:	003ff706 	br	1013b2c <__alt_data_end+0xff813b2c>

01013b50 <_isatty_r>:
 1013b50:	defffd04 	addi	sp,sp,-12
 1013b54:	dc000015 	stw	r16,0(sp)
 1013b58:	040040b4 	movhi	r16,258
 1013b5c:	dc400115 	stw	r17,4(sp)
 1013b60:	84345204 	addi	r16,r16,-11960
 1013b64:	2023883a 	mov	r17,r4
 1013b68:	2809883a 	mov	r4,r5
 1013b6c:	dfc00215 	stw	ra,8(sp)
 1013b70:	80000015 	stw	zero,0(r16)
 1013b74:	10164b00 	call	10164b0 <isatty>
 1013b78:	00ffffc4 	movi	r3,-1
 1013b7c:	10c00526 	beq	r2,r3,1013b94 <_isatty_r+0x44>
 1013b80:	dfc00217 	ldw	ra,8(sp)
 1013b84:	dc400117 	ldw	r17,4(sp)
 1013b88:	dc000017 	ldw	r16,0(sp)
 1013b8c:	dec00304 	addi	sp,sp,12
 1013b90:	f800283a 	ret
 1013b94:	80c00017 	ldw	r3,0(r16)
 1013b98:	183ff926 	beq	r3,zero,1013b80 <__alt_data_end+0xff813b80>
 1013b9c:	88c00015 	stw	r3,0(r17)
 1013ba0:	003ff706 	br	1013b80 <__alt_data_end+0xff813b80>

01013ba4 <_lseek_r>:
 1013ba4:	defffd04 	addi	sp,sp,-12
 1013ba8:	dc000015 	stw	r16,0(sp)
 1013bac:	040040b4 	movhi	r16,258
 1013bb0:	dc400115 	stw	r17,4(sp)
 1013bb4:	84345204 	addi	r16,r16,-11960
 1013bb8:	2023883a 	mov	r17,r4
 1013bbc:	2809883a 	mov	r4,r5
 1013bc0:	300b883a 	mov	r5,r6
 1013bc4:	380d883a 	mov	r6,r7
 1013bc8:	dfc00215 	stw	ra,8(sp)
 1013bcc:	80000015 	stw	zero,0(r16)
 1013bd0:	10166880 	call	1016688 <lseek>
 1013bd4:	00ffffc4 	movi	r3,-1
 1013bd8:	10c00526 	beq	r2,r3,1013bf0 <_lseek_r+0x4c>
 1013bdc:	dfc00217 	ldw	ra,8(sp)
 1013be0:	dc400117 	ldw	r17,4(sp)
 1013be4:	dc000017 	ldw	r16,0(sp)
 1013be8:	dec00304 	addi	sp,sp,12
 1013bec:	f800283a 	ret
 1013bf0:	80c00017 	ldw	r3,0(r16)
 1013bf4:	183ff926 	beq	r3,zero,1013bdc <__alt_data_end+0xff813bdc>
 1013bf8:	88c00015 	stw	r3,0(r17)
 1013bfc:	003ff706 	br	1013bdc <__alt_data_end+0xff813bdc>

01013c00 <_read_r>:
 1013c00:	defffd04 	addi	sp,sp,-12
 1013c04:	dc000015 	stw	r16,0(sp)
 1013c08:	040040b4 	movhi	r16,258
 1013c0c:	dc400115 	stw	r17,4(sp)
 1013c10:	84345204 	addi	r16,r16,-11960
 1013c14:	2023883a 	mov	r17,r4
 1013c18:	2809883a 	mov	r4,r5
 1013c1c:	300b883a 	mov	r5,r6
 1013c20:	380d883a 	mov	r6,r7
 1013c24:	dfc00215 	stw	ra,8(sp)
 1013c28:	80000015 	stw	zero,0(r16)
 1013c2c:	10168640 	call	1016864 <read>
 1013c30:	00ffffc4 	movi	r3,-1
 1013c34:	10c00526 	beq	r2,r3,1013c4c <_read_r+0x4c>
 1013c38:	dfc00217 	ldw	ra,8(sp)
 1013c3c:	dc400117 	ldw	r17,4(sp)
 1013c40:	dc000017 	ldw	r16,0(sp)
 1013c44:	dec00304 	addi	sp,sp,12
 1013c48:	f800283a 	ret
 1013c4c:	80c00017 	ldw	r3,0(r16)
 1013c50:	183ff926 	beq	r3,zero,1013c38 <__alt_data_end+0xff813c38>
 1013c54:	88c00015 	stw	r3,0(r17)
 1013c58:	003ff706 	br	1013c38 <__alt_data_end+0xff813c38>

01013c5c <__swbuf_r>:
 1013c5c:	defffc04 	addi	sp,sp,-16
 1013c60:	dc800215 	stw	r18,8(sp)
 1013c64:	dc400115 	stw	r17,4(sp)
 1013c68:	dc000015 	stw	r16,0(sp)
 1013c6c:	dfc00315 	stw	ra,12(sp)
 1013c70:	2025883a 	mov	r18,r4
 1013c74:	2823883a 	mov	r17,r5
 1013c78:	3021883a 	mov	r16,r6
 1013c7c:	20000226 	beq	r4,zero,1013c88 <__swbuf_r+0x2c>
 1013c80:	20800e17 	ldw	r2,56(r4)
 1013c84:	10004126 	beq	r2,zero,1013d8c <__swbuf_r+0x130>
 1013c88:	80c00617 	ldw	r3,24(r16)
 1013c8c:	8180030b 	ldhu	r6,12(r16)
 1013c90:	80c00215 	stw	r3,8(r16)
 1013c94:	30c0020c 	andi	r3,r6,8
 1013c98:	18003526 	beq	r3,zero,1013d70 <__swbuf_r+0x114>
 1013c9c:	80c00417 	ldw	r3,16(r16)
 1013ca0:	18003326 	beq	r3,zero,1013d70 <__swbuf_r+0x114>
 1013ca4:	3088000c 	andi	r2,r6,8192
 1013ca8:	8c403fcc 	andi	r17,r17,255
 1013cac:	10001726 	beq	r2,zero,1013d0c <__swbuf_r+0xb0>
 1013cb0:	80800017 	ldw	r2,0(r16)
 1013cb4:	81000517 	ldw	r4,20(r16)
 1013cb8:	10c7c83a 	sub	r3,r2,r3
 1013cbc:	19001d0e 	bge	r3,r4,1013d34 <__swbuf_r+0xd8>
 1013cc0:	18c00044 	addi	r3,r3,1
 1013cc4:	81400217 	ldw	r5,8(r16)
 1013cc8:	11000044 	addi	r4,r2,1
 1013ccc:	81000015 	stw	r4,0(r16)
 1013cd0:	297fffc4 	addi	r5,r5,-1
 1013cd4:	81400215 	stw	r5,8(r16)
 1013cd8:	14400005 	stb	r17,0(r2)
 1013cdc:	80800517 	ldw	r2,20(r16)
 1013ce0:	10c01d26 	beq	r2,r3,1013d58 <__swbuf_r+0xfc>
 1013ce4:	8080030b 	ldhu	r2,12(r16)
 1013ce8:	1080004c 	andi	r2,r2,1
 1013cec:	1000181e 	bne	r2,zero,1013d50 <__swbuf_r+0xf4>
 1013cf0:	8805883a 	mov	r2,r17
 1013cf4:	dfc00317 	ldw	ra,12(sp)
 1013cf8:	dc800217 	ldw	r18,8(sp)
 1013cfc:	dc400117 	ldw	r17,4(sp)
 1013d00:	dc000017 	ldw	r16,0(sp)
 1013d04:	dec00404 	addi	sp,sp,16
 1013d08:	f800283a 	ret
 1013d0c:	81001917 	ldw	r4,100(r16)
 1013d10:	00b7ffc4 	movi	r2,-8193
 1013d14:	31880014 	ori	r6,r6,8192
 1013d18:	2084703a 	and	r2,r4,r2
 1013d1c:	80801915 	stw	r2,100(r16)
 1013d20:	80800017 	ldw	r2,0(r16)
 1013d24:	81000517 	ldw	r4,20(r16)
 1013d28:	8180030d 	sth	r6,12(r16)
 1013d2c:	10c7c83a 	sub	r3,r2,r3
 1013d30:	193fe316 	blt	r3,r4,1013cc0 <__alt_data_end+0xff813cc0>
 1013d34:	9009883a 	mov	r4,r18
 1013d38:	800b883a 	mov	r5,r16
 1013d3c:	100cc000 	call	100cc00 <_fflush_r>
 1013d40:	1000091e 	bne	r2,zero,1013d68 <__swbuf_r+0x10c>
 1013d44:	80800017 	ldw	r2,0(r16)
 1013d48:	00c00044 	movi	r3,1
 1013d4c:	003fdd06 	br	1013cc4 <__alt_data_end+0xff813cc4>
 1013d50:	00800284 	movi	r2,10
 1013d54:	88bfe61e 	bne	r17,r2,1013cf0 <__alt_data_end+0xff813cf0>
 1013d58:	9009883a 	mov	r4,r18
 1013d5c:	800b883a 	mov	r5,r16
 1013d60:	100cc000 	call	100cc00 <_fflush_r>
 1013d64:	103fe226 	beq	r2,zero,1013cf0 <__alt_data_end+0xff813cf0>
 1013d68:	00bfffc4 	movi	r2,-1
 1013d6c:	003fe106 	br	1013cf4 <__alt_data_end+0xff813cf4>
 1013d70:	9009883a 	mov	r4,r18
 1013d74:	800b883a 	mov	r5,r16
 1013d78:	100b1a80 	call	100b1a8 <__swsetup_r>
 1013d7c:	1000051e 	bne	r2,zero,1013d94 <__swbuf_r+0x138>
 1013d80:	8180030b 	ldhu	r6,12(r16)
 1013d84:	80c00417 	ldw	r3,16(r16)
 1013d88:	003fc606 	br	1013ca4 <__alt_data_end+0xff813ca4>
 1013d8c:	100d1a80 	call	100d1a8 <__sinit>
 1013d90:	003fbd06 	br	1013c88 <__alt_data_end+0xff813c88>
 1013d94:	80c0030b 	ldhu	r3,12(r16)
 1013d98:	00bfffc4 	movi	r2,-1
 1013d9c:	18c01014 	ori	r3,r3,64
 1013da0:	80c0030d 	sth	r3,12(r16)
 1013da4:	00c00244 	movi	r3,9
 1013da8:	90c00015 	stw	r3,0(r18)
 1013dac:	003fd106 	br	1013cf4 <__alt_data_end+0xff813cf4>

01013db0 <__swbuf>:
 1013db0:	00c040b4 	movhi	r3,258
 1013db4:	18ed3804 	addi	r3,r3,-19232
 1013db8:	2005883a 	mov	r2,r4
 1013dbc:	19000017 	ldw	r4,0(r3)
 1013dc0:	280d883a 	mov	r6,r5
 1013dc4:	100b883a 	mov	r5,r2
 1013dc8:	1013c5c1 	jmpi	1013c5c <__swbuf_r>

01013dcc <_wcrtomb_r>:
 1013dcc:	defff604 	addi	sp,sp,-40
 1013dd0:	008040b4 	movhi	r2,258
 1013dd4:	dc800815 	stw	r18,32(sp)
 1013dd8:	dc400715 	stw	r17,28(sp)
 1013ddc:	dc000615 	stw	r16,24(sp)
 1013de0:	10ad3c04 	addi	r2,r2,-19216
 1013de4:	dfc00915 	stw	ra,36(sp)
 1013de8:	2021883a 	mov	r16,r4
 1013dec:	3823883a 	mov	r17,r7
 1013df0:	14800017 	ldw	r18,0(r2)
 1013df4:	28001426 	beq	r5,zero,1013e48 <_wcrtomb_r+0x7c>
 1013df8:	d9400415 	stw	r5,16(sp)
 1013dfc:	d9800515 	stw	r6,20(sp)
 1013e00:	100e8d00 	call	100e8d0 <__locale_charset>
 1013e04:	d9400417 	ldw	r5,16(sp)
 1013e08:	d9800517 	ldw	r6,20(sp)
 1013e0c:	8009883a 	mov	r4,r16
 1013e10:	dc400015 	stw	r17,0(sp)
 1013e14:	100f883a 	mov	r7,r2
 1013e18:	903ee83a 	callr	r18
 1013e1c:	00ffffc4 	movi	r3,-1
 1013e20:	10c0031e 	bne	r2,r3,1013e30 <_wcrtomb_r+0x64>
 1013e24:	88000015 	stw	zero,0(r17)
 1013e28:	00c02284 	movi	r3,138
 1013e2c:	80c00015 	stw	r3,0(r16)
 1013e30:	dfc00917 	ldw	ra,36(sp)
 1013e34:	dc800817 	ldw	r18,32(sp)
 1013e38:	dc400717 	ldw	r17,28(sp)
 1013e3c:	dc000617 	ldw	r16,24(sp)
 1013e40:	dec00a04 	addi	sp,sp,40
 1013e44:	f800283a 	ret
 1013e48:	100e8d00 	call	100e8d0 <__locale_charset>
 1013e4c:	8009883a 	mov	r4,r16
 1013e50:	dc400015 	stw	r17,0(sp)
 1013e54:	d9400104 	addi	r5,sp,4
 1013e58:	000d883a 	mov	r6,zero
 1013e5c:	100f883a 	mov	r7,r2
 1013e60:	903ee83a 	callr	r18
 1013e64:	003fed06 	br	1013e1c <__alt_data_end+0xff813e1c>

01013e68 <wcrtomb>:
 1013e68:	defff504 	addi	sp,sp,-44
 1013e6c:	dc400515 	stw	r17,20(sp)
 1013e70:	dc000415 	stw	r16,16(sp)
 1013e74:	dfc00a15 	stw	ra,40(sp)
 1013e78:	dd400915 	stw	r21,36(sp)
 1013e7c:	dd000815 	stw	r20,32(sp)
 1013e80:	dcc00715 	stw	r19,28(sp)
 1013e84:	dc800615 	stw	r18,24(sp)
 1013e88:	2021883a 	mov	r16,r4
 1013e8c:	3023883a 	mov	r17,r6
 1013e90:	20001d26 	beq	r4,zero,1013f08 <wcrtomb+0xa0>
 1013e94:	048040b4 	movhi	r18,258
 1013e98:	94ad3804 	addi	r18,r18,-19232
 1013e9c:	008040b4 	movhi	r2,258
 1013ea0:	95400017 	ldw	r21,0(r18)
 1013ea4:	10ad3c04 	addi	r2,r2,-19216
 1013ea8:	15000017 	ldw	r20,0(r2)
 1013eac:	2827883a 	mov	r19,r5
 1013eb0:	100e8d00 	call	100e8d0 <__locale_charset>
 1013eb4:	a809883a 	mov	r4,r21
 1013eb8:	dc400015 	stw	r17,0(sp)
 1013ebc:	800b883a 	mov	r5,r16
 1013ec0:	980d883a 	mov	r6,r19
 1013ec4:	100f883a 	mov	r7,r2
 1013ec8:	a03ee83a 	callr	r20
 1013ecc:	00ffffc4 	movi	r3,-1
 1013ed0:	10c0041e 	bne	r2,r3,1013ee4 <wcrtomb+0x7c>
 1013ed4:	90c00017 	ldw	r3,0(r18)
 1013ed8:	01002284 	movi	r4,138
 1013edc:	88000015 	stw	zero,0(r17)
 1013ee0:	19000015 	stw	r4,0(r3)
 1013ee4:	dfc00a17 	ldw	ra,40(sp)
 1013ee8:	dd400917 	ldw	r21,36(sp)
 1013eec:	dd000817 	ldw	r20,32(sp)
 1013ef0:	dcc00717 	ldw	r19,28(sp)
 1013ef4:	dc800617 	ldw	r18,24(sp)
 1013ef8:	dc400517 	ldw	r17,20(sp)
 1013efc:	dc000417 	ldw	r16,16(sp)
 1013f00:	dec00b04 	addi	sp,sp,44
 1013f04:	f800283a 	ret
 1013f08:	048040b4 	movhi	r18,258
 1013f0c:	94ad3804 	addi	r18,r18,-19232
 1013f10:	008040b4 	movhi	r2,258
 1013f14:	94c00017 	ldw	r19,0(r18)
 1013f18:	10ad3c04 	addi	r2,r2,-19216
 1013f1c:	14000017 	ldw	r16,0(r2)
 1013f20:	100e8d00 	call	100e8d0 <__locale_charset>
 1013f24:	9809883a 	mov	r4,r19
 1013f28:	dc400015 	stw	r17,0(sp)
 1013f2c:	d9400104 	addi	r5,sp,4
 1013f30:	000d883a 	mov	r6,zero
 1013f34:	100f883a 	mov	r7,r2
 1013f38:	803ee83a 	callr	r16
 1013f3c:	003fe306 	br	1013ecc <__alt_data_end+0xff813ecc>

01013f40 <__ascii_wctomb>:
 1013f40:	28000526 	beq	r5,zero,1013f58 <__ascii_wctomb+0x18>
 1013f44:	00803fc4 	movi	r2,255
 1013f48:	11800536 	bltu	r2,r6,1013f60 <__ascii_wctomb+0x20>
 1013f4c:	29800005 	stb	r6,0(r5)
 1013f50:	00800044 	movi	r2,1
 1013f54:	f800283a 	ret
 1013f58:	0005883a 	mov	r2,zero
 1013f5c:	f800283a 	ret
 1013f60:	00802284 	movi	r2,138
 1013f64:	20800015 	stw	r2,0(r4)
 1013f68:	00bfffc4 	movi	r2,-1
 1013f6c:	f800283a 	ret

01013f70 <_wctomb_r>:
 1013f70:	008040b4 	movhi	r2,258
 1013f74:	defff904 	addi	sp,sp,-28
 1013f78:	10ad3c04 	addi	r2,r2,-19216
 1013f7c:	dfc00615 	stw	ra,24(sp)
 1013f80:	dc400515 	stw	r17,20(sp)
 1013f84:	dc000415 	stw	r16,16(sp)
 1013f88:	3823883a 	mov	r17,r7
 1013f8c:	14000017 	ldw	r16,0(r2)
 1013f90:	d9000115 	stw	r4,4(sp)
 1013f94:	d9400215 	stw	r5,8(sp)
 1013f98:	d9800315 	stw	r6,12(sp)
 1013f9c:	100e8d00 	call	100e8d0 <__locale_charset>
 1013fa0:	d9000117 	ldw	r4,4(sp)
 1013fa4:	d9400217 	ldw	r5,8(sp)
 1013fa8:	d9800317 	ldw	r6,12(sp)
 1013fac:	dc400015 	stw	r17,0(sp)
 1013fb0:	100f883a 	mov	r7,r2
 1013fb4:	803ee83a 	callr	r16
 1013fb8:	dfc00617 	ldw	ra,24(sp)
 1013fbc:	dc400517 	ldw	r17,20(sp)
 1013fc0:	dc000417 	ldw	r16,16(sp)
 1013fc4:	dec00704 	addi	sp,sp,28
 1013fc8:	f800283a 	ret

01013fcc <__fixunsdfsi>:
 1013fcc:	defffd04 	addi	sp,sp,-12
 1013fd0:	000d883a 	mov	r6,zero
 1013fd4:	01d07834 	movhi	r7,16864
 1013fd8:	dc400115 	stw	r17,4(sp)
 1013fdc:	dc000015 	stw	r16,0(sp)
 1013fe0:	dfc00215 	stw	ra,8(sp)
 1013fe4:	2023883a 	mov	r17,r4
 1013fe8:	2821883a 	mov	r16,r5
 1013fec:	10156100 	call	1015610 <__gedf2>
 1013ff0:	1000080e 	bge	r2,zero,1014014 <__fixunsdfsi+0x48>
 1013ff4:	8809883a 	mov	r4,r17
 1013ff8:	800b883a 	mov	r5,r16
 1013ffc:	10047440 	call	1004744 <__fixdfsi>
 1014000:	dfc00217 	ldw	ra,8(sp)
 1014004:	dc400117 	ldw	r17,4(sp)
 1014008:	dc000017 	ldw	r16,0(sp)
 101400c:	dec00304 	addi	sp,sp,12
 1014010:	f800283a 	ret
 1014014:	000d883a 	mov	r6,zero
 1014018:	01d07834 	movhi	r7,16864
 101401c:	8809883a 	mov	r4,r17
 1014020:	800b883a 	mov	r5,r16
 1014024:	10157d00 	call	10157d0 <__subdf3>
 1014028:	180b883a 	mov	r5,r3
 101402c:	1009883a 	mov	r4,r2
 1014030:	10047440 	call	1004744 <__fixdfsi>
 1014034:	00e00034 	movhi	r3,32768
 1014038:	10c5883a 	add	r2,r2,r3
 101403c:	003ff006 	br	1014000 <__alt_data_end+0xff814000>

01014040 <__udivdi3>:
 1014040:	defff504 	addi	sp,sp,-44
 1014044:	dcc00415 	stw	r19,16(sp)
 1014048:	dc000115 	stw	r16,4(sp)
 101404c:	dfc00a15 	stw	ra,40(sp)
 1014050:	df000915 	stw	fp,36(sp)
 1014054:	ddc00815 	stw	r23,32(sp)
 1014058:	dd800715 	stw	r22,28(sp)
 101405c:	dd400615 	stw	r21,24(sp)
 1014060:	dd000515 	stw	r20,20(sp)
 1014064:	dc800315 	stw	r18,12(sp)
 1014068:	dc400215 	stw	r17,8(sp)
 101406c:	2027883a 	mov	r19,r4
 1014070:	2821883a 	mov	r16,r5
 1014074:	3800421e 	bne	r7,zero,1014180 <__udivdi3+0x140>
 1014078:	3025883a 	mov	r18,r6
 101407c:	2023883a 	mov	r17,r4
 1014080:	2980542e 	bgeu	r5,r6,10141d4 <__udivdi3+0x194>
 1014084:	00bfffd4 	movui	r2,65535
 1014088:	282d883a 	mov	r22,r5
 101408c:	1180a836 	bltu	r2,r6,1014330 <__udivdi3+0x2f0>
 1014090:	00803fc4 	movi	r2,255
 1014094:	1181422e 	bgeu	r2,r6,10145a0 <__udivdi3+0x560>
 1014098:	00800204 	movi	r2,8
 101409c:	1007883a 	mov	r3,r2
 10140a0:	3084d83a 	srl	r2,r6,r2
 10140a4:	010040b4 	movhi	r4,258
 10140a8:	2124da04 	addi	r4,r4,-27800
 10140ac:	2085883a 	add	r2,r4,r2
 10140b0:	10800003 	ldbu	r2,0(r2)
 10140b4:	10c7883a 	add	r3,r2,r3
 10140b8:	00800804 	movi	r2,32
 10140bc:	10c5c83a 	sub	r2,r2,r3
 10140c0:	10000526 	beq	r2,zero,10140d8 <__udivdi3+0x98>
 10140c4:	80a0983a 	sll	r16,r16,r2
 10140c8:	98c6d83a 	srl	r3,r19,r3
 10140cc:	30a4983a 	sll	r18,r6,r2
 10140d0:	98a2983a 	sll	r17,r19,r2
 10140d4:	80ecb03a 	or	r22,r16,r3
 10140d8:	902ad43a 	srli	r21,r18,16
 10140dc:	b009883a 	mov	r4,r22
 10140e0:	953fffcc 	andi	r20,r18,65535
 10140e4:	a80b883a 	mov	r5,r21
 10140e8:	1004bfc0 	call	1004bfc <__umodsi3>
 10140ec:	b009883a 	mov	r4,r22
 10140f0:	a80b883a 	mov	r5,r21
 10140f4:	1027883a 	mov	r19,r2
 10140f8:	1004bf40 	call	1004bf4 <__udivsi3>
 10140fc:	1021883a 	mov	r16,r2
 1014100:	8806d43a 	srli	r3,r17,16
 1014104:	9804943a 	slli	r2,r19,16
 1014108:	8527383a 	mul	r19,r16,r20
 101410c:	10c4b03a 	or	r2,r2,r3
 1014110:	14c0052e 	bgeu	r2,r19,1014128 <__udivdi3+0xe8>
 1014114:	1485883a 	add	r2,r2,r18
 1014118:	80ffffc4 	addi	r3,r16,-1
 101411c:	14800136 	bltu	r2,r18,1014124 <__udivdi3+0xe4>
 1014120:	14c13436 	bltu	r2,r19,10145f4 <__udivdi3+0x5b4>
 1014124:	1821883a 	mov	r16,r3
 1014128:	14e7c83a 	sub	r19,r2,r19
 101412c:	9809883a 	mov	r4,r19
 1014130:	a80b883a 	mov	r5,r21
 1014134:	1004bfc0 	call	1004bfc <__umodsi3>
 1014138:	102d883a 	mov	r22,r2
 101413c:	9809883a 	mov	r4,r19
 1014140:	a80b883a 	mov	r5,r21
 1014144:	1004bf40 	call	1004bf4 <__udivsi3>
 1014148:	b02c943a 	slli	r22,r22,16
 101414c:	1529383a 	mul	r20,r2,r20
 1014150:	8c7fffcc 	andi	r17,r17,65535
 1014154:	b462b03a 	or	r17,r22,r17
 1014158:	8d00052e 	bgeu	r17,r20,1014170 <__udivdi3+0x130>
 101415c:	8ca3883a 	add	r17,r17,r18
 1014160:	10ffffc4 	addi	r3,r2,-1
 1014164:	8c80f636 	bltu	r17,r18,1014540 <__udivdi3+0x500>
 1014168:	8d00f52e 	bgeu	r17,r20,1014540 <__udivdi3+0x500>
 101416c:	10bfff84 	addi	r2,r2,-2
 1014170:	8020943a 	slli	r16,r16,16
 1014174:	0007883a 	mov	r3,zero
 1014178:	1404b03a 	or	r2,r2,r16
 101417c:	00005b06 	br	10142ec <__udivdi3+0x2ac>
 1014180:	29c05836 	bltu	r5,r7,10142e4 <__udivdi3+0x2a4>
 1014184:	00bfffd4 	movui	r2,65535
 1014188:	11c0642e 	bgeu	r2,r7,101431c <__udivdi3+0x2dc>
 101418c:	00804034 	movhi	r2,256
 1014190:	10bfffc4 	addi	r2,r2,-1
 1014194:	11c0f32e 	bgeu	r2,r7,1014564 <__udivdi3+0x524>
 1014198:	00c00604 	movi	r3,24
 101419c:	180b883a 	mov	r5,r3
 10141a0:	38c6d83a 	srl	r3,r7,r3
 10141a4:	008040b4 	movhi	r2,258
 10141a8:	10a4da04 	addi	r2,r2,-27800
 10141ac:	10c7883a 	add	r3,r2,r3
 10141b0:	18c00003 	ldbu	r3,0(r3)
 10141b4:	01000804 	movi	r4,32
 10141b8:	1947883a 	add	r3,r3,r5
 10141bc:	20e5c83a 	sub	r18,r4,r3
 10141c0:	9000661e 	bne	r18,zero,101435c <__udivdi3+0x31c>
 10141c4:	3c00f936 	bltu	r7,r16,10145ac <__udivdi3+0x56c>
 10141c8:	9985403a 	cmpgeu	r2,r19,r6
 10141cc:	0007883a 	mov	r3,zero
 10141d0:	00004606 	br	10142ec <__udivdi3+0x2ac>
 10141d4:	3000041e 	bne	r6,zero,10141e8 <__udivdi3+0x1a8>
 10141d8:	01000044 	movi	r4,1
 10141dc:	000b883a 	mov	r5,zero
 10141e0:	1004bf40 	call	1004bf4 <__udivsi3>
 10141e4:	1025883a 	mov	r18,r2
 10141e8:	00bfffd4 	movui	r2,65535
 10141ec:	1480562e 	bgeu	r2,r18,1014348 <__udivdi3+0x308>
 10141f0:	00804034 	movhi	r2,256
 10141f4:	10bfffc4 	addi	r2,r2,-1
 10141f8:	1480e32e 	bgeu	r2,r18,1014588 <__udivdi3+0x548>
 10141fc:	00800604 	movi	r2,24
 1014200:	1007883a 	mov	r3,r2
 1014204:	9084d83a 	srl	r2,r18,r2
 1014208:	010040b4 	movhi	r4,258
 101420c:	2124da04 	addi	r4,r4,-27800
 1014210:	2085883a 	add	r2,r4,r2
 1014214:	10800003 	ldbu	r2,0(r2)
 1014218:	10c5883a 	add	r2,r2,r3
 101421c:	00c00804 	movi	r3,32
 1014220:	1887c83a 	sub	r3,r3,r2
 1014224:	1800911e 	bne	r3,zero,101446c <__udivdi3+0x42c>
 1014228:	9028d43a 	srli	r20,r18,16
 101422c:	84a1c83a 	sub	r16,r16,r18
 1014230:	957fffcc 	andi	r21,r18,65535
 1014234:	00c00044 	movi	r3,1
 1014238:	8009883a 	mov	r4,r16
 101423c:	a00b883a 	mov	r5,r20
 1014240:	d8c00015 	stw	r3,0(sp)
 1014244:	1004bfc0 	call	1004bfc <__umodsi3>
 1014248:	8009883a 	mov	r4,r16
 101424c:	a00b883a 	mov	r5,r20
 1014250:	1027883a 	mov	r19,r2
 1014254:	1004bf40 	call	1004bf4 <__udivsi3>
 1014258:	1021883a 	mov	r16,r2
 101425c:	880cd43a 	srli	r6,r17,16
 1014260:	9804943a 	slli	r2,r19,16
 1014264:	8567383a 	mul	r19,r16,r21
 1014268:	d8c00017 	ldw	r3,0(sp)
 101426c:	1188b03a 	or	r4,r2,r6
 1014270:	24c0052e 	bgeu	r4,r19,1014288 <__udivdi3+0x248>
 1014274:	2489883a 	add	r4,r4,r18
 1014278:	80bfffc4 	addi	r2,r16,-1
 101427c:	24800136 	bltu	r4,r18,1014284 <__udivdi3+0x244>
 1014280:	24c0d936 	bltu	r4,r19,10145e8 <__udivdi3+0x5a8>
 1014284:	1021883a 	mov	r16,r2
 1014288:	24e7c83a 	sub	r19,r4,r19
 101428c:	9809883a 	mov	r4,r19
 1014290:	a00b883a 	mov	r5,r20
 1014294:	d8c00015 	stw	r3,0(sp)
 1014298:	1004bfc0 	call	1004bfc <__umodsi3>
 101429c:	102d883a 	mov	r22,r2
 10142a0:	9809883a 	mov	r4,r19
 10142a4:	a00b883a 	mov	r5,r20
 10142a8:	1004bf40 	call	1004bf4 <__udivsi3>
 10142ac:	b02c943a 	slli	r22,r22,16
 10142b0:	156b383a 	mul	r21,r2,r21
 10142b4:	8c7fffcc 	andi	r17,r17,65535
 10142b8:	b462b03a 	or	r17,r22,r17
 10142bc:	d8c00017 	ldw	r3,0(sp)
 10142c0:	8d40052e 	bgeu	r17,r21,10142d8 <__udivdi3+0x298>
 10142c4:	8ca3883a 	add	r17,r17,r18
 10142c8:	113fffc4 	addi	r4,r2,-1
 10142cc:	8c809a36 	bltu	r17,r18,1014538 <__udivdi3+0x4f8>
 10142d0:	8d40992e 	bgeu	r17,r21,1014538 <__udivdi3+0x4f8>
 10142d4:	10bfff84 	addi	r2,r2,-2
 10142d8:	8020943a 	slli	r16,r16,16
 10142dc:	1404b03a 	or	r2,r2,r16
 10142e0:	00000206 	br	10142ec <__udivdi3+0x2ac>
 10142e4:	0007883a 	mov	r3,zero
 10142e8:	0005883a 	mov	r2,zero
 10142ec:	dfc00a17 	ldw	ra,40(sp)
 10142f0:	df000917 	ldw	fp,36(sp)
 10142f4:	ddc00817 	ldw	r23,32(sp)
 10142f8:	dd800717 	ldw	r22,28(sp)
 10142fc:	dd400617 	ldw	r21,24(sp)
 1014300:	dd000517 	ldw	r20,20(sp)
 1014304:	dcc00417 	ldw	r19,16(sp)
 1014308:	dc800317 	ldw	r18,12(sp)
 101430c:	dc400217 	ldw	r17,8(sp)
 1014310:	dc000117 	ldw	r16,4(sp)
 1014314:	dec00b04 	addi	sp,sp,44
 1014318:	f800283a 	ret
 101431c:	00803fc4 	movi	r2,255
 1014320:	11c0932e 	bgeu	r2,r7,1014570 <__udivdi3+0x530>
 1014324:	00c00204 	movi	r3,8
 1014328:	180b883a 	mov	r5,r3
 101432c:	003f9c06 	br	10141a0 <__alt_data_end+0xff8141a0>
 1014330:	00804034 	movhi	r2,256
 1014334:	10bfffc4 	addi	r2,r2,-1
 1014338:	1180902e 	bgeu	r2,r6,101457c <__udivdi3+0x53c>
 101433c:	00800604 	movi	r2,24
 1014340:	1007883a 	mov	r3,r2
 1014344:	003f5606 	br	10140a0 <__alt_data_end+0xff8140a0>
 1014348:	00803fc4 	movi	r2,255
 101434c:	1480912e 	bgeu	r2,r18,1014594 <__udivdi3+0x554>
 1014350:	00800204 	movi	r2,8
 1014354:	1007883a 	mov	r3,r2
 1014358:	003faa06 	br	1014204 <__alt_data_end+0xff814204>
 101435c:	30eed83a 	srl	r23,r6,r3
 1014360:	3c8e983a 	sll	r7,r7,r18
 1014364:	80f8d83a 	srl	fp,r16,r3
 1014368:	98c6d83a 	srl	r3,r19,r3
 101436c:	3deeb03a 	or	r23,r7,r23
 1014370:	b828d43a 	srli	r20,r23,16
 1014374:	84a0983a 	sll	r16,r16,r18
 1014378:	e009883a 	mov	r4,fp
 101437c:	a00b883a 	mov	r5,r20
 1014380:	80e2b03a 	or	r17,r16,r3
 1014384:	34aa983a 	sll	r21,r6,r18
 1014388:	1004bfc0 	call	1004bfc <__umodsi3>
 101438c:	e009883a 	mov	r4,fp
 1014390:	a00b883a 	mov	r5,r20
 1014394:	102d883a 	mov	r22,r2
 1014398:	1004bf40 	call	1004bf4 <__udivsi3>
 101439c:	1021883a 	mov	r16,r2
 10143a0:	bf3fffcc 	andi	fp,r23,65535
 10143a4:	b004943a 	slli	r2,r22,16
 10143a8:	8808d43a 	srli	r4,r17,16
 10143ac:	872d383a 	mul	r22,r16,fp
 10143b0:	1104b03a 	or	r2,r2,r4
 10143b4:	1580042e 	bgeu	r2,r22,10143c8 <__udivdi3+0x388>
 10143b8:	15c5883a 	add	r2,r2,r23
 10143bc:	80ffffc4 	addi	r3,r16,-1
 10143c0:	15c0812e 	bgeu	r2,r23,10145c8 <__udivdi3+0x588>
 10143c4:	1821883a 	mov	r16,r3
 10143c8:	15adc83a 	sub	r22,r2,r22
 10143cc:	b009883a 	mov	r4,r22
 10143d0:	a00b883a 	mov	r5,r20
 10143d4:	1004bfc0 	call	1004bfc <__umodsi3>
 10143d8:	a00b883a 	mov	r5,r20
 10143dc:	b009883a 	mov	r4,r22
 10143e0:	d8800015 	stw	r2,0(sp)
 10143e4:	1004bf40 	call	1004bf4 <__udivsi3>
 10143e8:	d8c00017 	ldw	r3,0(sp)
 10143ec:	170b383a 	mul	r5,r2,fp
 10143f0:	8c7fffcc 	andi	r17,r17,65535
 10143f4:	1806943a 	slli	r3,r3,16
 10143f8:	1c46b03a 	or	r3,r3,r17
 10143fc:	1940042e 	bgeu	r3,r5,1014410 <__udivdi3+0x3d0>
 1014400:	1dc7883a 	add	r3,r3,r23
 1014404:	113fffc4 	addi	r4,r2,-1
 1014408:	1dc06b2e 	bgeu	r3,r23,10145b8 <__udivdi3+0x578>
 101440c:	2005883a 	mov	r2,r4
 1014410:	8020943a 	slli	r16,r16,16
 1014414:	a9ffffcc 	andi	r7,r21,65535
 1014418:	a82ad43a 	srli	r21,r21,16
 101441c:	1404b03a 	or	r2,r2,r16
 1014420:	113fffcc 	andi	r4,r2,65535
 1014424:	100cd43a 	srli	r6,r2,16
 1014428:	21d3383a 	mul	r9,r4,r7
 101442c:	2549383a 	mul	r4,r4,r21
 1014430:	31cf383a 	mul	r7,r6,r7
 1014434:	4810d43a 	srli	r8,r9,16
 1014438:	1947c83a 	sub	r3,r3,r5
 101443c:	3909883a 	add	r4,r7,r4
 1014440:	2209883a 	add	r4,r4,r8
 1014444:	354d383a 	mul	r6,r6,r21
 1014448:	21c0022e 	bgeu	r4,r7,1014454 <__udivdi3+0x414>
 101444c:	01400074 	movhi	r5,1
 1014450:	314d883a 	add	r6,r6,r5
 1014454:	202ad43a 	srli	r21,r4,16
 1014458:	354d883a 	add	r6,r6,r21
 101445c:	19803f36 	bltu	r3,r6,101455c <__udivdi3+0x51c>
 1014460:	19803926 	beq	r3,r6,1014548 <__udivdi3+0x508>
 1014464:	0007883a 	mov	r3,zero
 1014468:	003fa006 	br	10142ec <__alt_data_end+0xff8142ec>
 101446c:	90e4983a 	sll	r18,r18,r3
 1014470:	80aad83a 	srl	r21,r16,r2
 1014474:	80e0983a 	sll	r16,r16,r3
 1014478:	9028d43a 	srli	r20,r18,16
 101447c:	9884d83a 	srl	r2,r19,r2
 1014480:	a809883a 	mov	r4,r21
 1014484:	a00b883a 	mov	r5,r20
 1014488:	80acb03a 	or	r22,r16,r2
 101448c:	98e2983a 	sll	r17,r19,r3
 1014490:	1004bfc0 	call	1004bfc <__umodsi3>
 1014494:	a809883a 	mov	r4,r21
 1014498:	a00b883a 	mov	r5,r20
 101449c:	1021883a 	mov	r16,r2
 10144a0:	1004bf40 	call	1004bf4 <__udivsi3>
 10144a4:	957fffcc 	andi	r21,r18,65535
 10144a8:	8020943a 	slli	r16,r16,16
 10144ac:	b00ad43a 	srli	r5,r22,16
 10144b0:	1567383a 	mul	r19,r2,r21
 10144b4:	102f883a 	mov	r23,r2
 10144b8:	8148b03a 	or	r4,r16,r5
 10144bc:	24c0062e 	bgeu	r4,r19,10144d8 <__udivdi3+0x498>
 10144c0:	2489883a 	add	r4,r4,r18
 10144c4:	10bfffc4 	addi	r2,r2,-1
 10144c8:	24804536 	bltu	r4,r18,10145e0 <__udivdi3+0x5a0>
 10144cc:	24c0442e 	bgeu	r4,r19,10145e0 <__udivdi3+0x5a0>
 10144d0:	bdffff84 	addi	r23,r23,-2
 10144d4:	2489883a 	add	r4,r4,r18
 10144d8:	24e7c83a 	sub	r19,r4,r19
 10144dc:	9809883a 	mov	r4,r19
 10144e0:	a00b883a 	mov	r5,r20
 10144e4:	1004bfc0 	call	1004bfc <__umodsi3>
 10144e8:	1021883a 	mov	r16,r2
 10144ec:	9809883a 	mov	r4,r19
 10144f0:	a00b883a 	mov	r5,r20
 10144f4:	1004bf40 	call	1004bf4 <__udivsi3>
 10144f8:	8020943a 	slli	r16,r16,16
 10144fc:	1007883a 	mov	r3,r2
 1014500:	1545383a 	mul	r2,r2,r21
 1014504:	b13fffcc 	andi	r4,r22,65535
 1014508:	8108b03a 	or	r4,r16,r4
 101450c:	2080062e 	bgeu	r4,r2,1014528 <__udivdi3+0x4e8>
 1014510:	2489883a 	add	r4,r4,r18
 1014514:	197fffc4 	addi	r5,r3,-1
 1014518:	24802f36 	bltu	r4,r18,10145d8 <__udivdi3+0x598>
 101451c:	20802e2e 	bgeu	r4,r2,10145d8 <__udivdi3+0x598>
 1014520:	18ffff84 	addi	r3,r3,-2
 1014524:	2489883a 	add	r4,r4,r18
 1014528:	b82e943a 	slli	r23,r23,16
 101452c:	20a1c83a 	sub	r16,r4,r2
 1014530:	1dc6b03a 	or	r3,r3,r23
 1014534:	003f4006 	br	1014238 <__alt_data_end+0xff814238>
 1014538:	2005883a 	mov	r2,r4
 101453c:	003f6606 	br	10142d8 <__alt_data_end+0xff8142d8>
 1014540:	1805883a 	mov	r2,r3
 1014544:	003f0a06 	br	1014170 <__alt_data_end+0xff814170>
 1014548:	2006943a 	slli	r3,r4,16
 101454c:	9c88983a 	sll	r4,r19,r18
 1014550:	4a7fffcc 	andi	r9,r9,65535
 1014554:	1a47883a 	add	r3,r3,r9
 1014558:	20ffc22e 	bgeu	r4,r3,1014464 <__alt_data_end+0xff814464>
 101455c:	10bfffc4 	addi	r2,r2,-1
 1014560:	003fc006 	br	1014464 <__alt_data_end+0xff814464>
 1014564:	00c00404 	movi	r3,16
 1014568:	180b883a 	mov	r5,r3
 101456c:	003f0c06 	br	10141a0 <__alt_data_end+0xff8141a0>
 1014570:	0007883a 	mov	r3,zero
 1014574:	000b883a 	mov	r5,zero
 1014578:	003f0906 	br	10141a0 <__alt_data_end+0xff8141a0>
 101457c:	00800404 	movi	r2,16
 1014580:	1007883a 	mov	r3,r2
 1014584:	003ec606 	br	10140a0 <__alt_data_end+0xff8140a0>
 1014588:	00800404 	movi	r2,16
 101458c:	1007883a 	mov	r3,r2
 1014590:	003f1c06 	br	1014204 <__alt_data_end+0xff814204>
 1014594:	0005883a 	mov	r2,zero
 1014598:	0007883a 	mov	r3,zero
 101459c:	003f1906 	br	1014204 <__alt_data_end+0xff814204>
 10145a0:	0005883a 	mov	r2,zero
 10145a4:	0007883a 	mov	r3,zero
 10145a8:	003ebd06 	br	10140a0 <__alt_data_end+0xff8140a0>
 10145ac:	0007883a 	mov	r3,zero
 10145b0:	00800044 	movi	r2,1
 10145b4:	003f4d06 	br	10142ec <__alt_data_end+0xff8142ec>
 10145b8:	197f942e 	bgeu	r3,r5,101440c <__alt_data_end+0xff81440c>
 10145bc:	10bfff84 	addi	r2,r2,-2
 10145c0:	1dc7883a 	add	r3,r3,r23
 10145c4:	003f9206 	br	1014410 <__alt_data_end+0xff814410>
 10145c8:	15bf7e2e 	bgeu	r2,r22,10143c4 <__alt_data_end+0xff8143c4>
 10145cc:	843fff84 	addi	r16,r16,-2
 10145d0:	15c5883a 	add	r2,r2,r23
 10145d4:	003f7c06 	br	10143c8 <__alt_data_end+0xff8143c8>
 10145d8:	2807883a 	mov	r3,r5
 10145dc:	003fd206 	br	1014528 <__alt_data_end+0xff814528>
 10145e0:	102f883a 	mov	r23,r2
 10145e4:	003fbc06 	br	10144d8 <__alt_data_end+0xff8144d8>
 10145e8:	843fff84 	addi	r16,r16,-2
 10145ec:	2489883a 	add	r4,r4,r18
 10145f0:	003f2506 	br	1014288 <__alt_data_end+0xff814288>
 10145f4:	843fff84 	addi	r16,r16,-2
 10145f8:	1485883a 	add	r2,r2,r18
 10145fc:	003eca06 	br	1014128 <__alt_data_end+0xff814128>

01014600 <__umoddi3>:
 1014600:	defff404 	addi	sp,sp,-48
 1014604:	ddc00915 	stw	r23,36(sp)
 1014608:	dc400315 	stw	r17,12(sp)
 101460c:	dc000215 	stw	r16,8(sp)
 1014610:	dfc00b15 	stw	ra,44(sp)
 1014614:	df000a15 	stw	fp,40(sp)
 1014618:	dd800815 	stw	r22,32(sp)
 101461c:	dd400715 	stw	r21,28(sp)
 1014620:	dd000615 	stw	r20,24(sp)
 1014624:	dcc00515 	stw	r19,20(sp)
 1014628:	dc800415 	stw	r18,16(sp)
 101462c:	2021883a 	mov	r16,r4
 1014630:	2823883a 	mov	r17,r5
 1014634:	282f883a 	mov	r23,r5
 1014638:	3800381e 	bne	r7,zero,101471c <__umoddi3+0x11c>
 101463c:	3027883a 	mov	r19,r6
 1014640:	2029883a 	mov	r20,r4
 1014644:	29804e2e 	bgeu	r5,r6,1014780 <__umoddi3+0x180>
 1014648:	00bfffd4 	movui	r2,65535
 101464c:	11809c36 	bltu	r2,r6,10148c0 <__umoddi3+0x2c0>
 1014650:	00803fc4 	movi	r2,255
 1014654:	11813b2e 	bgeu	r2,r6,1014b44 <__umoddi3+0x544>
 1014658:	01400204 	movi	r5,8
 101465c:	2805883a 	mov	r2,r5
 1014660:	314ad83a 	srl	r5,r6,r5
 1014664:	00c040b4 	movhi	r3,258
 1014668:	18e4da04 	addi	r3,r3,-27800
 101466c:	194b883a 	add	r5,r3,r5
 1014670:	29000003 	ldbu	r4,0(r5)
 1014674:	2089883a 	add	r4,r4,r2
 1014678:	00800804 	movi	r2,32
 101467c:	1105c83a 	sub	r2,r2,r4
 1014680:	1000ec26 	beq	r2,zero,1014a34 <__umoddi3+0x434>
 1014684:	88a2983a 	sll	r17,r17,r2
 1014688:	8108d83a 	srl	r4,r16,r4
 101468c:	30a6983a 	sll	r19,r6,r2
 1014690:	80a8983a 	sll	r20,r16,r2
 1014694:	1025883a 	mov	r18,r2
 1014698:	892eb03a 	or	r23,r17,r4
 101469c:	982cd43a 	srli	r22,r19,16
 10146a0:	b809883a 	mov	r4,r23
 10146a4:	9d7fffcc 	andi	r21,r19,65535
 10146a8:	b00b883a 	mov	r5,r22
 10146ac:	1004bfc0 	call	1004bfc <__umodsi3>
 10146b0:	b809883a 	mov	r4,r23
 10146b4:	b00b883a 	mov	r5,r22
 10146b8:	1021883a 	mov	r16,r2
 10146bc:	1004bf40 	call	1004bf4 <__udivsi3>
 10146c0:	8020943a 	slli	r16,r16,16
 10146c4:	a00cd43a 	srli	r6,r20,16
 10146c8:	1545383a 	mul	r2,r2,r21
 10146cc:	8188b03a 	or	r4,r16,r6
 10146d0:	2080042e 	bgeu	r4,r2,10146e4 <__umoddi3+0xe4>
 10146d4:	24c9883a 	add	r4,r4,r19
 10146d8:	24c00236 	bltu	r4,r19,10146e4 <__umoddi3+0xe4>
 10146dc:	2080012e 	bgeu	r4,r2,10146e4 <__umoddi3+0xe4>
 10146e0:	24c9883a 	add	r4,r4,r19
 10146e4:	20a3c83a 	sub	r17,r4,r2
 10146e8:	8809883a 	mov	r4,r17
 10146ec:	b00b883a 	mov	r5,r22
 10146f0:	1004bfc0 	call	1004bfc <__umodsi3>
 10146f4:	8809883a 	mov	r4,r17
 10146f8:	b00b883a 	mov	r5,r22
 10146fc:	1021883a 	mov	r16,r2
 1014700:	1004bf40 	call	1004bf4 <__udivsi3>
 1014704:	8006943a 	slli	r3,r16,16
 1014708:	1545383a 	mul	r2,r2,r21
 101470c:	a13fffcc 	andi	r4,r20,65535
 1014710:	1906b03a 	or	r3,r3,r4
 1014714:	1880532e 	bgeu	r3,r2,1014864 <__umoddi3+0x264>
 1014718:	00004e06 	br	1014854 <__umoddi3+0x254>
 101471c:	29c05536 	bltu	r5,r7,1014874 <__umoddi3+0x274>
 1014720:	00bfffd4 	movui	r2,65535
 1014724:	11c0612e 	bgeu	r2,r7,10148ac <__umoddi3+0x2ac>
 1014728:	00804034 	movhi	r2,256
 101472c:	10bfffc4 	addi	r2,r2,-1
 1014730:	11c0f82e 	bgeu	r2,r7,1014b14 <__umoddi3+0x514>
 1014734:	01400604 	movi	r5,24
 1014738:	282b883a 	mov	r21,r5
 101473c:	394ad83a 	srl	r5,r7,r5
 1014740:	00c040b4 	movhi	r3,258
 1014744:	18e4da04 	addi	r3,r3,-27800
 1014748:	194b883a 	add	r5,r3,r5
 101474c:	28800003 	ldbu	r2,0(r5)
 1014750:	00c00804 	movi	r3,32
 1014754:	156b883a 	add	r21,r2,r21
 1014758:	1d69c83a 	sub	r20,r3,r21
 101475c:	a000631e 	bne	r20,zero,10148ec <__umoddi3+0x2ec>
 1014760:	3c400136 	bltu	r7,r17,1014768 <__umoddi3+0x168>
 1014764:	81810436 	bltu	r16,r6,1014b78 <__umoddi3+0x578>
 1014768:	8185c83a 	sub	r2,r16,r6
 101476c:	89e3c83a 	sub	r17,r17,r7
 1014770:	8087803a 	cmpltu	r3,r16,r2
 1014774:	88efc83a 	sub	r23,r17,r3
 1014778:	b807883a 	mov	r3,r23
 101477c:	00003f06 	br	101487c <__umoddi3+0x27c>
 1014780:	3000041e 	bne	r6,zero,1014794 <__umoddi3+0x194>
 1014784:	01000044 	movi	r4,1
 1014788:	000b883a 	mov	r5,zero
 101478c:	1004bf40 	call	1004bf4 <__udivsi3>
 1014790:	1027883a 	mov	r19,r2
 1014794:	00bfffd4 	movui	r2,65535
 1014798:	14c04f2e 	bgeu	r2,r19,10148d8 <__umoddi3+0x2d8>
 101479c:	00804034 	movhi	r2,256
 10147a0:	10bfffc4 	addi	r2,r2,-1
 10147a4:	14c0e42e 	bgeu	r2,r19,1014b38 <__umoddi3+0x538>
 10147a8:	00800604 	movi	r2,24
 10147ac:	1007883a 	mov	r3,r2
 10147b0:	9884d83a 	srl	r2,r19,r2
 10147b4:	010040b4 	movhi	r4,258
 10147b8:	2124da04 	addi	r4,r4,-27800
 10147bc:	2085883a 	add	r2,r4,r2
 10147c0:	11000003 	ldbu	r4,0(r2)
 10147c4:	00800804 	movi	r2,32
 10147c8:	20c7883a 	add	r3,r4,r3
 10147cc:	10c5c83a 	sub	r2,r2,r3
 10147d0:	10009a1e 	bne	r2,zero,1014a3c <__umoddi3+0x43c>
 10147d4:	982cd43a 	srli	r22,r19,16
 10147d8:	8ce3c83a 	sub	r17,r17,r19
 10147dc:	9c3fffcc 	andi	r16,r19,65535
 10147e0:	0025883a 	mov	r18,zero
 10147e4:	8809883a 	mov	r4,r17
 10147e8:	b00b883a 	mov	r5,r22
 10147ec:	1004bfc0 	call	1004bfc <__umodsi3>
 10147f0:	8809883a 	mov	r4,r17
 10147f4:	b00b883a 	mov	r5,r22
 10147f8:	102b883a 	mov	r21,r2
 10147fc:	1004bf40 	call	1004bf4 <__udivsi3>
 1014800:	a806943a 	slli	r3,r21,16
 1014804:	a008d43a 	srli	r4,r20,16
 1014808:	1405383a 	mul	r2,r2,r16
 101480c:	190cb03a 	or	r6,r3,r4
 1014810:	3080032e 	bgeu	r6,r2,1014820 <__umoddi3+0x220>
 1014814:	34cd883a 	add	r6,r6,r19
 1014818:	34c00136 	bltu	r6,r19,1014820 <__umoddi3+0x220>
 101481c:	3080d436 	bltu	r6,r2,1014b70 <__umoddi3+0x570>
 1014820:	30abc83a 	sub	r21,r6,r2
 1014824:	a809883a 	mov	r4,r21
 1014828:	b00b883a 	mov	r5,r22
 101482c:	1004bfc0 	call	1004bfc <__umodsi3>
 1014830:	1023883a 	mov	r17,r2
 1014834:	a809883a 	mov	r4,r21
 1014838:	b00b883a 	mov	r5,r22
 101483c:	1004bf40 	call	1004bf4 <__udivsi3>
 1014840:	8822943a 	slli	r17,r17,16
 1014844:	1405383a 	mul	r2,r2,r16
 1014848:	a13fffcc 	andi	r4,r20,65535
 101484c:	8906b03a 	or	r3,r17,r4
 1014850:	1880042e 	bgeu	r3,r2,1014864 <__umoddi3+0x264>
 1014854:	1cc7883a 	add	r3,r3,r19
 1014858:	1cc00236 	bltu	r3,r19,1014864 <__umoddi3+0x264>
 101485c:	1880012e 	bgeu	r3,r2,1014864 <__umoddi3+0x264>
 1014860:	1cc7883a 	add	r3,r3,r19
 1014864:	1887c83a 	sub	r3,r3,r2
 1014868:	1c84d83a 	srl	r2,r3,r18
 101486c:	0007883a 	mov	r3,zero
 1014870:	00000206 	br	101487c <__umoddi3+0x27c>
 1014874:	2005883a 	mov	r2,r4
 1014878:	2807883a 	mov	r3,r5
 101487c:	dfc00b17 	ldw	ra,44(sp)
 1014880:	df000a17 	ldw	fp,40(sp)
 1014884:	ddc00917 	ldw	r23,36(sp)
 1014888:	dd800817 	ldw	r22,32(sp)
 101488c:	dd400717 	ldw	r21,28(sp)
 1014890:	dd000617 	ldw	r20,24(sp)
 1014894:	dcc00517 	ldw	r19,20(sp)
 1014898:	dc800417 	ldw	r18,16(sp)
 101489c:	dc400317 	ldw	r17,12(sp)
 10148a0:	dc000217 	ldw	r16,8(sp)
 10148a4:	dec00c04 	addi	sp,sp,48
 10148a8:	f800283a 	ret
 10148ac:	00803fc4 	movi	r2,255
 10148b0:	11c0952e 	bgeu	r2,r7,1014b08 <__umoddi3+0x508>
 10148b4:	01400204 	movi	r5,8
 10148b8:	282b883a 	mov	r21,r5
 10148bc:	003f9f06 	br	101473c <__alt_data_end+0xff81473c>
 10148c0:	00804034 	movhi	r2,256
 10148c4:	10bfffc4 	addi	r2,r2,-1
 10148c8:	1180952e 	bgeu	r2,r6,1014b20 <__umoddi3+0x520>
 10148cc:	01400604 	movi	r5,24
 10148d0:	2805883a 	mov	r2,r5
 10148d4:	003f6206 	br	1014660 <__alt_data_end+0xff814660>
 10148d8:	00803fc4 	movi	r2,255
 10148dc:	14c0932e 	bgeu	r2,r19,1014b2c <__umoddi3+0x52c>
 10148e0:	00800204 	movi	r2,8
 10148e4:	1007883a 	mov	r3,r2
 10148e8:	003fb106 	br	10147b0 <__alt_data_end+0xff8147b0>
 10148ec:	3548d83a 	srl	r4,r6,r21
 10148f0:	3d0e983a 	sll	r7,r7,r20
 10148f4:	8d10983a 	sll	r8,r17,r20
 10148f8:	8d6cd83a 	srl	r22,r17,r21
 10148fc:	3922b03a 	or	r17,r7,r4
 1014900:	882ed43a 	srli	r23,r17,16
 1014904:	8564d83a 	srl	r18,r16,r21
 1014908:	b009883a 	mov	r4,r22
 101490c:	b80b883a 	mov	r5,r23
 1014910:	44a4b03a 	or	r18,r8,r18
 1014914:	3526983a 	sll	r19,r6,r20
 1014918:	1004bfc0 	call	1004bfc <__umodsi3>
 101491c:	b009883a 	mov	r4,r22
 1014920:	b80b883a 	mov	r5,r23
 1014924:	1039883a 	mov	fp,r2
 1014928:	1004bf40 	call	1004bf4 <__udivsi3>
 101492c:	102d883a 	mov	r22,r2
 1014930:	8a3fffcc 	andi	r8,r17,65535
 1014934:	e004943a 	slli	r2,fp,16
 1014938:	900cd43a 	srli	r6,r18,16
 101493c:	b239383a 	mul	fp,r22,r8
 1014940:	8520983a 	sll	r16,r16,r20
 1014944:	118ab03a 	or	r5,r2,r6
 1014948:	2f00042e 	bgeu	r5,fp,101495c <__umoddi3+0x35c>
 101494c:	2c4b883a 	add	r5,r5,r17
 1014950:	b0bfffc4 	addi	r2,r22,-1
 1014954:	2c40822e 	bgeu	r5,r17,1014b60 <__umoddi3+0x560>
 1014958:	102d883a 	mov	r22,r2
 101495c:	2f39c83a 	sub	fp,r5,fp
 1014960:	e009883a 	mov	r4,fp
 1014964:	b80b883a 	mov	r5,r23
 1014968:	da000115 	stw	r8,4(sp)
 101496c:	1004bfc0 	call	1004bfc <__umodsi3>
 1014970:	e009883a 	mov	r4,fp
 1014974:	b80b883a 	mov	r5,r23
 1014978:	d8800015 	stw	r2,0(sp)
 101497c:	1004bf40 	call	1004bf4 <__udivsi3>
 1014980:	d9800017 	ldw	r6,0(sp)
 1014984:	da000117 	ldw	r8,4(sp)
 1014988:	94bfffcc 	andi	r18,r18,65535
 101498c:	300c943a 	slli	r6,r6,16
 1014990:	1209383a 	mul	r4,r2,r8
 1014994:	3490b03a 	or	r8,r6,r18
 1014998:	4100042e 	bgeu	r8,r4,10149ac <__umoddi3+0x3ac>
 101499c:	4451883a 	add	r8,r8,r17
 10149a0:	10ffffc4 	addi	r3,r2,-1
 10149a4:	44406a2e 	bgeu	r8,r17,1014b50 <__umoddi3+0x550>
 10149a8:	1805883a 	mov	r2,r3
 10149ac:	b012943a 	slli	r9,r22,16
 10149b0:	9abfffcc 	andi	r10,r19,65535
 10149b4:	980ed43a 	srli	r7,r19,16
 10149b8:	124ab03a 	or	r5,r2,r9
 10149bc:	2a7fffcc 	andi	r9,r5,65535
 10149c0:	280ad43a 	srli	r5,r5,16
 10149c4:	4a8d383a 	mul	r6,r9,r10
 10149c8:	49d3383a 	mul	r9,r9,r7
 10149cc:	2a95383a 	mul	r10,r5,r10
 10149d0:	3004d43a 	srli	r2,r6,16
 10149d4:	4111c83a 	sub	r8,r8,r4
 10149d8:	5253883a 	add	r9,r10,r9
 10149dc:	4893883a 	add	r9,r9,r2
 10149e0:	29cb383a 	mul	r5,r5,r7
 10149e4:	4a80022e 	bgeu	r9,r10,10149f0 <__umoddi3+0x3f0>
 10149e8:	00800074 	movhi	r2,1
 10149ec:	288b883a 	add	r5,r5,r2
 10149f0:	4808d43a 	srli	r4,r9,16
 10149f4:	4812943a 	slli	r9,r9,16
 10149f8:	31bfffcc 	andi	r6,r6,65535
 10149fc:	290b883a 	add	r5,r5,r4
 1014a00:	498d883a 	add	r6,r9,r6
 1014a04:	41403a36 	bltu	r8,r5,1014af0 <__umoddi3+0x4f0>
 1014a08:	41405d26 	beq	r8,r5,1014b80 <__umoddi3+0x580>
 1014a0c:	4149c83a 	sub	r4,r8,r5
 1014a10:	300f883a 	mov	r7,r6
 1014a14:	81cfc83a 	sub	r7,r16,r7
 1014a18:	81c7803a 	cmpltu	r3,r16,r7
 1014a1c:	20c7c83a 	sub	r3,r4,r3
 1014a20:	1d44983a 	sll	r2,r3,r21
 1014a24:	3d0ed83a 	srl	r7,r7,r20
 1014a28:	1d06d83a 	srl	r3,r3,r20
 1014a2c:	11c4b03a 	or	r2,r2,r7
 1014a30:	003f9206 	br	101487c <__alt_data_end+0xff81487c>
 1014a34:	0025883a 	mov	r18,zero
 1014a38:	003f1806 	br	101469c <__alt_data_end+0xff81469c>
 1014a3c:	98a6983a 	sll	r19,r19,r2
 1014a40:	88e8d83a 	srl	r20,r17,r3
 1014a44:	80c6d83a 	srl	r3,r16,r3
 1014a48:	982cd43a 	srli	r22,r19,16
 1014a4c:	88a2983a 	sll	r17,r17,r2
 1014a50:	a009883a 	mov	r4,r20
 1014a54:	b00b883a 	mov	r5,r22
 1014a58:	88eab03a 	or	r21,r17,r3
 1014a5c:	1025883a 	mov	r18,r2
 1014a60:	1004bfc0 	call	1004bfc <__umodsi3>
 1014a64:	a009883a 	mov	r4,r20
 1014a68:	b00b883a 	mov	r5,r22
 1014a6c:	1023883a 	mov	r17,r2
 1014a70:	1004bf40 	call	1004bf4 <__udivsi3>
 1014a74:	9f3fffcc 	andi	fp,r19,65535
 1014a78:	8822943a 	slli	r17,r17,16
 1014a7c:	a80ad43a 	srli	r5,r21,16
 1014a80:	1705383a 	mul	r2,r2,fp
 1014a84:	84a8983a 	sll	r20,r16,r18
 1014a88:	8948b03a 	or	r4,r17,r5
 1014a8c:	2080042e 	bgeu	r4,r2,1014aa0 <__umoddi3+0x4a0>
 1014a90:	24c9883a 	add	r4,r4,r19
 1014a94:	24c00236 	bltu	r4,r19,1014aa0 <__umoddi3+0x4a0>
 1014a98:	2080012e 	bgeu	r4,r2,1014aa0 <__umoddi3+0x4a0>
 1014a9c:	24c9883a 	add	r4,r4,r19
 1014aa0:	20afc83a 	sub	r23,r4,r2
 1014aa4:	b809883a 	mov	r4,r23
 1014aa8:	b00b883a 	mov	r5,r22
 1014aac:	1004bfc0 	call	1004bfc <__umodsi3>
 1014ab0:	1023883a 	mov	r17,r2
 1014ab4:	b809883a 	mov	r4,r23
 1014ab8:	b00b883a 	mov	r5,r22
 1014abc:	1004bf40 	call	1004bf4 <__udivsi3>
 1014ac0:	8822943a 	slli	r17,r17,16
 1014ac4:	1705383a 	mul	r2,r2,fp
 1014ac8:	a93fffcc 	andi	r4,r21,65535
 1014acc:	8908b03a 	or	r4,r17,r4
 1014ad0:	2080042e 	bgeu	r4,r2,1014ae4 <__umoddi3+0x4e4>
 1014ad4:	24c9883a 	add	r4,r4,r19
 1014ad8:	24c00236 	bltu	r4,r19,1014ae4 <__umoddi3+0x4e4>
 1014adc:	2080012e 	bgeu	r4,r2,1014ae4 <__umoddi3+0x4e4>
 1014ae0:	24c9883a 	add	r4,r4,r19
 1014ae4:	20a3c83a 	sub	r17,r4,r2
 1014ae8:	e021883a 	mov	r16,fp
 1014aec:	003f3d06 	br	10147e4 <__alt_data_end+0xff8147e4>
 1014af0:	34cfc83a 	sub	r7,r6,r19
 1014af4:	2c4bc83a 	sub	r5,r5,r17
 1014af8:	31cd803a 	cmpltu	r6,r6,r7
 1014afc:	298dc83a 	sub	r6,r5,r6
 1014b00:	4189c83a 	sub	r4,r8,r6
 1014b04:	003fc306 	br	1014a14 <__alt_data_end+0xff814a14>
 1014b08:	000b883a 	mov	r5,zero
 1014b0c:	002b883a 	mov	r21,zero
 1014b10:	003f0a06 	br	101473c <__alt_data_end+0xff81473c>
 1014b14:	01400404 	movi	r5,16
 1014b18:	282b883a 	mov	r21,r5
 1014b1c:	003f0706 	br	101473c <__alt_data_end+0xff81473c>
 1014b20:	01400404 	movi	r5,16
 1014b24:	2805883a 	mov	r2,r5
 1014b28:	003ecd06 	br	1014660 <__alt_data_end+0xff814660>
 1014b2c:	0005883a 	mov	r2,zero
 1014b30:	0007883a 	mov	r3,zero
 1014b34:	003f1e06 	br	10147b0 <__alt_data_end+0xff8147b0>
 1014b38:	00800404 	movi	r2,16
 1014b3c:	1007883a 	mov	r3,r2
 1014b40:	003f1b06 	br	10147b0 <__alt_data_end+0xff8147b0>
 1014b44:	000b883a 	mov	r5,zero
 1014b48:	0005883a 	mov	r2,zero
 1014b4c:	003ec406 	br	1014660 <__alt_data_end+0xff814660>
 1014b50:	413f952e 	bgeu	r8,r4,10149a8 <__alt_data_end+0xff8149a8>
 1014b54:	10bfff84 	addi	r2,r2,-2
 1014b58:	4451883a 	add	r8,r8,r17
 1014b5c:	003f9306 	br	10149ac <__alt_data_end+0xff8149ac>
 1014b60:	2f3f7d2e 	bgeu	r5,fp,1014958 <__alt_data_end+0xff814958>
 1014b64:	b5bfff84 	addi	r22,r22,-2
 1014b68:	2c4b883a 	add	r5,r5,r17
 1014b6c:	003f7b06 	br	101495c <__alt_data_end+0xff81495c>
 1014b70:	34cd883a 	add	r6,r6,r19
 1014b74:	003f2a06 	br	1014820 <__alt_data_end+0xff814820>
 1014b78:	8005883a 	mov	r2,r16
 1014b7c:	003efe06 	br	1014778 <__alt_data_end+0xff814778>
 1014b80:	81bfdb36 	bltu	r16,r6,1014af0 <__alt_data_end+0xff814af0>
 1014b84:	300f883a 	mov	r7,r6
 1014b88:	0009883a 	mov	r4,zero
 1014b8c:	003fa106 	br	1014a14 <__alt_data_end+0xff814a14>

01014b90 <__eqsf2>:
 1014b90:	2006d5fa 	srli	r3,r4,23
 1014b94:	280cd5fa 	srli	r6,r5,23
 1014b98:	01c02034 	movhi	r7,128
 1014b9c:	39ffffc4 	addi	r7,r7,-1
 1014ba0:	18c03fcc 	andi	r3,r3,255
 1014ba4:	02003fc4 	movi	r8,255
 1014ba8:	3904703a 	and	r2,r7,r4
 1014bac:	31803fcc 	andi	r6,r6,255
 1014bb0:	394e703a 	and	r7,r7,r5
 1014bb4:	2008d7fa 	srli	r4,r4,31
 1014bb8:	280ad7fa 	srli	r5,r5,31
 1014bbc:	1a000c26 	beq	r3,r8,1014bf0 <__eqsf2+0x60>
 1014bc0:	02003fc4 	movi	r8,255
 1014bc4:	32000326 	beq	r6,r8,1014bd4 <__eqsf2+0x44>
 1014bc8:	19800426 	beq	r3,r6,1014bdc <__eqsf2+0x4c>
 1014bcc:	00800044 	movi	r2,1
 1014bd0:	f800283a 	ret
 1014bd4:	383ffd1e 	bne	r7,zero,1014bcc <__alt_data_end+0xff814bcc>
 1014bd8:	19bffc1e 	bne	r3,r6,1014bcc <__alt_data_end+0xff814bcc>
 1014bdc:	11fffb1e 	bne	r2,r7,1014bcc <__alt_data_end+0xff814bcc>
 1014be0:	21400626 	beq	r4,r5,1014bfc <__eqsf2+0x6c>
 1014be4:	183ff91e 	bne	r3,zero,1014bcc <__alt_data_end+0xff814bcc>
 1014be8:	1004c03a 	cmpne	r2,r2,zero
 1014bec:	f800283a 	ret
 1014bf0:	103ff326 	beq	r2,zero,1014bc0 <__alt_data_end+0xff814bc0>
 1014bf4:	00800044 	movi	r2,1
 1014bf8:	f800283a 	ret
 1014bfc:	0005883a 	mov	r2,zero
 1014c00:	f800283a 	ret

01014c04 <__gesf2>:
 1014c04:	2004d5fa 	srli	r2,r4,23
 1014c08:	2806d5fa 	srli	r3,r5,23
 1014c0c:	01802034 	movhi	r6,128
 1014c10:	31bfffc4 	addi	r6,r6,-1
 1014c14:	10803fcc 	andi	r2,r2,255
 1014c18:	01c03fc4 	movi	r7,255
 1014c1c:	3110703a 	and	r8,r6,r4
 1014c20:	18c03fcc 	andi	r3,r3,255
 1014c24:	314c703a 	and	r6,r6,r5
 1014c28:	2008d7fa 	srli	r4,r4,31
 1014c2c:	280ad7fa 	srli	r5,r5,31
 1014c30:	11c00926 	beq	r2,r7,1014c58 <__gesf2+0x54>
 1014c34:	19c01226 	beq	r3,r7,1014c80 <__gesf2+0x7c>
 1014c38:	1000091e 	bne	r2,zero,1014c60 <__gesf2+0x5c>
 1014c3c:	4013003a 	cmpeq	r9,r8,zero
 1014c40:	480f883a 	mov	r7,r9
 1014c44:	1800091e 	bne	r3,zero,1014c6c <__gesf2+0x68>
 1014c48:	3000081e 	bne	r6,zero,1014c6c <__gesf2+0x68>
 1014c4c:	48001026 	beq	r9,zero,1014c90 <__gesf2+0x8c>
 1014c50:	0005883a 	mov	r2,zero
 1014c54:	f800283a 	ret
 1014c58:	4000161e 	bne	r8,zero,1014cb4 <__gesf2+0xb0>
 1014c5c:	18800826 	beq	r3,r2,1014c80 <__gesf2+0x7c>
 1014c60:	1800091e 	bne	r3,zero,1014c88 <__gesf2+0x84>
 1014c64:	000f883a 	mov	r7,zero
 1014c68:	30000926 	beq	r6,zero,1014c90 <__gesf2+0x8c>
 1014c6c:	29403fcc 	andi	r5,r5,255
 1014c70:	38000626 	beq	r7,zero,1014c8c <__gesf2+0x88>
 1014c74:	2800071e 	bne	r5,zero,1014c94 <__gesf2+0x90>
 1014c78:	00bfffc4 	movi	r2,-1
 1014c7c:	f800283a 	ret
 1014c80:	30000c1e 	bne	r6,zero,1014cb4 <__gesf2+0xb0>
 1014c84:	103fed26 	beq	r2,zero,1014c3c <__alt_data_end+0xff814c3c>
 1014c88:	29403fcc 	andi	r5,r5,255
 1014c8c:	21400326 	beq	r4,r5,1014c9c <__gesf2+0x98>
 1014c90:	203ff91e 	bne	r4,zero,1014c78 <__alt_data_end+0xff814c78>
 1014c94:	00800044 	movi	r2,1
 1014c98:	f800283a 	ret
 1014c9c:	18bffc16 	blt	r3,r2,1014c90 <__alt_data_end+0xff814c90>
 1014ca0:	10c00216 	blt	r2,r3,1014cac <__gesf2+0xa8>
 1014ca4:	323ffa36 	bltu	r6,r8,1014c90 <__alt_data_end+0xff814c90>
 1014ca8:	41bfe92e 	bgeu	r8,r6,1014c50 <__alt_data_end+0xff814c50>
 1014cac:	203ff226 	beq	r4,zero,1014c78 <__alt_data_end+0xff814c78>
 1014cb0:	003ff806 	br	1014c94 <__alt_data_end+0xff814c94>
 1014cb4:	00bfff84 	movi	r2,-2
 1014cb8:	f800283a 	ret

01014cbc <__lesf2>:
 1014cbc:	2004d5fa 	srli	r2,r4,23
 1014cc0:	280cd5fa 	srli	r6,r5,23
 1014cc4:	00c02034 	movhi	r3,128
 1014cc8:	18ffffc4 	addi	r3,r3,-1
 1014ccc:	10803fcc 	andi	r2,r2,255
 1014cd0:	01c03fc4 	movi	r7,255
 1014cd4:	1910703a 	and	r8,r3,r4
 1014cd8:	31803fcc 	andi	r6,r6,255
 1014cdc:	1946703a 	and	r3,r3,r5
 1014ce0:	2008d7fa 	srli	r4,r4,31
 1014ce4:	280ad7fa 	srli	r5,r5,31
 1014ce8:	11c00a26 	beq	r2,r7,1014d14 <__lesf2+0x58>
 1014cec:	31c01526 	beq	r6,r7,1014d44 <__lesf2+0x88>
 1014cf0:	10000a1e 	bne	r2,zero,1014d1c <__lesf2+0x60>
 1014cf4:	4013003a 	cmpeq	r9,r8,zero
 1014cf8:	480f883a 	mov	r7,r9
 1014cfc:	30000d26 	beq	r6,zero,1014d34 <__lesf2+0x78>
 1014d00:	29403fcc 	andi	r5,r5,255
 1014d04:	38001426 	beq	r7,zero,1014d58 <__lesf2+0x9c>
 1014d08:	2800081e 	bne	r5,zero,1014d2c <__lesf2+0x70>
 1014d0c:	00bfffc4 	movi	r2,-1
 1014d10:	f800283a 	ret
 1014d14:	40000c1e 	bne	r8,zero,1014d48 <__lesf2+0x8c>
 1014d18:	30800a26 	beq	r6,r2,1014d44 <__lesf2+0x88>
 1014d1c:	30000d1e 	bne	r6,zero,1014d54 <__lesf2+0x98>
 1014d20:	000f883a 	mov	r7,zero
 1014d24:	183ff61e 	bne	r3,zero,1014d00 <__alt_data_end+0xff814d00>
 1014d28:	203ff81e 	bne	r4,zero,1014d0c <__alt_data_end+0xff814d0c>
 1014d2c:	00800044 	movi	r2,1
 1014d30:	f800283a 	ret
 1014d34:	183ff21e 	bne	r3,zero,1014d00 <__alt_data_end+0xff814d00>
 1014d38:	483ffb26 	beq	r9,zero,1014d28 <__alt_data_end+0xff814d28>
 1014d3c:	0005883a 	mov	r2,zero
 1014d40:	f800283a 	ret
 1014d44:	18000226 	beq	r3,zero,1014d50 <__lesf2+0x94>
 1014d48:	00800084 	movi	r2,2
 1014d4c:	f800283a 	ret
 1014d50:	103fe826 	beq	r2,zero,1014cf4 <__alt_data_end+0xff814cf4>
 1014d54:	29403fcc 	andi	r5,r5,255
 1014d58:	217ff31e 	bne	r4,r5,1014d28 <__alt_data_end+0xff814d28>
 1014d5c:	30bff216 	blt	r6,r2,1014d28 <__alt_data_end+0xff814d28>
 1014d60:	11800216 	blt	r2,r6,1014d6c <__lesf2+0xb0>
 1014d64:	1a3ff036 	bltu	r3,r8,1014d28 <__alt_data_end+0xff814d28>
 1014d68:	40fff42e 	bgeu	r8,r3,1014d3c <__alt_data_end+0xff814d3c>
 1014d6c:	203fe726 	beq	r4,zero,1014d0c <__alt_data_end+0xff814d0c>
 1014d70:	003fee06 	br	1014d2c <__alt_data_end+0xff814d2c>

01014d74 <__adddf3>:
 1014d74:	02000434 	movhi	r8,16
 1014d78:	423fffc4 	addi	r8,r8,-1
 1014d7c:	defffb04 	addi	sp,sp,-20
 1014d80:	2a12703a 	and	r9,r5,r8
 1014d84:	2806d7fa 	srli	r3,r5,31
 1014d88:	3a10703a 	and	r8,r7,r8
 1014d8c:	3804d53a 	srli	r2,r7,20
 1014d90:	3014d77a 	srli	r10,r6,29
 1014d94:	dc000015 	stw	r16,0(sp)
 1014d98:	481290fa 	slli	r9,r9,3
 1014d9c:	2820d53a 	srli	r16,r5,20
 1014da0:	401090fa 	slli	r8,r8,3
 1014da4:	200ad77a 	srli	r5,r4,29
 1014da8:	380ed7fa 	srli	r7,r7,31
 1014dac:	dc800215 	stw	r18,8(sp)
 1014db0:	dc400115 	stw	r17,4(sp)
 1014db4:	dfc00415 	stw	ra,16(sp)
 1014db8:	dcc00315 	stw	r19,12(sp)
 1014dbc:	1c803fcc 	andi	r18,r3,255
 1014dc0:	8401ffcc 	andi	r16,r16,2047
 1014dc4:	494ab03a 	or	r5,r9,r5
 1014dc8:	202290fa 	slli	r17,r4,3
 1014dcc:	1081ffcc 	andi	r2,r2,2047
 1014dd0:	4290b03a 	or	r8,r8,r10
 1014dd4:	300c90fa 	slli	r6,r6,3
 1014dd8:	91c07026 	beq	r18,r7,1014f9c <__adddf3+0x228>
 1014ddc:	8087c83a 	sub	r3,r16,r2
 1014de0:	00c0b30e 	bge	zero,r3,10150b0 <__adddf3+0x33c>
 1014de4:	10002a1e 	bne	r2,zero,1014e90 <__adddf3+0x11c>
 1014de8:	4184b03a 	or	r2,r8,r6
 1014dec:	1000991e 	bne	r2,zero,1015054 <__adddf3+0x2e0>
 1014df0:	888001cc 	andi	r2,r17,7
 1014df4:	10005b26 	beq	r2,zero,1014f64 <__adddf3+0x1f0>
 1014df8:	88c003cc 	andi	r3,r17,15
 1014dfc:	00800104 	movi	r2,4
 1014e00:	18805826 	beq	r3,r2,1014f64 <__adddf3+0x1f0>
 1014e04:	89800104 	addi	r6,r17,4
 1014e08:	3463803a 	cmpltu	r17,r6,r17
 1014e0c:	2c4b883a 	add	r5,r5,r17
 1014e10:	2880202c 	andhi	r2,r5,128
 1014e14:	9007883a 	mov	r3,r18
 1014e18:	3023883a 	mov	r17,r6
 1014e1c:	10005426 	beq	r2,zero,1014f70 <__adddf3+0x1fc>
 1014e20:	84000044 	addi	r16,r16,1
 1014e24:	0081ffc4 	movi	r2,2047
 1014e28:	8080c126 	beq	r16,r2,1015130 <__adddf3+0x3bc>
 1014e2c:	013fe034 	movhi	r4,65408
 1014e30:	213fffc4 	addi	r4,r4,-1
 1014e34:	290a703a 	and	r5,r5,r4
 1014e38:	2804977a 	slli	r2,r5,29
 1014e3c:	280a927a 	slli	r5,r5,9
 1014e40:	8822d0fa 	srli	r17,r17,3
 1014e44:	8401ffcc 	andi	r16,r16,2047
 1014e48:	2808d33a 	srli	r4,r5,12
 1014e4c:	1444b03a 	or	r2,r2,r17
 1014e50:	8401ffcc 	andi	r16,r16,2047
 1014e54:	800a953a 	slli	r5,r16,20
 1014e58:	18c03fcc 	andi	r3,r3,255
 1014e5c:	04000434 	movhi	r16,16
 1014e60:	180697fa 	slli	r3,r3,31
 1014e64:	843fffc4 	addi	r16,r16,-1
 1014e68:	2420703a 	and	r16,r4,r16
 1014e6c:	8160b03a 	or	r16,r16,r5
 1014e70:	80c6b03a 	or	r3,r16,r3
 1014e74:	dfc00417 	ldw	ra,16(sp)
 1014e78:	dcc00317 	ldw	r19,12(sp)
 1014e7c:	dc800217 	ldw	r18,8(sp)
 1014e80:	dc400117 	ldw	r17,4(sp)
 1014e84:	dc000017 	ldw	r16,0(sp)
 1014e88:	dec00504 	addi	sp,sp,20
 1014e8c:	f800283a 	ret
 1014e90:	0081ffc4 	movi	r2,2047
 1014e94:	80bfd626 	beq	r16,r2,1014df0 <__alt_data_end+0xff814df0>
 1014e98:	42002034 	orhi	r8,r8,128
 1014e9c:	00800e04 	movi	r2,56
 1014ea0:	10c0a616 	blt	r2,r3,101513c <__adddf3+0x3c8>
 1014ea4:	008007c4 	movi	r2,31
 1014ea8:	10c0c916 	blt	r2,r3,10151d0 <__adddf3+0x45c>
 1014eac:	00800804 	movi	r2,32
 1014eb0:	10c5c83a 	sub	r2,r2,r3
 1014eb4:	408e983a 	sll	r7,r8,r2
 1014eb8:	30c8d83a 	srl	r4,r6,r3
 1014ebc:	3084983a 	sll	r2,r6,r2
 1014ec0:	40c6d83a 	srl	r3,r8,r3
 1014ec4:	390cb03a 	or	r6,r7,r4
 1014ec8:	1004c03a 	cmpne	r2,r2,zero
 1014ecc:	308cb03a 	or	r6,r6,r2
 1014ed0:	898dc83a 	sub	r6,r17,r6
 1014ed4:	89a3803a 	cmpltu	r17,r17,r6
 1014ed8:	28cbc83a 	sub	r5,r5,r3
 1014edc:	2c4bc83a 	sub	r5,r5,r17
 1014ee0:	3023883a 	mov	r17,r6
 1014ee4:	2880202c 	andhi	r2,r5,128
 1014ee8:	10006d26 	beq	r2,zero,10150a0 <__adddf3+0x32c>
 1014eec:	04c02034 	movhi	r19,128
 1014ef0:	9cffffc4 	addi	r19,r19,-1
 1014ef4:	2ce6703a 	and	r19,r5,r19
 1014ef8:	98007e26 	beq	r19,zero,10150f4 <__adddf3+0x380>
 1014efc:	9809883a 	mov	r4,r19
 1014f00:	1004a740 	call	1004a74 <__clzsi2>
 1014f04:	10fffe04 	addi	r3,r2,-8
 1014f08:	010007c4 	movi	r4,31
 1014f0c:	20c07f16 	blt	r4,r3,101510c <__adddf3+0x398>
 1014f10:	01400a04 	movi	r5,40
 1014f14:	2885c83a 	sub	r2,r5,r2
 1014f18:	888ad83a 	srl	r5,r17,r2
 1014f1c:	98e6983a 	sll	r19,r19,r3
 1014f20:	88e2983a 	sll	r17,r17,r3
 1014f24:	2ce6b03a 	or	r19,r5,r19
 1014f28:	1c007c16 	blt	r3,r16,101511c <__adddf3+0x3a8>
 1014f2c:	1c21c83a 	sub	r16,r3,r16
 1014f30:	81400044 	addi	r5,r16,1
 1014f34:	00c007c4 	movi	r3,31
 1014f38:	19409816 	blt	r3,r5,101519c <__adddf3+0x428>
 1014f3c:	1c21c83a 	sub	r16,r3,r16
 1014f40:	8c08983a 	sll	r4,r17,r16
 1014f44:	8946d83a 	srl	r3,r17,r5
 1014f48:	9c20983a 	sll	r16,r19,r16
 1014f4c:	2008c03a 	cmpne	r4,r4,zero
 1014f50:	994ad83a 	srl	r5,r19,r5
 1014f54:	1c06b03a 	or	r3,r3,r16
 1014f58:	1922b03a 	or	r17,r3,r4
 1014f5c:	0021883a 	mov	r16,zero
 1014f60:	003fa306 	br	1014df0 <__alt_data_end+0xff814df0>
 1014f64:	2880202c 	andhi	r2,r5,128
 1014f68:	9007883a 	mov	r3,r18
 1014f6c:	103fac1e 	bne	r2,zero,1014e20 <__alt_data_end+0xff814e20>
 1014f70:	2804977a 	slli	r2,r5,29
 1014f74:	8822d0fa 	srli	r17,r17,3
 1014f78:	0101ffc4 	movi	r4,2047
 1014f7c:	280ad0fa 	srli	r5,r5,3
 1014f80:	1444b03a 	or	r2,r2,r17
 1014f84:	81002c26 	beq	r16,r4,1015038 <__adddf3+0x2c4>
 1014f88:	8120703a 	and	r16,r16,r4
 1014f8c:	01000434 	movhi	r4,16
 1014f90:	213fffc4 	addi	r4,r4,-1
 1014f94:	2908703a 	and	r4,r5,r4
 1014f98:	003fad06 	br	1014e50 <__alt_data_end+0xff814e50>
 1014f9c:	8089c83a 	sub	r4,r16,r2
 1014fa0:	01006a0e 	bge	zero,r4,101514c <__adddf3+0x3d8>
 1014fa4:	10003326 	beq	r2,zero,1015074 <__adddf3+0x300>
 1014fa8:	0081ffc4 	movi	r2,2047
 1014fac:	80bf9026 	beq	r16,r2,1014df0 <__alt_data_end+0xff814df0>
 1014fb0:	42002034 	orhi	r8,r8,128
 1014fb4:	00800e04 	movi	r2,56
 1014fb8:	1100b116 	blt	r2,r4,1015280 <__adddf3+0x50c>
 1014fbc:	008007c4 	movi	r2,31
 1014fc0:	1100e216 	blt	r2,r4,101534c <__adddf3+0x5d8>
 1014fc4:	00800804 	movi	r2,32
 1014fc8:	1105c83a 	sub	r2,r2,r4
 1014fcc:	4092983a 	sll	r9,r8,r2
 1014fd0:	310ed83a 	srl	r7,r6,r4
 1014fd4:	3084983a 	sll	r2,r6,r2
 1014fd8:	4110d83a 	srl	r8,r8,r4
 1014fdc:	49ccb03a 	or	r6,r9,r7
 1014fe0:	1004c03a 	cmpne	r2,r2,zero
 1014fe4:	308cb03a 	or	r6,r6,r2
 1014fe8:	344d883a 	add	r6,r6,r17
 1014fec:	3463803a 	cmpltu	r17,r6,r17
 1014ff0:	414b883a 	add	r5,r8,r5
 1014ff4:	2c4b883a 	add	r5,r5,r17
 1014ff8:	3023883a 	mov	r17,r6
 1014ffc:	2880202c 	andhi	r2,r5,128
 1015000:	10002726 	beq	r2,zero,10150a0 <__adddf3+0x32c>
 1015004:	84000044 	addi	r16,r16,1
 1015008:	0081ffc4 	movi	r2,2047
 101500c:	8080ae26 	beq	r16,r2,10152c8 <__adddf3+0x554>
 1015010:	00bfe034 	movhi	r2,65408
 1015014:	10bfffc4 	addi	r2,r2,-1
 1015018:	288a703a 	and	r5,r5,r2
 101501c:	880cd07a 	srli	r6,r17,1
 1015020:	280897fa 	slli	r4,r5,31
 1015024:	88c0004c 	andi	r3,r17,1
 1015028:	30e2b03a 	or	r17,r6,r3
 101502c:	280ad07a 	srli	r5,r5,1
 1015030:	8922b03a 	or	r17,r17,r4
 1015034:	003f6e06 	br	1014df0 <__alt_data_end+0xff814df0>
 1015038:	1148b03a 	or	r4,r2,r5
 101503c:	20003c26 	beq	r4,zero,1015130 <__adddf3+0x3bc>
 1015040:	29000234 	orhi	r4,r5,8
 1015044:	01400434 	movhi	r5,16
 1015048:	297fffc4 	addi	r5,r5,-1
 101504c:	2148703a 	and	r4,r4,r5
 1015050:	003f7f06 	br	1014e50 <__alt_data_end+0xff814e50>
 1015054:	18ffffc4 	addi	r3,r3,-1
 1015058:	18004d1e 	bne	r3,zero,1015190 <__adddf3+0x41c>
 101505c:	898dc83a 	sub	r6,r17,r6
 1015060:	89a3803a 	cmpltu	r17,r17,r6
 1015064:	2a0bc83a 	sub	r5,r5,r8
 1015068:	2c4bc83a 	sub	r5,r5,r17
 101506c:	3023883a 	mov	r17,r6
 1015070:	003f9c06 	br	1014ee4 <__alt_data_end+0xff814ee4>
 1015074:	4184b03a 	or	r2,r8,r6
 1015078:	103f5d26 	beq	r2,zero,1014df0 <__alt_data_end+0xff814df0>
 101507c:	213fffc4 	addi	r4,r4,-1
 1015080:	203fd926 	beq	r4,zero,1014fe8 <__alt_data_end+0xff814fe8>
 1015084:	0081ffc4 	movi	r2,2047
 1015088:	80bfca1e 	bne	r16,r2,1014fb4 <__alt_data_end+0xff814fb4>
 101508c:	003f5806 	br	1014df0 <__alt_data_end+0xff814df0>
 1015090:	10c8b03a 	or	r4,r2,r3
 1015094:	20008b26 	beq	r4,zero,10152c4 <__adddf3+0x550>
 1015098:	100b883a 	mov	r5,r2
 101509c:	1823883a 	mov	r17,r3
 10150a0:	888001cc 	andi	r2,r17,7
 10150a4:	103f541e 	bne	r2,zero,1014df8 <__alt_data_end+0xff814df8>
 10150a8:	9007883a 	mov	r3,r18
 10150ac:	003fb006 	br	1014f70 <__alt_data_end+0xff814f70>
 10150b0:	1800531e 	bne	r3,zero,1015200 <__adddf3+0x48c>
 10150b4:	80800044 	addi	r2,r16,1
 10150b8:	1081ffcc 	andi	r2,r2,2047
 10150bc:	00c00044 	movi	r3,1
 10150c0:	1880990e 	bge	r3,r2,1015328 <__adddf3+0x5b4>
 10150c4:	8985c83a 	sub	r2,r17,r6
 10150c8:	8887803a 	cmpltu	r3,r17,r2
 10150cc:	2a27c83a 	sub	r19,r5,r8
 10150d0:	98e7c83a 	sub	r19,r19,r3
 10150d4:	98c0202c 	andhi	r3,r19,128
 10150d8:	18006226 	beq	r3,zero,1015264 <__adddf3+0x4f0>
 10150dc:	3463c83a 	sub	r17,r6,r17
 10150e0:	4151c83a 	sub	r8,r8,r5
 10150e4:	344d803a 	cmpltu	r6,r6,r17
 10150e8:	41a7c83a 	sub	r19,r8,r6
 10150ec:	3825883a 	mov	r18,r7
 10150f0:	983f821e 	bne	r19,zero,1014efc <__alt_data_end+0xff814efc>
 10150f4:	8809883a 	mov	r4,r17
 10150f8:	1004a740 	call	1004a74 <__clzsi2>
 10150fc:	10800804 	addi	r2,r2,32
 1015100:	10fffe04 	addi	r3,r2,-8
 1015104:	010007c4 	movi	r4,31
 1015108:	20ff810e 	bge	r4,r3,1014f10 <__alt_data_end+0xff814f10>
 101510c:	14fff604 	addi	r19,r2,-40
 1015110:	8ce6983a 	sll	r19,r17,r19
 1015114:	0023883a 	mov	r17,zero
 1015118:	1c3f840e 	bge	r3,r16,1014f2c <__alt_data_end+0xff814f2c>
 101511c:	017fe034 	movhi	r5,65408
 1015120:	297fffc4 	addi	r5,r5,-1
 1015124:	80e1c83a 	sub	r16,r16,r3
 1015128:	994a703a 	and	r5,r19,r5
 101512c:	003f3006 	br	1014df0 <__alt_data_end+0xff814df0>
 1015130:	0009883a 	mov	r4,zero
 1015134:	0005883a 	mov	r2,zero
 1015138:	003f4506 	br	1014e50 <__alt_data_end+0xff814e50>
 101513c:	418cb03a 	or	r6,r8,r6
 1015140:	300cc03a 	cmpne	r6,r6,zero
 1015144:	0007883a 	mov	r3,zero
 1015148:	003f6106 	br	1014ed0 <__alt_data_end+0xff814ed0>
 101514c:	2000921e 	bne	r4,zero,1015398 <__adddf3+0x624>
 1015150:	80800044 	addi	r2,r16,1
 1015154:	11c1ffcc 	andi	r7,r2,2047
 1015158:	01000044 	movi	r4,1
 101515c:	21c0610e 	bge	r4,r7,10152e4 <__adddf3+0x570>
 1015160:	0101ffc4 	movi	r4,2047
 1015164:	1100a326 	beq	r2,r4,10153f4 <__adddf3+0x680>
 1015168:	344d883a 	add	r6,r6,r17
 101516c:	3463803a 	cmpltu	r17,r6,r17
 1015170:	414b883a 	add	r5,r8,r5
 1015174:	2c4b883a 	add	r5,r5,r17
 1015178:	282297fa 	slli	r17,r5,31
 101517c:	300cd07a 	srli	r6,r6,1
 1015180:	280ad07a 	srli	r5,r5,1
 1015184:	1021883a 	mov	r16,r2
 1015188:	89a2b03a 	or	r17,r17,r6
 101518c:	003f1806 	br	1014df0 <__alt_data_end+0xff814df0>
 1015190:	0081ffc4 	movi	r2,2047
 1015194:	80bf411e 	bne	r16,r2,1014e9c <__alt_data_end+0xff814e9c>
 1015198:	003f1506 	br	1014df0 <__alt_data_end+0xff814df0>
 101519c:	80bff844 	addi	r2,r16,-31
 10151a0:	00c00804 	movi	r3,32
 10151a4:	9884d83a 	srl	r2,r19,r2
 10151a8:	28c04a26 	beq	r5,r3,10152d4 <__adddf3+0x560>
 10151ac:	00c00fc4 	movi	r3,63
 10151b0:	1c21c83a 	sub	r16,r3,r16
 10151b4:	9c26983a 	sll	r19,r19,r16
 10151b8:	9c62b03a 	or	r17,r19,r17
 10151bc:	8822c03a 	cmpne	r17,r17,zero
 10151c0:	88a2b03a 	or	r17,r17,r2
 10151c4:	000b883a 	mov	r5,zero
 10151c8:	0021883a 	mov	r16,zero
 10151cc:	003fb406 	br	10150a0 <__alt_data_end+0xff8150a0>
 10151d0:	18bff804 	addi	r2,r3,-32
 10151d4:	01000804 	movi	r4,32
 10151d8:	4084d83a 	srl	r2,r8,r2
 10151dc:	19003f26 	beq	r3,r4,10152dc <__adddf3+0x568>
 10151e0:	01001004 	movi	r4,64
 10151e4:	20c7c83a 	sub	r3,r4,r3
 10151e8:	40d0983a 	sll	r8,r8,r3
 10151ec:	418cb03a 	or	r6,r8,r6
 10151f0:	300cc03a 	cmpne	r6,r6,zero
 10151f4:	308cb03a 	or	r6,r6,r2
 10151f8:	0007883a 	mov	r3,zero
 10151fc:	003f3406 	br	1014ed0 <__alt_data_end+0xff814ed0>
 1015200:	80002326 	beq	r16,zero,1015290 <__adddf3+0x51c>
 1015204:	0101ffc4 	movi	r4,2047
 1015208:	11005e26 	beq	r2,r4,1015384 <__adddf3+0x610>
 101520c:	00c7c83a 	sub	r3,zero,r3
 1015210:	29402034 	orhi	r5,r5,128
 1015214:	01000e04 	movi	r4,56
 1015218:	20c07216 	blt	r4,r3,10153e4 <__adddf3+0x670>
 101521c:	010007c4 	movi	r4,31
 1015220:	20c0ce16 	blt	r4,r3,101555c <__adddf3+0x7e8>
 1015224:	01000804 	movi	r4,32
 1015228:	20c9c83a 	sub	r4,r4,r3
 101522c:	2914983a 	sll	r10,r5,r4
 1015230:	88d2d83a 	srl	r9,r17,r3
 1015234:	8908983a 	sll	r4,r17,r4
 1015238:	28c6d83a 	srl	r3,r5,r3
 101523c:	5262b03a 	or	r17,r10,r9
 1015240:	2008c03a 	cmpne	r4,r4,zero
 1015244:	8922b03a 	or	r17,r17,r4
 1015248:	3463c83a 	sub	r17,r6,r17
 101524c:	40c7c83a 	sub	r3,r8,r3
 1015250:	344d803a 	cmpltu	r6,r6,r17
 1015254:	198bc83a 	sub	r5,r3,r6
 1015258:	1021883a 	mov	r16,r2
 101525c:	3825883a 	mov	r18,r7
 1015260:	003f2006 	br	1014ee4 <__alt_data_end+0xff814ee4>
 1015264:	9886b03a 	or	r3,r19,r2
 1015268:	1800141e 	bne	r3,zero,10152bc <__adddf3+0x548>
 101526c:	0007883a 	mov	r3,zero
 1015270:	000b883a 	mov	r5,zero
 1015274:	0023883a 	mov	r17,zero
 1015278:	0021883a 	mov	r16,zero
 101527c:	003f3c06 	br	1014f70 <__alt_data_end+0xff814f70>
 1015280:	418cb03a 	or	r6,r8,r6
 1015284:	300cc03a 	cmpne	r6,r6,zero
 1015288:	0011883a 	mov	r8,zero
 101528c:	003f5606 	br	1014fe8 <__alt_data_end+0xff814fe8>
 1015290:	2c48b03a 	or	r4,r5,r17
 1015294:	20003b26 	beq	r4,zero,1015384 <__adddf3+0x610>
 1015298:	00c6303a 	nor	r3,zero,r3
 101529c:	1800371e 	bne	r3,zero,101537c <__adddf3+0x608>
 10152a0:	3463c83a 	sub	r17,r6,r17
 10152a4:	414bc83a 	sub	r5,r8,r5
 10152a8:	344d803a 	cmpltu	r6,r6,r17
 10152ac:	298bc83a 	sub	r5,r5,r6
 10152b0:	1021883a 	mov	r16,r2
 10152b4:	3825883a 	mov	r18,r7
 10152b8:	003f0a06 	br	1014ee4 <__alt_data_end+0xff814ee4>
 10152bc:	1023883a 	mov	r17,r2
 10152c0:	003f0d06 	br	1014ef8 <__alt_data_end+0xff814ef8>
 10152c4:	0007883a 	mov	r3,zero
 10152c8:	000b883a 	mov	r5,zero
 10152cc:	0023883a 	mov	r17,zero
 10152d0:	003f2706 	br	1014f70 <__alt_data_end+0xff814f70>
 10152d4:	0027883a 	mov	r19,zero
 10152d8:	003fb706 	br	10151b8 <__alt_data_end+0xff8151b8>
 10152dc:	0011883a 	mov	r8,zero
 10152e0:	003fc206 	br	10151ec <__alt_data_end+0xff8151ec>
 10152e4:	2c44b03a 	or	r2,r5,r17
 10152e8:	8000871e 	bne	r16,zero,1015508 <__adddf3+0x794>
 10152ec:	1000b126 	beq	r2,zero,10155b4 <__adddf3+0x840>
 10152f0:	4184b03a 	or	r2,r8,r6
 10152f4:	103ebe26 	beq	r2,zero,1014df0 <__alt_data_end+0xff814df0>
 10152f8:	3445883a 	add	r2,r6,r17
 10152fc:	1463803a 	cmpltu	r17,r2,r17
 1015300:	414b883a 	add	r5,r8,r5
 1015304:	2c4b883a 	add	r5,r5,r17
 1015308:	28c0202c 	andhi	r3,r5,128
 101530c:	1023883a 	mov	r17,r2
 1015310:	183f6326 	beq	r3,zero,10150a0 <__alt_data_end+0xff8150a0>
 1015314:	00bfe034 	movhi	r2,65408
 1015318:	10bfffc4 	addi	r2,r2,-1
 101531c:	2021883a 	mov	r16,r4
 1015320:	288a703a 	and	r5,r5,r2
 1015324:	003eb206 	br	1014df0 <__alt_data_end+0xff814df0>
 1015328:	2c44b03a 	or	r2,r5,r17
 101532c:	8000251e 	bne	r16,zero,10153c4 <__adddf3+0x650>
 1015330:	10004b1e 	bne	r2,zero,1015460 <__adddf3+0x6ec>
 1015334:	4184b03a 	or	r2,r8,r6
 1015338:	103fe226 	beq	r2,zero,10152c4 <__alt_data_end+0xff8152c4>
 101533c:	400b883a 	mov	r5,r8
 1015340:	3023883a 	mov	r17,r6
 1015344:	3825883a 	mov	r18,r7
 1015348:	003ea906 	br	1014df0 <__alt_data_end+0xff814df0>
 101534c:	20bff804 	addi	r2,r4,-32
 1015350:	01c00804 	movi	r7,32
 1015354:	4084d83a 	srl	r2,r8,r2
 1015358:	21c07e26 	beq	r4,r7,1015554 <__adddf3+0x7e0>
 101535c:	01c01004 	movi	r7,64
 1015360:	3909c83a 	sub	r4,r7,r4
 1015364:	4110983a 	sll	r8,r8,r4
 1015368:	418cb03a 	or	r6,r8,r6
 101536c:	300cc03a 	cmpne	r6,r6,zero
 1015370:	308cb03a 	or	r6,r6,r2
 1015374:	0011883a 	mov	r8,zero
 1015378:	003f1b06 	br	1014fe8 <__alt_data_end+0xff814fe8>
 101537c:	0101ffc4 	movi	r4,2047
 1015380:	113fa41e 	bne	r2,r4,1015214 <__alt_data_end+0xff815214>
 1015384:	400b883a 	mov	r5,r8
 1015388:	3023883a 	mov	r17,r6
 101538c:	1021883a 	mov	r16,r2
 1015390:	3825883a 	mov	r18,r7
 1015394:	003e9606 	br	1014df0 <__alt_data_end+0xff814df0>
 1015398:	80001a1e 	bne	r16,zero,1015404 <__adddf3+0x690>
 101539c:	2c4eb03a 	or	r7,r5,r17
 10153a0:	38005526 	beq	r7,zero,10154f8 <__adddf3+0x784>
 10153a4:	0108303a 	nor	r4,zero,r4
 10153a8:	2000511e 	bne	r4,zero,10154f0 <__adddf3+0x77c>
 10153ac:	89a3883a 	add	r17,r17,r6
 10153b0:	414b883a 	add	r5,r8,r5
 10153b4:	898d803a 	cmpltu	r6,r17,r6
 10153b8:	298b883a 	add	r5,r5,r6
 10153bc:	1021883a 	mov	r16,r2
 10153c0:	003f0e06 	br	1014ffc <__alt_data_end+0xff814ffc>
 10153c4:	1000341e 	bne	r2,zero,1015498 <__adddf3+0x724>
 10153c8:	4184b03a 	or	r2,r8,r6
 10153cc:	10006f26 	beq	r2,zero,101558c <__adddf3+0x818>
 10153d0:	400b883a 	mov	r5,r8
 10153d4:	3023883a 	mov	r17,r6
 10153d8:	3825883a 	mov	r18,r7
 10153dc:	0401ffc4 	movi	r16,2047
 10153e0:	003e8306 	br	1014df0 <__alt_data_end+0xff814df0>
 10153e4:	2c62b03a 	or	r17,r5,r17
 10153e8:	8822c03a 	cmpne	r17,r17,zero
 10153ec:	0007883a 	mov	r3,zero
 10153f0:	003f9506 	br	1015248 <__alt_data_end+0xff815248>
 10153f4:	1021883a 	mov	r16,r2
 10153f8:	000b883a 	mov	r5,zero
 10153fc:	0023883a 	mov	r17,zero
 1015400:	003edb06 	br	1014f70 <__alt_data_end+0xff814f70>
 1015404:	01c1ffc4 	movi	r7,2047
 1015408:	11c03b26 	beq	r2,r7,10154f8 <__adddf3+0x784>
 101540c:	0109c83a 	sub	r4,zero,r4
 1015410:	29402034 	orhi	r5,r5,128
 1015414:	01c00e04 	movi	r7,56
 1015418:	39006216 	blt	r7,r4,10155a4 <__adddf3+0x830>
 101541c:	01c007c4 	movi	r7,31
 1015420:	39006b16 	blt	r7,r4,10155d0 <__adddf3+0x85c>
 1015424:	01c00804 	movi	r7,32
 1015428:	390fc83a 	sub	r7,r7,r4
 101542c:	29d4983a 	sll	r10,r5,r7
 1015430:	8912d83a 	srl	r9,r17,r4
 1015434:	89ce983a 	sll	r7,r17,r7
 1015438:	2908d83a 	srl	r4,r5,r4
 101543c:	5262b03a 	or	r17,r10,r9
 1015440:	380ac03a 	cmpne	r5,r7,zero
 1015444:	8962b03a 	or	r17,r17,r5
 1015448:	89a3883a 	add	r17,r17,r6
 101544c:	2211883a 	add	r8,r4,r8
 1015450:	898d803a 	cmpltu	r6,r17,r6
 1015454:	418b883a 	add	r5,r8,r6
 1015458:	1021883a 	mov	r16,r2
 101545c:	003ee706 	br	1014ffc <__alt_data_end+0xff814ffc>
 1015460:	4184b03a 	or	r2,r8,r6
 1015464:	103e6226 	beq	r2,zero,1014df0 <__alt_data_end+0xff814df0>
 1015468:	8987c83a 	sub	r3,r17,r6
 101546c:	88c9803a 	cmpltu	r4,r17,r3
 1015470:	2a05c83a 	sub	r2,r5,r8
 1015474:	1105c83a 	sub	r2,r2,r4
 1015478:	1100202c 	andhi	r4,r2,128
 101547c:	203f0426 	beq	r4,zero,1015090 <__alt_data_end+0xff815090>
 1015480:	3463c83a 	sub	r17,r6,r17
 1015484:	414bc83a 	sub	r5,r8,r5
 1015488:	344d803a 	cmpltu	r6,r6,r17
 101548c:	298bc83a 	sub	r5,r5,r6
 1015490:	3825883a 	mov	r18,r7
 1015494:	003e5606 	br	1014df0 <__alt_data_end+0xff814df0>
 1015498:	4184b03a 	or	r2,r8,r6
 101549c:	10002b26 	beq	r2,zero,101554c <__adddf3+0x7d8>
 10154a0:	2804d0fa 	srli	r2,r5,3
 10154a4:	8822d0fa 	srli	r17,r17,3
 10154a8:	280a977a 	slli	r5,r5,29
 10154ac:	10c0022c 	andhi	r3,r2,8
 10154b0:	2c62b03a 	or	r17,r5,r17
 10154b4:	18000826 	beq	r3,zero,10154d8 <__adddf3+0x764>
 10154b8:	4008d0fa 	srli	r4,r8,3
 10154bc:	20c0022c 	andhi	r3,r4,8
 10154c0:	1800051e 	bne	r3,zero,10154d8 <__adddf3+0x764>
 10154c4:	300cd0fa 	srli	r6,r6,3
 10154c8:	4010977a 	slli	r8,r8,29
 10154cc:	2005883a 	mov	r2,r4
 10154d0:	3825883a 	mov	r18,r7
 10154d4:	41a2b03a 	or	r17,r8,r6
 10154d8:	880ad77a 	srli	r5,r17,29
 10154dc:	100490fa 	slli	r2,r2,3
 10154e0:	882290fa 	slli	r17,r17,3
 10154e4:	0401ffc4 	movi	r16,2047
 10154e8:	288ab03a 	or	r5,r5,r2
 10154ec:	003e4006 	br	1014df0 <__alt_data_end+0xff814df0>
 10154f0:	01c1ffc4 	movi	r7,2047
 10154f4:	11ffc71e 	bne	r2,r7,1015414 <__alt_data_end+0xff815414>
 10154f8:	400b883a 	mov	r5,r8
 10154fc:	3023883a 	mov	r17,r6
 1015500:	1021883a 	mov	r16,r2
 1015504:	003e3a06 	br	1014df0 <__alt_data_end+0xff814df0>
 1015508:	10002d26 	beq	r2,zero,10155c0 <__adddf3+0x84c>
 101550c:	4184b03a 	or	r2,r8,r6
 1015510:	10000e26 	beq	r2,zero,101554c <__adddf3+0x7d8>
 1015514:	2804d0fa 	srli	r2,r5,3
 1015518:	8822d0fa 	srli	r17,r17,3
 101551c:	280a977a 	slli	r5,r5,29
 1015520:	10c0022c 	andhi	r3,r2,8
 1015524:	2c62b03a 	or	r17,r5,r17
 1015528:	183feb26 	beq	r3,zero,10154d8 <__alt_data_end+0xff8154d8>
 101552c:	4008d0fa 	srli	r4,r8,3
 1015530:	20c0022c 	andhi	r3,r4,8
 1015534:	183fe81e 	bne	r3,zero,10154d8 <__alt_data_end+0xff8154d8>
 1015538:	300cd0fa 	srli	r6,r6,3
 101553c:	4010977a 	slli	r8,r8,29
 1015540:	2005883a 	mov	r2,r4
 1015544:	41a2b03a 	or	r17,r8,r6
 1015548:	003fe306 	br	10154d8 <__alt_data_end+0xff8154d8>
 101554c:	0401ffc4 	movi	r16,2047
 1015550:	003e2706 	br	1014df0 <__alt_data_end+0xff814df0>
 1015554:	0011883a 	mov	r8,zero
 1015558:	003f8306 	br	1015368 <__alt_data_end+0xff815368>
 101555c:	193ff804 	addi	r4,r3,-32
 1015560:	02400804 	movi	r9,32
 1015564:	2908d83a 	srl	r4,r5,r4
 1015568:	1a402526 	beq	r3,r9,1015600 <__adddf3+0x88c>
 101556c:	02401004 	movi	r9,64
 1015570:	48c7c83a 	sub	r3,r9,r3
 1015574:	28ca983a 	sll	r5,r5,r3
 1015578:	2c62b03a 	or	r17,r5,r17
 101557c:	8822c03a 	cmpne	r17,r17,zero
 1015580:	8922b03a 	or	r17,r17,r4
 1015584:	0007883a 	mov	r3,zero
 1015588:	003f2f06 	br	1015248 <__alt_data_end+0xff815248>
 101558c:	01402034 	movhi	r5,128
 1015590:	0007883a 	mov	r3,zero
 1015594:	297fffc4 	addi	r5,r5,-1
 1015598:	047ffe04 	movi	r17,-8
 101559c:	0401ffc4 	movi	r16,2047
 10155a0:	003e7306 	br	1014f70 <__alt_data_end+0xff814f70>
 10155a4:	2c62b03a 	or	r17,r5,r17
 10155a8:	8822c03a 	cmpne	r17,r17,zero
 10155ac:	0009883a 	mov	r4,zero
 10155b0:	003fa506 	br	1015448 <__alt_data_end+0xff815448>
 10155b4:	400b883a 	mov	r5,r8
 10155b8:	3023883a 	mov	r17,r6
 10155bc:	003e0c06 	br	1014df0 <__alt_data_end+0xff814df0>
 10155c0:	400b883a 	mov	r5,r8
 10155c4:	3023883a 	mov	r17,r6
 10155c8:	0401ffc4 	movi	r16,2047
 10155cc:	003e0806 	br	1014df0 <__alt_data_end+0xff814df0>
 10155d0:	21fff804 	addi	r7,r4,-32
 10155d4:	02400804 	movi	r9,32
 10155d8:	29ced83a 	srl	r7,r5,r7
 10155dc:	22400a26 	beq	r4,r9,1015608 <__adddf3+0x894>
 10155e0:	02401004 	movi	r9,64
 10155e4:	4909c83a 	sub	r4,r9,r4
 10155e8:	290a983a 	sll	r5,r5,r4
 10155ec:	2c62b03a 	or	r17,r5,r17
 10155f0:	8822c03a 	cmpne	r17,r17,zero
 10155f4:	89e2b03a 	or	r17,r17,r7
 10155f8:	0009883a 	mov	r4,zero
 10155fc:	003f9206 	br	1015448 <__alt_data_end+0xff815448>
 1015600:	000b883a 	mov	r5,zero
 1015604:	003fdc06 	br	1015578 <__alt_data_end+0xff815578>
 1015608:	000b883a 	mov	r5,zero
 101560c:	003ff706 	br	10155ec <__alt_data_end+0xff8155ec>

01015610 <__gedf2>:
 1015610:	2804d53a 	srli	r2,r5,20
 1015614:	3806d53a 	srli	r3,r7,20
 1015618:	02000434 	movhi	r8,16
 101561c:	423fffc4 	addi	r8,r8,-1
 1015620:	0241ffc4 	movi	r9,2047
 1015624:	1081ffcc 	andi	r2,r2,2047
 1015628:	2a14703a 	and	r10,r5,r8
 101562c:	1a46703a 	and	r3,r3,r9
 1015630:	3a10703a 	and	r8,r7,r8
 1015634:	280ad7fa 	srli	r5,r5,31
 1015638:	380ed7fa 	srli	r7,r7,31
 101563c:	12400b26 	beq	r2,r9,101566c <__gedf2+0x5c>
 1015640:	1a401626 	beq	r3,r9,101569c <__gedf2+0x8c>
 1015644:	10000c1e 	bne	r2,zero,1015678 <__gedf2+0x68>
 1015648:	5112b03a 	or	r9,r10,r4
 101564c:	4813003a 	cmpeq	r9,r9,zero
 1015650:	4817883a 	mov	r11,r9
 1015654:	18000c1e 	bne	r3,zero,1015688 <__gedf2+0x78>
 1015658:	4198b03a 	or	r12,r8,r6
 101565c:	60000a1e 	bne	r12,zero,1015688 <__gedf2+0x78>
 1015660:	48001326 	beq	r9,zero,10156b0 <__gedf2+0xa0>
 1015664:	0005883a 	mov	r2,zero
 1015668:	f800283a 	ret
 101566c:	5112b03a 	or	r9,r10,r4
 1015670:	4800191e 	bne	r9,zero,10156d8 <__gedf2+0xc8>
 1015674:	18800926 	beq	r3,r2,101569c <__gedf2+0x8c>
 1015678:	18000b1e 	bne	r3,zero,10156a8 <__gedf2+0x98>
 101567c:	4192b03a 	or	r9,r8,r6
 1015680:	0017883a 	mov	r11,zero
 1015684:	48000a26 	beq	r9,zero,10156b0 <__gedf2+0xa0>
 1015688:	39c03fcc 	andi	r7,r7,255
 101568c:	58000726 	beq	r11,zero,10156ac <__gedf2+0x9c>
 1015690:	3800081e 	bne	r7,zero,10156b4 <__gedf2+0xa4>
 1015694:	00bfffc4 	movi	r2,-1
 1015698:	f800283a 	ret
 101569c:	4192b03a 	or	r9,r8,r6
 10156a0:	48000d1e 	bne	r9,zero,10156d8 <__gedf2+0xc8>
 10156a4:	103fe826 	beq	r2,zero,1015648 <__alt_data_end+0xff815648>
 10156a8:	39c03fcc 	andi	r7,r7,255
 10156ac:	29c00326 	beq	r5,r7,10156bc <__gedf2+0xac>
 10156b0:	283ff81e 	bne	r5,zero,1015694 <__alt_data_end+0xff815694>
 10156b4:	00800044 	movi	r2,1
 10156b8:	f800283a 	ret
 10156bc:	18bffc16 	blt	r3,r2,10156b0 <__alt_data_end+0xff8156b0>
 10156c0:	10c00316 	blt	r2,r3,10156d0 <__gedf2+0xc0>
 10156c4:	42bffa36 	bltu	r8,r10,10156b0 <__alt_data_end+0xff8156b0>
 10156c8:	52000526 	beq	r10,r8,10156e0 <__gedf2+0xd0>
 10156cc:	523fe52e 	bgeu	r10,r8,1015664 <__alt_data_end+0xff815664>
 10156d0:	283ff026 	beq	r5,zero,1015694 <__alt_data_end+0xff815694>
 10156d4:	003ff706 	br	10156b4 <__alt_data_end+0xff8156b4>
 10156d8:	00bfff84 	movi	r2,-2
 10156dc:	f800283a 	ret
 10156e0:	313ff336 	bltu	r6,r4,10156b0 <__alt_data_end+0xff8156b0>
 10156e4:	21bfdf2e 	bgeu	r4,r6,1015664 <__alt_data_end+0xff815664>
 10156e8:	283fea26 	beq	r5,zero,1015694 <__alt_data_end+0xff815694>
 10156ec:	003ff106 	br	10156b4 <__alt_data_end+0xff8156b4>

010156f0 <__ledf2>:
 10156f0:	2804d53a 	srli	r2,r5,20
 10156f4:	3810d53a 	srli	r8,r7,20
 10156f8:	00c00434 	movhi	r3,16
 10156fc:	18ffffc4 	addi	r3,r3,-1
 1015700:	0241ffc4 	movi	r9,2047
 1015704:	1081ffcc 	andi	r2,r2,2047
 1015708:	28d4703a 	and	r10,r5,r3
 101570c:	4250703a 	and	r8,r8,r9
 1015710:	38c6703a 	and	r3,r7,r3
 1015714:	280ad7fa 	srli	r5,r5,31
 1015718:	380ed7fa 	srli	r7,r7,31
 101571c:	12400b26 	beq	r2,r9,101574c <__ledf2+0x5c>
 1015720:	42401926 	beq	r8,r9,1015788 <__ledf2+0x98>
 1015724:	10000c1e 	bne	r2,zero,1015758 <__ledf2+0x68>
 1015728:	5112b03a 	or	r9,r10,r4
 101572c:	4813003a 	cmpeq	r9,r9,zero
 1015730:	4817883a 	mov	r11,r9
 1015734:	40000f26 	beq	r8,zero,1015774 <__ledf2+0x84>
 1015738:	39c03fcc 	andi	r7,r7,255
 101573c:	58001826 	beq	r11,zero,10157a0 <__ledf2+0xb0>
 1015740:	38000a1e 	bne	r7,zero,101576c <__ledf2+0x7c>
 1015744:	00bfffc4 	movi	r2,-1
 1015748:	f800283a 	ret
 101574c:	5112b03a 	or	r9,r10,r4
 1015750:	48000f1e 	bne	r9,zero,1015790 <__ledf2+0xa0>
 1015754:	40800c26 	beq	r8,r2,1015788 <__ledf2+0x98>
 1015758:	4000101e 	bne	r8,zero,101579c <__ledf2+0xac>
 101575c:	1992b03a 	or	r9,r3,r6
 1015760:	0017883a 	mov	r11,zero
 1015764:	483ff41e 	bne	r9,zero,1015738 <__alt_data_end+0xff815738>
 1015768:	283ff61e 	bne	r5,zero,1015744 <__alt_data_end+0xff815744>
 101576c:	00800044 	movi	r2,1
 1015770:	f800283a 	ret
 1015774:	1998b03a 	or	r12,r3,r6
 1015778:	603fef1e 	bne	r12,zero,1015738 <__alt_data_end+0xff815738>
 101577c:	483ffa26 	beq	r9,zero,1015768 <__alt_data_end+0xff815768>
 1015780:	0005883a 	mov	r2,zero
 1015784:	f800283a 	ret
 1015788:	1992b03a 	or	r9,r3,r6
 101578c:	48000226 	beq	r9,zero,1015798 <__ledf2+0xa8>
 1015790:	00800084 	movi	r2,2
 1015794:	f800283a 	ret
 1015798:	103fe326 	beq	r2,zero,1015728 <__alt_data_end+0xff815728>
 101579c:	39c03fcc 	andi	r7,r7,255
 10157a0:	29fff11e 	bne	r5,r7,1015768 <__alt_data_end+0xff815768>
 10157a4:	40bff016 	blt	r8,r2,1015768 <__alt_data_end+0xff815768>
 10157a8:	12000316 	blt	r2,r8,10157b8 <__ledf2+0xc8>
 10157ac:	1abfee36 	bltu	r3,r10,1015768 <__alt_data_end+0xff815768>
 10157b0:	50c00326 	beq	r10,r3,10157c0 <__ledf2+0xd0>
 10157b4:	50fff22e 	bgeu	r10,r3,1015780 <__alt_data_end+0xff815780>
 10157b8:	283fe226 	beq	r5,zero,1015744 <__alt_data_end+0xff815744>
 10157bc:	003feb06 	br	101576c <__alt_data_end+0xff81576c>
 10157c0:	313fe936 	bltu	r6,r4,1015768 <__alt_data_end+0xff815768>
 10157c4:	21bfee2e 	bgeu	r4,r6,1015780 <__alt_data_end+0xff815780>
 10157c8:	283fde26 	beq	r5,zero,1015744 <__alt_data_end+0xff815744>
 10157cc:	003fe706 	br	101576c <__alt_data_end+0xff81576c>

010157d0 <__subdf3>:
 10157d0:	00c00434 	movhi	r3,16
 10157d4:	18ffffc4 	addi	r3,r3,-1
 10157d8:	defffb04 	addi	sp,sp,-20
 10157dc:	28d2703a 	and	r9,r5,r3
 10157e0:	3814d53a 	srli	r10,r7,20
 10157e4:	38c6703a 	and	r3,r7,r3
 10157e8:	3004d77a 	srli	r2,r6,29
 10157ec:	dc800215 	stw	r18,8(sp)
 10157f0:	dc000015 	stw	r16,0(sp)
 10157f4:	2824d7fa 	srli	r18,r5,31
 10157f8:	2820d53a 	srli	r16,r5,20
 10157fc:	481290fa 	slli	r9,r9,3
 1015800:	200ad77a 	srli	r5,r4,29
 1015804:	180690fa 	slli	r3,r3,3
 1015808:	dc400115 	stw	r17,4(sp)
 101580c:	dfc00415 	stw	ra,16(sp)
 1015810:	202290fa 	slli	r17,r4,3
 1015814:	dcc00315 	stw	r19,12(sp)
 1015818:	5281ffcc 	andi	r10,r10,2047
 101581c:	0101ffc4 	movi	r4,2047
 1015820:	9011883a 	mov	r8,r18
 1015824:	8401ffcc 	andi	r16,r16,2047
 1015828:	94803fcc 	andi	r18,r18,255
 101582c:	494ab03a 	or	r5,r9,r5
 1015830:	380ed7fa 	srli	r7,r7,31
 1015834:	1886b03a 	or	r3,r3,r2
 1015838:	300c90fa 	slli	r6,r6,3
 101583c:	51009026 	beq	r10,r4,1015a80 <__subdf3+0x2b0>
 1015840:	39c0005c 	xori	r7,r7,1
 1015844:	8285c83a 	sub	r2,r16,r10
 1015848:	91c06f26 	beq	r18,r7,1015a08 <__subdf3+0x238>
 101584c:	0080b10e 	bge	zero,r2,1015b14 <__subdf3+0x344>
 1015850:	50002a1e 	bne	r10,zero,10158fc <__subdf3+0x12c>
 1015854:	1988b03a 	or	r4,r3,r6
 1015858:	2000941e 	bne	r4,zero,1015aac <__subdf3+0x2dc>
 101585c:	888001cc 	andi	r2,r17,7
 1015860:	10005b26 	beq	r2,zero,10159d0 <__subdf3+0x200>
 1015864:	88c003cc 	andi	r3,r17,15
 1015868:	00800104 	movi	r2,4
 101586c:	18805826 	beq	r3,r2,10159d0 <__subdf3+0x200>
 1015870:	88c00104 	addi	r3,r17,4
 1015874:	1c63803a 	cmpltu	r17,r3,r17
 1015878:	2c4b883a 	add	r5,r5,r17
 101587c:	2880202c 	andhi	r2,r5,128
 1015880:	9200004c 	andi	r8,r18,1
 1015884:	1823883a 	mov	r17,r3
 1015888:	10005426 	beq	r2,zero,10159dc <__subdf3+0x20c>
 101588c:	84000044 	addi	r16,r16,1
 1015890:	0081ffc4 	movi	r2,2047
 1015894:	8080bf26 	beq	r16,r2,1015b94 <__subdf3+0x3c4>
 1015898:	013fe034 	movhi	r4,65408
 101589c:	213fffc4 	addi	r4,r4,-1
 10158a0:	290a703a 	and	r5,r5,r4
 10158a4:	2804977a 	slli	r2,r5,29
 10158a8:	280a927a 	slli	r5,r5,9
 10158ac:	8822d0fa 	srli	r17,r17,3
 10158b0:	8401ffcc 	andi	r16,r16,2047
 10158b4:	2808d33a 	srli	r4,r5,12
 10158b8:	1444b03a 	or	r2,r2,r17
 10158bc:	8401ffcc 	andi	r16,r16,2047
 10158c0:	800a953a 	slli	r5,r16,20
 10158c4:	40c03fcc 	andi	r3,r8,255
 10158c8:	04000434 	movhi	r16,16
 10158cc:	180697fa 	slli	r3,r3,31
 10158d0:	843fffc4 	addi	r16,r16,-1
 10158d4:	2420703a 	and	r16,r4,r16
 10158d8:	8160b03a 	or	r16,r16,r5
 10158dc:	80c6b03a 	or	r3,r16,r3
 10158e0:	dfc00417 	ldw	ra,16(sp)
 10158e4:	dcc00317 	ldw	r19,12(sp)
 10158e8:	dc800217 	ldw	r18,8(sp)
 10158ec:	dc400117 	ldw	r17,4(sp)
 10158f0:	dc000017 	ldw	r16,0(sp)
 10158f4:	dec00504 	addi	sp,sp,20
 10158f8:	f800283a 	ret
 10158fc:	0101ffc4 	movi	r4,2047
 1015900:	813fd626 	beq	r16,r4,101585c <__alt_data_end+0xff81585c>
 1015904:	18c02034 	orhi	r3,r3,128
 1015908:	01000e04 	movi	r4,56
 101590c:	2080a416 	blt	r4,r2,1015ba0 <__subdf3+0x3d0>
 1015910:	010007c4 	movi	r4,31
 1015914:	2080c716 	blt	r4,r2,1015c34 <__subdf3+0x464>
 1015918:	01000804 	movi	r4,32
 101591c:	2089c83a 	sub	r4,r4,r2
 1015920:	1910983a 	sll	r8,r3,r4
 1015924:	308ed83a 	srl	r7,r6,r2
 1015928:	3108983a 	sll	r4,r6,r4
 101592c:	1884d83a 	srl	r2,r3,r2
 1015930:	41ccb03a 	or	r6,r8,r7
 1015934:	2008c03a 	cmpne	r4,r4,zero
 1015938:	310cb03a 	or	r6,r6,r4
 101593c:	898dc83a 	sub	r6,r17,r6
 1015940:	89a3803a 	cmpltu	r17,r17,r6
 1015944:	288bc83a 	sub	r5,r5,r2
 1015948:	2c4bc83a 	sub	r5,r5,r17
 101594c:	3023883a 	mov	r17,r6
 1015950:	2880202c 	andhi	r2,r5,128
 1015954:	10006b26 	beq	r2,zero,1015b04 <__subdf3+0x334>
 1015958:	04c02034 	movhi	r19,128
 101595c:	9cffffc4 	addi	r19,r19,-1
 1015960:	2ce6703a 	and	r19,r5,r19
 1015964:	98007c26 	beq	r19,zero,1015b58 <__subdf3+0x388>
 1015968:	9809883a 	mov	r4,r19
 101596c:	1004a740 	call	1004a74 <__clzsi2>
 1015970:	10fffe04 	addi	r3,r2,-8
 1015974:	010007c4 	movi	r4,31
 1015978:	20c07d16 	blt	r4,r3,1015b70 <__subdf3+0x3a0>
 101597c:	01400a04 	movi	r5,40
 1015980:	2885c83a 	sub	r2,r5,r2
 1015984:	888ad83a 	srl	r5,r17,r2
 1015988:	98e6983a 	sll	r19,r19,r3
 101598c:	88e2983a 	sll	r17,r17,r3
 1015990:	2ce6b03a 	or	r19,r5,r19
 1015994:	1c007a16 	blt	r3,r16,1015b80 <__subdf3+0x3b0>
 1015998:	1c21c83a 	sub	r16,r3,r16
 101599c:	81400044 	addi	r5,r16,1
 10159a0:	00c007c4 	movi	r3,31
 10159a4:	19409616 	blt	r3,r5,1015c00 <__subdf3+0x430>
 10159a8:	1c21c83a 	sub	r16,r3,r16
 10159ac:	8c08983a 	sll	r4,r17,r16
 10159b0:	8946d83a 	srl	r3,r17,r5
 10159b4:	9c20983a 	sll	r16,r19,r16
 10159b8:	2008c03a 	cmpne	r4,r4,zero
 10159bc:	994ad83a 	srl	r5,r19,r5
 10159c0:	1c06b03a 	or	r3,r3,r16
 10159c4:	1922b03a 	or	r17,r3,r4
 10159c8:	0021883a 	mov	r16,zero
 10159cc:	003fa306 	br	101585c <__alt_data_end+0xff81585c>
 10159d0:	2880202c 	andhi	r2,r5,128
 10159d4:	9200004c 	andi	r8,r18,1
 10159d8:	103fac1e 	bne	r2,zero,101588c <__alt_data_end+0xff81588c>
 10159dc:	2804977a 	slli	r2,r5,29
 10159e0:	8822d0fa 	srli	r17,r17,3
 10159e4:	00c1ffc4 	movi	r3,2047
 10159e8:	280ad0fa 	srli	r5,r5,3
 10159ec:	1444b03a 	or	r2,r2,r17
 10159f0:	80c02726 	beq	r16,r3,1015a90 <__subdf3+0x2c0>
 10159f4:	01000434 	movhi	r4,16
 10159f8:	213fffc4 	addi	r4,r4,-1
 10159fc:	80e0703a 	and	r16,r16,r3
 1015a00:	2908703a 	and	r4,r5,r4
 1015a04:	003fad06 	br	10158bc <__alt_data_end+0xff8158bc>
 1015a08:	0080690e 	bge	zero,r2,1015bb0 <__subdf3+0x3e0>
 1015a0c:	50002f26 	beq	r10,zero,1015acc <__subdf3+0x2fc>
 1015a10:	0101ffc4 	movi	r4,2047
 1015a14:	813f9126 	beq	r16,r4,101585c <__alt_data_end+0xff81585c>
 1015a18:	18c02034 	orhi	r3,r3,128
 1015a1c:	01000e04 	movi	r4,56
 1015a20:	2080b00e 	bge	r4,r2,1015ce4 <__subdf3+0x514>
 1015a24:	198cb03a 	or	r6,r3,r6
 1015a28:	300ec03a 	cmpne	r7,r6,zero
 1015a2c:	0005883a 	mov	r2,zero
 1015a30:	3c4f883a 	add	r7,r7,r17
 1015a34:	3c63803a 	cmpltu	r17,r7,r17
 1015a38:	114b883a 	add	r5,r2,r5
 1015a3c:	2c4b883a 	add	r5,r5,r17
 1015a40:	3823883a 	mov	r17,r7
 1015a44:	2880202c 	andhi	r2,r5,128
 1015a48:	10002e26 	beq	r2,zero,1015b04 <__subdf3+0x334>
 1015a4c:	84000044 	addi	r16,r16,1
 1015a50:	0081ffc4 	movi	r2,2047
 1015a54:	8080de26 	beq	r16,r2,1015dd0 <__subdf3+0x600>
 1015a58:	00bfe034 	movhi	r2,65408
 1015a5c:	10bfffc4 	addi	r2,r2,-1
 1015a60:	288a703a 	and	r5,r5,r2
 1015a64:	880cd07a 	srli	r6,r17,1
 1015a68:	280897fa 	slli	r4,r5,31
 1015a6c:	88c0004c 	andi	r3,r17,1
 1015a70:	30e2b03a 	or	r17,r6,r3
 1015a74:	280ad07a 	srli	r5,r5,1
 1015a78:	8922b03a 	or	r17,r17,r4
 1015a7c:	003f7706 	br	101585c <__alt_data_end+0xff81585c>
 1015a80:	1984b03a 	or	r2,r3,r6
 1015a84:	103f6e26 	beq	r2,zero,1015840 <__alt_data_end+0xff815840>
 1015a88:	39c03fcc 	andi	r7,r7,255
 1015a8c:	003f6d06 	br	1015844 <__alt_data_end+0xff815844>
 1015a90:	1146b03a 	or	r3,r2,r5
 1015a94:	18003f26 	beq	r3,zero,1015b94 <__subdf3+0x3c4>
 1015a98:	00c00434 	movhi	r3,16
 1015a9c:	29000234 	orhi	r4,r5,8
 1015aa0:	18ffffc4 	addi	r3,r3,-1
 1015aa4:	20c8703a 	and	r4,r4,r3
 1015aa8:	003f8406 	br	10158bc <__alt_data_end+0xff8158bc>
 1015aac:	10bfffc4 	addi	r2,r2,-1
 1015ab0:	1000501e 	bne	r2,zero,1015bf4 <__subdf3+0x424>
 1015ab4:	898fc83a 	sub	r7,r17,r6
 1015ab8:	89e3803a 	cmpltu	r17,r17,r7
 1015abc:	28cbc83a 	sub	r5,r5,r3
 1015ac0:	2c4bc83a 	sub	r5,r5,r17
 1015ac4:	3823883a 	mov	r17,r7
 1015ac8:	003fa106 	br	1015950 <__alt_data_end+0xff815950>
 1015acc:	1988b03a 	or	r4,r3,r6
 1015ad0:	203f6226 	beq	r4,zero,101585c <__alt_data_end+0xff81585c>
 1015ad4:	10bfffc4 	addi	r2,r2,-1
 1015ad8:	10009b1e 	bne	r2,zero,1015d48 <__subdf3+0x578>
 1015adc:	344d883a 	add	r6,r6,r17
 1015ae0:	3463803a 	cmpltu	r17,r6,r17
 1015ae4:	194b883a 	add	r5,r3,r5
 1015ae8:	2c4b883a 	add	r5,r5,r17
 1015aec:	3023883a 	mov	r17,r6
 1015af0:	003fd406 	br	1015a44 <__alt_data_end+0xff815a44>
 1015af4:	1106b03a 	or	r3,r2,r4
 1015af8:	1800b426 	beq	r3,zero,1015dcc <__subdf3+0x5fc>
 1015afc:	100b883a 	mov	r5,r2
 1015b00:	2023883a 	mov	r17,r4
 1015b04:	888001cc 	andi	r2,r17,7
 1015b08:	103f561e 	bne	r2,zero,1015864 <__alt_data_end+0xff815864>
 1015b0c:	9200004c 	andi	r8,r18,1
 1015b10:	003fb206 	br	10159dc <__alt_data_end+0xff8159dc>
 1015b14:	1000531e 	bne	r2,zero,1015c64 <__subdf3+0x494>
 1015b18:	80800044 	addi	r2,r16,1
 1015b1c:	1081ffcc 	andi	r2,r2,2047
 1015b20:	01000044 	movi	r4,1
 1015b24:	2080a00e 	bge	r4,r2,1015da8 <__subdf3+0x5d8>
 1015b28:	8985c83a 	sub	r2,r17,r6
 1015b2c:	8889803a 	cmpltu	r4,r17,r2
 1015b30:	28e7c83a 	sub	r19,r5,r3
 1015b34:	9927c83a 	sub	r19,r19,r4
 1015b38:	9900202c 	andhi	r4,r19,128
 1015b3c:	20006226 	beq	r4,zero,1015cc8 <__subdf3+0x4f8>
 1015b40:	3463c83a 	sub	r17,r6,r17
 1015b44:	194bc83a 	sub	r5,r3,r5
 1015b48:	344d803a 	cmpltu	r6,r6,r17
 1015b4c:	29a7c83a 	sub	r19,r5,r6
 1015b50:	3825883a 	mov	r18,r7
 1015b54:	983f841e 	bne	r19,zero,1015968 <__alt_data_end+0xff815968>
 1015b58:	8809883a 	mov	r4,r17
 1015b5c:	1004a740 	call	1004a74 <__clzsi2>
 1015b60:	10800804 	addi	r2,r2,32
 1015b64:	10fffe04 	addi	r3,r2,-8
 1015b68:	010007c4 	movi	r4,31
 1015b6c:	20ff830e 	bge	r4,r3,101597c <__alt_data_end+0xff81597c>
 1015b70:	14fff604 	addi	r19,r2,-40
 1015b74:	8ce6983a 	sll	r19,r17,r19
 1015b78:	0023883a 	mov	r17,zero
 1015b7c:	1c3f860e 	bge	r3,r16,1015998 <__alt_data_end+0xff815998>
 1015b80:	017fe034 	movhi	r5,65408
 1015b84:	297fffc4 	addi	r5,r5,-1
 1015b88:	80e1c83a 	sub	r16,r16,r3
 1015b8c:	994a703a 	and	r5,r19,r5
 1015b90:	003f3206 	br	101585c <__alt_data_end+0xff81585c>
 1015b94:	0009883a 	mov	r4,zero
 1015b98:	0005883a 	mov	r2,zero
 1015b9c:	003f4706 	br	10158bc <__alt_data_end+0xff8158bc>
 1015ba0:	198cb03a 	or	r6,r3,r6
 1015ba4:	300cc03a 	cmpne	r6,r6,zero
 1015ba8:	0005883a 	mov	r2,zero
 1015bac:	003f6306 	br	101593c <__alt_data_end+0xff81593c>
 1015bb0:	10009d1e 	bne	r2,zero,1015e28 <__subdf3+0x658>
 1015bb4:	81c00044 	addi	r7,r16,1
 1015bb8:	3881ffcc 	andi	r2,r7,2047
 1015bbc:	02400044 	movi	r9,1
 1015bc0:	4880680e 	bge	r9,r2,1015d64 <__subdf3+0x594>
 1015bc4:	0081ffc4 	movi	r2,2047
 1015bc8:	3880ae26 	beq	r7,r2,1015e84 <__subdf3+0x6b4>
 1015bcc:	344d883a 	add	r6,r6,r17
 1015bd0:	3463803a 	cmpltu	r17,r6,r17
 1015bd4:	194b883a 	add	r5,r3,r5
 1015bd8:	2c4b883a 	add	r5,r5,r17
 1015bdc:	282297fa 	slli	r17,r5,31
 1015be0:	300cd07a 	srli	r6,r6,1
 1015be4:	280ad07a 	srli	r5,r5,1
 1015be8:	3821883a 	mov	r16,r7
 1015bec:	89a2b03a 	or	r17,r17,r6
 1015bf0:	003f1a06 	br	101585c <__alt_data_end+0xff81585c>
 1015bf4:	0101ffc4 	movi	r4,2047
 1015bf8:	813f431e 	bne	r16,r4,1015908 <__alt_data_end+0xff815908>
 1015bfc:	003f1706 	br	101585c <__alt_data_end+0xff81585c>
 1015c00:	80bff844 	addi	r2,r16,-31
 1015c04:	00c00804 	movi	r3,32
 1015c08:	9884d83a 	srl	r2,r19,r2
 1015c0c:	28c05126 	beq	r5,r3,1015d54 <__subdf3+0x584>
 1015c10:	00c00fc4 	movi	r3,63
 1015c14:	1c21c83a 	sub	r16,r3,r16
 1015c18:	9c26983a 	sll	r19,r19,r16
 1015c1c:	9c62b03a 	or	r17,r19,r17
 1015c20:	8822c03a 	cmpne	r17,r17,zero
 1015c24:	88a2b03a 	or	r17,r17,r2
 1015c28:	000b883a 	mov	r5,zero
 1015c2c:	0021883a 	mov	r16,zero
 1015c30:	003fb406 	br	1015b04 <__alt_data_end+0xff815b04>
 1015c34:	113ff804 	addi	r4,r2,-32
 1015c38:	01c00804 	movi	r7,32
 1015c3c:	1908d83a 	srl	r4,r3,r4
 1015c40:	11c04626 	beq	r2,r7,1015d5c <__subdf3+0x58c>
 1015c44:	01c01004 	movi	r7,64
 1015c48:	3885c83a 	sub	r2,r7,r2
 1015c4c:	1884983a 	sll	r2,r3,r2
 1015c50:	118cb03a 	or	r6,r2,r6
 1015c54:	300cc03a 	cmpne	r6,r6,zero
 1015c58:	310cb03a 	or	r6,r6,r4
 1015c5c:	0005883a 	mov	r2,zero
 1015c60:	003f3606 	br	101593c <__alt_data_end+0xff81593c>
 1015c64:	80002b26 	beq	r16,zero,1015d14 <__subdf3+0x544>
 1015c68:	0101ffc4 	movi	r4,2047
 1015c6c:	51006926 	beq	r10,r4,1015e14 <__subdf3+0x644>
 1015c70:	0085c83a 	sub	r2,zero,r2
 1015c74:	29402034 	orhi	r5,r5,128
 1015c78:	01000e04 	movi	r4,56
 1015c7c:	20807d16 	blt	r4,r2,1015e74 <__subdf3+0x6a4>
 1015c80:	010007c4 	movi	r4,31
 1015c84:	2080d916 	blt	r4,r2,1015fec <__subdf3+0x81c>
 1015c88:	01000804 	movi	r4,32
 1015c8c:	2089c83a 	sub	r4,r4,r2
 1015c90:	2912983a 	sll	r9,r5,r4
 1015c94:	8890d83a 	srl	r8,r17,r2
 1015c98:	8908983a 	sll	r4,r17,r4
 1015c9c:	2884d83a 	srl	r2,r5,r2
 1015ca0:	4a22b03a 	or	r17,r9,r8
 1015ca4:	2008c03a 	cmpne	r4,r4,zero
 1015ca8:	8922b03a 	or	r17,r17,r4
 1015cac:	3463c83a 	sub	r17,r6,r17
 1015cb0:	1885c83a 	sub	r2,r3,r2
 1015cb4:	344d803a 	cmpltu	r6,r6,r17
 1015cb8:	118bc83a 	sub	r5,r2,r6
 1015cbc:	5021883a 	mov	r16,r10
 1015cc0:	3825883a 	mov	r18,r7
 1015cc4:	003f2206 	br	1015950 <__alt_data_end+0xff815950>
 1015cc8:	9886b03a 	or	r3,r19,r2
 1015ccc:	18001c1e 	bne	r3,zero,1015d40 <__subdf3+0x570>
 1015cd0:	0011883a 	mov	r8,zero
 1015cd4:	000b883a 	mov	r5,zero
 1015cd8:	0023883a 	mov	r17,zero
 1015cdc:	0021883a 	mov	r16,zero
 1015ce0:	003f3e06 	br	10159dc <__alt_data_end+0xff8159dc>
 1015ce4:	010007c4 	movi	r4,31
 1015ce8:	20803c16 	blt	r4,r2,1015ddc <__subdf3+0x60c>
 1015cec:	01000804 	movi	r4,32
 1015cf0:	2089c83a 	sub	r4,r4,r2
 1015cf4:	1912983a 	sll	r9,r3,r4
 1015cf8:	308ed83a 	srl	r7,r6,r2
 1015cfc:	3108983a 	sll	r4,r6,r4
 1015d00:	1884d83a 	srl	r2,r3,r2
 1015d04:	49ceb03a 	or	r7,r9,r7
 1015d08:	2008c03a 	cmpne	r4,r4,zero
 1015d0c:	390eb03a 	or	r7,r7,r4
 1015d10:	003f4706 	br	1015a30 <__alt_data_end+0xff815a30>
 1015d14:	2c48b03a 	or	r4,r5,r17
 1015d18:	20003e26 	beq	r4,zero,1015e14 <__subdf3+0x644>
 1015d1c:	0084303a 	nor	r2,zero,r2
 1015d20:	10003a1e 	bne	r2,zero,1015e0c <__subdf3+0x63c>
 1015d24:	3463c83a 	sub	r17,r6,r17
 1015d28:	194bc83a 	sub	r5,r3,r5
 1015d2c:	344d803a 	cmpltu	r6,r6,r17
 1015d30:	298bc83a 	sub	r5,r5,r6
 1015d34:	5021883a 	mov	r16,r10
 1015d38:	3825883a 	mov	r18,r7
 1015d3c:	003f0406 	br	1015950 <__alt_data_end+0xff815950>
 1015d40:	1023883a 	mov	r17,r2
 1015d44:	003f0706 	br	1015964 <__alt_data_end+0xff815964>
 1015d48:	0101ffc4 	movi	r4,2047
 1015d4c:	813f331e 	bne	r16,r4,1015a1c <__alt_data_end+0xff815a1c>
 1015d50:	003ec206 	br	101585c <__alt_data_end+0xff81585c>
 1015d54:	0027883a 	mov	r19,zero
 1015d58:	003fb006 	br	1015c1c <__alt_data_end+0xff815c1c>
 1015d5c:	0005883a 	mov	r2,zero
 1015d60:	003fbb06 	br	1015c50 <__alt_data_end+0xff815c50>
 1015d64:	2c44b03a 	or	r2,r5,r17
 1015d68:	80008b1e 	bne	r16,zero,1015f98 <__subdf3+0x7c8>
 1015d6c:	1000b526 	beq	r2,zero,1016044 <__subdf3+0x874>
 1015d70:	1984b03a 	or	r2,r3,r6
 1015d74:	103eb926 	beq	r2,zero,101585c <__alt_data_end+0xff81585c>
 1015d78:	3449883a 	add	r4,r6,r17
 1015d7c:	2463803a 	cmpltu	r17,r4,r17
 1015d80:	194b883a 	add	r5,r3,r5
 1015d84:	2c4b883a 	add	r5,r5,r17
 1015d88:	2880202c 	andhi	r2,r5,128
 1015d8c:	2023883a 	mov	r17,r4
 1015d90:	103f5c26 	beq	r2,zero,1015b04 <__alt_data_end+0xff815b04>
 1015d94:	00bfe034 	movhi	r2,65408
 1015d98:	10bfffc4 	addi	r2,r2,-1
 1015d9c:	4821883a 	mov	r16,r9
 1015da0:	288a703a 	and	r5,r5,r2
 1015da4:	003ead06 	br	101585c <__alt_data_end+0xff81585c>
 1015da8:	2c44b03a 	or	r2,r5,r17
 1015dac:	8000291e 	bne	r16,zero,1015e54 <__subdf3+0x684>
 1015db0:	10004f1e 	bne	r2,zero,1015ef0 <__subdf3+0x720>
 1015db4:	1984b03a 	or	r2,r3,r6
 1015db8:	10000426 	beq	r2,zero,1015dcc <__subdf3+0x5fc>
 1015dbc:	180b883a 	mov	r5,r3
 1015dc0:	3023883a 	mov	r17,r6
 1015dc4:	3825883a 	mov	r18,r7
 1015dc8:	003ea406 	br	101585c <__alt_data_end+0xff81585c>
 1015dcc:	0011883a 	mov	r8,zero
 1015dd0:	000b883a 	mov	r5,zero
 1015dd4:	0023883a 	mov	r17,zero
 1015dd8:	003f0006 	br	10159dc <__alt_data_end+0xff8159dc>
 1015ddc:	11fff804 	addi	r7,r2,-32
 1015de0:	19c8d83a 	srl	r4,r3,r7
 1015de4:	01c00804 	movi	r7,32
 1015de8:	11c07e26 	beq	r2,r7,1015fe4 <__subdf3+0x814>
 1015dec:	01c01004 	movi	r7,64
 1015df0:	3885c83a 	sub	r2,r7,r2
 1015df4:	1884983a 	sll	r2,r3,r2
 1015df8:	118cb03a 	or	r6,r2,r6
 1015dfc:	300ec03a 	cmpne	r7,r6,zero
 1015e00:	390eb03a 	or	r7,r7,r4
 1015e04:	0005883a 	mov	r2,zero
 1015e08:	003f0906 	br	1015a30 <__alt_data_end+0xff815a30>
 1015e0c:	0101ffc4 	movi	r4,2047
 1015e10:	513f991e 	bne	r10,r4,1015c78 <__alt_data_end+0xff815c78>
 1015e14:	180b883a 	mov	r5,r3
 1015e18:	3023883a 	mov	r17,r6
 1015e1c:	5021883a 	mov	r16,r10
 1015e20:	3825883a 	mov	r18,r7
 1015e24:	003e8d06 	br	101585c <__alt_data_end+0xff81585c>
 1015e28:	80001a1e 	bne	r16,zero,1015e94 <__subdf3+0x6c4>
 1015e2c:	2c48b03a 	or	r4,r5,r17
 1015e30:	20005526 	beq	r4,zero,1015f88 <__subdf3+0x7b8>
 1015e34:	0084303a 	nor	r2,zero,r2
 1015e38:	1000511e 	bne	r2,zero,1015f80 <__subdf3+0x7b0>
 1015e3c:	89a3883a 	add	r17,r17,r6
 1015e40:	194b883a 	add	r5,r3,r5
 1015e44:	898d803a 	cmpltu	r6,r17,r6
 1015e48:	298b883a 	add	r5,r5,r6
 1015e4c:	5021883a 	mov	r16,r10
 1015e50:	003efc06 	br	1015a44 <__alt_data_end+0xff815a44>
 1015e54:	1000341e 	bne	r2,zero,1015f28 <__subdf3+0x758>
 1015e58:	1984b03a 	or	r2,r3,r6
 1015e5c:	10006f26 	beq	r2,zero,101601c <__subdf3+0x84c>
 1015e60:	180b883a 	mov	r5,r3
 1015e64:	3023883a 	mov	r17,r6
 1015e68:	3825883a 	mov	r18,r7
 1015e6c:	0401ffc4 	movi	r16,2047
 1015e70:	003e7a06 	br	101585c <__alt_data_end+0xff81585c>
 1015e74:	2c62b03a 	or	r17,r5,r17
 1015e78:	8822c03a 	cmpne	r17,r17,zero
 1015e7c:	0005883a 	mov	r2,zero
 1015e80:	003f8a06 	br	1015cac <__alt_data_end+0xff815cac>
 1015e84:	3821883a 	mov	r16,r7
 1015e88:	000b883a 	mov	r5,zero
 1015e8c:	0023883a 	mov	r17,zero
 1015e90:	003ed206 	br	10159dc <__alt_data_end+0xff8159dc>
 1015e94:	0101ffc4 	movi	r4,2047
 1015e98:	51003b26 	beq	r10,r4,1015f88 <__subdf3+0x7b8>
 1015e9c:	0085c83a 	sub	r2,zero,r2
 1015ea0:	29402034 	orhi	r5,r5,128
 1015ea4:	01000e04 	movi	r4,56
 1015ea8:	20806216 	blt	r4,r2,1016034 <__subdf3+0x864>
 1015eac:	010007c4 	movi	r4,31
 1015eb0:	20806b16 	blt	r4,r2,1016060 <__subdf3+0x890>
 1015eb4:	01000804 	movi	r4,32
 1015eb8:	2089c83a 	sub	r4,r4,r2
 1015ebc:	2912983a 	sll	r9,r5,r4
 1015ec0:	888ed83a 	srl	r7,r17,r2
 1015ec4:	8908983a 	sll	r4,r17,r4
 1015ec8:	2884d83a 	srl	r2,r5,r2
 1015ecc:	49e2b03a 	or	r17,r9,r7
 1015ed0:	2008c03a 	cmpne	r4,r4,zero
 1015ed4:	8922b03a 	or	r17,r17,r4
 1015ed8:	89a3883a 	add	r17,r17,r6
 1015edc:	10c5883a 	add	r2,r2,r3
 1015ee0:	898d803a 	cmpltu	r6,r17,r6
 1015ee4:	118b883a 	add	r5,r2,r6
 1015ee8:	5021883a 	mov	r16,r10
 1015eec:	003ed506 	br	1015a44 <__alt_data_end+0xff815a44>
 1015ef0:	1984b03a 	or	r2,r3,r6
 1015ef4:	103e5926 	beq	r2,zero,101585c <__alt_data_end+0xff81585c>
 1015ef8:	8989c83a 	sub	r4,r17,r6
 1015efc:	8911803a 	cmpltu	r8,r17,r4
 1015f00:	28c5c83a 	sub	r2,r5,r3
 1015f04:	1205c83a 	sub	r2,r2,r8
 1015f08:	1200202c 	andhi	r8,r2,128
 1015f0c:	403ef926 	beq	r8,zero,1015af4 <__alt_data_end+0xff815af4>
 1015f10:	3463c83a 	sub	r17,r6,r17
 1015f14:	194bc83a 	sub	r5,r3,r5
 1015f18:	344d803a 	cmpltu	r6,r6,r17
 1015f1c:	298bc83a 	sub	r5,r5,r6
 1015f20:	3825883a 	mov	r18,r7
 1015f24:	003e4d06 	br	101585c <__alt_data_end+0xff81585c>
 1015f28:	1984b03a 	or	r2,r3,r6
 1015f2c:	10002b26 	beq	r2,zero,1015fdc <__subdf3+0x80c>
 1015f30:	2808d0fa 	srli	r4,r5,3
 1015f34:	8822d0fa 	srli	r17,r17,3
 1015f38:	280a977a 	slli	r5,r5,29
 1015f3c:	2080022c 	andhi	r2,r4,8
 1015f40:	2c62b03a 	or	r17,r5,r17
 1015f44:	10000826 	beq	r2,zero,1015f68 <__subdf3+0x798>
 1015f48:	1810d0fa 	srli	r8,r3,3
 1015f4c:	4080022c 	andhi	r2,r8,8
 1015f50:	1000051e 	bne	r2,zero,1015f68 <__subdf3+0x798>
 1015f54:	300cd0fa 	srli	r6,r6,3
 1015f58:	1804977a 	slli	r2,r3,29
 1015f5c:	4009883a 	mov	r4,r8
 1015f60:	3825883a 	mov	r18,r7
 1015f64:	11a2b03a 	or	r17,r2,r6
 1015f68:	880ad77a 	srli	r5,r17,29
 1015f6c:	200890fa 	slli	r4,r4,3
 1015f70:	882290fa 	slli	r17,r17,3
 1015f74:	0401ffc4 	movi	r16,2047
 1015f78:	290ab03a 	or	r5,r5,r4
 1015f7c:	003e3706 	br	101585c <__alt_data_end+0xff81585c>
 1015f80:	0101ffc4 	movi	r4,2047
 1015f84:	513fc71e 	bne	r10,r4,1015ea4 <__alt_data_end+0xff815ea4>
 1015f88:	180b883a 	mov	r5,r3
 1015f8c:	3023883a 	mov	r17,r6
 1015f90:	5021883a 	mov	r16,r10
 1015f94:	003e3106 	br	101585c <__alt_data_end+0xff81585c>
 1015f98:	10002d26 	beq	r2,zero,1016050 <__subdf3+0x880>
 1015f9c:	1984b03a 	or	r2,r3,r6
 1015fa0:	10000e26 	beq	r2,zero,1015fdc <__subdf3+0x80c>
 1015fa4:	2808d0fa 	srli	r4,r5,3
 1015fa8:	8822d0fa 	srli	r17,r17,3
 1015fac:	280a977a 	slli	r5,r5,29
 1015fb0:	2080022c 	andhi	r2,r4,8
 1015fb4:	2c62b03a 	or	r17,r5,r17
 1015fb8:	103feb26 	beq	r2,zero,1015f68 <__alt_data_end+0xff815f68>
 1015fbc:	180ed0fa 	srli	r7,r3,3
 1015fc0:	3880022c 	andhi	r2,r7,8
 1015fc4:	103fe81e 	bne	r2,zero,1015f68 <__alt_data_end+0xff815f68>
 1015fc8:	300cd0fa 	srli	r6,r6,3
 1015fcc:	1804977a 	slli	r2,r3,29
 1015fd0:	3809883a 	mov	r4,r7
 1015fd4:	11a2b03a 	or	r17,r2,r6
 1015fd8:	003fe306 	br	1015f68 <__alt_data_end+0xff815f68>
 1015fdc:	0401ffc4 	movi	r16,2047
 1015fe0:	003e1e06 	br	101585c <__alt_data_end+0xff81585c>
 1015fe4:	0005883a 	mov	r2,zero
 1015fe8:	003f8306 	br	1015df8 <__alt_data_end+0xff815df8>
 1015fec:	113ff804 	addi	r4,r2,-32
 1015ff0:	02000804 	movi	r8,32
 1015ff4:	2908d83a 	srl	r4,r5,r4
 1015ff8:	12002526 	beq	r2,r8,1016090 <__subdf3+0x8c0>
 1015ffc:	02001004 	movi	r8,64
 1016000:	4085c83a 	sub	r2,r8,r2
 1016004:	288a983a 	sll	r5,r5,r2
 1016008:	2c62b03a 	or	r17,r5,r17
 101600c:	8822c03a 	cmpne	r17,r17,zero
 1016010:	8922b03a 	or	r17,r17,r4
 1016014:	0005883a 	mov	r2,zero
 1016018:	003f2406 	br	1015cac <__alt_data_end+0xff815cac>
 101601c:	01402034 	movhi	r5,128
 1016020:	0011883a 	mov	r8,zero
 1016024:	297fffc4 	addi	r5,r5,-1
 1016028:	047ffe04 	movi	r17,-8
 101602c:	0401ffc4 	movi	r16,2047
 1016030:	003e6a06 	br	10159dc <__alt_data_end+0xff8159dc>
 1016034:	2c62b03a 	or	r17,r5,r17
 1016038:	8822c03a 	cmpne	r17,r17,zero
 101603c:	0005883a 	mov	r2,zero
 1016040:	003fa506 	br	1015ed8 <__alt_data_end+0xff815ed8>
 1016044:	180b883a 	mov	r5,r3
 1016048:	3023883a 	mov	r17,r6
 101604c:	003e0306 	br	101585c <__alt_data_end+0xff81585c>
 1016050:	180b883a 	mov	r5,r3
 1016054:	3023883a 	mov	r17,r6
 1016058:	0401ffc4 	movi	r16,2047
 101605c:	003dff06 	br	101585c <__alt_data_end+0xff81585c>
 1016060:	113ff804 	addi	r4,r2,-32
 1016064:	01c00804 	movi	r7,32
 1016068:	2908d83a 	srl	r4,r5,r4
 101606c:	11c00a26 	beq	r2,r7,1016098 <__subdf3+0x8c8>
 1016070:	01c01004 	movi	r7,64
 1016074:	3885c83a 	sub	r2,r7,r2
 1016078:	288a983a 	sll	r5,r5,r2
 101607c:	2c62b03a 	or	r17,r5,r17
 1016080:	8822c03a 	cmpne	r17,r17,zero
 1016084:	8922b03a 	or	r17,r17,r4
 1016088:	0005883a 	mov	r2,zero
 101608c:	003f9206 	br	1015ed8 <__alt_data_end+0xff815ed8>
 1016090:	000b883a 	mov	r5,zero
 1016094:	003fdc06 	br	1016008 <__alt_data_end+0xff816008>
 1016098:	000b883a 	mov	r5,zero
 101609c:	003ff706 	br	101607c <__alt_data_end+0xff81607c>

010160a0 <__floatsidf>:
 10160a0:	defffd04 	addi	sp,sp,-12
 10160a4:	dc400115 	stw	r17,4(sp)
 10160a8:	dfc00215 	stw	ra,8(sp)
 10160ac:	dc000015 	stw	r16,0(sp)
 10160b0:	2023883a 	mov	r17,r4
 10160b4:	20001426 	beq	r4,zero,1016108 <__floatsidf+0x68>
 10160b8:	2020d7fa 	srli	r16,r4,31
 10160bc:	80000126 	beq	r16,zero,10160c4 <__floatsidf+0x24>
 10160c0:	0123c83a 	sub	r17,zero,r4
 10160c4:	8809883a 	mov	r4,r17
 10160c8:	1004a740 	call	1004a74 <__clzsi2>
 10160cc:	01410784 	movi	r5,1054
 10160d0:	00c00284 	movi	r3,10
 10160d4:	288bc83a 	sub	r5,r5,r2
 10160d8:	18801c16 	blt	r3,r2,101614c <__floatsidf+0xac>
 10160dc:	00c002c4 	movi	r3,11
 10160e0:	1887c83a 	sub	r3,r3,r2
 10160e4:	88c8d83a 	srl	r4,r17,r3
 10160e8:	00c00434 	movhi	r3,16
 10160ec:	18ffffc4 	addi	r3,r3,-1
 10160f0:	10800544 	addi	r2,r2,21
 10160f4:	20c8703a 	and	r4,r4,r3
 10160f8:	8884983a 	sll	r2,r17,r2
 10160fc:	28c1ffcc 	andi	r3,r5,2047
 1016100:	800d883a 	mov	r6,r16
 1016104:	00000406 	br	1016118 <__floatsidf+0x78>
 1016108:	000d883a 	mov	r6,zero
 101610c:	0007883a 	mov	r3,zero
 1016110:	0009883a 	mov	r4,zero
 1016114:	0005883a 	mov	r2,zero
 1016118:	180a953a 	slli	r5,r3,20
 101611c:	31803fcc 	andi	r6,r6,255
 1016120:	00c00434 	movhi	r3,16
 1016124:	300c97fa 	slli	r6,r6,31
 1016128:	18ffffc4 	addi	r3,r3,-1
 101612c:	20c6703a 	and	r3,r4,r3
 1016130:	1946b03a 	or	r3,r3,r5
 1016134:	1986b03a 	or	r3,r3,r6
 1016138:	dfc00217 	ldw	ra,8(sp)
 101613c:	dc400117 	ldw	r17,4(sp)
 1016140:	dc000017 	ldw	r16,0(sp)
 1016144:	dec00304 	addi	sp,sp,12
 1016148:	f800283a 	ret
 101614c:	10fffd44 	addi	r3,r2,-11
 1016150:	88c8983a 	sll	r4,r17,r3
 1016154:	00800434 	movhi	r2,16
 1016158:	10bfffc4 	addi	r2,r2,-1
 101615c:	2088703a 	and	r4,r4,r2
 1016160:	28c1ffcc 	andi	r3,r5,2047
 1016164:	800d883a 	mov	r6,r16
 1016168:	0005883a 	mov	r2,zero
 101616c:	003fea06 	br	1016118 <__alt_data_end+0xff816118>

01016170 <__floatunsidf>:
 1016170:	defffe04 	addi	sp,sp,-8
 1016174:	dc000015 	stw	r16,0(sp)
 1016178:	dfc00115 	stw	ra,4(sp)
 101617c:	2021883a 	mov	r16,r4
 1016180:	20001026 	beq	r4,zero,10161c4 <__floatunsidf+0x54>
 1016184:	1004a740 	call	1004a74 <__clzsi2>
 1016188:	01410784 	movi	r5,1054
 101618c:	100d883a 	mov	r6,r2
 1016190:	288bc83a 	sub	r5,r5,r2
 1016194:	00800284 	movi	r2,10
 1016198:	11801616 	blt	r2,r6,10161f4 <__floatunsidf+0x84>
 101619c:	008002c4 	movi	r2,11
 10161a0:	1185c83a 	sub	r2,r2,r6
 10161a4:	8084d83a 	srl	r2,r16,r2
 10161a8:	00c00434 	movhi	r3,16
 10161ac:	31c00544 	addi	r7,r6,21
 10161b0:	18ffffc4 	addi	r3,r3,-1
 10161b4:	81e0983a 	sll	r16,r16,r7
 10161b8:	10cc703a 	and	r6,r2,r3
 10161bc:	2941ffcc 	andi	r5,r5,2047
 10161c0:	00000206 	br	10161cc <__floatunsidf+0x5c>
 10161c4:	000b883a 	mov	r5,zero
 10161c8:	000d883a 	mov	r6,zero
 10161cc:	280a953a 	slli	r5,r5,20
 10161d0:	00c00434 	movhi	r3,16
 10161d4:	18ffffc4 	addi	r3,r3,-1
 10161d8:	30c6703a 	and	r3,r6,r3
 10161dc:	8005883a 	mov	r2,r16
 10161e0:	1946b03a 	or	r3,r3,r5
 10161e4:	dfc00117 	ldw	ra,4(sp)
 10161e8:	dc000017 	ldw	r16,0(sp)
 10161ec:	dec00204 	addi	sp,sp,8
 10161f0:	f800283a 	ret
 10161f4:	31bffd44 	addi	r6,r6,-11
 10161f8:	818c983a 	sll	r6,r16,r6
 10161fc:	00800434 	movhi	r2,16
 1016200:	10bfffc4 	addi	r2,r2,-1
 1016204:	2941ffcc 	andi	r5,r5,2047
 1016208:	0021883a 	mov	r16,zero
 101620c:	308c703a 	and	r6,r6,r2
 1016210:	003fee06 	br	10161cc <__alt_data_end+0xff8161cc>

01016214 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1016214:	defffe04 	addi	sp,sp,-8
 1016218:	dfc00115 	stw	ra,4(sp)
 101621c:	df000015 	stw	fp,0(sp)
 1016220:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1016224:	008040b4 	movhi	r2,258
 1016228:	10ad4204 	addi	r2,r2,-19192
 101622c:	10800017 	ldw	r2,0(r2)
 1016230:	10000526 	beq	r2,zero,1016248 <alt_get_errno+0x34>
 1016234:	008040b4 	movhi	r2,258
 1016238:	10ad4204 	addi	r2,r2,-19192
 101623c:	10800017 	ldw	r2,0(r2)
 1016240:	103ee83a 	callr	r2
 1016244:	00000206 	br	1016250 <alt_get_errno+0x3c>
 1016248:	008040b4 	movhi	r2,258
 101624c:	10b45204 	addi	r2,r2,-11960
}
 1016250:	e037883a 	mov	sp,fp
 1016254:	dfc00117 	ldw	ra,4(sp)
 1016258:	df000017 	ldw	fp,0(sp)
 101625c:	dec00204 	addi	sp,sp,8
 1016260:	f800283a 	ret

01016264 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 1016264:	defffb04 	addi	sp,sp,-20
 1016268:	dfc00415 	stw	ra,16(sp)
 101626c:	df000315 	stw	fp,12(sp)
 1016270:	df000304 	addi	fp,sp,12
 1016274:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 1016278:	e0bfff17 	ldw	r2,-4(fp)
 101627c:	10000616 	blt	r2,zero,1016298 <close+0x34>
 1016280:	e0bfff17 	ldw	r2,-4(fp)
 1016284:	10c00324 	muli	r3,r2,12
 1016288:	008040b4 	movhi	r2,258
 101628c:	10a8a704 	addi	r2,r2,-23908
 1016290:	1885883a 	add	r2,r3,r2
 1016294:	00000106 	br	101629c <close+0x38>
 1016298:	0005883a 	mov	r2,zero
 101629c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 10162a0:	e0bffd17 	ldw	r2,-12(fp)
 10162a4:	10001926 	beq	r2,zero,101630c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 10162a8:	e0bffd17 	ldw	r2,-12(fp)
 10162ac:	10800017 	ldw	r2,0(r2)
 10162b0:	10800417 	ldw	r2,16(r2)
 10162b4:	10000626 	beq	r2,zero,10162d0 <close+0x6c>
 10162b8:	e0bffd17 	ldw	r2,-12(fp)
 10162bc:	10800017 	ldw	r2,0(r2)
 10162c0:	10800417 	ldw	r2,16(r2)
 10162c4:	e13ffd17 	ldw	r4,-12(fp)
 10162c8:	103ee83a 	callr	r2
 10162cc:	00000106 	br	10162d4 <close+0x70>
 10162d0:	0005883a 	mov	r2,zero
 10162d4:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 10162d8:	e13fff17 	ldw	r4,-4(fp)
 10162dc:	10169600 	call	1016960 <alt_release_fd>
    if (rval < 0)
 10162e0:	e0bffe17 	ldw	r2,-8(fp)
 10162e4:	1000070e 	bge	r2,zero,1016304 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 10162e8:	10162140 	call	1016214 <alt_get_errno>
 10162ec:	1007883a 	mov	r3,r2
 10162f0:	e0bffe17 	ldw	r2,-8(fp)
 10162f4:	0085c83a 	sub	r2,zero,r2
 10162f8:	18800015 	stw	r2,0(r3)
      return -1;
 10162fc:	00bfffc4 	movi	r2,-1
 1016300:	00000706 	br	1016320 <close+0xbc>
    }
    return 0;
 1016304:	0005883a 	mov	r2,zero
 1016308:	00000506 	br	1016320 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 101630c:	10162140 	call	1016214 <alt_get_errno>
 1016310:	1007883a 	mov	r3,r2
 1016314:	00801444 	movi	r2,81
 1016318:	18800015 	stw	r2,0(r3)
    return -1;
 101631c:	00bfffc4 	movi	r2,-1
  }
}
 1016320:	e037883a 	mov	sp,fp
 1016324:	dfc00117 	ldw	ra,4(sp)
 1016328:	df000017 	ldw	fp,0(sp)
 101632c:	dec00204 	addi	sp,sp,8
 1016330:	f800283a 	ret

01016334 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 1016334:	defffc04 	addi	sp,sp,-16
 1016338:	df000315 	stw	fp,12(sp)
 101633c:	df000304 	addi	fp,sp,12
 1016340:	e13ffd15 	stw	r4,-12(fp)
 1016344:	e17ffe15 	stw	r5,-8(fp)
 1016348:	e1bfff15 	stw	r6,-4(fp)
  return len;
 101634c:	e0bfff17 	ldw	r2,-4(fp)
}
 1016350:	e037883a 	mov	sp,fp
 1016354:	df000017 	ldw	fp,0(sp)
 1016358:	dec00104 	addi	sp,sp,4
 101635c:	f800283a 	ret

01016360 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1016360:	defffe04 	addi	sp,sp,-8
 1016364:	dfc00115 	stw	ra,4(sp)
 1016368:	df000015 	stw	fp,0(sp)
 101636c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1016370:	008040b4 	movhi	r2,258
 1016374:	10ad4204 	addi	r2,r2,-19192
 1016378:	10800017 	ldw	r2,0(r2)
 101637c:	10000526 	beq	r2,zero,1016394 <alt_get_errno+0x34>
 1016380:	008040b4 	movhi	r2,258
 1016384:	10ad4204 	addi	r2,r2,-19192
 1016388:	10800017 	ldw	r2,0(r2)
 101638c:	103ee83a 	callr	r2
 1016390:	00000206 	br	101639c <alt_get_errno+0x3c>
 1016394:	008040b4 	movhi	r2,258
 1016398:	10b45204 	addi	r2,r2,-11960
}
 101639c:	e037883a 	mov	sp,fp
 10163a0:	dfc00117 	ldw	ra,4(sp)
 10163a4:	df000017 	ldw	fp,0(sp)
 10163a8:	dec00204 	addi	sp,sp,8
 10163ac:	f800283a 	ret

010163b0 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 10163b0:	defffb04 	addi	sp,sp,-20
 10163b4:	dfc00415 	stw	ra,16(sp)
 10163b8:	df000315 	stw	fp,12(sp)
 10163bc:	df000304 	addi	fp,sp,12
 10163c0:	e13ffe15 	stw	r4,-8(fp)
 10163c4:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 10163c8:	e0bffe17 	ldw	r2,-8(fp)
 10163cc:	10000616 	blt	r2,zero,10163e8 <fstat+0x38>
 10163d0:	e0bffe17 	ldw	r2,-8(fp)
 10163d4:	10c00324 	muli	r3,r2,12
 10163d8:	008040b4 	movhi	r2,258
 10163dc:	10a8a704 	addi	r2,r2,-23908
 10163e0:	1885883a 	add	r2,r3,r2
 10163e4:	00000106 	br	10163ec <fstat+0x3c>
 10163e8:	0005883a 	mov	r2,zero
 10163ec:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 10163f0:	e0bffd17 	ldw	r2,-12(fp)
 10163f4:	10001026 	beq	r2,zero,1016438 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 10163f8:	e0bffd17 	ldw	r2,-12(fp)
 10163fc:	10800017 	ldw	r2,0(r2)
 1016400:	10800817 	ldw	r2,32(r2)
 1016404:	10000726 	beq	r2,zero,1016424 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 1016408:	e0bffd17 	ldw	r2,-12(fp)
 101640c:	10800017 	ldw	r2,0(r2)
 1016410:	10800817 	ldw	r2,32(r2)
 1016414:	e13ffd17 	ldw	r4,-12(fp)
 1016418:	e17fff17 	ldw	r5,-4(fp)
 101641c:	103ee83a 	callr	r2
 1016420:	00000a06 	br	101644c <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 1016424:	e0bfff17 	ldw	r2,-4(fp)
 1016428:	00c80004 	movi	r3,8192
 101642c:	10c00115 	stw	r3,4(r2)
      return 0;
 1016430:	0005883a 	mov	r2,zero
 1016434:	00000506 	br	101644c <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 1016438:	10163600 	call	1016360 <alt_get_errno>
 101643c:	1007883a 	mov	r3,r2
 1016440:	00801444 	movi	r2,81
 1016444:	18800015 	stw	r2,0(r3)
    return -1;
 1016448:	00bfffc4 	movi	r2,-1
  }
}
 101644c:	e037883a 	mov	sp,fp
 1016450:	dfc00117 	ldw	ra,4(sp)
 1016454:	df000017 	ldw	fp,0(sp)
 1016458:	dec00204 	addi	sp,sp,8
 101645c:	f800283a 	ret

01016460 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1016460:	defffe04 	addi	sp,sp,-8
 1016464:	dfc00115 	stw	ra,4(sp)
 1016468:	df000015 	stw	fp,0(sp)
 101646c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1016470:	008040b4 	movhi	r2,258
 1016474:	10ad4204 	addi	r2,r2,-19192
 1016478:	10800017 	ldw	r2,0(r2)
 101647c:	10000526 	beq	r2,zero,1016494 <alt_get_errno+0x34>
 1016480:	008040b4 	movhi	r2,258
 1016484:	10ad4204 	addi	r2,r2,-19192
 1016488:	10800017 	ldw	r2,0(r2)
 101648c:	103ee83a 	callr	r2
 1016490:	00000206 	br	101649c <alt_get_errno+0x3c>
 1016494:	008040b4 	movhi	r2,258
 1016498:	10b45204 	addi	r2,r2,-11960
}
 101649c:	e037883a 	mov	sp,fp
 10164a0:	dfc00117 	ldw	ra,4(sp)
 10164a4:	df000017 	ldw	fp,0(sp)
 10164a8:	dec00204 	addi	sp,sp,8
 10164ac:	f800283a 	ret

010164b0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 10164b0:	deffed04 	addi	sp,sp,-76
 10164b4:	dfc01215 	stw	ra,72(sp)
 10164b8:	df001115 	stw	fp,68(sp)
 10164bc:	df001104 	addi	fp,sp,68
 10164c0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 10164c4:	e0bfff17 	ldw	r2,-4(fp)
 10164c8:	10000616 	blt	r2,zero,10164e4 <isatty+0x34>
 10164cc:	e0bfff17 	ldw	r2,-4(fp)
 10164d0:	10c00324 	muli	r3,r2,12
 10164d4:	008040b4 	movhi	r2,258
 10164d8:	10a8a704 	addi	r2,r2,-23908
 10164dc:	1885883a 	add	r2,r3,r2
 10164e0:	00000106 	br	10164e8 <isatty+0x38>
 10164e4:	0005883a 	mov	r2,zero
 10164e8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 10164ec:	e0bfef17 	ldw	r2,-68(fp)
 10164f0:	10000e26 	beq	r2,zero,101652c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 10164f4:	e0bfef17 	ldw	r2,-68(fp)
 10164f8:	10800017 	ldw	r2,0(r2)
 10164fc:	10800817 	ldw	r2,32(r2)
 1016500:	1000021e 	bne	r2,zero,101650c <isatty+0x5c>
    {
      return 1;
 1016504:	00800044 	movi	r2,1
 1016508:	00000d06 	br	1016540 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 101650c:	e0bff004 	addi	r2,fp,-64
 1016510:	e13fff17 	ldw	r4,-4(fp)
 1016514:	100b883a 	mov	r5,r2
 1016518:	10163b00 	call	10163b0 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 101651c:	e0bff117 	ldw	r2,-60(fp)
 1016520:	10880020 	cmpeqi	r2,r2,8192
 1016524:	10803fcc 	andi	r2,r2,255
 1016528:	00000506 	br	1016540 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 101652c:	10164600 	call	1016460 <alt_get_errno>
 1016530:	1007883a 	mov	r3,r2
 1016534:	00801444 	movi	r2,81
 1016538:	18800015 	stw	r2,0(r3)
    return 0;
 101653c:	0005883a 	mov	r2,zero
  }
}
 1016540:	e037883a 	mov	sp,fp
 1016544:	dfc00117 	ldw	ra,4(sp)
 1016548:	df000017 	ldw	fp,0(sp)
 101654c:	dec00204 	addi	sp,sp,8
 1016550:	f800283a 	ret

01016554 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 1016554:	defffc04 	addi	sp,sp,-16
 1016558:	df000315 	stw	fp,12(sp)
 101655c:	df000304 	addi	fp,sp,12
 1016560:	e13ffd15 	stw	r4,-12(fp)
 1016564:	e17ffe15 	stw	r5,-8(fp)
 1016568:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 101656c:	e0fffe17 	ldw	r3,-8(fp)
 1016570:	e0bffd17 	ldw	r2,-12(fp)
 1016574:	18800c26 	beq	r3,r2,10165a8 <alt_load_section+0x54>
  {
    while( to != end )
 1016578:	00000806 	br	101659c <alt_load_section+0x48>
    {
      *to++ = *from++;
 101657c:	e0bffe17 	ldw	r2,-8(fp)
 1016580:	10c00104 	addi	r3,r2,4
 1016584:	e0fffe15 	stw	r3,-8(fp)
 1016588:	e0fffd17 	ldw	r3,-12(fp)
 101658c:	19000104 	addi	r4,r3,4
 1016590:	e13ffd15 	stw	r4,-12(fp)
 1016594:	18c00017 	ldw	r3,0(r3)
 1016598:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 101659c:	e0fffe17 	ldw	r3,-8(fp)
 10165a0:	e0bfff17 	ldw	r2,-4(fp)
 10165a4:	18bff51e 	bne	r3,r2,101657c <__alt_data_end+0xff81657c>
    {
      *to++ = *from++;
    }
  }
}
 10165a8:	e037883a 	mov	sp,fp
 10165ac:	df000017 	ldw	fp,0(sp)
 10165b0:	dec00104 	addi	sp,sp,4
 10165b4:	f800283a 	ret

010165b8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 10165b8:	defffe04 	addi	sp,sp,-8
 10165bc:	dfc00115 	stw	ra,4(sp)
 10165c0:	df000015 	stw	fp,0(sp)
 10165c4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 10165c8:	010040b4 	movhi	r4,258
 10165cc:	212d4704 	addi	r4,r4,-19172
 10165d0:	014040b4 	movhi	r5,258
 10165d4:	29666a04 	addi	r5,r5,-26200
 10165d8:	018040b4 	movhi	r6,258
 10165dc:	31ad4704 	addi	r6,r6,-19172
 10165e0:	10165540 	call	1016554 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 10165e4:	01004034 	movhi	r4,256
 10165e8:	21000804 	addi	r4,r4,32
 10165ec:	01404034 	movhi	r5,256
 10165f0:	29400804 	addi	r5,r5,32
 10165f4:	01804034 	movhi	r6,256
 10165f8:	31807004 	addi	r6,r6,448
 10165fc:	10165540 	call	1016554 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 1016600:	010040b4 	movhi	r4,258
 1016604:	21248704 	addi	r4,r4,-28132
 1016608:	014040b4 	movhi	r5,258
 101660c:	29648704 	addi	r5,r5,-28132
 1016610:	018040b4 	movhi	r6,258
 1016614:	31a66a04 	addi	r6,r6,-26200
 1016618:	10165540 	call	1016554 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 101661c:	10182d80 	call	10182d8 <alt_dcache_flush_all>
  alt_icache_flush_all();
 1016620:	10185580 	call	1018558 <alt_icache_flush_all>
}
 1016624:	e037883a 	mov	sp,fp
 1016628:	dfc00117 	ldw	ra,4(sp)
 101662c:	df000017 	ldw	fp,0(sp)
 1016630:	dec00204 	addi	sp,sp,8
 1016634:	f800283a 	ret

01016638 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1016638:	defffe04 	addi	sp,sp,-8
 101663c:	dfc00115 	stw	ra,4(sp)
 1016640:	df000015 	stw	fp,0(sp)
 1016644:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1016648:	008040b4 	movhi	r2,258
 101664c:	10ad4204 	addi	r2,r2,-19192
 1016650:	10800017 	ldw	r2,0(r2)
 1016654:	10000526 	beq	r2,zero,101666c <alt_get_errno+0x34>
 1016658:	008040b4 	movhi	r2,258
 101665c:	10ad4204 	addi	r2,r2,-19192
 1016660:	10800017 	ldw	r2,0(r2)
 1016664:	103ee83a 	callr	r2
 1016668:	00000206 	br	1016674 <alt_get_errno+0x3c>
 101666c:	008040b4 	movhi	r2,258
 1016670:	10b45204 	addi	r2,r2,-11960
}
 1016674:	e037883a 	mov	sp,fp
 1016678:	dfc00117 	ldw	ra,4(sp)
 101667c:	df000017 	ldw	fp,0(sp)
 1016680:	dec00204 	addi	sp,sp,8
 1016684:	f800283a 	ret

01016688 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 1016688:	defff904 	addi	sp,sp,-28
 101668c:	dfc00615 	stw	ra,24(sp)
 1016690:	df000515 	stw	fp,20(sp)
 1016694:	df000504 	addi	fp,sp,20
 1016698:	e13ffd15 	stw	r4,-12(fp)
 101669c:	e17ffe15 	stw	r5,-8(fp)
 10166a0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 10166a4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 10166a8:	e0bffd17 	ldw	r2,-12(fp)
 10166ac:	10000616 	blt	r2,zero,10166c8 <lseek+0x40>
 10166b0:	e0bffd17 	ldw	r2,-12(fp)
 10166b4:	10c00324 	muli	r3,r2,12
 10166b8:	008040b4 	movhi	r2,258
 10166bc:	10a8a704 	addi	r2,r2,-23908
 10166c0:	1885883a 	add	r2,r3,r2
 10166c4:	00000106 	br	10166cc <lseek+0x44>
 10166c8:	0005883a 	mov	r2,zero
 10166cc:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 10166d0:	e0bffc17 	ldw	r2,-16(fp)
 10166d4:	10001026 	beq	r2,zero,1016718 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 10166d8:	e0bffc17 	ldw	r2,-16(fp)
 10166dc:	10800017 	ldw	r2,0(r2)
 10166e0:	10800717 	ldw	r2,28(r2)
 10166e4:	10000926 	beq	r2,zero,101670c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 10166e8:	e0bffc17 	ldw	r2,-16(fp)
 10166ec:	10800017 	ldw	r2,0(r2)
 10166f0:	10800717 	ldw	r2,28(r2)
 10166f4:	e13ffc17 	ldw	r4,-16(fp)
 10166f8:	e17ffe17 	ldw	r5,-8(fp)
 10166fc:	e1bfff17 	ldw	r6,-4(fp)
 1016700:	103ee83a 	callr	r2
 1016704:	e0bffb15 	stw	r2,-20(fp)
 1016708:	00000506 	br	1016720 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 101670c:	00bfde84 	movi	r2,-134
 1016710:	e0bffb15 	stw	r2,-20(fp)
 1016714:	00000206 	br	1016720 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 1016718:	00bfebc4 	movi	r2,-81
 101671c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 1016720:	e0bffb17 	ldw	r2,-20(fp)
 1016724:	1000070e 	bge	r2,zero,1016744 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 1016728:	10166380 	call	1016638 <alt_get_errno>
 101672c:	1007883a 	mov	r3,r2
 1016730:	e0bffb17 	ldw	r2,-20(fp)
 1016734:	0085c83a 	sub	r2,zero,r2
 1016738:	18800015 	stw	r2,0(r3)
    rc = -1;
 101673c:	00bfffc4 	movi	r2,-1
 1016740:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 1016744:	e0bffb17 	ldw	r2,-20(fp)
}
 1016748:	e037883a 	mov	sp,fp
 101674c:	dfc00117 	ldw	ra,4(sp)
 1016750:	df000017 	ldw	fp,0(sp)
 1016754:	dec00204 	addi	sp,sp,8
 1016758:	f800283a 	ret

0101675c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 101675c:	defffd04 	addi	sp,sp,-12
 1016760:	dfc00215 	stw	ra,8(sp)
 1016764:	df000115 	stw	fp,4(sp)
 1016768:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 101676c:	0009883a 	mov	r4,zero
 1016770:	1016c200 	call	1016c20 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 1016774:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 1016778:	1016c540 	call	1016c54 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 101677c:	010040b4 	movhi	r4,258
 1016780:	21265604 	addi	r4,r4,-26280
 1016784:	014040b4 	movhi	r5,258
 1016788:	29665604 	addi	r5,r5,-26280
 101678c:	018040b4 	movhi	r6,258
 1016790:	31a65604 	addi	r6,r6,-26280
 1016794:	10186480 	call	1018648 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 1016798:	10184100 	call	1018410 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 101679c:	010040b4 	movhi	r4,258
 10167a0:	21211b04 	addi	r4,r4,-31636
 10167a4:	1018ef40 	call	1018ef4 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 10167a8:	d1271e17 	ldw	r4,-25480(gp)
 10167ac:	d0e71f17 	ldw	r3,-25476(gp)
 10167b0:	d0a72017 	ldw	r2,-25472(gp)
 10167b4:	180b883a 	mov	r5,r3
 10167b8:	100d883a 	mov	r6,r2
 10167bc:	1001ca80 	call	1001ca8 <main>
 10167c0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 10167c4:	01000044 	movi	r4,1
 10167c8:	10162640 	call	1016264 <close>
  exit (result);
 10167cc:	e13fff17 	ldw	r4,-4(fp)
 10167d0:	1018f080 	call	1018f08 <exit>

010167d4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 10167d4:	defffe04 	addi	sp,sp,-8
 10167d8:	df000115 	stw	fp,4(sp)
 10167dc:	df000104 	addi	fp,sp,4
 10167e0:	e13fff15 	stw	r4,-4(fp)
}
 10167e4:	e037883a 	mov	sp,fp
 10167e8:	df000017 	ldw	fp,0(sp)
 10167ec:	dec00104 	addi	sp,sp,4
 10167f0:	f800283a 	ret

010167f4 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 10167f4:	defffe04 	addi	sp,sp,-8
 10167f8:	df000115 	stw	fp,4(sp)
 10167fc:	df000104 	addi	fp,sp,4
 1016800:	e13fff15 	stw	r4,-4(fp)
}
 1016804:	e037883a 	mov	sp,fp
 1016808:	df000017 	ldw	fp,0(sp)
 101680c:	dec00104 	addi	sp,sp,4
 1016810:	f800283a 	ret

01016814 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1016814:	defffe04 	addi	sp,sp,-8
 1016818:	dfc00115 	stw	ra,4(sp)
 101681c:	df000015 	stw	fp,0(sp)
 1016820:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1016824:	008040b4 	movhi	r2,258
 1016828:	10ad4204 	addi	r2,r2,-19192
 101682c:	10800017 	ldw	r2,0(r2)
 1016830:	10000526 	beq	r2,zero,1016848 <alt_get_errno+0x34>
 1016834:	008040b4 	movhi	r2,258
 1016838:	10ad4204 	addi	r2,r2,-19192
 101683c:	10800017 	ldw	r2,0(r2)
 1016840:	103ee83a 	callr	r2
 1016844:	00000206 	br	1016850 <alt_get_errno+0x3c>
 1016848:	008040b4 	movhi	r2,258
 101684c:	10b45204 	addi	r2,r2,-11960
}
 1016850:	e037883a 	mov	sp,fp
 1016854:	dfc00117 	ldw	ra,4(sp)
 1016858:	df000017 	ldw	fp,0(sp)
 101685c:	dec00204 	addi	sp,sp,8
 1016860:	f800283a 	ret

01016864 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 1016864:	defff904 	addi	sp,sp,-28
 1016868:	dfc00615 	stw	ra,24(sp)
 101686c:	df000515 	stw	fp,20(sp)
 1016870:	df000504 	addi	fp,sp,20
 1016874:	e13ffd15 	stw	r4,-12(fp)
 1016878:	e17ffe15 	stw	r5,-8(fp)
 101687c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 1016880:	e0bffd17 	ldw	r2,-12(fp)
 1016884:	10000616 	blt	r2,zero,10168a0 <read+0x3c>
 1016888:	e0bffd17 	ldw	r2,-12(fp)
 101688c:	10c00324 	muli	r3,r2,12
 1016890:	008040b4 	movhi	r2,258
 1016894:	10a8a704 	addi	r2,r2,-23908
 1016898:	1885883a 	add	r2,r3,r2
 101689c:	00000106 	br	10168a4 <read+0x40>
 10168a0:	0005883a 	mov	r2,zero
 10168a4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 10168a8:	e0bffb17 	ldw	r2,-20(fp)
 10168ac:	10002226 	beq	r2,zero,1016938 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 10168b0:	e0bffb17 	ldw	r2,-20(fp)
 10168b4:	10800217 	ldw	r2,8(r2)
 10168b8:	108000cc 	andi	r2,r2,3
 10168bc:	10800060 	cmpeqi	r2,r2,1
 10168c0:	1000181e 	bne	r2,zero,1016924 <read+0xc0>
        (fd->dev->read))
 10168c4:	e0bffb17 	ldw	r2,-20(fp)
 10168c8:	10800017 	ldw	r2,0(r2)
 10168cc:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 10168d0:	10001426 	beq	r2,zero,1016924 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 10168d4:	e0bffb17 	ldw	r2,-20(fp)
 10168d8:	10800017 	ldw	r2,0(r2)
 10168dc:	10800517 	ldw	r2,20(r2)
 10168e0:	e0ffff17 	ldw	r3,-4(fp)
 10168e4:	e13ffb17 	ldw	r4,-20(fp)
 10168e8:	e17ffe17 	ldw	r5,-8(fp)
 10168ec:	180d883a 	mov	r6,r3
 10168f0:	103ee83a 	callr	r2
 10168f4:	e0bffc15 	stw	r2,-16(fp)
 10168f8:	e0bffc17 	ldw	r2,-16(fp)
 10168fc:	1000070e 	bge	r2,zero,101691c <read+0xb8>
        {
          ALT_ERRNO = -rval;
 1016900:	10168140 	call	1016814 <alt_get_errno>
 1016904:	1007883a 	mov	r3,r2
 1016908:	e0bffc17 	ldw	r2,-16(fp)
 101690c:	0085c83a 	sub	r2,zero,r2
 1016910:	18800015 	stw	r2,0(r3)
          return -1;
 1016914:	00bfffc4 	movi	r2,-1
 1016918:	00000c06 	br	101694c <read+0xe8>
        }
        return rval;
 101691c:	e0bffc17 	ldw	r2,-16(fp)
 1016920:	00000a06 	br	101694c <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 1016924:	10168140 	call	1016814 <alt_get_errno>
 1016928:	1007883a 	mov	r3,r2
 101692c:	00800344 	movi	r2,13
 1016930:	18800015 	stw	r2,0(r3)
 1016934:	00000406 	br	1016948 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 1016938:	10168140 	call	1016814 <alt_get_errno>
 101693c:	1007883a 	mov	r3,r2
 1016940:	00801444 	movi	r2,81
 1016944:	18800015 	stw	r2,0(r3)
  }
  return -1;
 1016948:	00bfffc4 	movi	r2,-1
}
 101694c:	e037883a 	mov	sp,fp
 1016950:	dfc00117 	ldw	ra,4(sp)
 1016954:	df000017 	ldw	fp,0(sp)
 1016958:	dec00204 	addi	sp,sp,8
 101695c:	f800283a 	ret

01016960 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 1016960:	defffe04 	addi	sp,sp,-8
 1016964:	df000115 	stw	fp,4(sp)
 1016968:	df000104 	addi	fp,sp,4
 101696c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 1016970:	e0bfff17 	ldw	r2,-4(fp)
 1016974:	108000d0 	cmplti	r2,r2,3
 1016978:	10000d1e 	bne	r2,zero,10169b0 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 101697c:	008040b4 	movhi	r2,258
 1016980:	10a8a704 	addi	r2,r2,-23908
 1016984:	e0ffff17 	ldw	r3,-4(fp)
 1016988:	18c00324 	muli	r3,r3,12
 101698c:	10c5883a 	add	r2,r2,r3
 1016990:	10800204 	addi	r2,r2,8
 1016994:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 1016998:	008040b4 	movhi	r2,258
 101699c:	10a8a704 	addi	r2,r2,-23908
 10169a0:	e0ffff17 	ldw	r3,-4(fp)
 10169a4:	18c00324 	muli	r3,r3,12
 10169a8:	10c5883a 	add	r2,r2,r3
 10169ac:	10000015 	stw	zero,0(r2)
  }
}
 10169b0:	e037883a 	mov	sp,fp
 10169b4:	df000017 	ldw	fp,0(sp)
 10169b8:	dec00104 	addi	sp,sp,4
 10169bc:	f800283a 	ret

010169c0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 10169c0:	defff904 	addi	sp,sp,-28
 10169c4:	df000615 	stw	fp,24(sp)
 10169c8:	df000604 	addi	fp,sp,24
 10169cc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 10169d0:	0005303a 	rdctl	r2,status
 10169d4:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 10169d8:	e0fffc17 	ldw	r3,-16(fp)
 10169dc:	00bfff84 	movi	r2,-2
 10169e0:	1884703a 	and	r2,r3,r2
 10169e4:	1001703a 	wrctl	status,r2
  
  return context;
 10169e8:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 10169ec:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 10169f0:	d0a00e17 	ldw	r2,-32712(gp)
 10169f4:	10c000c4 	addi	r3,r2,3
 10169f8:	00bfff04 	movi	r2,-4
 10169fc:	1884703a 	and	r2,r3,r2
 1016a00:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 1016a04:	d0e00e17 	ldw	r3,-32712(gp)
 1016a08:	e0bfff17 	ldw	r2,-4(fp)
 1016a0c:	1887883a 	add	r3,r3,r2
 1016a10:	00806034 	movhi	r2,384
 1016a14:	10800004 	addi	r2,r2,0
 1016a18:	10c0062e 	bgeu	r2,r3,1016a34 <sbrk+0x74>
 1016a1c:	e0bffa17 	ldw	r2,-24(fp)
 1016a20:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1016a24:	e0bffd17 	ldw	r2,-12(fp)
 1016a28:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 1016a2c:	00bfffc4 	movi	r2,-1
 1016a30:	00000b06 	br	1016a60 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 1016a34:	d0a00e17 	ldw	r2,-32712(gp)
 1016a38:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
 1016a3c:	d0e00e17 	ldw	r3,-32712(gp)
 1016a40:	e0bfff17 	ldw	r2,-4(fp)
 1016a44:	1885883a 	add	r2,r3,r2
 1016a48:	d0a00e15 	stw	r2,-32712(gp)
 1016a4c:	e0bffa17 	ldw	r2,-24(fp)
 1016a50:	e0bffe15 	stw	r2,-8(fp)
 1016a54:	e0bffe17 	ldw	r2,-8(fp)
 1016a58:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 1016a5c:	e0bffb17 	ldw	r2,-20(fp)
} 
 1016a60:	e037883a 	mov	sp,fp
 1016a64:	df000017 	ldw	fp,0(sp)
 1016a68:	dec00104 	addi	sp,sp,4
 1016a6c:	f800283a 	ret

01016a70 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 1016a70:	defffd04 	addi	sp,sp,-12
 1016a74:	dfc00215 	stw	ra,8(sp)
 1016a78:	df000115 	stw	fp,4(sp)
 1016a7c:	df000104 	addi	fp,sp,4
 1016a80:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 1016a84:	e13fff17 	ldw	r4,-4(fp)
 1016a88:	10181b00 	call	10181b0 <alt_busy_sleep>
}
 1016a8c:	e037883a 	mov	sp,fp
 1016a90:	dfc00117 	ldw	ra,4(sp)
 1016a94:	df000017 	ldw	fp,0(sp)
 1016a98:	dec00204 	addi	sp,sp,8
 1016a9c:	f800283a 	ret

01016aa0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1016aa0:	defffe04 	addi	sp,sp,-8
 1016aa4:	dfc00115 	stw	ra,4(sp)
 1016aa8:	df000015 	stw	fp,0(sp)
 1016aac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1016ab0:	008040b4 	movhi	r2,258
 1016ab4:	10ad4204 	addi	r2,r2,-19192
 1016ab8:	10800017 	ldw	r2,0(r2)
 1016abc:	10000526 	beq	r2,zero,1016ad4 <alt_get_errno+0x34>
 1016ac0:	008040b4 	movhi	r2,258
 1016ac4:	10ad4204 	addi	r2,r2,-19192
 1016ac8:	10800017 	ldw	r2,0(r2)
 1016acc:	103ee83a 	callr	r2
 1016ad0:	00000206 	br	1016adc <alt_get_errno+0x3c>
 1016ad4:	008040b4 	movhi	r2,258
 1016ad8:	10b45204 	addi	r2,r2,-11960
}
 1016adc:	e037883a 	mov	sp,fp
 1016ae0:	dfc00117 	ldw	ra,4(sp)
 1016ae4:	df000017 	ldw	fp,0(sp)
 1016ae8:	dec00204 	addi	sp,sp,8
 1016aec:	f800283a 	ret

01016af0 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 1016af0:	defff904 	addi	sp,sp,-28
 1016af4:	dfc00615 	stw	ra,24(sp)
 1016af8:	df000515 	stw	fp,20(sp)
 1016afc:	df000504 	addi	fp,sp,20
 1016b00:	e13ffd15 	stw	r4,-12(fp)
 1016b04:	e17ffe15 	stw	r5,-8(fp)
 1016b08:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 1016b0c:	e0bffd17 	ldw	r2,-12(fp)
 1016b10:	10000616 	blt	r2,zero,1016b2c <write+0x3c>
 1016b14:	e0bffd17 	ldw	r2,-12(fp)
 1016b18:	10c00324 	muli	r3,r2,12
 1016b1c:	008040b4 	movhi	r2,258
 1016b20:	10a8a704 	addi	r2,r2,-23908
 1016b24:	1885883a 	add	r2,r3,r2
 1016b28:	00000106 	br	1016b30 <write+0x40>
 1016b2c:	0005883a 	mov	r2,zero
 1016b30:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 1016b34:	e0bffb17 	ldw	r2,-20(fp)
 1016b38:	10002126 	beq	r2,zero,1016bc0 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 1016b3c:	e0bffb17 	ldw	r2,-20(fp)
 1016b40:	10800217 	ldw	r2,8(r2)
 1016b44:	108000cc 	andi	r2,r2,3
 1016b48:	10001826 	beq	r2,zero,1016bac <write+0xbc>
 1016b4c:	e0bffb17 	ldw	r2,-20(fp)
 1016b50:	10800017 	ldw	r2,0(r2)
 1016b54:	10800617 	ldw	r2,24(r2)
 1016b58:	10001426 	beq	r2,zero,1016bac <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 1016b5c:	e0bffb17 	ldw	r2,-20(fp)
 1016b60:	10800017 	ldw	r2,0(r2)
 1016b64:	10800617 	ldw	r2,24(r2)
 1016b68:	e0ffff17 	ldw	r3,-4(fp)
 1016b6c:	e13ffb17 	ldw	r4,-20(fp)
 1016b70:	e17ffe17 	ldw	r5,-8(fp)
 1016b74:	180d883a 	mov	r6,r3
 1016b78:	103ee83a 	callr	r2
 1016b7c:	e0bffc15 	stw	r2,-16(fp)
 1016b80:	e0bffc17 	ldw	r2,-16(fp)
 1016b84:	1000070e 	bge	r2,zero,1016ba4 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 1016b88:	1016aa00 	call	1016aa0 <alt_get_errno>
 1016b8c:	1007883a 	mov	r3,r2
 1016b90:	e0bffc17 	ldw	r2,-16(fp)
 1016b94:	0085c83a 	sub	r2,zero,r2
 1016b98:	18800015 	stw	r2,0(r3)
        return -1;
 1016b9c:	00bfffc4 	movi	r2,-1
 1016ba0:	00000c06 	br	1016bd4 <write+0xe4>
      }
      return rval;
 1016ba4:	e0bffc17 	ldw	r2,-16(fp)
 1016ba8:	00000a06 	br	1016bd4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 1016bac:	1016aa00 	call	1016aa0 <alt_get_errno>
 1016bb0:	1007883a 	mov	r3,r2
 1016bb4:	00800344 	movi	r2,13
 1016bb8:	18800015 	stw	r2,0(r3)
 1016bbc:	00000406 	br	1016bd0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 1016bc0:	1016aa00 	call	1016aa0 <alt_get_errno>
 1016bc4:	1007883a 	mov	r3,r2
 1016bc8:	00801444 	movi	r2,81
 1016bcc:	18800015 	stw	r2,0(r3)
  }
  return -1;
 1016bd0:	00bfffc4 	movi	r2,-1
}
 1016bd4:	e037883a 	mov	sp,fp
 1016bd8:	dfc00117 	ldw	ra,4(sp)
 1016bdc:	df000017 	ldw	fp,0(sp)
 1016be0:	dec00204 	addi	sp,sp,8
 1016be4:	f800283a 	ret

01016be8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 1016be8:	defffd04 	addi	sp,sp,-12
 1016bec:	dfc00215 	stw	ra,8(sp)
 1016bf0:	df000115 	stw	fp,4(sp)
 1016bf4:	df000104 	addi	fp,sp,4
 1016bf8:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 1016bfc:	e13fff17 	ldw	r4,-4(fp)
 1016c00:	014040b4 	movhi	r5,258
 1016c04:	296d3f04 	addi	r5,r5,-19204
 1016c08:	101836c0 	call	101836c <alt_dev_llist_insert>
}
 1016c0c:	e037883a 	mov	sp,fp
 1016c10:	dfc00117 	ldw	ra,4(sp)
 1016c14:	df000017 	ldw	fp,0(sp)
 1016c18:	dec00204 	addi	sp,sp,8
 1016c1c:	f800283a 	ret

01016c20 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 1016c20:	defffd04 	addi	sp,sp,-12
 1016c24:	dfc00215 	stw	ra,8(sp)
 1016c28:	df000115 	stw	fp,4(sp)
 1016c2c:	df000104 	addi	fp,sp,4
 1016c30:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
 1016c34:	1018c800 	call	1018c80 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 1016c38:	00800044 	movi	r2,1
 1016c3c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 1016c40:	e037883a 	mov	sp,fp
 1016c44:	dfc00117 	ldw	ra,4(sp)
 1016c48:	df000017 	ldw	fp,0(sp)
 1016c4c:	dec00204 	addi	sp,sp,8
 1016c50:	f800283a 	ret

01016c54 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 1016c54:	defffe04 	addi	sp,sp,-8
 1016c58:	dfc00115 	stw	ra,4(sp)
 1016c5c:	df000015 	stw	fp,0(sp)
 1016c60:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 1016c64:	01043804 	movi	r4,4320
 1016c68:	000b883a 	mov	r5,zero
 1016c6c:	018000c4 	movi	r6,3
 1016c70:	01c0fa04 	movi	r7,1000
 1016c74:	101778c0 	call	101778c <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_1, timer_1);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 1016c78:	010040b4 	movhi	r4,258
 1016c7c:	21291104 	addi	r4,r4,-23484
 1016c80:	000b883a 	mov	r5,zero
 1016c84:	000d883a 	mov	r6,zero
 1016c88:	1016e340 	call	1016e34 <altera_avalon_jtag_uart_init>
 1016c8c:	010040b4 	movhi	r4,258
 1016c90:	21290704 	addi	r4,r4,-23524
 1016c94:	1016be80 	call	1016be8 <alt_dev_reg>
    ALTERA_UP_AVALON_CHARACTER_LCD_INIT ( CHARACTER_LCD_0, character_lcd_0);
 1016c98:	010040b4 	movhi	r4,258
 1016c9c:	212d1f04 	addi	r4,r4,-19332
 1016ca0:	10178bc0 	call	10178bc <alt_up_character_lcd_init>
 1016ca4:	010040b4 	movhi	r4,258
 1016ca8:	212d1f04 	addi	r4,r4,-19332
 1016cac:	1016be80 	call	1016be8 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( RS232_0, rs232_0);
 1016cb0:	010040b4 	movhi	r4,258
 1016cb4:	212d2a04 	addi	r4,r4,-19288
 1016cb8:	1016be80 	call	1016be8 <alt_dev_reg>
}
 1016cbc:	e037883a 	mov	sp,fp
 1016cc0:	dfc00117 	ldw	ra,4(sp)
 1016cc4:	df000017 	ldw	fp,0(sp)
 1016cc8:	dec00204 	addi	sp,sp,8
 1016ccc:	f800283a 	ret

01016cd0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 1016cd0:	defffa04 	addi	sp,sp,-24
 1016cd4:	dfc00515 	stw	ra,20(sp)
 1016cd8:	df000415 	stw	fp,16(sp)
 1016cdc:	df000404 	addi	fp,sp,16
 1016ce0:	e13ffd15 	stw	r4,-12(fp)
 1016ce4:	e17ffe15 	stw	r5,-8(fp)
 1016ce8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 1016cec:	e0bffd17 	ldw	r2,-12(fp)
 1016cf0:	10800017 	ldw	r2,0(r2)
 1016cf4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 1016cf8:	e0bffc17 	ldw	r2,-16(fp)
 1016cfc:	10c00a04 	addi	r3,r2,40
 1016d00:	e0bffd17 	ldw	r2,-12(fp)
 1016d04:	10800217 	ldw	r2,8(r2)
 1016d08:	1809883a 	mov	r4,r3
 1016d0c:	e17ffe17 	ldw	r5,-8(fp)
 1016d10:	e1bfff17 	ldw	r6,-4(fp)
 1016d14:	100f883a 	mov	r7,r2
 1016d18:	10172f00 	call	10172f0 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 1016d1c:	e037883a 	mov	sp,fp
 1016d20:	dfc00117 	ldw	ra,4(sp)
 1016d24:	df000017 	ldw	fp,0(sp)
 1016d28:	dec00204 	addi	sp,sp,8
 1016d2c:	f800283a 	ret

01016d30 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 1016d30:	defffa04 	addi	sp,sp,-24
 1016d34:	dfc00515 	stw	ra,20(sp)
 1016d38:	df000415 	stw	fp,16(sp)
 1016d3c:	df000404 	addi	fp,sp,16
 1016d40:	e13ffd15 	stw	r4,-12(fp)
 1016d44:	e17ffe15 	stw	r5,-8(fp)
 1016d48:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 1016d4c:	e0bffd17 	ldw	r2,-12(fp)
 1016d50:	10800017 	ldw	r2,0(r2)
 1016d54:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 1016d58:	e0bffc17 	ldw	r2,-16(fp)
 1016d5c:	10c00a04 	addi	r3,r2,40
 1016d60:	e0bffd17 	ldw	r2,-12(fp)
 1016d64:	10800217 	ldw	r2,8(r2)
 1016d68:	1809883a 	mov	r4,r3
 1016d6c:	e17ffe17 	ldw	r5,-8(fp)
 1016d70:	e1bfff17 	ldw	r6,-4(fp)
 1016d74:	100f883a 	mov	r7,r2
 1016d78:	10174fc0 	call	10174fc <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 1016d7c:	e037883a 	mov	sp,fp
 1016d80:	dfc00117 	ldw	ra,4(sp)
 1016d84:	df000017 	ldw	fp,0(sp)
 1016d88:	dec00204 	addi	sp,sp,8
 1016d8c:	f800283a 	ret

01016d90 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 1016d90:	defffc04 	addi	sp,sp,-16
 1016d94:	dfc00315 	stw	ra,12(sp)
 1016d98:	df000215 	stw	fp,8(sp)
 1016d9c:	df000204 	addi	fp,sp,8
 1016da0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 1016da4:	e0bfff17 	ldw	r2,-4(fp)
 1016da8:	10800017 	ldw	r2,0(r2)
 1016dac:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 1016db0:	e0bffe17 	ldw	r2,-8(fp)
 1016db4:	10c00a04 	addi	r3,r2,40
 1016db8:	e0bfff17 	ldw	r2,-4(fp)
 1016dbc:	10800217 	ldw	r2,8(r2)
 1016dc0:	1809883a 	mov	r4,r3
 1016dc4:	100b883a 	mov	r5,r2
 1016dc8:	101719c0 	call	101719c <altera_avalon_jtag_uart_close>
}
 1016dcc:	e037883a 	mov	sp,fp
 1016dd0:	dfc00117 	ldw	ra,4(sp)
 1016dd4:	df000017 	ldw	fp,0(sp)
 1016dd8:	dec00204 	addi	sp,sp,8
 1016ddc:	f800283a 	ret

01016de0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 1016de0:	defffa04 	addi	sp,sp,-24
 1016de4:	dfc00515 	stw	ra,20(sp)
 1016de8:	df000415 	stw	fp,16(sp)
 1016dec:	df000404 	addi	fp,sp,16
 1016df0:	e13ffd15 	stw	r4,-12(fp)
 1016df4:	e17ffe15 	stw	r5,-8(fp)
 1016df8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 1016dfc:	e0bffd17 	ldw	r2,-12(fp)
 1016e00:	10800017 	ldw	r2,0(r2)
 1016e04:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 1016e08:	e0bffc17 	ldw	r2,-16(fp)
 1016e0c:	10800a04 	addi	r2,r2,40
 1016e10:	1009883a 	mov	r4,r2
 1016e14:	e17ffe17 	ldw	r5,-8(fp)
 1016e18:	e1bfff17 	ldw	r6,-4(fp)
 1016e1c:	10172040 	call	1017204 <altera_avalon_jtag_uart_ioctl>
}
 1016e20:	e037883a 	mov	sp,fp
 1016e24:	dfc00117 	ldw	ra,4(sp)
 1016e28:	df000017 	ldw	fp,0(sp)
 1016e2c:	dec00204 	addi	sp,sp,8
 1016e30:	f800283a 	ret

01016e34 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 1016e34:	defffb04 	addi	sp,sp,-20
 1016e38:	dfc00415 	stw	ra,16(sp)
 1016e3c:	df000315 	stw	fp,12(sp)
 1016e40:	df000304 	addi	fp,sp,12
 1016e44:	e13ffd15 	stw	r4,-12(fp)
 1016e48:	e17ffe15 	stw	r5,-8(fp)
 1016e4c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 1016e50:	e0bffd17 	ldw	r2,-12(fp)
 1016e54:	00c00044 	movi	r3,1
 1016e58:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 1016e5c:	e0bffd17 	ldw	r2,-12(fp)
 1016e60:	10800017 	ldw	r2,0(r2)
 1016e64:	10800104 	addi	r2,r2,4
 1016e68:	1007883a 	mov	r3,r2
 1016e6c:	e0bffd17 	ldw	r2,-12(fp)
 1016e70:	10800817 	ldw	r2,32(r2)
 1016e74:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
 1016e78:	e0bfff17 	ldw	r2,-4(fp)
 1016e7c:	1009883a 	mov	r4,r2
 1016e80:	e17ffd17 	ldw	r5,-12(fp)
 1016e84:	01804074 	movhi	r6,257
 1016e88:	319bbb04 	addi	r6,r6,28396
 1016e8c:	10186c00 	call	10186c0 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 1016e90:	e0bffd17 	ldw	r2,-12(fp)
 1016e94:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 1016e98:	e0bffd17 	ldw	r2,-12(fp)
 1016e9c:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 1016ea0:	008040b4 	movhi	r2,258
 1016ea4:	10b45704 	addi	r2,r2,-11940
 1016ea8:	10800017 	ldw	r2,0(r2)
 1016eac:	1809883a 	mov	r4,r3
 1016eb0:	100b883a 	mov	r5,r2
 1016eb4:	01804074 	movhi	r6,257
 1016eb8:	319c3d04 	addi	r6,r6,28916
 1016ebc:	e1fffd17 	ldw	r7,-12(fp)
 1016ec0:	10180700 	call	1018070 <alt_alarm_start>
 1016ec4:	1000040e 	bge	r2,zero,1016ed8 <altera_avalon_jtag_uart_init+0xa4>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 1016ec8:	e0fffd17 	ldw	r3,-12(fp)
 1016ecc:	00a00034 	movhi	r2,32768
 1016ed0:	10bfffc4 	addi	r2,r2,-1
 1016ed4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 1016ed8:	e037883a 	mov	sp,fp
 1016edc:	dfc00117 	ldw	ra,4(sp)
 1016ee0:	df000017 	ldw	fp,0(sp)
 1016ee4:	dec00204 	addi	sp,sp,8
 1016ee8:	f800283a 	ret

01016eec <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 1016eec:	defff704 	addi	sp,sp,-36
 1016ef0:	df000815 	stw	fp,32(sp)
 1016ef4:	df000804 	addi	fp,sp,32
 1016ef8:	e13ffe15 	stw	r4,-8(fp)
 1016efc:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 1016f00:	e0bffe17 	ldw	r2,-8(fp)
 1016f04:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
 1016f08:	e0bffa17 	ldw	r2,-24(fp)
 1016f0c:	10800017 	ldw	r2,0(r2)
 1016f10:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 1016f14:	e0bffb17 	ldw	r2,-20(fp)
 1016f18:	10800104 	addi	r2,r2,4
 1016f1c:	10800037 	ldwio	r2,0(r2)
 1016f20:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 1016f24:	e0bffc17 	ldw	r2,-16(fp)
 1016f28:	1080c00c 	andi	r2,r2,768
 1016f2c:	1000011e 	bne	r2,zero,1016f34 <altera_avalon_jtag_uart_irq+0x48>
      break;
 1016f30:	00006c06 	br	10170e4 <altera_avalon_jtag_uart_irq+0x1f8>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 1016f34:	e0bffc17 	ldw	r2,-16(fp)
 1016f38:	1080400c 	andi	r2,r2,256
 1016f3c:	10003426 	beq	r2,zero,1017010 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 1016f40:	00800074 	movhi	r2,1
 1016f44:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 1016f48:	e0bffa17 	ldw	r2,-24(fp)
 1016f4c:	10800a17 	ldw	r2,40(r2)
 1016f50:	10800044 	addi	r2,r2,1
 1016f54:	1081ffcc 	andi	r2,r2,2047
 1016f58:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
 1016f5c:	e0bffa17 	ldw	r2,-24(fp)
 1016f60:	10c00b17 	ldw	r3,44(r2)
 1016f64:	e0bffd17 	ldw	r2,-12(fp)
 1016f68:	1880011e 	bne	r3,r2,1016f70 <altera_avalon_jtag_uart_irq+0x84>
          break;
 1016f6c:	00001606 	br	1016fc8 <altera_avalon_jtag_uart_irq+0xdc>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 1016f70:	e0bffb17 	ldw	r2,-20(fp)
 1016f74:	10800037 	ldwio	r2,0(r2)
 1016f78:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 1016f7c:	e0bff817 	ldw	r2,-32(fp)
 1016f80:	10a0000c 	andi	r2,r2,32768
 1016f84:	1000011e 	bne	r2,zero,1016f8c <altera_avalon_jtag_uart_irq+0xa0>
          break;
 1016f88:	00000f06 	br	1016fc8 <altera_avalon_jtag_uart_irq+0xdc>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 1016f8c:	e0bffa17 	ldw	r2,-24(fp)
 1016f90:	10800a17 	ldw	r2,40(r2)
 1016f94:	e0fff817 	ldw	r3,-32(fp)
 1016f98:	1809883a 	mov	r4,r3
 1016f9c:	e0fffa17 	ldw	r3,-24(fp)
 1016fa0:	1885883a 	add	r2,r3,r2
 1016fa4:	10800e04 	addi	r2,r2,56
 1016fa8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 1016fac:	e0bffa17 	ldw	r2,-24(fp)
 1016fb0:	10800a17 	ldw	r2,40(r2)
 1016fb4:	10800044 	addi	r2,r2,1
 1016fb8:	10c1ffcc 	andi	r3,r2,2047
 1016fbc:	e0bffa17 	ldw	r2,-24(fp)
 1016fc0:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 1016fc4:	003fe006 	br	1016f48 <__alt_data_end+0xff816f48>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 1016fc8:	e0bff817 	ldw	r2,-32(fp)
 1016fcc:	10bfffec 	andhi	r2,r2,65535
 1016fd0:	10000f26 	beq	r2,zero,1017010 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 1016fd4:	e0bffa17 	ldw	r2,-24(fp)
 1016fd8:	10c00817 	ldw	r3,32(r2)
 1016fdc:	00bfff84 	movi	r2,-2
 1016fe0:	1886703a 	and	r3,r3,r2
 1016fe4:	e0bffa17 	ldw	r2,-24(fp)
 1016fe8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 1016fec:	e0bffb17 	ldw	r2,-20(fp)
 1016ff0:	10800104 	addi	r2,r2,4
 1016ff4:	1007883a 	mov	r3,r2
 1016ff8:	e0bffa17 	ldw	r2,-24(fp)
 1016ffc:	10800817 	ldw	r2,32(r2)
 1017000:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 1017004:	e0bffb17 	ldw	r2,-20(fp)
 1017008:	10800104 	addi	r2,r2,4
 101700c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 1017010:	e0bffc17 	ldw	r2,-16(fp)
 1017014:	1080800c 	andi	r2,r2,512
 1017018:	10003126 	beq	r2,zero,10170e0 <altera_avalon_jtag_uart_irq+0x1f4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 101701c:	e0bffc17 	ldw	r2,-16(fp)
 1017020:	1004d43a 	srli	r2,r2,16
 1017024:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 1017028:	00001406 	br	101707c <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 101702c:	e0bffb17 	ldw	r2,-20(fp)
 1017030:	e0fffa17 	ldw	r3,-24(fp)
 1017034:	18c00d17 	ldw	r3,52(r3)
 1017038:	e13ffa17 	ldw	r4,-24(fp)
 101703c:	20c7883a 	add	r3,r4,r3
 1017040:	18c20e04 	addi	r3,r3,2104
 1017044:	18c00003 	ldbu	r3,0(r3)
 1017048:	18c03fcc 	andi	r3,r3,255
 101704c:	18c0201c 	xori	r3,r3,128
 1017050:	18ffe004 	addi	r3,r3,-128
 1017054:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 1017058:	e0bffa17 	ldw	r2,-24(fp)
 101705c:	10800d17 	ldw	r2,52(r2)
 1017060:	10800044 	addi	r2,r2,1
 1017064:	10c1ffcc 	andi	r3,r2,2047
 1017068:	e0bffa17 	ldw	r2,-24(fp)
 101706c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 1017070:	e0bff917 	ldw	r2,-28(fp)
 1017074:	10bfffc4 	addi	r2,r2,-1
 1017078:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 101707c:	e0bff917 	ldw	r2,-28(fp)
 1017080:	10000526 	beq	r2,zero,1017098 <altera_avalon_jtag_uart_irq+0x1ac>
 1017084:	e0bffa17 	ldw	r2,-24(fp)
 1017088:	10c00d17 	ldw	r3,52(r2)
 101708c:	e0bffa17 	ldw	r2,-24(fp)
 1017090:	10800c17 	ldw	r2,48(r2)
 1017094:	18bfe51e 	bne	r3,r2,101702c <__alt_data_end+0xff81702c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 1017098:	e0bff917 	ldw	r2,-28(fp)
 101709c:	10001026 	beq	r2,zero,10170e0 <altera_avalon_jtag_uart_irq+0x1f4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 10170a0:	e0bffa17 	ldw	r2,-24(fp)
 10170a4:	10c00817 	ldw	r3,32(r2)
 10170a8:	00bfff44 	movi	r2,-3
 10170ac:	1886703a 	and	r3,r3,r2
 10170b0:	e0bffa17 	ldw	r2,-24(fp)
 10170b4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 10170b8:	e0bffa17 	ldw	r2,-24(fp)
 10170bc:	10800017 	ldw	r2,0(r2)
 10170c0:	10800104 	addi	r2,r2,4
 10170c4:	1007883a 	mov	r3,r2
 10170c8:	e0bffa17 	ldw	r2,-24(fp)
 10170cc:	10800817 	ldw	r2,32(r2)
 10170d0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 10170d4:	e0bffb17 	ldw	r2,-20(fp)
 10170d8:	10800104 	addi	r2,r2,4
 10170dc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 10170e0:	003f8c06 	br	1016f14 <__alt_data_end+0xff816f14>
}
 10170e4:	e037883a 	mov	sp,fp
 10170e8:	df000017 	ldw	fp,0(sp)
 10170ec:	dec00104 	addi	sp,sp,4
 10170f0:	f800283a 	ret

010170f4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 10170f4:	defff804 	addi	sp,sp,-32
 10170f8:	df000715 	stw	fp,28(sp)
 10170fc:	df000704 	addi	fp,sp,28
 1017100:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 1017104:	e0bffb17 	ldw	r2,-20(fp)
 1017108:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 101710c:	e0bff917 	ldw	r2,-28(fp)
 1017110:	10800017 	ldw	r2,0(r2)
 1017114:	10800104 	addi	r2,r2,4
 1017118:	10800037 	ldwio	r2,0(r2)
 101711c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 1017120:	e0bffa17 	ldw	r2,-24(fp)
 1017124:	1081000c 	andi	r2,r2,1024
 1017128:	10000b26 	beq	r2,zero,1017158 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 101712c:	e0bff917 	ldw	r2,-28(fp)
 1017130:	10800017 	ldw	r2,0(r2)
 1017134:	10800104 	addi	r2,r2,4
 1017138:	1007883a 	mov	r3,r2
 101713c:	e0bff917 	ldw	r2,-28(fp)
 1017140:	10800817 	ldw	r2,32(r2)
 1017144:	10810014 	ori	r2,r2,1024
 1017148:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 101714c:	e0bff917 	ldw	r2,-28(fp)
 1017150:	10000915 	stw	zero,36(r2)
 1017154:	00000a06 	br	1017180 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 1017158:	e0bff917 	ldw	r2,-28(fp)
 101715c:	10c00917 	ldw	r3,36(r2)
 1017160:	00a00034 	movhi	r2,32768
 1017164:	10bfff04 	addi	r2,r2,-4
 1017168:	10c00536 	bltu	r2,r3,1017180 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 101716c:	e0bff917 	ldw	r2,-28(fp)
 1017170:	10800917 	ldw	r2,36(r2)
 1017174:	10c00044 	addi	r3,r2,1
 1017178:	e0bff917 	ldw	r2,-28(fp)
 101717c:	10c00915 	stw	r3,36(r2)
 1017180:	008040b4 	movhi	r2,258
 1017184:	10b45704 	addi	r2,r2,-11940
 1017188:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 101718c:	e037883a 	mov	sp,fp
 1017190:	df000017 	ldw	fp,0(sp)
 1017194:	dec00104 	addi	sp,sp,4
 1017198:	f800283a 	ret

0101719c <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 101719c:	defffd04 	addi	sp,sp,-12
 10171a0:	df000215 	stw	fp,8(sp)
 10171a4:	df000204 	addi	fp,sp,8
 10171a8:	e13ffe15 	stw	r4,-8(fp)
 10171ac:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 10171b0:	00000506 	br	10171c8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 10171b4:	e0bfff17 	ldw	r2,-4(fp)
 10171b8:	1090000c 	andi	r2,r2,16384
 10171bc:	10000226 	beq	r2,zero,10171c8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 10171c0:	00bffd44 	movi	r2,-11
 10171c4:	00000b06 	br	10171f4 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 10171c8:	e0bffe17 	ldw	r2,-8(fp)
 10171cc:	10c00d17 	ldw	r3,52(r2)
 10171d0:	e0bffe17 	ldw	r2,-8(fp)
 10171d4:	10800c17 	ldw	r2,48(r2)
 10171d8:	18800526 	beq	r3,r2,10171f0 <altera_avalon_jtag_uart_close+0x54>
 10171dc:	e0bffe17 	ldw	r2,-8(fp)
 10171e0:	10c00917 	ldw	r3,36(r2)
 10171e4:	e0bffe17 	ldw	r2,-8(fp)
 10171e8:	10800117 	ldw	r2,4(r2)
 10171ec:	18bff136 	bltu	r3,r2,10171b4 <__alt_data_end+0xff8171b4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 10171f0:	0005883a 	mov	r2,zero
}
 10171f4:	e037883a 	mov	sp,fp
 10171f8:	df000017 	ldw	fp,0(sp)
 10171fc:	dec00104 	addi	sp,sp,4
 1017200:	f800283a 	ret

01017204 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 1017204:	defffa04 	addi	sp,sp,-24
 1017208:	df000515 	stw	fp,20(sp)
 101720c:	df000504 	addi	fp,sp,20
 1017210:	e13ffd15 	stw	r4,-12(fp)
 1017214:	e17ffe15 	stw	r5,-8(fp)
 1017218:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 101721c:	00bff9c4 	movi	r2,-25
 1017220:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 1017224:	e0bffe17 	ldw	r2,-8(fp)
 1017228:	10da8060 	cmpeqi	r3,r2,27137
 101722c:	1800031e 	bne	r3,zero,101723c <altera_avalon_jtag_uart_ioctl+0x38>
 1017230:	109a80a0 	cmpeqi	r2,r2,27138
 1017234:	1000191e 	bne	r2,zero,101729c <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
 1017238:	00002806 	br	10172dc <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 101723c:	e0bffd17 	ldw	r2,-12(fp)
 1017240:	10c00117 	ldw	r3,4(r2)
 1017244:	00a00034 	movhi	r2,32768
 1017248:	10bfffc4 	addi	r2,r2,-1
 101724c:	18801226 	beq	r3,r2,1017298 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
 1017250:	e0bfff17 	ldw	r2,-4(fp)
 1017254:	10800017 	ldw	r2,0(r2)
 1017258:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 101725c:	e0bffc17 	ldw	r2,-16(fp)
 1017260:	10800090 	cmplti	r2,r2,2
 1017264:	1000061e 	bne	r2,zero,1017280 <altera_avalon_jtag_uart_ioctl+0x7c>
 1017268:	e0fffc17 	ldw	r3,-16(fp)
 101726c:	00a00034 	movhi	r2,32768
 1017270:	10bfffc4 	addi	r2,r2,-1
 1017274:	18800226 	beq	r3,r2,1017280 <altera_avalon_jtag_uart_ioctl+0x7c>
 1017278:	e0bffc17 	ldw	r2,-16(fp)
 101727c:	00000206 	br	1017288 <altera_avalon_jtag_uart_ioctl+0x84>
 1017280:	00a00034 	movhi	r2,32768
 1017284:	10bfff84 	addi	r2,r2,-2
 1017288:	e0fffd17 	ldw	r3,-12(fp)
 101728c:	18800115 	stw	r2,4(r3)
      rc = 0;
 1017290:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 1017294:	00001106 	br	10172dc <altera_avalon_jtag_uart_ioctl+0xd8>
 1017298:	00001006 	br	10172dc <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 101729c:	e0bffd17 	ldw	r2,-12(fp)
 10172a0:	10c00117 	ldw	r3,4(r2)
 10172a4:	00a00034 	movhi	r2,32768
 10172a8:	10bfffc4 	addi	r2,r2,-1
 10172ac:	18800a26 	beq	r3,r2,10172d8 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 10172b0:	e0bffd17 	ldw	r2,-12(fp)
 10172b4:	10c00917 	ldw	r3,36(r2)
 10172b8:	e0bffd17 	ldw	r2,-12(fp)
 10172bc:	10800117 	ldw	r2,4(r2)
 10172c0:	1885803a 	cmpltu	r2,r3,r2
 10172c4:	10c03fcc 	andi	r3,r2,255
 10172c8:	e0bfff17 	ldw	r2,-4(fp)
 10172cc:	10c00015 	stw	r3,0(r2)
      rc = 0;
 10172d0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 10172d4:	00000006 	br	10172d8 <altera_avalon_jtag_uart_ioctl+0xd4>
 10172d8:	0001883a 	nop

  default:
    break;
  }

  return rc;
 10172dc:	e0bffb17 	ldw	r2,-20(fp)
}
 10172e0:	e037883a 	mov	sp,fp
 10172e4:	df000017 	ldw	fp,0(sp)
 10172e8:	dec00104 	addi	sp,sp,4
 10172ec:	f800283a 	ret

010172f0 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 10172f0:	defff304 	addi	sp,sp,-52
 10172f4:	dfc00c15 	stw	ra,48(sp)
 10172f8:	df000b15 	stw	fp,44(sp)
 10172fc:	df000b04 	addi	fp,sp,44
 1017300:	e13ffc15 	stw	r4,-16(fp)
 1017304:	e17ffd15 	stw	r5,-12(fp)
 1017308:	e1bffe15 	stw	r6,-8(fp)
 101730c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 1017310:	e0bffd17 	ldw	r2,-12(fp)
 1017314:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 1017318:	00004906 	br	1017440 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 101731c:	e0bffc17 	ldw	r2,-16(fp)
 1017320:	10800a17 	ldw	r2,40(r2)
 1017324:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 1017328:	e0bffc17 	ldw	r2,-16(fp)
 101732c:	10800b17 	ldw	r2,44(r2)
 1017330:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 1017334:	e0fff717 	ldw	r3,-36(fp)
 1017338:	e0bff817 	ldw	r2,-32(fp)
 101733c:	18800536 	bltu	r3,r2,1017354 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 1017340:	e0fff717 	ldw	r3,-36(fp)
 1017344:	e0bff817 	ldw	r2,-32(fp)
 1017348:	1885c83a 	sub	r2,r3,r2
 101734c:	e0bff615 	stw	r2,-40(fp)
 1017350:	00000406 	br	1017364 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 1017354:	00c20004 	movi	r3,2048
 1017358:	e0bff817 	ldw	r2,-32(fp)
 101735c:	1885c83a 	sub	r2,r3,r2
 1017360:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 1017364:	e0bff617 	ldw	r2,-40(fp)
 1017368:	1000011e 	bne	r2,zero,1017370 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
 101736c:	00001d06 	br	10173e4 <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
 1017370:	e0fffe17 	ldw	r3,-8(fp)
 1017374:	e0bff617 	ldw	r2,-40(fp)
 1017378:	1880022e 	bgeu	r3,r2,1017384 <altera_avalon_jtag_uart_read+0x94>
        n = space;
 101737c:	e0bffe17 	ldw	r2,-8(fp)
 1017380:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 1017384:	e0bff817 	ldw	r2,-32(fp)
 1017388:	10800e04 	addi	r2,r2,56
 101738c:	e0fffc17 	ldw	r3,-16(fp)
 1017390:	1885883a 	add	r2,r3,r2
 1017394:	e13ff517 	ldw	r4,-44(fp)
 1017398:	100b883a 	mov	r5,r2
 101739c:	e1bff617 	ldw	r6,-40(fp)
 10173a0:	100f3f80 	call	100f3f8 <memcpy>
      ptr   += n;
 10173a4:	e0fff517 	ldw	r3,-44(fp)
 10173a8:	e0bff617 	ldw	r2,-40(fp)
 10173ac:	1885883a 	add	r2,r3,r2
 10173b0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 10173b4:	e0fffe17 	ldw	r3,-8(fp)
 10173b8:	e0bff617 	ldw	r2,-40(fp)
 10173bc:	1885c83a 	sub	r2,r3,r2
 10173c0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 10173c4:	e0fff817 	ldw	r3,-32(fp)
 10173c8:	e0bff617 	ldw	r2,-40(fp)
 10173cc:	1885883a 	add	r2,r3,r2
 10173d0:	10c1ffcc 	andi	r3,r2,2047
 10173d4:	e0bffc17 	ldw	r2,-16(fp)
 10173d8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 10173dc:	e0bffe17 	ldw	r2,-8(fp)
 10173e0:	00bfce16 	blt	zero,r2,101731c <__alt_data_end+0xff81731c>

    /* If we read any data then return it */
    if (ptr != buffer)
 10173e4:	e0fff517 	ldw	r3,-44(fp)
 10173e8:	e0bffd17 	ldw	r2,-12(fp)
 10173ec:	18800126 	beq	r3,r2,10173f4 <altera_avalon_jtag_uart_read+0x104>
      break;
 10173f0:	00001506 	br	1017448 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 10173f4:	e0bfff17 	ldw	r2,-4(fp)
 10173f8:	1090000c 	andi	r2,r2,16384
 10173fc:	10000126 	beq	r2,zero,1017404 <altera_avalon_jtag_uart_read+0x114>
      break;
 1017400:	00001106 	br	1017448 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 1017404:	0001883a 	nop
 1017408:	e0bffc17 	ldw	r2,-16(fp)
 101740c:	10c00a17 	ldw	r3,40(r2)
 1017410:	e0bff717 	ldw	r2,-36(fp)
 1017414:	1880051e 	bne	r3,r2,101742c <altera_avalon_jtag_uart_read+0x13c>
 1017418:	e0bffc17 	ldw	r2,-16(fp)
 101741c:	10c00917 	ldw	r3,36(r2)
 1017420:	e0bffc17 	ldw	r2,-16(fp)
 1017424:	10800117 	ldw	r2,4(r2)
 1017428:	18bff736 	bltu	r3,r2,1017408 <__alt_data_end+0xff817408>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 101742c:	e0bffc17 	ldw	r2,-16(fp)
 1017430:	10c00a17 	ldw	r3,40(r2)
 1017434:	e0bff717 	ldw	r2,-36(fp)
 1017438:	1880011e 	bne	r3,r2,1017440 <altera_avalon_jtag_uart_read+0x150>
      break;
 101743c:	00000206 	br	1017448 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 1017440:	e0bffe17 	ldw	r2,-8(fp)
 1017444:	00bfb516 	blt	zero,r2,101731c <__alt_data_end+0xff81731c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 1017448:	e0fff517 	ldw	r3,-44(fp)
 101744c:	e0bffd17 	ldw	r2,-12(fp)
 1017450:	18801826 	beq	r3,r2,10174b4 <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1017454:	0005303a 	rdctl	r2,status
 1017458:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 101745c:	e0fffa17 	ldw	r3,-24(fp)
 1017460:	00bfff84 	movi	r2,-2
 1017464:	1884703a 	and	r2,r3,r2
 1017468:	1001703a 	wrctl	status,r2
  
  return context;
 101746c:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 1017470:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 1017474:	e0bffc17 	ldw	r2,-16(fp)
 1017478:	10800817 	ldw	r2,32(r2)
 101747c:	10c00054 	ori	r3,r2,1
 1017480:	e0bffc17 	ldw	r2,-16(fp)
 1017484:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 1017488:	e0bffc17 	ldw	r2,-16(fp)
 101748c:	10800017 	ldw	r2,0(r2)
 1017490:	10800104 	addi	r2,r2,4
 1017494:	1007883a 	mov	r3,r2
 1017498:	e0bffc17 	ldw	r2,-16(fp)
 101749c:	10800817 	ldw	r2,32(r2)
 10174a0:	18800035 	stwio	r2,0(r3)
 10174a4:	e0bff917 	ldw	r2,-28(fp)
 10174a8:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 10174ac:	e0bffb17 	ldw	r2,-20(fp)
 10174b0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 10174b4:	e0fff517 	ldw	r3,-44(fp)
 10174b8:	e0bffd17 	ldw	r2,-12(fp)
 10174bc:	18800426 	beq	r3,r2,10174d0 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
 10174c0:	e0fff517 	ldw	r3,-44(fp)
 10174c4:	e0bffd17 	ldw	r2,-12(fp)
 10174c8:	1885c83a 	sub	r2,r3,r2
 10174cc:	00000606 	br	10174e8 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
 10174d0:	e0bfff17 	ldw	r2,-4(fp)
 10174d4:	1090000c 	andi	r2,r2,16384
 10174d8:	10000226 	beq	r2,zero,10174e4 <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
 10174dc:	00bffd44 	movi	r2,-11
 10174e0:	00000106 	br	10174e8 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
 10174e4:	00bffec4 	movi	r2,-5
}
 10174e8:	e037883a 	mov	sp,fp
 10174ec:	dfc00117 	ldw	ra,4(sp)
 10174f0:	df000017 	ldw	fp,0(sp)
 10174f4:	dec00204 	addi	sp,sp,8
 10174f8:	f800283a 	ret

010174fc <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 10174fc:	defff304 	addi	sp,sp,-52
 1017500:	dfc00c15 	stw	ra,48(sp)
 1017504:	df000b15 	stw	fp,44(sp)
 1017508:	df000b04 	addi	fp,sp,44
 101750c:	e13ffc15 	stw	r4,-16(fp)
 1017510:	e17ffd15 	stw	r5,-12(fp)
 1017514:	e1bffe15 	stw	r6,-8(fp)
 1017518:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 101751c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 1017520:	e0bffd17 	ldw	r2,-12(fp)
 1017524:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 1017528:	00003806 	br	101760c <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 101752c:	e0bffc17 	ldw	r2,-16(fp)
 1017530:	10800c17 	ldw	r2,48(r2)
 1017534:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
 1017538:	e0bffc17 	ldw	r2,-16(fp)
 101753c:	10800d17 	ldw	r2,52(r2)
 1017540:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 1017544:	e0fff817 	ldw	r3,-32(fp)
 1017548:	e0bff517 	ldw	r2,-44(fp)
 101754c:	1880062e 	bgeu	r3,r2,1017568 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 1017550:	e0fff517 	ldw	r3,-44(fp)
 1017554:	e0bff817 	ldw	r2,-32(fp)
 1017558:	1885c83a 	sub	r2,r3,r2
 101755c:	10bfffc4 	addi	r2,r2,-1
 1017560:	e0bff615 	stw	r2,-40(fp)
 1017564:	00000b06 	br	1017594 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 1017568:	e0bff517 	ldw	r2,-44(fp)
 101756c:	10000526 	beq	r2,zero,1017584 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 1017570:	00c20004 	movi	r3,2048
 1017574:	e0bff817 	ldw	r2,-32(fp)
 1017578:	1885c83a 	sub	r2,r3,r2
 101757c:	e0bff615 	stw	r2,-40(fp)
 1017580:	00000406 	br	1017594 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 1017584:	00c1ffc4 	movi	r3,2047
 1017588:	e0bff817 	ldw	r2,-32(fp)
 101758c:	1885c83a 	sub	r2,r3,r2
 1017590:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 1017594:	e0bff617 	ldw	r2,-40(fp)
 1017598:	1000011e 	bne	r2,zero,10175a0 <altera_avalon_jtag_uart_write+0xa4>
        break;
 101759c:	00001d06 	br	1017614 <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
 10175a0:	e0fffe17 	ldw	r3,-8(fp)
 10175a4:	e0bff617 	ldw	r2,-40(fp)
 10175a8:	1880022e 	bgeu	r3,r2,10175b4 <altera_avalon_jtag_uart_write+0xb8>
        n = count;
 10175ac:	e0bffe17 	ldw	r2,-8(fp)
 10175b0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 10175b4:	e0bff817 	ldw	r2,-32(fp)
 10175b8:	10820e04 	addi	r2,r2,2104
 10175bc:	e0fffc17 	ldw	r3,-16(fp)
 10175c0:	1885883a 	add	r2,r3,r2
 10175c4:	1009883a 	mov	r4,r2
 10175c8:	e17ffd17 	ldw	r5,-12(fp)
 10175cc:	e1bff617 	ldw	r6,-40(fp)
 10175d0:	100f3f80 	call	100f3f8 <memcpy>
      ptr   += n;
 10175d4:	e0fffd17 	ldw	r3,-12(fp)
 10175d8:	e0bff617 	ldw	r2,-40(fp)
 10175dc:	1885883a 	add	r2,r3,r2
 10175e0:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 10175e4:	e0fffe17 	ldw	r3,-8(fp)
 10175e8:	e0bff617 	ldw	r2,-40(fp)
 10175ec:	1885c83a 	sub	r2,r3,r2
 10175f0:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 10175f4:	e0fff817 	ldw	r3,-32(fp)
 10175f8:	e0bff617 	ldw	r2,-40(fp)
 10175fc:	1885883a 	add	r2,r3,r2
 1017600:	10c1ffcc 	andi	r3,r2,2047
 1017604:	e0bffc17 	ldw	r2,-16(fp)
 1017608:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 101760c:	e0bffe17 	ldw	r2,-8(fp)
 1017610:	00bfc616 	blt	zero,r2,101752c <__alt_data_end+0xff81752c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1017614:	0005303a 	rdctl	r2,status
 1017618:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 101761c:	e0fffa17 	ldw	r3,-24(fp)
 1017620:	00bfff84 	movi	r2,-2
 1017624:	1884703a 	and	r2,r3,r2
 1017628:	1001703a 	wrctl	status,r2
  
  return context;
 101762c:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 1017630:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 1017634:	e0bffc17 	ldw	r2,-16(fp)
 1017638:	10800817 	ldw	r2,32(r2)
 101763c:	10c00094 	ori	r3,r2,2
 1017640:	e0bffc17 	ldw	r2,-16(fp)
 1017644:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 1017648:	e0bffc17 	ldw	r2,-16(fp)
 101764c:	10800017 	ldw	r2,0(r2)
 1017650:	10800104 	addi	r2,r2,4
 1017654:	1007883a 	mov	r3,r2
 1017658:	e0bffc17 	ldw	r2,-16(fp)
 101765c:	10800817 	ldw	r2,32(r2)
 1017660:	18800035 	stwio	r2,0(r3)
 1017664:	e0bff917 	ldw	r2,-28(fp)
 1017668:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 101766c:	e0bffb17 	ldw	r2,-20(fp)
 1017670:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 1017674:	e0bffe17 	ldw	r2,-8(fp)
 1017678:	0080120e 	bge	zero,r2,10176c4 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
 101767c:	e0bfff17 	ldw	r2,-4(fp)
 1017680:	1090000c 	andi	r2,r2,16384
 1017684:	10000126 	beq	r2,zero,101768c <altera_avalon_jtag_uart_write+0x190>
        break;
 1017688:	00001006 	br	10176cc <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 101768c:	0001883a 	nop
 1017690:	e0bffc17 	ldw	r2,-16(fp)
 1017694:	10c00d17 	ldw	r3,52(r2)
 1017698:	e0bff517 	ldw	r2,-44(fp)
 101769c:	1880051e 	bne	r3,r2,10176b4 <altera_avalon_jtag_uart_write+0x1b8>
 10176a0:	e0bffc17 	ldw	r2,-16(fp)
 10176a4:	10c00917 	ldw	r3,36(r2)
 10176a8:	e0bffc17 	ldw	r2,-16(fp)
 10176ac:	10800117 	ldw	r2,4(r2)
 10176b0:	18bff736 	bltu	r3,r2,1017690 <__alt_data_end+0xff817690>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 10176b4:	e0bffc17 	ldw	r2,-16(fp)
 10176b8:	10800917 	ldw	r2,36(r2)
 10176bc:	10000126 	beq	r2,zero,10176c4 <altera_avalon_jtag_uart_write+0x1c8>
         break;
 10176c0:	00000206 	br	10176cc <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
 10176c4:	e0bffe17 	ldw	r2,-8(fp)
 10176c8:	00bf9716 	blt	zero,r2,1017528 <__alt_data_end+0xff817528>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 10176cc:	e0fffd17 	ldw	r3,-12(fp)
 10176d0:	e0bff717 	ldw	r2,-36(fp)
 10176d4:	18800426 	beq	r3,r2,10176e8 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
 10176d8:	e0fffd17 	ldw	r3,-12(fp)
 10176dc:	e0bff717 	ldw	r2,-36(fp)
 10176e0:	1885c83a 	sub	r2,r3,r2
 10176e4:	00000606 	br	1017700 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
 10176e8:	e0bfff17 	ldw	r2,-4(fp)
 10176ec:	1090000c 	andi	r2,r2,16384
 10176f0:	10000226 	beq	r2,zero,10176fc <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
 10176f4:	00bffd44 	movi	r2,-11
 10176f8:	00000106 	br	1017700 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 10176fc:	00bffec4 	movi	r2,-5
}
 1017700:	e037883a 	mov	sp,fp
 1017704:	dfc00117 	ldw	ra,4(sp)
 1017708:	df000017 	ldw	fp,0(sp)
 101770c:	dec00204 	addi	sp,sp,8
 1017710:	f800283a 	ret

01017714 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 1017714:	defff904 	addi	sp,sp,-28
 1017718:	dfc00615 	stw	ra,24(sp)
 101771c:	df000515 	stw	fp,20(sp)
 1017720:	df000504 	addi	fp,sp,20
 1017724:	e13ffe15 	stw	r4,-8(fp)
 1017728:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 101772c:	0007883a 	mov	r3,zero
 1017730:	e0bffe17 	ldw	r2,-8(fp)
 1017734:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 1017738:	e0bffe17 	ldw	r2,-8(fp)
 101773c:	10800104 	addi	r2,r2,4
 1017740:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1017744:	0005303a 	rdctl	r2,status
 1017748:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 101774c:	e0fffc17 	ldw	r3,-16(fp)
 1017750:	00bfff84 	movi	r2,-2
 1017754:	1884703a 	and	r2,r3,r2
 1017758:	1001703a 	wrctl	status,r2
  
  return context;
 101775c:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 1017760:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
 1017764:	1018b7c0 	call	1018b7c <alt_tick>
 1017768:	e0bffb17 	ldw	r2,-20(fp)
 101776c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1017770:	e0bffd17 	ldw	r2,-12(fp)
 1017774:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 1017778:	e037883a 	mov	sp,fp
 101777c:	dfc00117 	ldw	ra,4(sp)
 1017780:	df000017 	ldw	fp,0(sp)
 1017784:	dec00204 	addi	sp,sp,8
 1017788:	f800283a 	ret

0101778c <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 101778c:	defff904 	addi	sp,sp,-28
 1017790:	dfc00615 	stw	ra,24(sp)
 1017794:	df000515 	stw	fp,20(sp)
 1017798:	df000504 	addi	fp,sp,20
 101779c:	e13ffc15 	stw	r4,-16(fp)
 10177a0:	e17ffd15 	stw	r5,-12(fp)
 10177a4:	e1bffe15 	stw	r6,-8(fp)
 10177a8:	e1ffff15 	stw	r7,-4(fp)
 10177ac:	e0bfff17 	ldw	r2,-4(fp)
 10177b0:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 10177b4:	008040b4 	movhi	r2,258
 10177b8:	10b45704 	addi	r2,r2,-11940
 10177bc:	10800017 	ldw	r2,0(r2)
 10177c0:	1000041e 	bne	r2,zero,10177d4 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
 10177c4:	008040b4 	movhi	r2,258
 10177c8:	10b45704 	addi	r2,r2,-11940
 10177cc:	e0fffb17 	ldw	r3,-20(fp)
 10177d0:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 10177d4:	e0bffc17 	ldw	r2,-16(fp)
 10177d8:	10800104 	addi	r2,r2,4
 10177dc:	00c001c4 	movi	r3,7
 10177e0:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
 10177e4:	e13ffe17 	ldw	r4,-8(fp)
 10177e8:	e17ffc17 	ldw	r5,-16(fp)
 10177ec:	01804074 	movhi	r6,257
 10177f0:	319dc504 	addi	r6,r6,30484
 10177f4:	10186c00 	call	10186c0 <alt_irq_register>
#endif  
}
 10177f8:	e037883a 	mov	sp,fp
 10177fc:	dfc00117 	ldw	ra,4(sp)
 1017800:	df000017 	ldw	fp,0(sp)
 1017804:	dec00204 	addi	sp,sp,8
 1017808:	f800283a 	ret

0101780c <get_DDRAM_addr>:
 * @sa the datasheet for the LCD Display Controller on the DE2 Board
 * @note the function requires that the input are in the valid range
 *
 **/
unsigned char get_DDRAM_addr(unsigned x_pos, unsigned y_pos)
{
 101780c:	defffc04 	addi	sp,sp,-16
 1017810:	df000315 	stw	fp,12(sp)
 1017814:	df000304 	addi	fp,sp,12
 1017818:	e13ffe15 	stw	r4,-8(fp)
 101781c:	e17fff15 	stw	r5,-4(fp)
	//assume valid inputs
	unsigned char addr = 0x00000000;
 1017820:	e03ffd05 	stb	zero,-12(fp)
	if (y_pos == 0)
 1017824:	e0bfff17 	ldw	r2,-4(fp)
 1017828:	1000061e 	bne	r2,zero,1017844 <get_DDRAM_addr+0x38>
	{
		addr |= x_pos;
 101782c:	e0bffe17 	ldw	r2,-8(fp)
 1017830:	1007883a 	mov	r3,r2
 1017834:	e0bffd03 	ldbu	r2,-12(fp)
 1017838:	1884b03a 	or	r2,r3,r2
 101783c:	e0bffd05 	stb	r2,-12(fp)
 1017840:	00000806 	br	1017864 <get_DDRAM_addr+0x58>
	}
	else
	{
		addr |= x_pos;
 1017844:	e0bffe17 	ldw	r2,-8(fp)
 1017848:	1007883a 	mov	r3,r2
 101784c:	e0bffd03 	ldbu	r2,-12(fp)
 1017850:	1884b03a 	or	r2,r3,r2
 1017854:	e0bffd05 	stb	r2,-12(fp)
		addr |= 0x00000040;
 1017858:	e0bffd03 	ldbu	r2,-12(fp)
 101785c:	10801014 	ori	r2,r2,64
 1017860:	e0bffd05 	stb	r2,-12(fp)
	}
	// b_7 is always 1 for DDRAM address, see datasheet
	return (addr | 0x00000080);
 1017864:	e0fffd03 	ldbu	r3,-12(fp)
 1017868:	00bfe004 	movi	r2,-128
 101786c:	1884b03a 	or	r2,r3,r2
}
 1017870:	e037883a 	mov	sp,fp
 1017874:	df000017 	ldw	fp,0(sp)
 1017878:	dec00104 	addi	sp,sp,4
 101787c:	f800283a 	ret

01017880 <alt_up_character_lcd_send_cmd>:
 * @param cmd -- the command bits 
 *
 * @return nothing
 **/
void alt_up_character_lcd_send_cmd(alt_up_character_lcd_dev *lcd, unsigned char cmd)
{
 1017880:	defffd04 	addi	sp,sp,-12
 1017884:	df000215 	stw	fp,8(sp)
 1017888:	df000204 	addi	fp,sp,8
 101788c:	e13ffe15 	stw	r4,-8(fp)
 1017890:	2805883a 	mov	r2,r5
 1017894:	e0bfff05 	stb	r2,-4(fp)
 	// NOTE: We use the term Instruction Register and Control Register interchangeably
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, cmd);
 1017898:	e0bffe17 	ldw	r2,-8(fp)
 101789c:	10800a17 	ldw	r2,40(r2)
 10178a0:	1007883a 	mov	r3,r2
 10178a4:	e0bfff03 	ldbu	r2,-4(fp)
 10178a8:	18800025 	stbio	r2,0(r3)
}
 10178ac:	e037883a 	mov	sp,fp
 10178b0:	df000017 	ldw	fp,0(sp)
 10178b4:	dec00104 	addi	sp,sp,4
 10178b8:	f800283a 	ret

010178bc <alt_up_character_lcd_init>:
 * file for a detailed description of each function
 */
////////////////////////////////////////////////////////////////////////////

void alt_up_character_lcd_init(alt_up_character_lcd_dev *lcd)
{
 10178bc:	defffe04 	addi	sp,sp,-8
 10178c0:	df000115 	stw	fp,4(sp)
 10178c4:	df000104 	addi	fp,sp,4
 10178c8:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_CHARACTER_LCD_COMMAND(lcd->base, ALT_UP_CHARACTER_LCD_COMM_CLEAR_DISPLAY);
 10178cc:	e0bfff17 	ldw	r2,-4(fp)
 10178d0:	10800a17 	ldw	r2,40(r2)
 10178d4:	1007883a 	mov	r3,r2
 10178d8:	00800044 	movi	r2,1
 10178dc:	18800025 	stbio	r2,0(r3)
	// register the device 
	// see "Developing Device Drivers for the HAL" in "Nios II Software Developer's Handbook"
}
 10178e0:	e037883a 	mov	sp,fp
 10178e4:	df000017 	ldw	fp,0(sp)
 10178e8:	dec00104 	addi	sp,sp,4
 10178ec:	f800283a 	ret

010178f0 <alt_up_character_lcd_open_dev>:

alt_up_character_lcd_dev* alt_up_character_lcd_open_dev(const char* name)
{
 10178f0:	defffc04 	addi	sp,sp,-16
 10178f4:	dfc00315 	stw	ra,12(sp)
 10178f8:	df000215 	stw	fp,8(sp)
 10178fc:	df000204 	addi	fp,sp,8
 1017900:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_character_lcd_dev *dev = (alt_up_character_lcd_dev*)alt_find_dev(name, &alt_dev_list);
 1017904:	e13fff17 	ldw	r4,-4(fp)
 1017908:	014040b4 	movhi	r5,258
 101790c:	296d3f04 	addi	r5,r5,-19204
 1017910:	10184c80 	call	10184c8 <alt_find_dev>
 1017914:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 1017918:	e0bffe17 	ldw	r2,-8(fp)
}
 101791c:	e037883a 	mov	sp,fp
 1017920:	dfc00117 	ldw	ra,4(sp)
 1017924:	df000017 	ldw	fp,0(sp)
 1017928:	dec00204 	addi	sp,sp,8
 101792c:	f800283a 	ret

01017930 <alt_up_character_lcd_write>:

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
 1017930:	defffb04 	addi	sp,sp,-20
 1017934:	df000415 	stw	fp,16(sp)
 1017938:	df000404 	addi	fp,sp,16
 101793c:	e13ffd15 	stw	r4,-12(fp)
 1017940:	e17ffe15 	stw	r5,-8(fp)
 1017944:	e1bfff15 	stw	r6,-4(fp)
	unsigned int i;
	for (i = 0; i < len; i++)
 1017948:	e03ffc15 	stw	zero,-16(fp)
 101794c:	00000f06 	br	101798c <alt_up_character_lcd_write+0x5c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
 1017950:	e0bffd17 	ldw	r2,-12(fp)
 1017954:	10800a17 	ldw	r2,40(r2)
 1017958:	10800044 	addi	r2,r2,1
 101795c:	1009883a 	mov	r4,r2
 1017960:	e0fffe17 	ldw	r3,-8(fp)
 1017964:	e0bffc17 	ldw	r2,-16(fp)
 1017968:	1885883a 	add	r2,r3,r2
 101796c:	10800003 	ldbu	r2,0(r2)
 1017970:	10803fcc 	andi	r2,r2,255
 1017974:	1080201c 	xori	r2,r2,128
 1017978:	10bfe004 	addi	r2,r2,-128
 101797c:	20800025 	stbio	r2,0(r4)
}

void alt_up_character_lcd_write(alt_up_character_lcd_dev *dev, const char *ptr, unsigned int len)
{
	unsigned int i;
	for (i = 0; i < len; i++)
 1017980:	e0bffc17 	ldw	r2,-16(fp)
 1017984:	10800044 	addi	r2,r2,1
 1017988:	e0bffc15 	stw	r2,-16(fp)
 101798c:	e0fffc17 	ldw	r3,-16(fp)
 1017990:	e0bfff17 	ldw	r2,-4(fp)
 1017994:	18bfee36 	bltu	r3,r2,1017950 <__alt_data_end+0xff817950>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr+i));
	}
}
 1017998:	e037883a 	mov	sp,fp
 101799c:	df000017 	ldw	fp,0(sp)
 10179a0:	dec00104 	addi	sp,sp,4
 10179a4:	f800283a 	ret

010179a8 <alt_up_character_lcd_string>:

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
 10179a8:	defffd04 	addi	sp,sp,-12
 10179ac:	df000215 	stw	fp,8(sp)
 10179b0:	df000204 	addi	fp,sp,8
 10179b4:	e13ffe15 	stw	r4,-8(fp)
 10179b8:	e17fff15 	stw	r5,-4(fp)
	while ( *ptr )
 10179bc:	00000d06 	br	10179f4 <alt_up_character_lcd_string+0x4c>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
 10179c0:	e0bffe17 	ldw	r2,-8(fp)
 10179c4:	10800a17 	ldw	r2,40(r2)
 10179c8:	10800044 	addi	r2,r2,1
 10179cc:	1007883a 	mov	r3,r2
 10179d0:	e0bfff17 	ldw	r2,-4(fp)
 10179d4:	10800003 	ldbu	r2,0(r2)
 10179d8:	10803fcc 	andi	r2,r2,255
 10179dc:	1080201c 	xori	r2,r2,128
 10179e0:	10bfe004 	addi	r2,r2,-128
 10179e4:	18800025 	stbio	r2,0(r3)
		++ptr;
 10179e8:	e0bfff17 	ldw	r2,-4(fp)
 10179ec:	10800044 	addi	r2,r2,1
 10179f0:	e0bfff15 	stw	r2,-4(fp)
	}
}

void alt_up_character_lcd_string(alt_up_character_lcd_dev *dev, const char *ptr)
{
	while ( *ptr )
 10179f4:	e0bfff17 	ldw	r2,-4(fp)
 10179f8:	10800003 	ldbu	r2,0(r2)
 10179fc:	10803fcc 	andi	r2,r2,255
 1017a00:	1080201c 	xori	r2,r2,128
 1017a04:	10bfe004 	addi	r2,r2,-128
 1017a08:	103fed1e 	bne	r2,zero,10179c0 <__alt_data_end+0xff8179c0>
	{
		IOWR_ALT_UP_CHARACTER_LCD_DATA(dev->base, *(ptr));
		++ptr;
	}
}
 1017a0c:	e037883a 	mov	sp,fp
 1017a10:	df000017 	ldw	fp,0(sp)
 1017a14:	dec00104 	addi	sp,sp,4
 1017a18:	f800283a 	ret

01017a1c <alt_up_character_lcd_write_fd>:

// this function isn't used, and is included for future upgrades
int alt_up_character_lcd_write_fd(alt_fd *fd, const char *ptr, int len)
{
 1017a1c:	defffb04 	addi	sp,sp,-20
 1017a20:	dfc00415 	stw	ra,16(sp)
 1017a24:	df000315 	stw	fp,12(sp)
 1017a28:	df000304 	addi	fp,sp,12
 1017a2c:	e13ffd15 	stw	r4,-12(fp)
 1017a30:	e17ffe15 	stw	r5,-8(fp)
 1017a34:	e1bfff15 	stw	r6,-4(fp)
	alt_up_character_lcd_write( (alt_up_character_lcd_dev *) fd->dev, ptr, (unsigned int) len);
 1017a38:	e0bffd17 	ldw	r2,-12(fp)
 1017a3c:	10c00017 	ldw	r3,0(r2)
 1017a40:	e0bfff17 	ldw	r2,-4(fp)
 1017a44:	1809883a 	mov	r4,r3
 1017a48:	e17ffe17 	ldw	r5,-8(fp)
 1017a4c:	100d883a 	mov	r6,r2
 1017a50:	10179300 	call	1017930 <alt_up_character_lcd_write>
	return 0;
 1017a54:	0005883a 	mov	r2,zero
}
 1017a58:	e037883a 	mov	sp,fp
 1017a5c:	dfc00117 	ldw	ra,4(sp)
 1017a60:	df000017 	ldw	fp,0(sp)
 1017a64:	dec00204 	addi	sp,sp,8
 1017a68:	f800283a 	ret

01017a6c <alt_up_character_lcd_set_cursor_pos>:

int alt_up_character_lcd_set_cursor_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, 
	 unsigned y_pos)
{
 1017a6c:	defffa04 	addi	sp,sp,-24
 1017a70:	dfc00515 	stw	ra,20(sp)
 1017a74:	df000415 	stw	fp,16(sp)
 1017a78:	df000404 	addi	fp,sp,16
 1017a7c:	e13ffd15 	stw	r4,-12(fp)
 1017a80:	e17ffe15 	stw	r5,-8(fp)
 1017a84:	e1bfff15 	stw	r6,-4(fp)
	//boundary check
	if (x_pos > 39 || y_pos > 1 )
 1017a88:	e0bffe17 	ldw	r2,-8(fp)
 1017a8c:	10800a28 	cmpgeui	r2,r2,40
 1017a90:	1000031e 	bne	r2,zero,1017aa0 <alt_up_character_lcd_set_cursor_pos+0x34>
 1017a94:	e0bfff17 	ldw	r2,-4(fp)
 1017a98:	108000b0 	cmpltui	r2,r2,2
 1017a9c:	1000021e 	bne	r2,zero,1017aa8 <alt_up_character_lcd_set_cursor_pos+0x3c>
		// invalid argument
		return -1;
 1017aa0:	00bfffc4 	movi	r2,-1
 1017aa4:	00000906 	br	1017acc <alt_up_character_lcd_set_cursor_pos+0x60>
	// calculate address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
 1017aa8:	e13ffe17 	ldw	r4,-8(fp)
 1017aac:	e17fff17 	ldw	r5,-4(fp)
 1017ab0:	101780c0 	call	101780c <get_DDRAM_addr>
 1017ab4:	e0bffc05 	stb	r2,-16(fp)
	// set the cursor
	alt_up_character_lcd_send_cmd(lcd, addr);
 1017ab8:	e0bffc03 	ldbu	r2,-16(fp)
 1017abc:	e13ffd17 	ldw	r4,-12(fp)
 1017ac0:	100b883a 	mov	r5,r2
 1017ac4:	10178800 	call	1017880 <alt_up_character_lcd_send_cmd>
	return 0;
 1017ac8:	0005883a 	mov	r2,zero
}
 1017acc:	e037883a 	mov	sp,fp
 1017ad0:	dfc00117 	ldw	ra,4(sp)
 1017ad4:	df000017 	ldw	fp,0(sp)
 1017ad8:	dec00204 	addi	sp,sp,8
 1017adc:	f800283a 	ret

01017ae0 <alt_up_character_lcd_shift_cursor>:

void alt_up_character_lcd_shift_cursor(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
 1017ae0:	defffb04 	addi	sp,sp,-20
 1017ae4:	dfc00415 	stw	ra,16(sp)
 1017ae8:	df000315 	stw	fp,12(sp)
 1017aec:	df000304 	addi	fp,sp,12
 1017af0:	e13ffe15 	stw	r4,-8(fp)
 1017af4:	e17fff15 	stw	r5,-4(fp)
	if (x_right_shift_offset == 0) 
 1017af8:	e0bfff17 	ldw	r2,-4(fp)
 1017afc:	1000011e 	bne	r2,zero,1017b04 <alt_up_character_lcd_shift_cursor+0x24>
		// don't ask me to do nothing 
		return;
 1017b00:	00001406 	br	1017b54 <alt_up_character_lcd_shift_cursor+0x74>

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
 1017b04:	e0bfff17 	ldw	r2,-4(fp)
 1017b08:	0080020e 	bge	zero,r2,1017b14 <alt_up_character_lcd_shift_cursor+0x34>
 1017b0c:	00800504 	movi	r2,20
 1017b10:	00000106 	br	1017b18 <alt_up_character_lcd_shift_cursor+0x38>
 1017b14:	00800404 	movi	r2,16
 1017b18:	e0bffd45 	stb	r2,-11(fp)
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
 1017b1c:	e0bfff17 	ldw	r2,-4(fp)
 1017b20:	1000010e 	bge	r2,zero,1017b28 <alt_up_character_lcd_shift_cursor+0x48>
 1017b24:	0085c83a 	sub	r2,zero,r2
 1017b28:	e0bffd05 	stb	r2,-12(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
 1017b2c:	00000406 	br	1017b40 <alt_up_character_lcd_shift_cursor+0x60>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
 1017b30:	e0bffd43 	ldbu	r2,-11(fp)
 1017b34:	e13ffe17 	ldw	r4,-8(fp)
 1017b38:	100b883a 	mov	r5,r2
 1017b3c:	10178800 	call	1017880 <alt_up_character_lcd_send_cmd>
		ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_CURSOR_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
 1017b40:	e0bffd03 	ldbu	r2,-12(fp)
 1017b44:	10ffffc4 	addi	r3,r2,-1
 1017b48:	e0fffd05 	stb	r3,-12(fp)
 1017b4c:	10803fcc 	andi	r2,r2,255
 1017b50:	103ff71e 	bne	r2,zero,1017b30 <__alt_data_end+0xff817b30>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
}
 1017b54:	e037883a 	mov	sp,fp
 1017b58:	dfc00117 	ldw	ra,4(sp)
 1017b5c:	df000017 	ldw	fp,0(sp)
 1017b60:	dec00204 	addi	sp,sp,8
 1017b64:	f800283a 	ret

01017b68 <alt_up_character_lcd_shift_display>:

void alt_up_character_lcd_shift_display(alt_up_character_lcd_dev *lcd, int x_right_shift_offset)
{
 1017b68:	defffb04 	addi	sp,sp,-20
 1017b6c:	dfc00415 	stw	ra,16(sp)
 1017b70:	df000315 	stw	fp,12(sp)
 1017b74:	df000304 	addi	fp,sp,12
 1017b78:	e13ffe15 	stw	r4,-8(fp)
 1017b7c:	e17fff15 	stw	r5,-4(fp)
	if (x_right_shift_offset == 0) 
 1017b80:	e0bfff17 	ldw	r2,-4(fp)
 1017b84:	1000011e 	bne	r2,zero,1017b8c <alt_up_character_lcd_shift_display+0x24>
		// don't ask me to do nothing 
		return;
 1017b88:	00001406 	br	1017bdc <alt_up_character_lcd_shift_display+0x74>

	// see shift right or left
	unsigned char shift_cmd = (x_right_shift_offset > 0) ? 
 1017b8c:	e0bfff17 	ldw	r2,-4(fp)
 1017b90:	0080020e 	bge	zero,r2,1017b9c <alt_up_character_lcd_shift_display+0x34>
 1017b94:	00800704 	movi	r2,28
 1017b98:	00000106 	br	1017ba0 <alt_up_character_lcd_shift_display+0x38>
 1017b9c:	00800604 	movi	r2,24
 1017ba0:	e0bffd45 	stb	r2,-11(fp)
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
 1017ba4:	e0bfff17 	ldw	r2,-4(fp)
 1017ba8:	1000010e 	bge	r2,zero,1017bb0 <alt_up_character_lcd_shift_display+0x48>
 1017bac:	0085c83a 	sub	r2,zero,r2
 1017bb0:	e0bffd05 	stb	r2,-12(fp)
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
 1017bb4:	00000406 	br	1017bc8 <alt_up_character_lcd_shift_display+0x60>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
 1017bb8:	e0bffd43 	ldbu	r2,-11(fp)
 1017bbc:	e13ffe17 	ldw	r4,-8(fp)
 1017bc0:	100b883a 	mov	r5,r2
 1017bc4:	10178800 	call	1017880 <alt_up_character_lcd_send_cmd>
		ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_RIGHT : ALT_UP_CHARACTER_LCD_COMM_DISPLAY_SHIFT_LEFT;
	// see how many to shift
	unsigned char num_offset = (x_right_shift_offset > 0) ? x_right_shift_offset : 
		-x_right_shift_offset;
	// do the shift
	while (num_offset-- > 0)
 1017bc8:	e0bffd03 	ldbu	r2,-12(fp)
 1017bcc:	10ffffc4 	addi	r3,r2,-1
 1017bd0:	e0fffd05 	stb	r3,-12(fp)
 1017bd4:	10803fcc 	andi	r2,r2,255
 1017bd8:	103ff71e 	bne	r2,zero,1017bb8 <__alt_data_end+0xff817bb8>
		alt_up_character_lcd_send_cmd(lcd, shift_cmd);
}
 1017bdc:	e037883a 	mov	sp,fp
 1017be0:	dfc00117 	ldw	ra,4(sp)
 1017be4:	df000017 	ldw	fp,0(sp)
 1017be8:	dec00204 	addi	sp,sp,8
 1017bec:	f800283a 	ret

01017bf0 <alt_up_character_lcd_erase_pos>:

int alt_up_character_lcd_erase_pos(alt_up_character_lcd_dev *lcd, unsigned x_pos, unsigned y_pos)
{
 1017bf0:	defffa04 	addi	sp,sp,-24
 1017bf4:	dfc00515 	stw	ra,20(sp)
 1017bf8:	df000415 	stw	fp,16(sp)
 1017bfc:	df000404 	addi	fp,sp,16
 1017c00:	e13ffd15 	stw	r4,-12(fp)
 1017c04:	e17ffe15 	stw	r5,-8(fp)
 1017c08:	e1bfff15 	stw	r6,-4(fp)
	// boundary check
	if (x_pos > 39 || y_pos > 1 )
 1017c0c:	e0bffe17 	ldw	r2,-8(fp)
 1017c10:	10800a28 	cmpgeui	r2,r2,40
 1017c14:	1000031e 	bne	r2,zero,1017c24 <alt_up_character_lcd_erase_pos+0x34>
 1017c18:	e0bfff17 	ldw	r2,-4(fp)
 1017c1c:	108000b0 	cmpltui	r2,r2,2
 1017c20:	1000021e 	bne	r2,zero,1017c2c <alt_up_character_lcd_erase_pos+0x3c>
		return -1;
 1017c24:	00bfffc4 	movi	r2,-1
 1017c28:	00000f06 	br	1017c68 <alt_up_character_lcd_erase_pos+0x78>

	// get address
	unsigned char addr = get_DDRAM_addr(x_pos, y_pos);
 1017c2c:	e13ffe17 	ldw	r4,-8(fp)
 1017c30:	e17fff17 	ldw	r5,-4(fp)
 1017c34:	101780c0 	call	101780c <get_DDRAM_addr>
 1017c38:	e0bffc05 	stb	r2,-16(fp)
	// set cursor to dest point
	alt_up_character_lcd_send_cmd(lcd, addr);
 1017c3c:	e0bffc03 	ldbu	r2,-16(fp)
 1017c40:	e13ffd17 	ldw	r4,-12(fp)
 1017c44:	100b883a 	mov	r5,r2
 1017c48:	10178800 	call	1017880 <alt_up_character_lcd_send_cmd>
	//send an empty char as erase (refer to the Character Generator ROM part of the Datasheet)
	IOWR_ALT_UP_CHARACTER_LCD_DATA(lcd->base, (0x00000002) );
 1017c4c:	e0bffd17 	ldw	r2,-12(fp)
 1017c50:	10800a17 	ldw	r2,40(r2)
 1017c54:	10800044 	addi	r2,r2,1
 1017c58:	1007883a 	mov	r3,r2
 1017c5c:	00800084 	movi	r2,2
 1017c60:	18800025 	stbio	r2,0(r3)
	return 0;
 1017c64:	0005883a 	mov	r2,zero
}
 1017c68:	e037883a 	mov	sp,fp
 1017c6c:	dfc00117 	ldw	ra,4(sp)
 1017c70:	df000017 	ldw	fp,0(sp)
 1017c74:	dec00204 	addi	sp,sp,8
 1017c78:	f800283a 	ret

01017c7c <alt_up_character_lcd_cursor_off>:

void alt_up_character_lcd_cursor_off(alt_up_character_lcd_dev *lcd)
{
 1017c7c:	defffd04 	addi	sp,sp,-12
 1017c80:	dfc00215 	stw	ra,8(sp)
 1017c84:	df000115 	stw	fp,4(sp)
 1017c88:	df000104 	addi	fp,sp,4
 1017c8c:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_OFF);
 1017c90:	e13fff17 	ldw	r4,-4(fp)
 1017c94:	01400304 	movi	r5,12
 1017c98:	10178800 	call	1017880 <alt_up_character_lcd_send_cmd>
}
 1017c9c:	e037883a 	mov	sp,fp
 1017ca0:	dfc00117 	ldw	ra,4(sp)
 1017ca4:	df000017 	ldw	fp,0(sp)
 1017ca8:	dec00204 	addi	sp,sp,8
 1017cac:	f800283a 	ret

01017cb0 <alt_up_character_lcd_cursor_blink_on>:

void alt_up_character_lcd_cursor_blink_on(alt_up_character_lcd_dev *lcd)
{
 1017cb0:	defffd04 	addi	sp,sp,-12
 1017cb4:	dfc00215 	stw	ra,8(sp)
 1017cb8:	df000115 	stw	fp,4(sp)
 1017cbc:	df000104 	addi	fp,sp,4
 1017cc0:	e13fff15 	stw	r4,-4(fp)
	alt_up_character_lcd_send_cmd(lcd, ALT_UP_CHARACTER_LCD_COMM_CURSOR_BLINK_ON);
 1017cc4:	e13fff17 	ldw	r4,-4(fp)
 1017cc8:	014003c4 	movi	r5,15
 1017ccc:	10178800 	call	1017880 <alt_up_character_lcd_send_cmd>
}
 1017cd0:	e037883a 	mov	sp,fp
 1017cd4:	dfc00117 	ldw	ra,4(sp)
 1017cd8:	df000017 	ldw	fp,0(sp)
 1017cdc:	dec00204 	addi	sp,sp,8
 1017ce0:	f800283a 	ret

01017ce4 <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
 1017ce4:	defffd04 	addi	sp,sp,-12
 1017ce8:	df000215 	stw	fp,8(sp)
 1017cec:	df000204 	addi	fp,sp,8
 1017cf0:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 1017cf4:	e0bfff17 	ldw	r2,-4(fp)
 1017cf8:	10800a17 	ldw	r2,40(r2)
 1017cfc:	10800104 	addi	r2,r2,4
 1017d00:	10800037 	ldwio	r2,0(r2)
 1017d04:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
 1017d08:	e0bffe17 	ldw	r2,-8(fp)
 1017d0c:	10800054 	ori	r2,r2,1
 1017d10:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 1017d14:	e0bfff17 	ldw	r2,-4(fp)
 1017d18:	10800a17 	ldw	r2,40(r2)
 1017d1c:	10800104 	addi	r2,r2,4
 1017d20:	1007883a 	mov	r3,r2
 1017d24:	e0bffe17 	ldw	r2,-8(fp)
 1017d28:	18800035 	stwio	r2,0(r3)
}
 1017d2c:	e037883a 	mov	sp,fp
 1017d30:	df000017 	ldw	fp,0(sp)
 1017d34:	dec00104 	addi	sp,sp,4
 1017d38:	f800283a 	ret

01017d3c <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
 1017d3c:	defffd04 	addi	sp,sp,-12
 1017d40:	df000215 	stw	fp,8(sp)
 1017d44:	df000204 	addi	fp,sp,8
 1017d48:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 1017d4c:	e0bfff17 	ldw	r2,-4(fp)
 1017d50:	10800a17 	ldw	r2,40(r2)
 1017d54:	10800104 	addi	r2,r2,4
 1017d58:	10800037 	ldwio	r2,0(r2)
 1017d5c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
 1017d60:	e0fffe17 	ldw	r3,-8(fp)
 1017d64:	00bfff84 	movi	r2,-2
 1017d68:	1884703a 	and	r2,r3,r2
 1017d6c:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 1017d70:	e0bfff17 	ldw	r2,-4(fp)
 1017d74:	10800a17 	ldw	r2,40(r2)
 1017d78:	10800104 	addi	r2,r2,4
 1017d7c:	1007883a 	mov	r3,r2
 1017d80:	e0bffe17 	ldw	r2,-8(fp)
 1017d84:	18800035 	stwio	r2,0(r3)
}
 1017d88:	e037883a 	mov	sp,fp
 1017d8c:	df000017 	ldw	fp,0(sp)
 1017d90:	dec00104 	addi	sp,sp,4
 1017d94:	f800283a 	ret

01017d98 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
 1017d98:	defffd04 	addi	sp,sp,-12
 1017d9c:	df000215 	stw	fp,8(sp)
 1017da0:	df000204 	addi	fp,sp,8
 1017da4:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
 1017da8:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
 1017dac:	e0bfff17 	ldw	r2,-4(fp)
 1017db0:	10800a17 	ldw	r2,40(r2)
 1017db4:	10800084 	addi	r2,r2,2
 1017db8:	1080002b 	ldhuio	r2,0(r2)
 1017dbc:	10bfffcc 	andi	r2,r2,65535
 1017dc0:	e0bffe0d 	sth	r2,-8(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
 1017dc4:	e0bffe0b 	ldhu	r2,-8(fp)
}
 1017dc8:	e037883a 	mov	sp,fp
 1017dcc:	df000017 	ldw	fp,0(sp)
 1017dd0:	dec00104 	addi	sp,sp,4
 1017dd4:	f800283a 	ret

01017dd8 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
 1017dd8:	defffd04 	addi	sp,sp,-12
 1017ddc:	df000215 	stw	fp,8(sp)
 1017de0:	df000204 	addi	fp,sp,8
 1017de4:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 1017de8:	e0bfff17 	ldw	r2,-4(fp)
 1017dec:	10800a17 	ldw	r2,40(r2)
 1017df0:	10800104 	addi	r2,r2,4
 1017df4:	10800037 	ldwio	r2,0(r2)
 1017df8:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
 1017dfc:	e0bffe17 	ldw	r2,-8(fp)
 1017e00:	1004d43a 	srli	r2,r2,16
}
 1017e04:	e037883a 	mov	sp,fp
 1017e08:	df000017 	ldw	fp,0(sp)
 1017e0c:	dec00104 	addi	sp,sp,4
 1017e10:	f800283a 	ret

01017e14 <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
 1017e14:	defffd04 	addi	sp,sp,-12
 1017e18:	df000215 	stw	fp,8(sp)
 1017e1c:	df000204 	addi	fp,sp,8
 1017e20:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
 1017e24:	e0bfff17 	ldw	r2,-4(fp)
 1017e28:	1080800c 	andi	r2,r2,512
 1017e2c:	1004d27a 	srli	r2,r2,9
 1017e30:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
 1017e34:	e0bffe17 	ldw	r2,-8(fp)
 1017e38:	10000226 	beq	r2,zero,1017e44 <alt_up_rs232_check_parity+0x30>
 1017e3c:	00bfffc4 	movi	r2,-1
 1017e40:	00000106 	br	1017e48 <alt_up_rs232_check_parity+0x34>
 1017e44:	0005883a 	mov	r2,zero
}
 1017e48:	e037883a 	mov	sp,fp
 1017e4c:	df000017 	ldw	fp,0(sp)
 1017e50:	dec00104 	addi	sp,sp,4
 1017e54:	f800283a 	ret

01017e58 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
 1017e58:	defffd04 	addi	sp,sp,-12
 1017e5c:	df000215 	stw	fp,8(sp)
 1017e60:	df000204 	addi	fp,sp,8
 1017e64:	e13ffe15 	stw	r4,-8(fp)
 1017e68:	2805883a 	mov	r2,r5
 1017e6c:	e0bfff05 	stb	r2,-4(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
 1017e70:	e0bffe17 	ldw	r2,-8(fp)
 1017e74:	10800a17 	ldw	r2,40(r2)
 1017e78:	1007883a 	mov	r3,r2
 1017e7c:	e0bfff03 	ldbu	r2,-4(fp)
 1017e80:	18800035 	stwio	r2,0(r3)
	return 0;
 1017e84:	0005883a 	mov	r2,zero
}
 1017e88:	e037883a 	mov	sp,fp
 1017e8c:	df000017 	ldw	fp,0(sp)
 1017e90:	dec00104 	addi	sp,sp,4
 1017e94:	f800283a 	ret

01017e98 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
 1017e98:	defffa04 	addi	sp,sp,-24
 1017e9c:	dfc00515 	stw	ra,20(sp)
 1017ea0:	df000415 	stw	fp,16(sp)
 1017ea4:	df000404 	addi	fp,sp,16
 1017ea8:	e13ffd15 	stw	r4,-12(fp)
 1017eac:	e17ffe15 	stw	r5,-8(fp)
 1017eb0:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
 1017eb4:	e0bffd17 	ldw	r2,-12(fp)
 1017eb8:	10800a17 	ldw	r2,40(r2)
 1017ebc:	10800037 	ldwio	r2,0(r2)
 1017ec0:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
 1017ec4:	e0bffc17 	ldw	r2,-16(fp)
 1017ec8:	1007883a 	mov	r3,r2
 1017ecc:	e0bffe17 	ldw	r2,-8(fp)
 1017ed0:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
 1017ed4:	e13ffc17 	ldw	r4,-16(fp)
 1017ed8:	1017e140 	call	1017e14 <alt_up_rs232_check_parity>
 1017edc:	1007883a 	mov	r3,r2
 1017ee0:	e0bfff17 	ldw	r2,-4(fp)
 1017ee4:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
 1017ee8:	e0bffc17 	ldw	r2,-16(fp)
 1017eec:	10a0000c 	andi	r2,r2,32768
 1017ef0:	1004d3fa 	srli	r2,r2,15
 1017ef4:	10bfffc4 	addi	r2,r2,-1
}
 1017ef8:	e037883a 	mov	sp,fp
 1017efc:	dfc00117 	ldw	ra,4(sp)
 1017f00:	df000017 	ldw	fp,0(sp)
 1017f04:	dec00204 	addi	sp,sp,8
 1017f08:	f800283a 	ret

01017f0c <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
 1017f0c:	defff804 	addi	sp,sp,-32
 1017f10:	dfc00715 	stw	ra,28(sp)
 1017f14:	df000615 	stw	fp,24(sp)
 1017f18:	df000604 	addi	fp,sp,24
 1017f1c:	e13ffd15 	stw	r4,-12(fp)
 1017f20:	e17ffe15 	stw	r5,-8(fp)
 1017f24:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 1017f28:	e0bffd17 	ldw	r2,-12(fp)
 1017f2c:	10800017 	ldw	r2,0(r2)
 1017f30:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
 1017f34:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
 1017f38:	00000e06 	br	1017f74 <alt_up_rs232_read_fd+0x68>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
 1017f3c:	e0bffe17 	ldw	r2,-8(fp)
 1017f40:	10c00044 	addi	r3,r2,1
 1017f44:	e0fffe15 	stw	r3,-8(fp)
 1017f48:	e0fffc04 	addi	r3,fp,-16
 1017f4c:	e13ffb17 	ldw	r4,-20(fp)
 1017f50:	100b883a 	mov	r5,r2
 1017f54:	180d883a 	mov	r6,r3
 1017f58:	1017e980 	call	1017e98 <alt_up_rs232_read_data>
 1017f5c:	1000041e 	bne	r2,zero,1017f70 <alt_up_rs232_read_fd+0x64>
			count++;
 1017f60:	e0bffa17 	ldw	r2,-24(fp)
 1017f64:	10800044 	addi	r2,r2,1
 1017f68:	e0bffa15 	stw	r2,-24(fp)
 1017f6c:	00000106 	br	1017f74 <alt_up_rs232_read_fd+0x68>
		else
			break;
 1017f70:	00000406 	br	1017f84 <alt_up_rs232_read_fd+0x78>
int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
 1017f74:	e0bfff17 	ldw	r2,-4(fp)
 1017f78:	10ffffc4 	addi	r3,r2,-1
 1017f7c:	e0ffff15 	stw	r3,-4(fp)
 1017f80:	103fee1e 	bne	r2,zero,1017f3c <__alt_data_end+0xff817f3c>
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
	}
	return count;
 1017f84:	e0bffa17 	ldw	r2,-24(fp)
}
 1017f88:	e037883a 	mov	sp,fp
 1017f8c:	dfc00117 	ldw	ra,4(sp)
 1017f90:	df000017 	ldw	fp,0(sp)
 1017f94:	dec00204 	addi	sp,sp,8
 1017f98:	f800283a 	ret

01017f9c <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
 1017f9c:	defff904 	addi	sp,sp,-28
 1017fa0:	dfc00615 	stw	ra,24(sp)
 1017fa4:	df000515 	stw	fp,20(sp)
 1017fa8:	df000504 	addi	fp,sp,20
 1017fac:	e13ffd15 	stw	r4,-12(fp)
 1017fb0:	e17ffe15 	stw	r5,-8(fp)
 1017fb4:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 1017fb8:	e0bffd17 	ldw	r2,-12(fp)
 1017fbc:	10800017 	ldw	r2,0(r2)
 1017fc0:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
 1017fc4:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
 1017fc8:	00000f06 	br	1018008 <alt_up_rs232_write_fd+0x6c>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
 1017fcc:	e0bffe17 	ldw	r2,-8(fp)
 1017fd0:	10800003 	ldbu	r2,0(r2)
 1017fd4:	10803fcc 	andi	r2,r2,255
 1017fd8:	e13ffc17 	ldw	r4,-16(fp)
 1017fdc:	100b883a 	mov	r5,r2
 1017fe0:	1017e580 	call	1017e58 <alt_up_rs232_write_data>
 1017fe4:	1000071e 	bne	r2,zero,1018004 <alt_up_rs232_write_fd+0x68>
		{
			count++;
 1017fe8:	e0bffb17 	ldw	r2,-20(fp)
 1017fec:	10800044 	addi	r2,r2,1
 1017ff0:	e0bffb15 	stw	r2,-20(fp)
			ptr++;
 1017ff4:	e0bffe17 	ldw	r2,-8(fp)
 1017ff8:	10800044 	addi	r2,r2,1
 1017ffc:	e0bffe15 	stw	r2,-8(fp)
 1018000:	00000106 	br	1018008 <alt_up_rs232_write_fd+0x6c>
		}
		else
			break;
 1018004:	00000406 	br	1018018 <alt_up_rs232_write_fd+0x7c>

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	while(len--)
 1018008:	e0bfff17 	ldw	r2,-4(fp)
 101800c:	10ffffc4 	addi	r3,r2,-1
 1018010:	e0ffff15 	stw	r3,-4(fp)
 1018014:	103fed1e 	bne	r2,zero,1017fcc <__alt_data_end+0xff817fcc>
			ptr++;
		}
		else
			break;
	}
	return count;
 1018018:	e0bffb17 	ldw	r2,-20(fp)
}
 101801c:	e037883a 	mov	sp,fp
 1018020:	dfc00117 	ldw	ra,4(sp)
 1018024:	df000017 	ldw	fp,0(sp)
 1018028:	dec00204 	addi	sp,sp,8
 101802c:	f800283a 	ret

01018030 <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
 1018030:	defffc04 	addi	sp,sp,-16
 1018034:	dfc00315 	stw	ra,12(sp)
 1018038:	df000215 	stw	fp,8(sp)
 101803c:	df000204 	addi	fp,sp,8
 1018040:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
 1018044:	e13fff17 	ldw	r4,-4(fp)
 1018048:	014040b4 	movhi	r5,258
 101804c:	296d3f04 	addi	r5,r5,-19204
 1018050:	10184c80 	call	10184c8 <alt_find_dev>
 1018054:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 1018058:	e0bffe17 	ldw	r2,-8(fp)
}
 101805c:	e037883a 	mov	sp,fp
 1018060:	dfc00117 	ldw	ra,4(sp)
 1018064:	df000017 	ldw	fp,0(sp)
 1018068:	dec00204 	addi	sp,sp,8
 101806c:	f800283a 	ret

01018070 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 1018070:	defff504 	addi	sp,sp,-44
 1018074:	df000a15 	stw	fp,40(sp)
 1018078:	df000a04 	addi	fp,sp,40
 101807c:	e13ffc15 	stw	r4,-16(fp)
 1018080:	e17ffd15 	stw	r5,-12(fp)
 1018084:	e1bffe15 	stw	r6,-8(fp)
 1018088:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 101808c:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 1018090:	008040b4 	movhi	r2,258
 1018094:	10b45704 	addi	r2,r2,-11940
 1018098:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 101809c:	10003f26 	beq	r2,zero,101819c <alt_alarm_start+0x12c>
  {
    if (alarm)
 10180a0:	e0bffc17 	ldw	r2,-16(fp)
 10180a4:	10003b26 	beq	r2,zero,1018194 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 10180a8:	e0bffc17 	ldw	r2,-16(fp)
 10180ac:	e0fffe17 	ldw	r3,-8(fp)
 10180b0:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 10180b4:	e0bffc17 	ldw	r2,-16(fp)
 10180b8:	e0ffff17 	ldw	r3,-4(fp)
 10180bc:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 10180c0:	0005303a 	rdctl	r2,status
 10180c4:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 10180c8:	e0fff817 	ldw	r3,-32(fp)
 10180cc:	00bfff84 	movi	r2,-2
 10180d0:	1884703a 	and	r2,r3,r2
 10180d4:	1001703a 	wrctl	status,r2
  
  return context;
 10180d8:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
 10180dc:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 10180e0:	008040b4 	movhi	r2,258
 10180e4:	10b45804 	addi	r2,r2,-11936
 10180e8:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 10180ec:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 10180f0:	e0fffd17 	ldw	r3,-12(fp)
 10180f4:	e0bff617 	ldw	r2,-40(fp)
 10180f8:	1885883a 	add	r2,r3,r2
 10180fc:	10c00044 	addi	r3,r2,1
 1018100:	e0bffc17 	ldw	r2,-16(fp)
 1018104:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 1018108:	e0bffc17 	ldw	r2,-16(fp)
 101810c:	10c00217 	ldw	r3,8(r2)
 1018110:	e0bff617 	ldw	r2,-40(fp)
 1018114:	1880042e 	bgeu	r3,r2,1018128 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 1018118:	e0bffc17 	ldw	r2,-16(fp)
 101811c:	00c00044 	movi	r3,1
 1018120:	10c00405 	stb	r3,16(r2)
 1018124:	00000206 	br	1018130 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 1018128:	e0bffc17 	ldw	r2,-16(fp)
 101812c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 1018130:	e0fffc17 	ldw	r3,-16(fp)
 1018134:	008040b4 	movhi	r2,258
 1018138:	10ad4504 	addi	r2,r2,-19180
 101813c:	e0bff915 	stw	r2,-28(fp)
 1018140:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 1018144:	e0bffa17 	ldw	r2,-24(fp)
 1018148:	e0fff917 	ldw	r3,-28(fp)
 101814c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 1018150:	e0bff917 	ldw	r2,-28(fp)
 1018154:	10c00017 	ldw	r3,0(r2)
 1018158:	e0bffa17 	ldw	r2,-24(fp)
 101815c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 1018160:	e0bff917 	ldw	r2,-28(fp)
 1018164:	10800017 	ldw	r2,0(r2)
 1018168:	e0fffa17 	ldw	r3,-24(fp)
 101816c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 1018170:	e0bff917 	ldw	r2,-28(fp)
 1018174:	e0fffa17 	ldw	r3,-24(fp)
 1018178:	10c00015 	stw	r3,0(r2)
 101817c:	e0bff717 	ldw	r2,-36(fp)
 1018180:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1018184:	e0bffb17 	ldw	r2,-20(fp)
 1018188:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 101818c:	0005883a 	mov	r2,zero
 1018190:	00000306 	br	10181a0 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 1018194:	00bffa84 	movi	r2,-22
 1018198:	00000106 	br	10181a0 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 101819c:	00bfde84 	movi	r2,-134
  }
}
 10181a0:	e037883a 	mov	sp,fp
 10181a4:	df000017 	ldw	fp,0(sp)
 10181a8:	dec00104 	addi	sp,sp,4
 10181ac:	f800283a 	ret

010181b0 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 10181b0:	defffb04 	addi	sp,sp,-20
 10181b4:	df000415 	stw	fp,16(sp)
 10181b8:	df000404 	addi	fp,sp,16
 10181bc:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
 10181c0:	008000c4 	movi	r2,3
 10181c4:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 10181c8:	e0fffd17 	ldw	r3,-12(fp)
 10181cc:	008003f4 	movhi	r2,15
 10181d0:	10909004 	addi	r2,r2,16960
 10181d4:	1887383a 	mul	r3,r3,r2
 10181d8:	0080bef4 	movhi	r2,763
 10181dc:	10bc2004 	addi	r2,r2,-3968
 10181e0:	10c7203a 	divu	r3,r2,r3
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 10181e4:	00a00034 	movhi	r2,32768
 10181e8:	10bfffc4 	addi	r2,r2,-1
 10181ec:	10c5203a 	divu	r2,r2,r3
 10181f0:	e0ffff17 	ldw	r3,-4(fp)
 10181f4:	1885203a 	divu	r2,r3,r2
 10181f8:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 10181fc:	e0bffe17 	ldw	r2,-8(fp)
 1018200:	10002526 	beq	r2,zero,1018298 <alt_busy_sleep+0xe8>
  {
    for(i=0;i<big_loops;i++)
 1018204:	e03ffc15 	stw	zero,-16(fp)
 1018208:	00001406 	br	101825c <alt_busy_sleep+0xac>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 101820c:	00a00034 	movhi	r2,32768
 1018210:	10bfffc4 	addi	r2,r2,-1
 1018214:	10bfffc4 	addi	r2,r2,-1
 1018218:	103ffe1e 	bne	r2,zero,1018214 <__alt_data_end+0xff818214>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 101821c:	e0fffd17 	ldw	r3,-12(fp)
 1018220:	008003f4 	movhi	r2,15
 1018224:	10909004 	addi	r2,r2,16960
 1018228:	1887383a 	mul	r3,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 101822c:	0080bef4 	movhi	r2,763
 1018230:	10bc2004 	addi	r2,r2,-3968
 1018234:	10c7203a 	divu	r3,r2,r3
 1018238:	00a00034 	movhi	r2,32768
 101823c:	10bfffc4 	addi	r2,r2,-1
 1018240:	10c5203a 	divu	r2,r2,r3
 1018244:	e0ffff17 	ldw	r3,-4(fp)
 1018248:	1885c83a 	sub	r2,r3,r2
 101824c:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 1018250:	e0bffc17 	ldw	r2,-16(fp)
 1018254:	10800044 	addi	r2,r2,1
 1018258:	e0bffc15 	stw	r2,-16(fp)
 101825c:	e0fffc17 	ldw	r3,-16(fp)
 1018260:	e0bffe17 	ldw	r2,-8(fp)
 1018264:	18bfe916 	blt	r3,r2,101820c <__alt_data_end+0xff81820c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 1018268:	e0fffd17 	ldw	r3,-12(fp)
 101826c:	008003f4 	movhi	r2,15
 1018270:	10909004 	addi	r2,r2,16960
 1018274:	1887383a 	mul	r3,r3,r2
 1018278:	0080bef4 	movhi	r2,763
 101827c:	10bc2004 	addi	r2,r2,-3968
 1018280:	10c7203a 	divu	r3,r2,r3
 1018284:	e0bfff17 	ldw	r2,-4(fp)
 1018288:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 101828c:	10bfffc4 	addi	r2,r2,-1
 1018290:	103ffe1e 	bne	r2,zero,101828c <__alt_data_end+0xff81828c>
 1018294:	00000b06 	br	10182c4 <alt_busy_sleep+0x114>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 1018298:	e0fffd17 	ldw	r3,-12(fp)
 101829c:	008003f4 	movhi	r2,15
 10182a0:	10909004 	addi	r2,r2,16960
 10182a4:	1887383a 	mul	r3,r3,r2
 10182a8:	0080bef4 	movhi	r2,763
 10182ac:	10bc2004 	addi	r2,r2,-3968
 10182b0:	10c7203a 	divu	r3,r2,r3
 10182b4:	e0bfff17 	ldw	r2,-4(fp)
 10182b8:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 10182bc:	10bfffc4 	addi	r2,r2,-1
 10182c0:	00bffe16 	blt	zero,r2,10182bc <__alt_data_end+0xff8182bc>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 10182c4:	0005883a 	mov	r2,zero
}
 10182c8:	e037883a 	mov	sp,fp
 10182cc:	df000017 	ldw	fp,0(sp)
 10182d0:	dec00104 	addi	sp,sp,4
 10182d4:	f800283a 	ret

010182d8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 10182d8:	defffe04 	addi	sp,sp,-8
 10182dc:	df000115 	stw	fp,4(sp)
 10182e0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 10182e4:	e03fff15 	stw	zero,-4(fp)
 10182e8:	00000506 	br	1018300 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 10182ec:	e0bfff17 	ldw	r2,-4(fp)
 10182f0:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 10182f4:	e0bfff17 	ldw	r2,-4(fp)
 10182f8:	10800804 	addi	r2,r2,32
 10182fc:	e0bfff15 	stw	r2,-4(fp)
 1018300:	e0bfff17 	ldw	r2,-4(fp)
 1018304:	10820030 	cmpltui	r2,r2,2048
 1018308:	103ff81e 	bne	r2,zero,10182ec <__alt_data_end+0xff8182ec>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 101830c:	e037883a 	mov	sp,fp
 1018310:	df000017 	ldw	fp,0(sp)
 1018314:	dec00104 	addi	sp,sp,4
 1018318:	f800283a 	ret

0101831c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 101831c:	defffe04 	addi	sp,sp,-8
 1018320:	dfc00115 	stw	ra,4(sp)
 1018324:	df000015 	stw	fp,0(sp)
 1018328:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 101832c:	008040b4 	movhi	r2,258
 1018330:	10ad4204 	addi	r2,r2,-19192
 1018334:	10800017 	ldw	r2,0(r2)
 1018338:	10000526 	beq	r2,zero,1018350 <alt_get_errno+0x34>
 101833c:	008040b4 	movhi	r2,258
 1018340:	10ad4204 	addi	r2,r2,-19192
 1018344:	10800017 	ldw	r2,0(r2)
 1018348:	103ee83a 	callr	r2
 101834c:	00000206 	br	1018358 <alt_get_errno+0x3c>
 1018350:	008040b4 	movhi	r2,258
 1018354:	10b45204 	addi	r2,r2,-11960
}
 1018358:	e037883a 	mov	sp,fp
 101835c:	dfc00117 	ldw	ra,4(sp)
 1018360:	df000017 	ldw	fp,0(sp)
 1018364:	dec00204 	addi	sp,sp,8
 1018368:	f800283a 	ret

0101836c <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 101836c:	defffa04 	addi	sp,sp,-24
 1018370:	dfc00515 	stw	ra,20(sp)
 1018374:	df000415 	stw	fp,16(sp)
 1018378:	df000404 	addi	fp,sp,16
 101837c:	e13ffe15 	stw	r4,-8(fp)
 1018380:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 1018384:	e0bffe17 	ldw	r2,-8(fp)
 1018388:	10000326 	beq	r2,zero,1018398 <alt_dev_llist_insert+0x2c>
 101838c:	e0bffe17 	ldw	r2,-8(fp)
 1018390:	10800217 	ldw	r2,8(r2)
 1018394:	1000061e 	bne	r2,zero,10183b0 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 1018398:	101831c0 	call	101831c <alt_get_errno>
 101839c:	1007883a 	mov	r3,r2
 10183a0:	00800584 	movi	r2,22
 10183a4:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 10183a8:	00bffa84 	movi	r2,-22
 10183ac:	00001306 	br	10183fc <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 10183b0:	e0bffe17 	ldw	r2,-8(fp)
 10183b4:	e0ffff17 	ldw	r3,-4(fp)
 10183b8:	e0fffc15 	stw	r3,-16(fp)
 10183bc:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 10183c0:	e0bffd17 	ldw	r2,-12(fp)
 10183c4:	e0fffc17 	ldw	r3,-16(fp)
 10183c8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 10183cc:	e0bffc17 	ldw	r2,-16(fp)
 10183d0:	10c00017 	ldw	r3,0(r2)
 10183d4:	e0bffd17 	ldw	r2,-12(fp)
 10183d8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 10183dc:	e0bffc17 	ldw	r2,-16(fp)
 10183e0:	10800017 	ldw	r2,0(r2)
 10183e4:	e0fffd17 	ldw	r3,-12(fp)
 10183e8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 10183ec:	e0bffc17 	ldw	r2,-16(fp)
 10183f0:	e0fffd17 	ldw	r3,-12(fp)
 10183f4:	10c00015 	stw	r3,0(r2)

  return 0;  
 10183f8:	0005883a 	mov	r2,zero
}
 10183fc:	e037883a 	mov	sp,fp
 1018400:	dfc00117 	ldw	ra,4(sp)
 1018404:	df000017 	ldw	fp,0(sp)
 1018408:	dec00204 	addi	sp,sp,8
 101840c:	f800283a 	ret

01018410 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 1018410:	defffd04 	addi	sp,sp,-12
 1018414:	dfc00215 	stw	ra,8(sp)
 1018418:	df000115 	stw	fp,4(sp)
 101841c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 1018420:	008040b4 	movhi	r2,258
 1018424:	10a48604 	addi	r2,r2,-28136
 1018428:	e0bfff15 	stw	r2,-4(fp)
 101842c:	00000606 	br	1018448 <_do_ctors+0x38>
        (*ctor) (); 
 1018430:	e0bfff17 	ldw	r2,-4(fp)
 1018434:	10800017 	ldw	r2,0(r2)
 1018438:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 101843c:	e0bfff17 	ldw	r2,-4(fp)
 1018440:	10bfff04 	addi	r2,r2,-4
 1018444:	e0bfff15 	stw	r2,-4(fp)
 1018448:	e0ffff17 	ldw	r3,-4(fp)
 101844c:	008040b4 	movhi	r2,258
 1018450:	10a48704 	addi	r2,r2,-28132
 1018454:	18bff62e 	bgeu	r3,r2,1018430 <__alt_data_end+0xff818430>
        (*ctor) (); 
}
 1018458:	e037883a 	mov	sp,fp
 101845c:	dfc00117 	ldw	ra,4(sp)
 1018460:	df000017 	ldw	fp,0(sp)
 1018464:	dec00204 	addi	sp,sp,8
 1018468:	f800283a 	ret

0101846c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 101846c:	defffd04 	addi	sp,sp,-12
 1018470:	dfc00215 	stw	ra,8(sp)
 1018474:	df000115 	stw	fp,4(sp)
 1018478:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 101847c:	008040b4 	movhi	r2,258
 1018480:	10a48604 	addi	r2,r2,-28136
 1018484:	e0bfff15 	stw	r2,-4(fp)
 1018488:	00000606 	br	10184a4 <_do_dtors+0x38>
        (*dtor) (); 
 101848c:	e0bfff17 	ldw	r2,-4(fp)
 1018490:	10800017 	ldw	r2,0(r2)
 1018494:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 1018498:	e0bfff17 	ldw	r2,-4(fp)
 101849c:	10bfff04 	addi	r2,r2,-4
 10184a0:	e0bfff15 	stw	r2,-4(fp)
 10184a4:	e0ffff17 	ldw	r3,-4(fp)
 10184a8:	008040b4 	movhi	r2,258
 10184ac:	10a48704 	addi	r2,r2,-28132
 10184b0:	18bff62e 	bgeu	r3,r2,101848c <__alt_data_end+0xff81848c>
        (*dtor) (); 
}
 10184b4:	e037883a 	mov	sp,fp
 10184b8:	dfc00117 	ldw	ra,4(sp)
 10184bc:	df000017 	ldw	fp,0(sp)
 10184c0:	dec00204 	addi	sp,sp,8
 10184c4:	f800283a 	ret

010184c8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 10184c8:	defffa04 	addi	sp,sp,-24
 10184cc:	dfc00515 	stw	ra,20(sp)
 10184d0:	df000415 	stw	fp,16(sp)
 10184d4:	df000404 	addi	fp,sp,16
 10184d8:	e13ffe15 	stw	r4,-8(fp)
 10184dc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 10184e0:	e0bfff17 	ldw	r2,-4(fp)
 10184e4:	10800017 	ldw	r2,0(r2)
 10184e8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 10184ec:	e13ffe17 	ldw	r4,-8(fp)
 10184f0:	1004fa80 	call	1004fa8 <strlen>
 10184f4:	10800044 	addi	r2,r2,1
 10184f8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 10184fc:	00000d06 	br	1018534 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 1018500:	e0bffc17 	ldw	r2,-16(fp)
 1018504:	10c00217 	ldw	r3,8(r2)
 1018508:	e0bffd17 	ldw	r2,-12(fp)
 101850c:	1809883a 	mov	r4,r3
 1018510:	e17ffe17 	ldw	r5,-8(fp)
 1018514:	100d883a 	mov	r6,r2
 1018518:	100f37c0 	call	100f37c <memcmp>
 101851c:	1000021e 	bne	r2,zero,1018528 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 1018520:	e0bffc17 	ldw	r2,-16(fp)
 1018524:	00000706 	br	1018544 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 1018528:	e0bffc17 	ldw	r2,-16(fp)
 101852c:	10800017 	ldw	r2,0(r2)
 1018530:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 1018534:	e0fffc17 	ldw	r3,-16(fp)
 1018538:	e0bfff17 	ldw	r2,-4(fp)
 101853c:	18bff01e 	bne	r3,r2,1018500 <__alt_data_end+0xff818500>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 1018540:	0005883a 	mov	r2,zero
}
 1018544:	e037883a 	mov	sp,fp
 1018548:	dfc00117 	ldw	ra,4(sp)
 101854c:	df000017 	ldw	fp,0(sp)
 1018550:	dec00204 	addi	sp,sp,8
 1018554:	f800283a 	ret

01018558 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 1018558:	defffe04 	addi	sp,sp,-8
 101855c:	dfc00115 	stw	ra,4(sp)
 1018560:	df000015 	stw	fp,0(sp)
 1018564:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 1018568:	0009883a 	mov	r4,zero
 101856c:	01500004 	movi	r5,16384
 1018570:	1018e680 	call	1018e68 <alt_icache_flush>
#endif
}
 1018574:	e037883a 	mov	sp,fp
 1018578:	dfc00117 	ldw	ra,4(sp)
 101857c:	df000017 	ldw	fp,0(sp)
 1018580:	dec00204 	addi	sp,sp,8
 1018584:	f800283a 	ret

01018588 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 1018588:	defff904 	addi	sp,sp,-28
 101858c:	dfc00615 	stw	ra,24(sp)
 1018590:	df000515 	stw	fp,20(sp)
 1018594:	df000504 	addi	fp,sp,20
 1018598:	e13ffc15 	stw	r4,-16(fp)
 101859c:	e17ffd15 	stw	r5,-12(fp)
 10185a0:	e1bffe15 	stw	r6,-8(fp)
 10185a4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 10185a8:	e13ffd17 	ldw	r4,-12(fp)
 10185ac:	e17ffe17 	ldw	r5,-8(fp)
 10185b0:	e1bfff17 	ldw	r6,-4(fp)
 10185b4:	101898c0 	call	101898c <open>
 10185b8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 10185bc:	e0bffb17 	ldw	r2,-20(fp)
 10185c0:	10001c16 	blt	r2,zero,1018634 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 10185c4:	008040b4 	movhi	r2,258
 10185c8:	10a8a704 	addi	r2,r2,-23908
 10185cc:	e0fffb17 	ldw	r3,-20(fp)
 10185d0:	18c00324 	muli	r3,r3,12
 10185d4:	10c5883a 	add	r2,r2,r3
 10185d8:	10c00017 	ldw	r3,0(r2)
 10185dc:	e0bffc17 	ldw	r2,-16(fp)
 10185e0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 10185e4:	008040b4 	movhi	r2,258
 10185e8:	10a8a704 	addi	r2,r2,-23908
 10185ec:	e0fffb17 	ldw	r3,-20(fp)
 10185f0:	18c00324 	muli	r3,r3,12
 10185f4:	10c5883a 	add	r2,r2,r3
 10185f8:	10800104 	addi	r2,r2,4
 10185fc:	10c00017 	ldw	r3,0(r2)
 1018600:	e0bffc17 	ldw	r2,-16(fp)
 1018604:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 1018608:	008040b4 	movhi	r2,258
 101860c:	10a8a704 	addi	r2,r2,-23908
 1018610:	e0fffb17 	ldw	r3,-20(fp)
 1018614:	18c00324 	muli	r3,r3,12
 1018618:	10c5883a 	add	r2,r2,r3
 101861c:	10800204 	addi	r2,r2,8
 1018620:	10c00017 	ldw	r3,0(r2)
 1018624:	e0bffc17 	ldw	r2,-16(fp)
 1018628:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 101862c:	e13ffb17 	ldw	r4,-20(fp)
 1018630:	10169600 	call	1016960 <alt_release_fd>
  }
} 
 1018634:	e037883a 	mov	sp,fp
 1018638:	dfc00117 	ldw	ra,4(sp)
 101863c:	df000017 	ldw	fp,0(sp)
 1018640:	dec00204 	addi	sp,sp,8
 1018644:	f800283a 	ret

01018648 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 1018648:	defffb04 	addi	sp,sp,-20
 101864c:	dfc00415 	stw	ra,16(sp)
 1018650:	df000315 	stw	fp,12(sp)
 1018654:	df000304 	addi	fp,sp,12
 1018658:	e13ffd15 	stw	r4,-12(fp)
 101865c:	e17ffe15 	stw	r5,-8(fp)
 1018660:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 1018664:	010040b4 	movhi	r4,258
 1018668:	2128aa04 	addi	r4,r4,-23896
 101866c:	e17ffd17 	ldw	r5,-12(fp)
 1018670:	01800044 	movi	r6,1
 1018674:	01c07fc4 	movi	r7,511
 1018678:	10185880 	call	1018588 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 101867c:	010040b4 	movhi	r4,258
 1018680:	2128a704 	addi	r4,r4,-23908
 1018684:	e17ffe17 	ldw	r5,-8(fp)
 1018688:	000d883a 	mov	r6,zero
 101868c:	01c07fc4 	movi	r7,511
 1018690:	10185880 	call	1018588 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 1018694:	010040b4 	movhi	r4,258
 1018698:	2128ad04 	addi	r4,r4,-23884
 101869c:	e17fff17 	ldw	r5,-4(fp)
 10186a0:	01800044 	movi	r6,1
 10186a4:	01c07fc4 	movi	r7,511
 10186a8:	10185880 	call	1018588 <alt_open_fd>
}  
 10186ac:	e037883a 	mov	sp,fp
 10186b0:	dfc00117 	ldw	ra,4(sp)
 10186b4:	df000017 	ldw	fp,0(sp)
 10186b8:	dec00204 	addi	sp,sp,8
 10186bc:	f800283a 	ret

010186c0 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 10186c0:	defff004 	addi	sp,sp,-64
 10186c4:	df000f15 	stw	fp,60(sp)
 10186c8:	df000f04 	addi	fp,sp,60
 10186cc:	e13ffd15 	stw	r4,-12(fp)
 10186d0:	e17ffe15 	stw	r5,-8(fp)
 10186d4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
 10186d8:	00bffa84 	movi	r2,-22
 10186dc:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 10186e0:	e0bffd17 	ldw	r2,-12(fp)
 10186e4:	10800828 	cmpgeui	r2,r2,32
 10186e8:	10005c1e 	bne	r2,zero,101885c <alt_irq_register+0x19c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 10186ec:	0005303a 	rdctl	r2,status
 10186f0:	e0bff315 	stw	r2,-52(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 10186f4:	e0fff317 	ldw	r3,-52(fp)
 10186f8:	00bfff84 	movi	r2,-2
 10186fc:	1884703a 	and	r2,r3,r2
 1018700:	1001703a 	wrctl	status,r2
  
  return context;
 1018704:	e0bff317 	ldw	r2,-52(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 1018708:	e0bff215 	stw	r2,-56(fp)

    alt_irq[id].handler = handler;
 101870c:	008040b4 	movhi	r2,258
 1018710:	10b51104 	addi	r2,r2,-11196
 1018714:	e0fffd17 	ldw	r3,-12(fp)
 1018718:	180690fa 	slli	r3,r3,3
 101871c:	10c5883a 	add	r2,r2,r3
 1018720:	e0ffff17 	ldw	r3,-4(fp)
 1018724:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
 1018728:	008040b4 	movhi	r2,258
 101872c:	10b51104 	addi	r2,r2,-11196
 1018730:	e0fffd17 	ldw	r3,-12(fp)
 1018734:	180690fa 	slli	r3,r3,3
 1018738:	10c5883a 	add	r2,r2,r3
 101873c:	10800104 	addi	r2,r2,4
 1018740:	e0fffe17 	ldw	r3,-8(fp)
 1018744:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 1018748:	e0bfff17 	ldw	r2,-4(fp)
 101874c:	10001f26 	beq	r2,zero,10187cc <alt_irq_register+0x10c>
 1018750:	e0bffd17 	ldw	r2,-12(fp)
 1018754:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1018758:	0005303a 	rdctl	r2,status
 101875c:	e0bff515 	stw	r2,-44(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1018760:	e0fff517 	ldw	r3,-44(fp)
 1018764:	00bfff84 	movi	r2,-2
 1018768:	1884703a 	and	r2,r3,r2
 101876c:	1001703a 	wrctl	status,r2
  
  return context;
 1018770:	e0bff517 	ldw	r2,-44(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 1018774:	e0bff615 	stw	r2,-40(fp)

  alt_irq_active |= (1 << id);
 1018778:	e0bff417 	ldw	r2,-48(fp)
 101877c:	00c00044 	movi	r3,1
 1018780:	1884983a 	sll	r2,r3,r2
 1018784:	1007883a 	mov	r3,r2
 1018788:	008040b4 	movhi	r2,258
 101878c:	10b45604 	addi	r2,r2,-11944
 1018790:	10800017 	ldw	r2,0(r2)
 1018794:	1886b03a 	or	r3,r3,r2
 1018798:	008040b4 	movhi	r2,258
 101879c:	10b45604 	addi	r2,r2,-11944
 10187a0:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 10187a4:	008040b4 	movhi	r2,258
 10187a8:	10b45604 	addi	r2,r2,-11944
 10187ac:	10800017 	ldw	r2,0(r2)
 10187b0:	100170fa 	wrctl	ienable,r2
 10187b4:	e0bff617 	ldw	r2,-40(fp)
 10187b8:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 10187bc:	e0bff717 	ldw	r2,-36(fp)
 10187c0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 10187c4:	0005883a 	mov	r2,zero
 10187c8:	00001f06 	br	1018848 <alt_irq_register+0x188>
 10187cc:	e0bffd17 	ldw	r2,-12(fp)
 10187d0:	e0bff815 	stw	r2,-32(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 10187d4:	0005303a 	rdctl	r2,status
 10187d8:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 10187dc:	e0fff917 	ldw	r3,-28(fp)
 10187e0:	00bfff84 	movi	r2,-2
 10187e4:	1884703a 	and	r2,r3,r2
 10187e8:	1001703a 	wrctl	status,r2
  
  return context;
 10187ec:	e0bff917 	ldw	r2,-28(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 10187f0:	e0bffa15 	stw	r2,-24(fp)

  alt_irq_active &= ~(1 << id);
 10187f4:	e0bff817 	ldw	r2,-32(fp)
 10187f8:	00c00044 	movi	r3,1
 10187fc:	1884983a 	sll	r2,r3,r2
 1018800:	0084303a 	nor	r2,zero,r2
 1018804:	1007883a 	mov	r3,r2
 1018808:	008040b4 	movhi	r2,258
 101880c:	10b45604 	addi	r2,r2,-11944
 1018810:	10800017 	ldw	r2,0(r2)
 1018814:	1886703a 	and	r3,r3,r2
 1018818:	008040b4 	movhi	r2,258
 101881c:	10b45604 	addi	r2,r2,-11944
 1018820:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 1018824:	008040b4 	movhi	r2,258
 1018828:	10b45604 	addi	r2,r2,-11944
 101882c:	10800017 	ldw	r2,0(r2)
 1018830:	100170fa 	wrctl	ienable,r2
 1018834:	e0bffa17 	ldw	r2,-24(fp)
 1018838:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 101883c:	e0bffb17 	ldw	r2,-20(fp)
 1018840:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 1018844:	0005883a 	mov	r2,zero
 1018848:	e0bff115 	stw	r2,-60(fp)
 101884c:	e0bff217 	ldw	r2,-56(fp)
 1018850:	e0bffc15 	stw	r2,-16(fp)
 1018854:	e0bffc17 	ldw	r2,-16(fp)
 1018858:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
 101885c:	e0bff117 	ldw	r2,-60(fp)
}
 1018860:	e037883a 	mov	sp,fp
 1018864:	df000017 	ldw	fp,0(sp)
 1018868:	dec00104 	addi	sp,sp,4
 101886c:	f800283a 	ret

01018870 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1018870:	defffe04 	addi	sp,sp,-8
 1018874:	dfc00115 	stw	ra,4(sp)
 1018878:	df000015 	stw	fp,0(sp)
 101887c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1018880:	008040b4 	movhi	r2,258
 1018884:	10ad4204 	addi	r2,r2,-19192
 1018888:	10800017 	ldw	r2,0(r2)
 101888c:	10000526 	beq	r2,zero,10188a4 <alt_get_errno+0x34>
 1018890:	008040b4 	movhi	r2,258
 1018894:	10ad4204 	addi	r2,r2,-19192
 1018898:	10800017 	ldw	r2,0(r2)
 101889c:	103ee83a 	callr	r2
 10188a0:	00000206 	br	10188ac <alt_get_errno+0x3c>
 10188a4:	008040b4 	movhi	r2,258
 10188a8:	10b45204 	addi	r2,r2,-11960
}
 10188ac:	e037883a 	mov	sp,fp
 10188b0:	dfc00117 	ldw	ra,4(sp)
 10188b4:	df000017 	ldw	fp,0(sp)
 10188b8:	dec00204 	addi	sp,sp,8
 10188bc:	f800283a 	ret

010188c0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 10188c0:	defffd04 	addi	sp,sp,-12
 10188c4:	df000215 	stw	fp,8(sp)
 10188c8:	df000204 	addi	fp,sp,8
 10188cc:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 10188d0:	e0bfff17 	ldw	r2,-4(fp)
 10188d4:	10800217 	ldw	r2,8(r2)
 10188d8:	10d00034 	orhi	r3,r2,16384
 10188dc:	e0bfff17 	ldw	r2,-4(fp)
 10188e0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 10188e4:	e03ffe15 	stw	zero,-8(fp)
 10188e8:	00001d06 	br	1018960 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 10188ec:	008040b4 	movhi	r2,258
 10188f0:	10a8a704 	addi	r2,r2,-23908
 10188f4:	e0fffe17 	ldw	r3,-8(fp)
 10188f8:	18c00324 	muli	r3,r3,12
 10188fc:	10c5883a 	add	r2,r2,r3
 1018900:	10c00017 	ldw	r3,0(r2)
 1018904:	e0bfff17 	ldw	r2,-4(fp)
 1018908:	10800017 	ldw	r2,0(r2)
 101890c:	1880111e 	bne	r3,r2,1018954 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 1018910:	008040b4 	movhi	r2,258
 1018914:	10a8a704 	addi	r2,r2,-23908
 1018918:	e0fffe17 	ldw	r3,-8(fp)
 101891c:	18c00324 	muli	r3,r3,12
 1018920:	10c5883a 	add	r2,r2,r3
 1018924:	10800204 	addi	r2,r2,8
 1018928:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 101892c:	1000090e 	bge	r2,zero,1018954 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 1018930:	e0bffe17 	ldw	r2,-8(fp)
 1018934:	10c00324 	muli	r3,r2,12
 1018938:	008040b4 	movhi	r2,258
 101893c:	10a8a704 	addi	r2,r2,-23908
 1018940:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 1018944:	e0bfff17 	ldw	r2,-4(fp)
 1018948:	18800226 	beq	r3,r2,1018954 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 101894c:	00bffcc4 	movi	r2,-13
 1018950:	00000a06 	br	101897c <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 1018954:	e0bffe17 	ldw	r2,-8(fp)
 1018958:	10800044 	addi	r2,r2,1
 101895c:	e0bffe15 	stw	r2,-8(fp)
 1018960:	008040b4 	movhi	r2,258
 1018964:	10ad4104 	addi	r2,r2,-19196
 1018968:	10800017 	ldw	r2,0(r2)
 101896c:	1007883a 	mov	r3,r2
 1018970:	e0bffe17 	ldw	r2,-8(fp)
 1018974:	18bfdd2e 	bgeu	r3,r2,10188ec <__alt_data_end+0xff8188ec>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 1018978:	0005883a 	mov	r2,zero
}
 101897c:	e037883a 	mov	sp,fp
 1018980:	df000017 	ldw	fp,0(sp)
 1018984:	dec00104 	addi	sp,sp,4
 1018988:	f800283a 	ret

0101898c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 101898c:	defff604 	addi	sp,sp,-40
 1018990:	dfc00915 	stw	ra,36(sp)
 1018994:	df000815 	stw	fp,32(sp)
 1018998:	df000804 	addi	fp,sp,32
 101899c:	e13ffd15 	stw	r4,-12(fp)
 10189a0:	e17ffe15 	stw	r5,-8(fp)
 10189a4:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 10189a8:	00bfffc4 	movi	r2,-1
 10189ac:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 10189b0:	00bffb44 	movi	r2,-19
 10189b4:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 10189b8:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 10189bc:	e13ffd17 	ldw	r4,-12(fp)
 10189c0:	014040b4 	movhi	r5,258
 10189c4:	296d3f04 	addi	r5,r5,-19204
 10189c8:	10184c80 	call	10184c8 <alt_find_dev>
 10189cc:	e0bff815 	stw	r2,-32(fp)
 10189d0:	e0bff817 	ldw	r2,-32(fp)
 10189d4:	1000051e 	bne	r2,zero,10189ec <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 10189d8:	e13ffd17 	ldw	r4,-12(fp)
 10189dc:	1018ca00 	call	1018ca0 <alt_find_file>
 10189e0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 10189e4:	00800044 	movi	r2,1
 10189e8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 10189ec:	e0bff817 	ldw	r2,-32(fp)
 10189f0:	10002926 	beq	r2,zero,1018a98 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
 10189f4:	e13ff817 	ldw	r4,-32(fp)
 10189f8:	1018db40 	call	1018db4 <alt_get_fd>
 10189fc:	e0bff915 	stw	r2,-28(fp)
 1018a00:	e0bff917 	ldw	r2,-28(fp)
 1018a04:	1000030e 	bge	r2,zero,1018a14 <open+0x88>
    {
      status = index;
 1018a08:	e0bff917 	ldw	r2,-28(fp)
 1018a0c:	e0bffa15 	stw	r2,-24(fp)
 1018a10:	00002306 	br	1018aa0 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
 1018a14:	e0bff917 	ldw	r2,-28(fp)
 1018a18:	10c00324 	muli	r3,r2,12
 1018a1c:	008040b4 	movhi	r2,258
 1018a20:	10a8a704 	addi	r2,r2,-23908
 1018a24:	1885883a 	add	r2,r3,r2
 1018a28:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 1018a2c:	e0fffe17 	ldw	r3,-8(fp)
 1018a30:	00900034 	movhi	r2,16384
 1018a34:	10bfffc4 	addi	r2,r2,-1
 1018a38:	1886703a 	and	r3,r3,r2
 1018a3c:	e0bffc17 	ldw	r2,-16(fp)
 1018a40:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 1018a44:	e0bffb17 	ldw	r2,-20(fp)
 1018a48:	1000051e 	bne	r2,zero,1018a60 <open+0xd4>
 1018a4c:	e13ffc17 	ldw	r4,-16(fp)
 1018a50:	10188c00 	call	10188c0 <alt_file_locked>
 1018a54:	e0bffa15 	stw	r2,-24(fp)
 1018a58:	e0bffa17 	ldw	r2,-24(fp)
 1018a5c:	10001016 	blt	r2,zero,1018aa0 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 1018a60:	e0bff817 	ldw	r2,-32(fp)
 1018a64:	10800317 	ldw	r2,12(r2)
 1018a68:	10000826 	beq	r2,zero,1018a8c <open+0x100>
 1018a6c:	e0bff817 	ldw	r2,-32(fp)
 1018a70:	10800317 	ldw	r2,12(r2)
 1018a74:	e13ffc17 	ldw	r4,-16(fp)
 1018a78:	e17ffd17 	ldw	r5,-12(fp)
 1018a7c:	e1bffe17 	ldw	r6,-8(fp)
 1018a80:	e1ffff17 	ldw	r7,-4(fp)
 1018a84:	103ee83a 	callr	r2
 1018a88:	00000106 	br	1018a90 <open+0x104>
 1018a8c:	0005883a 	mov	r2,zero
 1018a90:	e0bffa15 	stw	r2,-24(fp)
 1018a94:	00000206 	br	1018aa0 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
 1018a98:	00bffb44 	movi	r2,-19
 1018a9c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 1018aa0:	e0bffa17 	ldw	r2,-24(fp)
 1018aa4:	1000090e 	bge	r2,zero,1018acc <open+0x140>
  {
    alt_release_fd (index);  
 1018aa8:	e13ff917 	ldw	r4,-28(fp)
 1018aac:	10169600 	call	1016960 <alt_release_fd>
    ALT_ERRNO = -status;
 1018ab0:	10188700 	call	1018870 <alt_get_errno>
 1018ab4:	1007883a 	mov	r3,r2
 1018ab8:	e0bffa17 	ldw	r2,-24(fp)
 1018abc:	0085c83a 	sub	r2,zero,r2
 1018ac0:	18800015 	stw	r2,0(r3)
    return -1;
 1018ac4:	00bfffc4 	movi	r2,-1
 1018ac8:	00000106 	br	1018ad0 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
 1018acc:	e0bff917 	ldw	r2,-28(fp)
}
 1018ad0:	e037883a 	mov	sp,fp
 1018ad4:	dfc00117 	ldw	ra,4(sp)
 1018ad8:	df000017 	ldw	fp,0(sp)
 1018adc:	dec00204 	addi	sp,sp,8
 1018ae0:	f800283a 	ret

01018ae4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 1018ae4:	defffa04 	addi	sp,sp,-24
 1018ae8:	df000515 	stw	fp,20(sp)
 1018aec:	df000504 	addi	fp,sp,20
 1018af0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1018af4:	0005303a 	rdctl	r2,status
 1018af8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1018afc:	e0fffc17 	ldw	r3,-16(fp)
 1018b00:	00bfff84 	movi	r2,-2
 1018b04:	1884703a 	and	r2,r3,r2
 1018b08:	1001703a 	wrctl	status,r2
  
  return context;
 1018b0c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 1018b10:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 1018b14:	e0bfff17 	ldw	r2,-4(fp)
 1018b18:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 1018b1c:	e0bffd17 	ldw	r2,-12(fp)
 1018b20:	10800017 	ldw	r2,0(r2)
 1018b24:	e0fffd17 	ldw	r3,-12(fp)
 1018b28:	18c00117 	ldw	r3,4(r3)
 1018b2c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 1018b30:	e0bffd17 	ldw	r2,-12(fp)
 1018b34:	10800117 	ldw	r2,4(r2)
 1018b38:	e0fffd17 	ldw	r3,-12(fp)
 1018b3c:	18c00017 	ldw	r3,0(r3)
 1018b40:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 1018b44:	e0bffd17 	ldw	r2,-12(fp)
 1018b48:	e0fffd17 	ldw	r3,-12(fp)
 1018b4c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 1018b50:	e0bffd17 	ldw	r2,-12(fp)
 1018b54:	e0fffd17 	ldw	r3,-12(fp)
 1018b58:	10c00015 	stw	r3,0(r2)
 1018b5c:	e0bffb17 	ldw	r2,-20(fp)
 1018b60:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1018b64:	e0bffe17 	ldw	r2,-8(fp)
 1018b68:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 1018b6c:	e037883a 	mov	sp,fp
 1018b70:	df000017 	ldw	fp,0(sp)
 1018b74:	dec00104 	addi	sp,sp,4
 1018b78:	f800283a 	ret

01018b7c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 1018b7c:	defffb04 	addi	sp,sp,-20
 1018b80:	dfc00415 	stw	ra,16(sp)
 1018b84:	df000315 	stw	fp,12(sp)
 1018b88:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 1018b8c:	d0a01017 	ldw	r2,-32704(gp)
 1018b90:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 1018b94:	d0a72317 	ldw	r2,-25460(gp)
 1018b98:	10800044 	addi	r2,r2,1
 1018b9c:	d0a72315 	stw	r2,-25460(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 1018ba0:	00002e06 	br	1018c5c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 1018ba4:	e0bffd17 	ldw	r2,-12(fp)
 1018ba8:	10800017 	ldw	r2,0(r2)
 1018bac:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 1018bb0:	e0bffd17 	ldw	r2,-12(fp)
 1018bb4:	10800403 	ldbu	r2,16(r2)
 1018bb8:	10803fcc 	andi	r2,r2,255
 1018bbc:	10000426 	beq	r2,zero,1018bd0 <alt_tick+0x54>
 1018bc0:	d0a72317 	ldw	r2,-25460(gp)
 1018bc4:	1000021e 	bne	r2,zero,1018bd0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 1018bc8:	e0bffd17 	ldw	r2,-12(fp)
 1018bcc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 1018bd0:	e0bffd17 	ldw	r2,-12(fp)
 1018bd4:	10800217 	ldw	r2,8(r2)
 1018bd8:	d0e72317 	ldw	r3,-25460(gp)
 1018bdc:	18801d36 	bltu	r3,r2,1018c54 <alt_tick+0xd8>
 1018be0:	e0bffd17 	ldw	r2,-12(fp)
 1018be4:	10800403 	ldbu	r2,16(r2)
 1018be8:	10803fcc 	andi	r2,r2,255
 1018bec:	1000191e 	bne	r2,zero,1018c54 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 1018bf0:	e0bffd17 	ldw	r2,-12(fp)
 1018bf4:	10800317 	ldw	r2,12(r2)
 1018bf8:	e0fffd17 	ldw	r3,-12(fp)
 1018bfc:	18c00517 	ldw	r3,20(r3)
 1018c00:	1809883a 	mov	r4,r3
 1018c04:	103ee83a 	callr	r2
 1018c08:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 1018c0c:	e0bfff17 	ldw	r2,-4(fp)
 1018c10:	1000031e 	bne	r2,zero,1018c20 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 1018c14:	e13ffd17 	ldw	r4,-12(fp)
 1018c18:	1018ae40 	call	1018ae4 <alt_alarm_stop>
 1018c1c:	00000d06 	br	1018c54 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 1018c20:	e0bffd17 	ldw	r2,-12(fp)
 1018c24:	10c00217 	ldw	r3,8(r2)
 1018c28:	e0bfff17 	ldw	r2,-4(fp)
 1018c2c:	1887883a 	add	r3,r3,r2
 1018c30:	e0bffd17 	ldw	r2,-12(fp)
 1018c34:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 1018c38:	e0bffd17 	ldw	r2,-12(fp)
 1018c3c:	10c00217 	ldw	r3,8(r2)
 1018c40:	d0a72317 	ldw	r2,-25460(gp)
 1018c44:	1880032e 	bgeu	r3,r2,1018c54 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 1018c48:	e0bffd17 	ldw	r2,-12(fp)
 1018c4c:	00c00044 	movi	r3,1
 1018c50:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 1018c54:	e0bffe17 	ldw	r2,-8(fp)
 1018c58:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 1018c5c:	e0fffd17 	ldw	r3,-12(fp)
 1018c60:	d0a01004 	addi	r2,gp,-32704
 1018c64:	18bfcf1e 	bne	r3,r2,1018ba4 <__alt_data_end+0xff818ba4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 1018c68:	0001883a 	nop
}
 1018c6c:	e037883a 	mov	sp,fp
 1018c70:	dfc00117 	ldw	ra,4(sp)
 1018c74:	df000017 	ldw	fp,0(sp)
 1018c78:	dec00204 	addi	sp,sp,8
 1018c7c:	f800283a 	ret

01018c80 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
 1018c80:	deffff04 	addi	sp,sp,-4
 1018c84:	df000015 	stw	fp,0(sp)
 1018c88:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 1018c8c:	000170fa 	wrctl	ienable,zero
}
 1018c90:	e037883a 	mov	sp,fp
 1018c94:	df000017 	ldw	fp,0(sp)
 1018c98:	dec00104 	addi	sp,sp,4
 1018c9c:	f800283a 	ret

01018ca0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 1018ca0:	defffb04 	addi	sp,sp,-20
 1018ca4:	dfc00415 	stw	ra,16(sp)
 1018ca8:	df000315 	stw	fp,12(sp)
 1018cac:	df000304 	addi	fp,sp,12
 1018cb0:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 1018cb4:	008040b4 	movhi	r2,258
 1018cb8:	10ad3d04 	addi	r2,r2,-19212
 1018cbc:	10800017 	ldw	r2,0(r2)
 1018cc0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 1018cc4:	00003106 	br	1018d8c <alt_find_file+0xec>
  {
    len = strlen(next->name);
 1018cc8:	e0bffd17 	ldw	r2,-12(fp)
 1018ccc:	10800217 	ldw	r2,8(r2)
 1018cd0:	1009883a 	mov	r4,r2
 1018cd4:	1004fa80 	call	1004fa8 <strlen>
 1018cd8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 1018cdc:	e0bffd17 	ldw	r2,-12(fp)
 1018ce0:	10c00217 	ldw	r3,8(r2)
 1018ce4:	e0bffe17 	ldw	r2,-8(fp)
 1018ce8:	10bfffc4 	addi	r2,r2,-1
 1018cec:	1885883a 	add	r2,r3,r2
 1018cf0:	10800003 	ldbu	r2,0(r2)
 1018cf4:	10803fcc 	andi	r2,r2,255
 1018cf8:	1080201c 	xori	r2,r2,128
 1018cfc:	10bfe004 	addi	r2,r2,-128
 1018d00:	10800bd8 	cmpnei	r2,r2,47
 1018d04:	1000031e 	bne	r2,zero,1018d14 <alt_find_file+0x74>
    {
      len -= 1;
 1018d08:	e0bffe17 	ldw	r2,-8(fp)
 1018d0c:	10bfffc4 	addi	r2,r2,-1
 1018d10:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 1018d14:	e0bffe17 	ldw	r2,-8(fp)
 1018d18:	e0ffff17 	ldw	r3,-4(fp)
 1018d1c:	1885883a 	add	r2,r3,r2
 1018d20:	10800003 	ldbu	r2,0(r2)
 1018d24:	10803fcc 	andi	r2,r2,255
 1018d28:	1080201c 	xori	r2,r2,128
 1018d2c:	10bfe004 	addi	r2,r2,-128
 1018d30:	10800be0 	cmpeqi	r2,r2,47
 1018d34:	1000081e 	bne	r2,zero,1018d58 <alt_find_file+0xb8>
 1018d38:	e0bffe17 	ldw	r2,-8(fp)
 1018d3c:	e0ffff17 	ldw	r3,-4(fp)
 1018d40:	1885883a 	add	r2,r3,r2
 1018d44:	10800003 	ldbu	r2,0(r2)
 1018d48:	10803fcc 	andi	r2,r2,255
 1018d4c:	1080201c 	xori	r2,r2,128
 1018d50:	10bfe004 	addi	r2,r2,-128
 1018d54:	10000a1e 	bne	r2,zero,1018d80 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 1018d58:	e0bffd17 	ldw	r2,-12(fp)
 1018d5c:	10c00217 	ldw	r3,8(r2)
 1018d60:	e0bffe17 	ldw	r2,-8(fp)
 1018d64:	1809883a 	mov	r4,r3
 1018d68:	e17fff17 	ldw	r5,-4(fp)
 1018d6c:	100d883a 	mov	r6,r2
 1018d70:	100f37c0 	call	100f37c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 1018d74:	1000021e 	bne	r2,zero,1018d80 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 1018d78:	e0bffd17 	ldw	r2,-12(fp)
 1018d7c:	00000806 	br	1018da0 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 1018d80:	e0bffd17 	ldw	r2,-12(fp)
 1018d84:	10800017 	ldw	r2,0(r2)
 1018d88:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 1018d8c:	e0fffd17 	ldw	r3,-12(fp)
 1018d90:	008040b4 	movhi	r2,258
 1018d94:	10ad3d04 	addi	r2,r2,-19212
 1018d98:	18bfcb1e 	bne	r3,r2,1018cc8 <__alt_data_end+0xff818cc8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 1018d9c:	0005883a 	mov	r2,zero
}
 1018da0:	e037883a 	mov	sp,fp
 1018da4:	dfc00117 	ldw	ra,4(sp)
 1018da8:	df000017 	ldw	fp,0(sp)
 1018dac:	dec00204 	addi	sp,sp,8
 1018db0:	f800283a 	ret

01018db4 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 1018db4:	defffc04 	addi	sp,sp,-16
 1018db8:	df000315 	stw	fp,12(sp)
 1018dbc:	df000304 	addi	fp,sp,12
 1018dc0:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 1018dc4:	00bffa04 	movi	r2,-24
 1018dc8:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 1018dcc:	e03ffd15 	stw	zero,-12(fp)
 1018dd0:	00001d06 	br	1018e48 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
 1018dd4:	008040b4 	movhi	r2,258
 1018dd8:	10a8a704 	addi	r2,r2,-23908
 1018ddc:	e0fffd17 	ldw	r3,-12(fp)
 1018de0:	18c00324 	muli	r3,r3,12
 1018de4:	10c5883a 	add	r2,r2,r3
 1018de8:	10800017 	ldw	r2,0(r2)
 1018dec:	1000131e 	bne	r2,zero,1018e3c <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
 1018df0:	008040b4 	movhi	r2,258
 1018df4:	10a8a704 	addi	r2,r2,-23908
 1018df8:	e0fffd17 	ldw	r3,-12(fp)
 1018dfc:	18c00324 	muli	r3,r3,12
 1018e00:	10c5883a 	add	r2,r2,r3
 1018e04:	e0ffff17 	ldw	r3,-4(fp)
 1018e08:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 1018e0c:	008040b4 	movhi	r2,258
 1018e10:	10ad4104 	addi	r2,r2,-19196
 1018e14:	10c00017 	ldw	r3,0(r2)
 1018e18:	e0bffd17 	ldw	r2,-12(fp)
 1018e1c:	1880040e 	bge	r3,r2,1018e30 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
 1018e20:	008040b4 	movhi	r2,258
 1018e24:	10ad4104 	addi	r2,r2,-19196
 1018e28:	e0fffd17 	ldw	r3,-12(fp)
 1018e2c:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 1018e30:	e0bffd17 	ldw	r2,-12(fp)
 1018e34:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 1018e38:	00000606 	br	1018e54 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 1018e3c:	e0bffd17 	ldw	r2,-12(fp)
 1018e40:	10800044 	addi	r2,r2,1
 1018e44:	e0bffd15 	stw	r2,-12(fp)
 1018e48:	e0bffd17 	ldw	r2,-12(fp)
 1018e4c:	10800810 	cmplti	r2,r2,32
 1018e50:	103fe01e 	bne	r2,zero,1018dd4 <__alt_data_end+0xff818dd4>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 1018e54:	e0bffe17 	ldw	r2,-8(fp)
}
 1018e58:	e037883a 	mov	sp,fp
 1018e5c:	df000017 	ldw	fp,0(sp)
 1018e60:	dec00104 	addi	sp,sp,4
 1018e64:	f800283a 	ret

01018e68 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 1018e68:	defffb04 	addi	sp,sp,-20
 1018e6c:	df000415 	stw	fp,16(sp)
 1018e70:	df000404 	addi	fp,sp,16
 1018e74:	e13ffe15 	stw	r4,-8(fp)
 1018e78:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 1018e7c:	e0bfff17 	ldw	r2,-4(fp)
 1018e80:	10900070 	cmpltui	r2,r2,16385
 1018e84:	1000021e 	bne	r2,zero,1018e90 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 1018e88:	00900004 	movi	r2,16384
 1018e8c:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 1018e90:	e0fffe17 	ldw	r3,-8(fp)
 1018e94:	e0bfff17 	ldw	r2,-4(fp)
 1018e98:	1885883a 	add	r2,r3,r2
 1018e9c:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 1018ea0:	e0bffe17 	ldw	r2,-8(fp)
 1018ea4:	e0bffc15 	stw	r2,-16(fp)
 1018ea8:	00000506 	br	1018ec0 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 1018eac:	e0bffc17 	ldw	r2,-16(fp)
 1018eb0:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 1018eb4:	e0bffc17 	ldw	r2,-16(fp)
 1018eb8:	10800804 	addi	r2,r2,32
 1018ebc:	e0bffc15 	stw	r2,-16(fp)
 1018ec0:	e0fffc17 	ldw	r3,-16(fp)
 1018ec4:	e0bffd17 	ldw	r2,-12(fp)
 1018ec8:	18bff836 	bltu	r3,r2,1018eac <__alt_data_end+0xff818eac>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 1018ecc:	e0bffe17 	ldw	r2,-8(fp)
 1018ed0:	108007cc 	andi	r2,r2,31
 1018ed4:	10000226 	beq	r2,zero,1018ee0 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 1018ed8:	e0bffc17 	ldw	r2,-16(fp)
 1018edc:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 1018ee0:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 1018ee4:	e037883a 	mov	sp,fp
 1018ee8:	df000017 	ldw	fp,0(sp)
 1018eec:	dec00104 	addi	sp,sp,4
 1018ef0:	f800283a 	ret

01018ef4 <atexit>:
 1018ef4:	200b883a 	mov	r5,r4
 1018ef8:	000d883a 	mov	r6,zero
 1018efc:	0009883a 	mov	r4,zero
 1018f00:	000f883a 	mov	r7,zero
 1018f04:	1018f401 	jmpi	1018f40 <__register_exitproc>

01018f08 <exit>:
 1018f08:	defffe04 	addi	sp,sp,-8
 1018f0c:	000b883a 	mov	r5,zero
 1018f10:	dc000015 	stw	r16,0(sp)
 1018f14:	dfc00115 	stw	ra,4(sp)
 1018f18:	2021883a 	mov	r16,r4
 1018f1c:	10190540 	call	1019054 <__call_exitprocs>
 1018f20:	008040b4 	movhi	r2,258
 1018f24:	10ad3704 	addi	r2,r2,-19236
 1018f28:	11000017 	ldw	r4,0(r2)
 1018f2c:	20800f17 	ldw	r2,60(r4)
 1018f30:	10000126 	beq	r2,zero,1018f38 <exit+0x30>
 1018f34:	103ee83a 	callr	r2
 1018f38:	8009883a 	mov	r4,r16
 1018f3c:	10191e80 	call	10191e8 <_exit>

01018f40 <__register_exitproc>:
 1018f40:	008040b4 	movhi	r2,258
 1018f44:	defffa04 	addi	sp,sp,-24
 1018f48:	10ad3704 	addi	r2,r2,-19236
 1018f4c:	dc000315 	stw	r16,12(sp)
 1018f50:	14000017 	ldw	r16,0(r2)
 1018f54:	dc400415 	stw	r17,16(sp)
 1018f58:	dfc00515 	stw	ra,20(sp)
 1018f5c:	80805217 	ldw	r2,328(r16)
 1018f60:	2023883a 	mov	r17,r4
 1018f64:	10003626 	beq	r2,zero,1019040 <__register_exitproc+0x100>
 1018f68:	10c00117 	ldw	r3,4(r2)
 1018f6c:	010007c4 	movi	r4,31
 1018f70:	20c00e16 	blt	r4,r3,1018fac <__register_exitproc+0x6c>
 1018f74:	1a400044 	addi	r9,r3,1
 1018f78:	8800211e 	bne	r17,zero,1019000 <__register_exitproc+0xc0>
 1018f7c:	18c00084 	addi	r3,r3,2
 1018f80:	18c7883a 	add	r3,r3,r3
 1018f84:	18c7883a 	add	r3,r3,r3
 1018f88:	12400115 	stw	r9,4(r2)
 1018f8c:	10c7883a 	add	r3,r2,r3
 1018f90:	19400015 	stw	r5,0(r3)
 1018f94:	0005883a 	mov	r2,zero
 1018f98:	dfc00517 	ldw	ra,20(sp)
 1018f9c:	dc400417 	ldw	r17,16(sp)
 1018fa0:	dc000317 	ldw	r16,12(sp)
 1018fa4:	dec00604 	addi	sp,sp,24
 1018fa8:	f800283a 	ret
 1018fac:	00800034 	movhi	r2,0
 1018fb0:	10800004 	addi	r2,r2,0
 1018fb4:	10002526 	beq	r2,zero,101904c <__register_exitproc+0x10c>
 1018fb8:	01006404 	movi	r4,400
 1018fbc:	d9400015 	stw	r5,0(sp)
 1018fc0:	d9800115 	stw	r6,4(sp)
 1018fc4:	d9c00215 	stw	r7,8(sp)
 1018fc8:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 1018fcc:	d9400017 	ldw	r5,0(sp)
 1018fd0:	d9800117 	ldw	r6,4(sp)
 1018fd4:	d9c00217 	ldw	r7,8(sp)
 1018fd8:	10001c26 	beq	r2,zero,101904c <__register_exitproc+0x10c>
 1018fdc:	80c05217 	ldw	r3,328(r16)
 1018fe0:	10000115 	stw	zero,4(r2)
 1018fe4:	02400044 	movi	r9,1
 1018fe8:	10c00015 	stw	r3,0(r2)
 1018fec:	80805215 	stw	r2,328(r16)
 1018ff0:	10006215 	stw	zero,392(r2)
 1018ff4:	10006315 	stw	zero,396(r2)
 1018ff8:	0007883a 	mov	r3,zero
 1018ffc:	883fdf26 	beq	r17,zero,1018f7c <__alt_data_end+0xff818f7c>
 1019000:	18d1883a 	add	r8,r3,r3
 1019004:	4211883a 	add	r8,r8,r8
 1019008:	1211883a 	add	r8,r2,r8
 101900c:	41802215 	stw	r6,136(r8)
 1019010:	01000044 	movi	r4,1
 1019014:	11806217 	ldw	r6,392(r2)
 1019018:	20c8983a 	sll	r4,r4,r3
 101901c:	310cb03a 	or	r6,r6,r4
 1019020:	11806215 	stw	r6,392(r2)
 1019024:	41c04215 	stw	r7,264(r8)
 1019028:	01800084 	movi	r6,2
 101902c:	89bfd31e 	bne	r17,r6,1018f7c <__alt_data_end+0xff818f7c>
 1019030:	11806317 	ldw	r6,396(r2)
 1019034:	3108b03a 	or	r4,r6,r4
 1019038:	11006315 	stw	r4,396(r2)
 101903c:	003fcf06 	br	1018f7c <__alt_data_end+0xff818f7c>
 1019040:	80805304 	addi	r2,r16,332
 1019044:	80805215 	stw	r2,328(r16)
 1019048:	003fc706 	br	1018f68 <__alt_data_end+0xff818f68>
 101904c:	00bfffc4 	movi	r2,-1
 1019050:	003fd106 	br	1018f98 <__alt_data_end+0xff818f98>

01019054 <__call_exitprocs>:
 1019054:	008040b4 	movhi	r2,258
 1019058:	10ad3704 	addi	r2,r2,-19236
 101905c:	10800017 	ldw	r2,0(r2)
 1019060:	defff404 	addi	sp,sp,-48
 1019064:	dd800815 	stw	r22,32(sp)
 1019068:	d8800015 	stw	r2,0(sp)
 101906c:	10805204 	addi	r2,r2,328
 1019070:	dd000615 	stw	r20,24(sp)
 1019074:	dc800415 	stw	r18,16(sp)
 1019078:	dfc00b15 	stw	ra,44(sp)
 101907c:	df000a15 	stw	fp,40(sp)
 1019080:	ddc00915 	stw	r23,36(sp)
 1019084:	dd400715 	stw	r21,28(sp)
 1019088:	dcc00515 	stw	r19,20(sp)
 101908c:	dc400315 	stw	r17,12(sp)
 1019090:	dc000215 	stw	r16,8(sp)
 1019094:	2025883a 	mov	r18,r4
 1019098:	2829883a 	mov	r20,r5
 101909c:	d8800115 	stw	r2,4(sp)
 10190a0:	05bfffc4 	movi	r22,-1
 10190a4:	d8800017 	ldw	r2,0(sp)
 10190a8:	14c05217 	ldw	r19,328(r2)
 10190ac:	98001d26 	beq	r19,zero,1019124 <__call_exitprocs+0xd0>
 10190b0:	dd400117 	ldw	r21,4(sp)
 10190b4:	98800117 	ldw	r2,4(r19)
 10190b8:	173fffc4 	addi	fp,r2,-1
 10190bc:	e0000d16 	blt	fp,zero,10190f4 <__call_exitprocs+0xa0>
 10190c0:	14000044 	addi	r16,r2,1
 10190c4:	8421883a 	add	r16,r16,r16
 10190c8:	8421883a 	add	r16,r16,r16
 10190cc:	84402004 	addi	r17,r16,128
 10190d0:	9c63883a 	add	r17,r19,r17
 10190d4:	9c21883a 	add	r16,r19,r16
 10190d8:	a0001e26 	beq	r20,zero,1019154 <__call_exitprocs+0x100>
 10190dc:	80804017 	ldw	r2,256(r16)
 10190e0:	15001c26 	beq	r2,r20,1019154 <__call_exitprocs+0x100>
 10190e4:	e73fffc4 	addi	fp,fp,-1
 10190e8:	843fff04 	addi	r16,r16,-4
 10190ec:	8c7fff04 	addi	r17,r17,-4
 10190f0:	e5bff91e 	bne	fp,r22,10190d8 <__alt_data_end+0xff8190d8>
 10190f4:	00800034 	movhi	r2,0
 10190f8:	10800004 	addi	r2,r2,0
 10190fc:	10000926 	beq	r2,zero,1019124 <__call_exitprocs+0xd0>
 1019100:	98800117 	ldw	r2,4(r19)
 1019104:	1000311e 	bne	r2,zero,10191cc <__call_exitprocs+0x178>
 1019108:	98800017 	ldw	r2,0(r19)
 101910c:	10003426 	beq	r2,zero,10191e0 <__call_exitprocs+0x18c>
 1019110:	9809883a 	mov	r4,r19
 1019114:	a8800015 	stw	r2,0(r21)
 1019118:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 101911c:	acc00017 	ldw	r19,0(r21)
 1019120:	983fe41e 	bne	r19,zero,10190b4 <__alt_data_end+0xff8190b4>
 1019124:	dfc00b17 	ldw	ra,44(sp)
 1019128:	df000a17 	ldw	fp,40(sp)
 101912c:	ddc00917 	ldw	r23,36(sp)
 1019130:	dd800817 	ldw	r22,32(sp)
 1019134:	dd400717 	ldw	r21,28(sp)
 1019138:	dd000617 	ldw	r20,24(sp)
 101913c:	dcc00517 	ldw	r19,20(sp)
 1019140:	dc800417 	ldw	r18,16(sp)
 1019144:	dc400317 	ldw	r17,12(sp)
 1019148:	dc000217 	ldw	r16,8(sp)
 101914c:	dec00c04 	addi	sp,sp,48
 1019150:	f800283a 	ret
 1019154:	98800117 	ldw	r2,4(r19)
 1019158:	80c00017 	ldw	r3,0(r16)
 101915c:	10bfffc4 	addi	r2,r2,-1
 1019160:	17001526 	beq	r2,fp,10191b8 <__call_exitprocs+0x164>
 1019164:	80000015 	stw	zero,0(r16)
 1019168:	183fde26 	beq	r3,zero,10190e4 <__alt_data_end+0xff8190e4>
 101916c:	00800044 	movi	r2,1
 1019170:	1708983a 	sll	r4,r2,fp
 1019174:	98806217 	ldw	r2,392(r19)
 1019178:	9dc00117 	ldw	r23,4(r19)
 101917c:	2084703a 	and	r2,r4,r2
 1019180:	1000061e 	bne	r2,zero,101919c <__call_exitprocs+0x148>
 1019184:	183ee83a 	callr	r3
 1019188:	98800117 	ldw	r2,4(r19)
 101918c:	15ffc51e 	bne	r2,r23,10190a4 <__alt_data_end+0xff8190a4>
 1019190:	a8800017 	ldw	r2,0(r21)
 1019194:	14ffd326 	beq	r2,r19,10190e4 <__alt_data_end+0xff8190e4>
 1019198:	003fc206 	br	10190a4 <__alt_data_end+0xff8190a4>
 101919c:	98806317 	ldw	r2,396(r19)
 10191a0:	2084703a 	and	r2,r4,r2
 10191a4:	1000061e 	bne	r2,zero,10191c0 <__call_exitprocs+0x16c>
 10191a8:	89400017 	ldw	r5,0(r17)
 10191ac:	9009883a 	mov	r4,r18
 10191b0:	183ee83a 	callr	r3
 10191b4:	003ff406 	br	1019188 <__alt_data_end+0xff819188>
 10191b8:	9f000115 	stw	fp,4(r19)
 10191bc:	003fea06 	br	1019168 <__alt_data_end+0xff819168>
 10191c0:	89000017 	ldw	r4,0(r17)
 10191c4:	183ee83a 	callr	r3
 10191c8:	003fef06 	br	1019188 <__alt_data_end+0xff819188>
 10191cc:	98800017 	ldw	r2,0(r19)
 10191d0:	982b883a 	mov	r21,r19
 10191d4:	1027883a 	mov	r19,r2
 10191d8:	983fb61e 	bne	r19,zero,10190b4 <__alt_data_end+0xff8190b4>
 10191dc:	003fd106 	br	1019124 <__alt_data_end+0xff819124>
 10191e0:	0005883a 	mov	r2,zero
 10191e4:	003ffa06 	br	10191d0 <__alt_data_end+0xff8191d0>

010191e8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 10191e8:	defffd04 	addi	sp,sp,-12
 10191ec:	df000215 	stw	fp,8(sp)
 10191f0:	df000204 	addi	fp,sp,8
 10191f4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 10191f8:	0001883a 	nop
 10191fc:	e0bfff17 	ldw	r2,-4(fp)
 1019200:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 1019204:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 1019208:	10000226 	beq	r2,zero,1019214 <_exit+0x2c>
    ALT_SIM_FAIL();
 101920c:	002af070 	cmpltui	zero,zero,43969
 1019210:	00000106 	br	1019218 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 1019214:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 1019218:	003fff06 	br	1019218 <__alt_data_end+0xff819218>
